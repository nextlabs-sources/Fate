// Created by Microsoft (R) C/C++ Compiler Version 14.00.50727.762 (dc324857).
//
// d:\nextlabs projects\enforcers\platforms\win32\modules\msopep-- old\2k7release\excel.tlh
//
// C++ source equivalent of Win32 type library .\import\2K7\EXCEL.EXE
// compiler-generated file created 04/03/08 at 10:56:02 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace Excel {

//
// Forward references and typedefs
//

struct __declspec(uuid("00020813-0000-0000-c000-000000000046"))
/* LIBID */ __Excel;
struct __declspec(uuid("000c0310-0000-0000-c000-000000000046"))
/* dual interface */ excelAdjustments;
struct __declspec(uuid("000c0311-0000-0000-c000-000000000046"))
/* dual interface */ excelCalloutFormat;
struct __declspec(uuid("000c0312-0000-0000-c000-000000000046"))
/* dual interface */ excelColorFormat;
struct __declspec(uuid("000c0317-0000-0000-c000-000000000046"))
/* dual interface */ excelLineFormat;
struct __declspec(uuid("000c0318-0000-0000-c000-000000000046"))
/* dual interface */ excelShapeNode;
struct __declspec(uuid("000c0319-0000-0000-c000-000000000046"))
/* dual interface */ excelShapeNodes;
struct __declspec(uuid("000c031a-0000-0000-c000-000000000046"))
/* dual interface */ excelPictureFormat;
struct __declspec(uuid("000c031b-0000-0000-c000-000000000046"))
/* dual interface */ excelShadowFormat;
struct __declspec(uuid("000c031f-0000-0000-c000-000000000046"))
/* dual interface */ excelTextEffectFormat;
struct __declspec(uuid("000c0321-0000-0000-c000-000000000046"))
/* dual interface */ excelThreeDFormat;
struct __declspec(uuid("000c0314-0000-0000-c000-000000000046"))
/* dual interface */ excelFillFormat;
struct __declspec(uuid("000c036e-0000-0000-c000-000000000046"))
/* dual interface */ excelDiagramNodes;
struct __declspec(uuid("000c036f-0000-0000-c000-000000000046"))
/* dual interface */ excelDiagramNodeChildren;
struct __declspec(uuid("000c0370-0000-0000-c000-000000000046"))
/* dual interface */ excelDiagramNode;
struct __declspec(uuid("a43788c1-d91b-11d3-8f39-00c04f3651b8"))
/* dual interface */ IRTDUpdateEvent;
struct __declspec(uuid("ec0e6191-db51-11d3-8f3e-00c04f3651b8"))
/* dual interface */ IRtdServer;
struct __declspec(uuid("000c0398-0000-0000-c000-000000000046"))
/* dual interface */ excelTextFrame2;
enum Constants;
enum XlCreator;
enum XlChartGallery;
enum XlColorIndex;
enum XlEndStyleCap;
enum XlRowCol;
enum XlScaleType;
enum XlDataSeriesType;
enum XlAxisCrosses;
enum XlAxisGroup;
enum XlBackground;
enum XlWindowState;
enum XlAxisType;
enum XlArrowHeadLength;
enum XlVAlign;
enum XlTickMark;
enum XlErrorBarDirection;
enum XlErrorBarInclude;
enum XlDisplayBlanksAs;
enum XlArrowHeadStyle;
enum XlArrowHeadWidth;
enum XlHAlign;
enum XlTickLabelPosition;
enum XlLegendPosition;
enum XlChartPictureType;
enum XlChartPicturePlacement;
enum XlOrientation;
enum XlTickLabelOrientation;
enum XlBorderWeight;
enum XlDataSeriesDate;
enum XlUnderlineStyle;
enum XlErrorBarType;
enum XlTrendlineType;
enum XlLineStyle;
enum XlDataLabelsType;
enum XlMarkerStyle;
enum XlPictureConvertorType;
enum XlPattern;
enum XlChartSplitType;
enum XlDisplayUnit;
enum XlDataLabelPosition;
enum XlTimeUnit;
enum XlCategoryType;
enum XlBarShape;
enum excelXlChartType;
enum XlChartItem;
enum XlSizeRepresents;
enum XlInsertShiftDirection;
enum XlDeleteShiftDirection;
enum XlDirection;
enum XlConsolidationFunction;
enum XlSheetType;
enum XlLocationInTable;
enum XlFindLookIn;
enum XlWindowType;
enum XlPivotFieldDataType;
enum XlCopyPictureFormat;
enum XlPivotTableSourceType;
enum XlReferenceStyle;
enum XlMSApplication;
enum XlMouseButton;
enum XlCutCopyMode;
enum XlFillWith;
enum XlFilterAction;
enum XlOrder;
enum XlLinkType;
enum XlApplyNamesOrder;
enum XlEnableCancelKey;
enum XlPageBreak;
enum XlOLEType;
enum XlPageOrientation;
enum XlLinkInfo;
enum XlCommandUnderlines;
enum XlOLEVerb;
enum XlCalculation;
enum XlFileAccess;
enum XlEditionType;
enum XlObjectSize;
enum XlLookAt;
enum XlMailSystem;
enum XlLinkInfoType;
enum XlCVError;
enum XlEditionFormat;
enum XlLink;
enum XlCellType;
enum XlArrangeStyle;
enum XlMousePointer;
enum XlEditionOptionsOption;
enum XlAutoFillType;
enum XlAutoFilterOperator;
enum XlClipboardFormat;
enum XlFileFormat;
enum XlApplicationInternational;
enum XlPageBreakExtent;
enum XlCellInsertionMode;
enum XlFormulaLabel;
enum XlHighlightChangesTime;
enum XlCommentDisplayMode;
enum XlFormatConditionType;
enum XlFormatConditionOperator;
enum XlEnableSelection;
enum XlDVType;
enum XlIMEMode;
enum XlDVAlertStyle;
enum XlChartLocation;
enum XlPaperSize;
enum XlPasteSpecialOperation;
enum XlPasteType;
enum XlPhoneticCharacterType;
enum XlPhoneticAlignment;
enum XlPictureAppearance;
enum XlPivotFieldOrientation;
enum XlPivotFieldCalculation;
enum XlPlacement;
enum XlPlatform;
enum XlPrintLocation;
enum XlPriority;
enum XlPTSelectionMode;
enum XlRangeAutoFormat;
enum XlReferenceType;
enum XlLayoutFormType;
enum XlRoutingSlipDelivery;
enum XlRoutingSlipStatus;
enum XlRunAutoMacro;
enum XlSaveAction;
enum XlSaveAsAccessMode;
enum XlSaveConflictResolution;
enum XlSearchDirection;
enum XlSearchOrder;
enum XlSheetVisibility;
enum XlSortMethod;
enum XlSortMethodOld;
enum XlSortOrder;
enum XlSortOrientation;
enum XlSortType;
enum XlSpecialCellsValue;
enum XlSubscribeToFormat;
enum XlSummaryRow;
enum XlSummaryColumn;
enum XlSummaryReportType;
enum XlTabPosition;
enum XlTextParsingType;
enum XlTextQualifier;
enum XlWBATemplate;
enum XlWindowView;
enum XlXLMMacroType;
enum XlYesNoGuess;
enum XlBordersIndex;
enum XlToolbarProtection;
enum XlBuiltInDialog;
enum XlParameterType;
enum XlParameterDataType;
enum XlFormControl;
enum XlSourceType;
enum XlHtmlType;
enum XlPivotFormatType;
enum XlCmdType;
enum XlColumnDataType;
enum XlQueryType;
enum XlWebSelectionType;
enum XlCubeFieldType;
enum XlWebFormatting;
enum XlDisplayDrawingObjects;
enum XlSubtototalLocationType;
enum XlPivotTableVersionList;
enum XlPrintErrors;
enum XlPivotCellType;
enum XlPivotTableMissingItems;
enum XlCalculationState;
enum XlCalculationInterruptKey;
enum XlSortDataOption;
enum XlUpdateLinks;
enum XlLinkStatus;
enum XlSearchWithin;
enum XlCorruptLoad;
enum XlRobustConnect;
enum XlErrorChecks;
enum XlDataLabelSeparator;
enum XlSmartTagDisplayMode;
enum XlRangeValueDataType;
enum XlSpeakDirection;
enum XlInsertFormatOrigin;
enum XlArabicModes;
enum XlImportDataAs;
enum XlCalculatedMemberType;
enum XlHebrewModes;
enum XlListObjectSourceType;
enum XlTextVisualLayoutType;
enum XlListDataType;
enum XlTotalsCalculation;
enum XlXmlLoadOption;
enum XlSmartTagControlType;
enum XlListConflict;
enum XlXmlExportResult;
enum XlXmlImportResult;
enum XlRemoveDocInfoType;
enum XlRgbColor;
enum XlStdColorScale;
enum XlConditionValueTypes;
enum XlFormatFilterTypes;
enum XlContainsOperator;
enum XlAboveBelow;
enum XlLookFor;
enum XlTimePeriods;
enum XlDupeUnique;
enum XlTopBottom;
enum XlIconSet;
enum XlThemeFont;
enum XlPivotLineType;
enum XlCheckInVersionType;
enum XlPropertyDisplayedIn;
enum XlConnectionType;
enum XlActionType;
enum XlLayoutRowType;
enum XlMeasurementUnits;
enum XlPivotFilterType;
enum XlCredentialsMethod;
enum XlCubeFieldSubType;
enum XlSortOn;
enum XlDynamicFilterCriteria;
enum XlFilterAllDatesInPeriod;
enum XlTableStyleElementType;
enum XlPivotConditionScope;
enum XlCalcFor;
enum XlThemeColor;
enum XlFixedFormatType;
enum XlFixedFormatQuality;
enum XlChartElementPosition;
enum XlGenerateTableRefs;
enum XlGradientFillType;
enum XlThreadMode;
struct __declspec(uuid("00020893-0001-0000-c000-000000000046"))
/* interface */ IWindow;
struct __declspec(uuid("00020892-0001-0000-c000-000000000046"))
/* interface */ IWindows;
struct __declspec(uuid("00024413-0001-0000-c000-000000000046"))
/* interface */ IAppEvents;
struct __declspec(uuid("000208d5-0000-0000-c000-000000000046"))
/* dual interface */ _excelApplication;
struct __declspec(uuid("00020845-0001-0000-c000-000000000046"))
/* interface */ IWorksheetFunction;
struct __declspec(uuid("00020846-0001-0000-c000-000000000046"))
/* interface */ IRange;
struct __declspec(uuid("0002440f-0001-0000-c000-000000000046"))
/* interface */ IChartEvents;
struct __declspec(uuid("000208d6-0000-0000-c000-000000000046"))
/* dual interface */ _Chart;
struct __declspec(uuid("000208d7-0000-0000-c000-000000000046"))
/* dual interface */ Sheets;
struct __declspec(uuid("00024402-0001-0000-c000-000000000046"))
/* interface */ IVPageBreak;
struct __declspec(uuid("00024401-0001-0000-c000-000000000046"))
/* interface */ IHPageBreak;
struct __declspec(uuid("00024404-0001-0000-c000-000000000046"))
/* interface */ IHPageBreaks;
struct __declspec(uuid("00024405-0001-0000-c000-000000000046"))
/* interface */ IVPageBreaks;
struct __declspec(uuid("00024407-0001-0000-c000-000000000046"))
/* interface */ IRecentFile;
struct __declspec(uuid("00024406-0001-0000-c000-000000000046"))
/* interface */ IRecentFiles;
struct __declspec(uuid("00024411-0001-0000-c000-000000000046"))
/* interface */ IDocEvents;
struct __declspec(uuid("000208d8-0000-0000-c000-000000000046"))
/* dual interface */ _Worksheet;
struct __declspec(uuid("00020852-0001-0000-c000-000000000046"))
/* interface */ IStyle;
struct __declspec(uuid("00020853-0001-0000-c000-000000000046"))
/* interface */ IStyles;
struct __declspec(uuid("00020855-0001-0000-c000-000000000046"))
/* interface */ IBorders;
struct __declspec(uuid("000208d9-0000-0000-c000-000000000046"))
/* dual interface */ _excelGlobal;
struct __declspec(uuid("00020857-0001-0000-c000-000000000046"))
/* interface */ IAddIn;
struct __declspec(uuid("00020858-0001-0000-c000-000000000046"))
/* interface */ IAddIns;
struct __declspec(uuid("0002085c-0001-0000-c000-000000000046"))
/* interface */ IToolbar;
struct __declspec(uuid("0002085d-0001-0000-c000-000000000046"))
/* interface */ IToolbars;
struct __declspec(uuid("0002085e-0001-0000-c000-000000000046"))
/* interface */ IToolbarButton;
struct __declspec(uuid("0002085f-0001-0000-c000-000000000046"))
/* interface */ IToolbarButtons;
struct __declspec(uuid("00020860-0001-0000-c000-000000000046"))
/* interface */ IAreas;
struct __declspec(uuid("00024412-0001-0000-c000-000000000046"))
/* interface */ IWorkbookEvents;
struct __declspec(uuid("000208da-0000-0000-c000-000000000046"))
/* dual interface */ _Workbook;
struct __declspec(uuid("000208db-0000-0000-c000-000000000046"))
/* dual interface */ Workbooks;
struct __declspec(uuid("00020863-0001-0000-c000-000000000046"))
/* interface */ IMenuBars;
struct __declspec(uuid("00020864-0001-0000-c000-000000000046"))
/* interface */ IMenuBar;
struct __declspec(uuid("00020865-0001-0000-c000-000000000046"))
/* interface */ IMenus;
struct __declspec(uuid("00020866-0001-0000-c000-000000000046"))
/* interface */ IMenu;
struct __declspec(uuid("00020867-0001-0000-c000-000000000046"))
/* interface */ IMenuItems;
struct __declspec(uuid("00020868-0001-0000-c000-000000000046"))
/* interface */ IMenuItem;
struct __declspec(uuid("0002086d-0001-0000-c000-000000000046"))
/* interface */ ICharts;
struct __declspec(uuid("0002086f-0001-0000-c000-000000000046"))
/* interface */ IDrawingObjects;
struct __declspec(uuid("0002441c-0001-0000-c000-000000000046"))
/* interface */ IPivotCache;
struct __declspec(uuid("0002441d-0001-0000-c000-000000000046"))
/* interface */ IPivotCaches;
struct __declspec(uuid("0002441e-0001-0000-c000-000000000046"))
/* interface */ IPivotFormula;
struct __declspec(uuid("0002441f-0001-0000-c000-000000000046"))
/* interface */ IPivotFormulas;
struct __declspec(uuid("00020872-0001-0000-c000-000000000046"))
/* interface */ IPivotTable;
struct __declspec(uuid("00020873-0001-0000-c000-000000000046"))
/* interface */ IPivotTables;
struct __declspec(uuid("00020874-0001-0000-c000-000000000046"))
/* interface */ IPivotField;
struct __declspec(uuid("00020875-0001-0000-c000-000000000046"))
/* interface */ IPivotFields;
struct __declspec(uuid("00024420-0001-0000-c000-000000000046"))
/* interface */ ICalculatedFields;
struct __declspec(uuid("00020876-0001-0000-c000-000000000046"))
/* interface */ IPivotItem;
struct __declspec(uuid("00020877-0001-0000-c000-000000000046"))
/* interface */ IPivotItems;
struct __declspec(uuid("00024421-0001-0000-c000-000000000046"))
/* interface */ ICalculatedItems;
struct __declspec(uuid("00020878-0001-0000-c000-000000000046"))
/* interface */ ICharacters;
struct __declspec(uuid("00020879-0001-0000-c000-000000000046"))
/* interface */ IDialogs;
struct __declspec(uuid("0002087a-0001-0000-c000-000000000046"))
/* interface */ IDialog;
struct __declspec(uuid("0002087b-0001-0000-c000-000000000046"))
/* interface */ ISoundNote;
struct __declspec(uuid("0002087d-0001-0000-c000-000000000046"))
/* interface */ IButton;
struct __declspec(uuid("0002087e-0001-0000-c000-000000000046"))
/* interface */ IButtons;
struct __declspec(uuid("0002087f-0001-0000-c000-000000000046"))
/* interface */ ICheckBox;
struct __declspec(uuid("00020880-0001-0000-c000-000000000046"))
/* interface */ ICheckBoxes;
struct __declspec(uuid("00020881-0001-0000-c000-000000000046"))
/* interface */ IOptionButton;
struct __declspec(uuid("00020882-0001-0000-c000-000000000046"))
/* interface */ IOptionButtons;
struct __declspec(uuid("00020883-0001-0000-c000-000000000046"))
/* interface */ IEditBox;
struct __declspec(uuid("00020884-0001-0000-c000-000000000046"))
/* interface */ IEditBoxes;
struct __declspec(uuid("00020885-0001-0000-c000-000000000046"))
/* interface */ IScrollBar;
struct __declspec(uuid("00020886-0001-0000-c000-000000000046"))
/* interface */ IScrollBars;
struct __declspec(uuid("00020887-0001-0000-c000-000000000046"))
/* interface */ IListBox;
struct __declspec(uuid("00020888-0001-0000-c000-000000000046"))
/* interface */ IListBoxes;
struct __declspec(uuid("00020889-0001-0000-c000-000000000046"))
/* interface */ IGroupBox;
struct __declspec(uuid("0002088a-0001-0000-c000-000000000046"))
/* interface */ IGroupBoxes;
struct __declspec(uuid("0002088b-0001-0000-c000-000000000046"))
/* interface */ IDropDown;
struct __declspec(uuid("0002088c-0001-0000-c000-000000000046"))
/* interface */ IDropDowns;
struct __declspec(uuid("0002088d-0001-0000-c000-000000000046"))
/* interface */ ISpinner;
struct __declspec(uuid("0002088e-0001-0000-c000-000000000046"))
/* interface */ ISpinners;
struct __declspec(uuid("0002088f-0001-0000-c000-000000000046"))
/* interface */ IDialogFrame;
struct __declspec(uuid("00020890-0001-0000-c000-000000000046"))
/* interface */ ILabel;
struct __declspec(uuid("00020891-0001-0000-c000-000000000046"))
/* interface */ ILabels;
struct __declspec(uuid("00020894-0001-0000-c000-000000000046"))
/* interface */ IPanes;
struct __declspec(uuid("00020895-0001-0000-c000-000000000046"))
/* interface */ IPane;
struct __declspec(uuid("00020896-0001-0000-c000-000000000046"))
/* interface */ IScenarios;
struct __declspec(uuid("00020897-0001-0000-c000-000000000046"))
/* interface */ IScenario;
struct __declspec(uuid("00020898-0001-0000-c000-000000000046"))
/* interface */ IGroupObject;
struct __declspec(uuid("00020899-0001-0000-c000-000000000046"))
/* interface */ IGroupObjects;
struct __declspec(uuid("0002089a-0001-0000-c000-000000000046"))
/* interface */ ILine;
struct __declspec(uuid("0002089b-0001-0000-c000-000000000046"))
/* interface */ ILines;
struct __declspec(uuid("0002089c-0001-0000-c000-000000000046"))
/* interface */ IRectangle;
struct __declspec(uuid("0002089d-0001-0000-c000-000000000046"))
/* interface */ IRectangles;
struct __declspec(uuid("0002089e-0001-0000-c000-000000000046"))
/* interface */ IOval;
struct __declspec(uuid("0002089f-0001-0000-c000-000000000046"))
/* interface */ IOvals;
struct __declspec(uuid("000208a0-0001-0000-c000-000000000046"))
/* interface */ IArc;
struct __declspec(uuid("000208a1-0001-0000-c000-000000000046"))
/* interface */ IArcs;
struct __declspec(uuid("00024410-0001-0000-c000-000000000046"))
/* interface */ IOLEObjectEvents;
struct __declspec(uuid("000208a2-0001-0000-c000-000000000046"))
/* interface */ _IOLEObject;
struct __declspec(uuid("000208a3-0001-0000-c000-000000000046"))
/* interface */ IOLEObjects;
struct __declspec(uuid("000208a4-0001-0000-c000-000000000046"))
/* interface */ ITextBox;
struct __declspec(uuid("000208a5-0001-0000-c000-000000000046"))
/* interface */ ITextBoxes;
struct __declspec(uuid("000208a7-0001-0000-c000-000000000046"))
/* interface */ IPictures;
struct __declspec(uuid("000208a8-0001-0000-c000-000000000046"))
/* interface */ IDrawing;
struct __declspec(uuid("000208a9-0001-0000-c000-000000000046"))
/* interface */ IDrawings;
struct __declspec(uuid("000208aa-0001-0000-c000-000000000046"))
/* interface */ IRoutingSlip;
struct __declspec(uuid("000208ab-0001-0000-c000-000000000046"))
/* interface */ IOutline;
struct __declspec(uuid("000208ad-0001-0000-c000-000000000046"))
/* interface */ IModule;
struct __declspec(uuid("000208ae-0001-0000-c000-000000000046"))
/* interface */ IModules;
struct __declspec(uuid("000208af-0001-0000-c000-000000000046"))
/* interface */ IDialogSheet;
struct __declspec(uuid("000208b0-0001-0000-c000-000000000046"))
/* interface */ IDialogSheets;
struct __declspec(uuid("000208b1-0001-0000-c000-000000000046"))
/* interface */ IWorksheets;
struct __declspec(uuid("000208b4-0001-0000-c000-000000000046"))
/* interface */ IPageSetup;
struct __declspec(uuid("000208b8-0001-0000-c000-000000000046"))
/* interface */ INames;
struct __declspec(uuid("000208b9-0001-0000-c000-000000000046"))
/* interface */ IName;
struct __declspec(uuid("000208cf-0001-0000-c000-000000000046"))
/* interface */ IChartObject;
struct __declspec(uuid("000208d0-0001-0000-c000-000000000046"))
/* interface */ IChartObjects;
struct __declspec(uuid("000208d1-0001-0000-c000-000000000046"))
/* interface */ IMailer;
struct __declspec(uuid("00024422-0001-0000-c000-000000000046"))
/* interface */ ICustomViews;
struct __declspec(uuid("00024423-0001-0000-c000-000000000046"))
/* interface */ ICustomView;
struct __declspec(uuid("00024424-0001-0000-c000-000000000046"))
/* interface */ IFormatConditions;
struct __declspec(uuid("00024425-0001-0000-c000-000000000046"))
/* interface */ IFormatCondition;
struct __declspec(uuid("00024426-0001-0000-c000-000000000046"))
/* interface */ IComments;
struct __declspec(uuid("00024427-0001-0000-c000-000000000046"))
/* interface */ IComment;
struct __declspec(uuid("0002441b-0001-0000-c000-000000000046"))
/* interface */ IRefreshEvents;
struct __declspec(uuid("00024428-0001-0000-c000-000000000046"))
/* interface */ _IQueryTable;
struct __declspec(uuid("00024429-0001-0000-c000-000000000046"))
/* interface */ IQueryTables;
struct __declspec(uuid("0002442a-0001-0000-c000-000000000046"))
/* interface */ IParameter;
struct __declspec(uuid("0002442b-0001-0000-c000-000000000046"))
/* interface */ IParameters;
struct __declspec(uuid("0002442c-0001-0000-c000-000000000046"))
/* interface */ IODBCError;
struct __declspec(uuid("0002442d-0001-0000-c000-000000000046"))
/* interface */ IODBCErrors;
struct __declspec(uuid("0002442f-0001-0000-c000-000000000046"))
/* interface */ IValidation;
struct __declspec(uuid("00024430-0001-0000-c000-000000000046"))
/* interface */ IHyperlinks;
struct __declspec(uuid("00024431-0001-0000-c000-000000000046"))
/* interface */ IHyperlink;
struct __declspec(uuid("00024432-0001-0000-c000-000000000046"))
/* interface */ IAutoFilter;
struct __declspec(uuid("00024433-0001-0000-c000-000000000046"))
/* interface */ IFilters;
struct __declspec(uuid("00024434-0001-0000-c000-000000000046"))
/* interface */ IFilter;
struct __declspec(uuid("000208d4-0001-0000-c000-000000000046"))
/* interface */ IAutoCorrect;
struct __declspec(uuid("00020854-0001-0000-c000-000000000046"))
/* interface */ IBorder;
struct __declspec(uuid("00020870-0001-0000-c000-000000000046"))
/* interface */ IInterior;
struct __declspec(uuid("00024435-0001-0000-c000-000000000046"))
/* interface */ IChartFillFormat;
struct __declspec(uuid("00024436-0001-0000-c000-000000000046"))
/* interface */ IChartColorFormat;
struct __declspec(uuid("00020848-0001-0000-c000-000000000046"))
/* interface */ IAxis;
struct __declspec(uuid("00020849-0001-0000-c000-000000000046"))
/* interface */ IChartTitle;
struct __declspec(uuid("0002084a-0001-0000-c000-000000000046"))
/* interface */ IAxisTitle;
struct __declspec(uuid("00020859-0001-0000-c000-000000000046"))
/* interface */ IChartGroup;
struct __declspec(uuid("0002085a-0001-0000-c000-000000000046"))
/* interface */ IChartGroups;
struct __declspec(uuid("0002085b-0001-0000-c000-000000000046"))
/* interface */ IAxes;
struct __declspec(uuid("00020869-0001-0000-c000-000000000046"))
/* interface */ IPoints;
struct __declspec(uuid("0002086a-0001-0000-c000-000000000046"))
/* interface */ IPoint;
struct __declspec(uuid("0002086b-0001-0000-c000-000000000046"))
/* interface */ ISeries;
struct __declspec(uuid("0002086c-0001-0000-c000-000000000046"))
/* interface */ ISeriesCollection;
struct __declspec(uuid("000208b2-0001-0000-c000-000000000046"))
/* interface */ IDataLabel;
struct __declspec(uuid("000208b3-0001-0000-c000-000000000046"))
/* interface */ IDataLabels;
struct __declspec(uuid("000208ba-0001-0000-c000-000000000046"))
/* interface */ ILegendEntry;
struct __declspec(uuid("000208bb-0001-0000-c000-000000000046"))
/* interface */ ILegendEntries;
struct __declspec(uuid("000208bc-0001-0000-c000-000000000046"))
/* interface */ ILegendKey;
struct __declspec(uuid("000208bd-0001-0000-c000-000000000046"))
/* interface */ ITrendlines;
struct __declspec(uuid("000208be-0001-0000-c000-000000000046"))
/* interface */ ITrendline;
struct __declspec(uuid("000208c0-0001-0000-c000-000000000046"))
/* interface */ ICorners;
struct __declspec(uuid("000208c1-0001-0000-c000-000000000046"))
/* interface */ ISeriesLines;
struct __declspec(uuid("000208c2-0001-0000-c000-000000000046"))
/* interface */ IHiLoLines;
struct __declspec(uuid("000208c3-0001-0000-c000-000000000046"))
/* interface */ IGridlines;
struct __declspec(uuid("000208c4-0001-0000-c000-000000000046"))
/* interface */ IDropLines;
struct __declspec(uuid("00024437-0001-0000-c000-000000000046"))
/* interface */ ILeaderLines;
struct __declspec(uuid("000208c5-0001-0000-c000-000000000046"))
/* interface */ IUpBars;
struct __declspec(uuid("000208c6-0001-0000-c000-000000000046"))
/* interface */ IDownBars;
struct __declspec(uuid("000208c7-0001-0000-c000-000000000046"))
/* interface */ IFloor;
struct __declspec(uuid("000208c8-0001-0000-c000-000000000046"))
/* interface */ IWalls;
struct __declspec(uuid("000208c9-0001-0000-c000-000000000046"))
/* interface */ ITickLabels;
struct __declspec(uuid("000208cb-0001-0000-c000-000000000046"))
/* interface */ IPlotArea;
struct __declspec(uuid("000208cc-0001-0000-c000-000000000046"))
/* interface */ IChartArea;
struct __declspec(uuid("000208cd-0001-0000-c000-000000000046"))
/* interface */ ILegend;
struct __declspec(uuid("000208ce-0001-0000-c000-000000000046"))
/* interface */ IErrorBars;
struct __declspec(uuid("00020843-0001-0000-c000-000000000046"))
/* interface */ IDataTable;
struct __declspec(uuid("00024438-0001-0000-c000-000000000046"))
/* interface */ IPhonetic;
struct __declspec(uuid("00024439-0001-0000-c000-000000000046"))
/* interface */ IShape;
struct __declspec(uuid("0002443a-0001-0000-c000-000000000046"))
/* interface */ IShapes;
struct __declspec(uuid("0002443b-0001-0000-c000-000000000046"))
/* interface */ IShapeRange;
struct __declspec(uuid("0002443c-0001-0000-c000-000000000046"))
/* interface */ IGroupShapes;
struct __declspec(uuid("0002443d-0001-0000-c000-000000000046"))
/* interface */ ITextFrame;
struct __declspec(uuid("0002443e-0001-0000-c000-000000000046"))
/* interface */ IConnectorFormat;
struct __declspec(uuid("0002443f-0001-0000-c000-000000000046"))
/* interface */ IFreeformBuilder;
struct __declspec(uuid("00024440-0001-0000-c000-000000000046"))
/* interface */ IControlFormat;
struct __declspec(uuid("00024441-0001-0000-c000-000000000046"))
/* interface */ IOLEFormat;
struct __declspec(uuid("00024442-0001-0000-c000-000000000046"))
/* interface */ ILinkFormat;
struct __declspec(uuid("00024443-0001-0000-c000-000000000046"))
/* interface */ IPublishObjects;
struct __declspec(uuid("00024444-0000-0000-c000-000000000046"))
/* dual interface */ excelPublishObject;
struct __declspec(uuid("00024445-0001-0000-c000-000000000046"))
/* interface */ IOLEDBError;
struct __declspec(uuid("00024446-0001-0000-c000-000000000046"))
/* interface */ IOLEDBErrors;
struct __declspec(uuid("00024447-0001-0000-c000-000000000046"))
/* interface */ IPhonetics;
struct __declspec(uuid("00024448-0000-0000-c000-000000000046"))
/* dual interface */ excelDefaultWebOptions;
struct __declspec(uuid("00024449-0000-0000-c000-000000000046"))
/* dual interface */ excelWebOptions;
struct __declspec(uuid("0002444a-0001-0000-c000-000000000046"))
/* interface */ IPivotLayout;
struct __declspec(uuid("0002444b-0000-0000-c000-000000000046"))
/* dual interface */ TreeviewControl;
struct __declspec(uuid("0002444c-0000-0000-c000-000000000046"))
/* dual interface */ CubeField;
struct __declspec(uuid("0002444d-0000-0000-c000-000000000046"))
/* dual interface */ CubeFields;
struct __declspec(uuid("0002084c-0001-0000-c000-000000000046"))
/* interface */ IDisplayUnitLabel;
struct __declspec(uuid("00024450-0001-0000-c000-000000000046"))
/* interface */ ICellFormat;
struct __declspec(uuid("00024451-0001-0000-c000-000000000046"))
/* interface */ IUsedObjects;
struct __declspec(uuid("00024452-0001-0000-c000-000000000046"))
/* interface */ ICustomProperties;
struct __declspec(uuid("00024453-0001-0000-c000-000000000046"))
/* interface */ ICustomProperty;
struct __declspec(uuid("00024454-0001-0000-c000-000000000046"))
/* interface */ ICalculatedMembers;
struct __declspec(uuid("00024455-0001-0000-c000-000000000046"))
/* interface */ ICalculatedMember;
struct __declspec(uuid("00024456-0001-0000-c000-000000000046"))
/* interface */ IWatches;
struct __declspec(uuid("00024457-0001-0000-c000-000000000046"))
/* interface */ IWatch;
struct __declspec(uuid("00024458-0001-0000-c000-000000000046"))
/* interface */ IPivotCell;
struct __declspec(uuid("00024459-0001-0000-c000-000000000046"))
/* interface */ IGraphic;
struct __declspec(uuid("0002445a-0001-0000-c000-000000000046"))
/* interface */ IAutoRecover;
struct __declspec(uuid("0002445b-0001-0000-c000-000000000046"))
/* interface */ IErrorCheckingOptions;
struct __declspec(uuid("0002445c-0001-0000-c000-000000000046"))
/* interface */ IErrors;
struct __declspec(uuid("0002445d-0001-0000-c000-000000000046"))
/* interface */ IError;
struct __declspec(uuid("0002445e-0001-0000-c000-000000000046"))
/* interface */ ISmartTagAction;
struct __declspec(uuid("0002445f-0001-0000-c000-000000000046"))
/* interface */ ISmartTagActions;
struct __declspec(uuid("00024460-0001-0000-c000-000000000046"))
/* interface */ ISmartTag;
struct __declspec(uuid("00024461-0001-0000-c000-000000000046"))
/* interface */ ISmartTags;
struct __declspec(uuid("00024462-0001-0000-c000-000000000046"))
/* interface */ ISmartTagRecognizer;
struct __declspec(uuid("00024463-0001-0000-c000-000000000046"))
/* interface */ ISmartTagRecognizers;
struct __declspec(uuid("00024464-0001-0000-c000-000000000046"))
/* interface */ ISmartTagOptions;
struct __declspec(uuid("00024465-0001-0000-c000-000000000046"))
/* interface */ ISpellingOptions;
struct __declspec(uuid("00024466-0001-0000-c000-000000000046"))
/* interface */ ISpeech;
struct __declspec(uuid("00024467-0001-0000-c000-000000000046"))
/* interface */ IProtection;
struct __declspec(uuid("00024468-0001-0000-c000-000000000046"))
/* interface */ IPivotItemList;
struct __declspec(uuid("00024469-0001-0000-c000-000000000046"))
/* interface */ ITab;
struct __declspec(uuid("0002446a-0001-0000-c000-000000000046"))
/* interface */ IAllowEditRanges;
struct __declspec(uuid("0002446b-0001-0000-c000-000000000046"))
/* interface */ IAllowEditRange;
struct __declspec(uuid("0002446c-0001-0000-c000-000000000046"))
/* interface */ IUserAccessList;
struct __declspec(uuid("0002446d-0001-0000-c000-000000000046"))
/* interface */ IUserAccess;
struct __declspec(uuid("0002446e-0001-0000-c000-000000000046"))
/* interface */ IRTD;
struct __declspec(uuid("0002446f-0001-0000-c000-000000000046"))
/* interface */ IDiagram;
struct __declspec(uuid("00024470-0001-0000-c000-000000000046"))
/* interface */ IListObjects;
struct __declspec(uuid("00024471-0001-0000-c000-000000000046"))
/* interface */ IListObject;
struct __declspec(uuid("00024472-0001-0000-c000-000000000046"))
/* interface */ IListColumns;
struct __declspec(uuid("00024473-0001-0000-c000-000000000046"))
/* interface */ IListColumn;
struct __declspec(uuid("00024474-0001-0000-c000-000000000046"))
/* interface */ IListRows;
struct __declspec(uuid("00024475-0001-0000-c000-000000000046"))
/* interface */ IListRow;
struct __declspec(uuid("00024476-0001-0000-c000-000000000046"))
/* interface */ IXmlNamespace;
struct __declspec(uuid("00024477-0001-0000-c000-000000000046"))
/* interface */ IXmlNamespaces;
struct __declspec(uuid("00024478-0001-0000-c000-000000000046"))
/* interface */ IXmlDataBinding;
struct __declspec(uuid("00024479-0001-0000-c000-000000000046"))
/* interface */ IXmlSchema;
struct __declspec(uuid("0002447a-0001-0000-c000-000000000046"))
/* interface */ IXmlSchemas;
struct __declspec(uuid("0002447b-0001-0000-c000-000000000046"))
/* interface */ IXmlMap;
struct __declspec(uuid("0002447c-0001-0000-c000-000000000046"))
/* interface */ IXmlMaps;
struct __declspec(uuid("0002447d-0001-0000-c000-000000000046"))
/* interface */ IListDataFormat;
struct __declspec(uuid("0002447e-0001-0000-c000-000000000046"))
/* interface */ IXPath;
struct __declspec(uuid("0002447f-0001-0000-c000-000000000046"))
/* interface */ IPivotLineCells;
struct __declspec(uuid("00024480-0001-0000-c000-000000000046"))
/* interface */ IPivotLine;
struct __declspec(uuid("00024481-0001-0000-c000-000000000046"))
/* interface */ IPivotLines;
struct __declspec(uuid("00024482-0001-0000-c000-000000000046"))
/* interface */ IPivotAxis;
struct __declspec(uuid("00024483-0001-0000-c000-000000000046"))
/* interface */ IPivotFilter;
struct __declspec(uuid("00024484-0001-0000-c000-000000000046"))
/* interface */ IPivotFilters;
struct __declspec(uuid("00024485-0001-0000-c000-000000000046"))
/* interface */ IWorkbookConnection;
struct __declspec(uuid("00024486-0001-0000-c000-000000000046"))
/* interface */ IConnections;
struct __declspec(uuid("00024487-0001-0000-c000-000000000046"))
/* interface */ IWorksheetView;
struct __declspec(uuid("00024488-0001-0000-c000-000000000046"))
/* interface */ IChartView;
struct __declspec(uuid("00024489-0001-0000-c000-000000000046"))
/* interface */ IModuleView;
struct __declspec(uuid("0002448a-0001-0000-c000-000000000046"))
/* interface */ IDialogSheetView;
struct __declspec(uuid("0002448c-0001-0000-c000-000000000046"))
/* interface */ ISheetViews;
struct __declspec(uuid("0002448d-0001-0000-c000-000000000046"))
/* interface */ IOLEDBConnection;
struct __declspec(uuid("0002448e-0001-0000-c000-000000000046"))
/* interface */ IODBCConnection;
struct __declspec(uuid("0002448f-0001-0000-c000-000000000046"))
/* interface */ IAction;
struct __declspec(uuid("00024490-0001-0000-c000-000000000046"))
/* interface */ IActions;
struct __declspec(uuid("00024491-0001-0000-c000-000000000046"))
/* interface */ IFormatColor;
struct __declspec(uuid("00024492-0001-0000-c000-000000000046"))
/* interface */ IConditionValue;
struct __declspec(uuid("00024493-0001-0000-c000-000000000046"))
/* interface */ IColorScale;
struct __declspec(uuid("00024494-0001-0000-c000-000000000046"))
/* interface */ IColorScaleCriteria;
struct __declspec(uuid("00024495-0001-0000-c000-000000000046"))
/* interface */ IColorScaleCriterion;
struct __declspec(uuid("00024496-0001-0000-c000-000000000046"))
/* interface */ IDatabar;
struct __declspec(uuid("00024497-0001-0000-c000-000000000046"))
/* interface */ IIconSetCondition;
struct __declspec(uuid("00024498-0001-0000-c000-000000000046"))
/* interface */ IIconCriteria;
struct __declspec(uuid("00024499-0001-0000-c000-000000000046"))
/* interface */ IIconCriterion;
struct __declspec(uuid("0002449a-0001-0000-c000-000000000046"))
/* interface */ IIcon;
struct __declspec(uuid("0002449b-0001-0000-c000-000000000046"))
/* interface */ IIconSet;
struct __declspec(uuid("0002449c-0001-0000-c000-000000000046"))
/* interface */ IIconSets;
struct __declspec(uuid("0002449d-0001-0000-c000-000000000046"))
/* interface */ ITop10;
struct __declspec(uuid("0002449e-0001-0000-c000-000000000046"))
/* interface */ IAboveAverage;
struct __declspec(uuid("0002449f-0001-0000-c000-000000000046"))
/* interface */ IUniqueValues;
struct __declspec(uuid("000244a0-0001-0000-c000-000000000046"))
/* interface */ IRanges;
struct __declspec(uuid("000244a1-0001-0000-c000-000000000046"))
/* interface */ IHeaderFooter;
struct __declspec(uuid("000244a2-0001-0000-c000-000000000046"))
/* interface */ IPage;
struct __declspec(uuid("000244a3-0001-0000-c000-000000000046"))
/* interface */ IPages;
struct __declspec(uuid("000244a4-0001-0000-c000-000000000046"))
/* interface */ IServerViewableItems;
struct __declspec(uuid("000244a5-0001-0000-c000-000000000046"))
/* interface */ ITableStyleElement;
struct __declspec(uuid("000244a6-0001-0000-c000-000000000046"))
/* interface */ ITableStyleElements;
struct __declspec(uuid("000244a7-0001-0000-c000-000000000046"))
/* interface */ ITableStyle;
struct __declspec(uuid("000244a8-0001-0000-c000-000000000046"))
/* interface */ ITableStyles;
struct __declspec(uuid("000244a9-0001-0000-c000-000000000046"))
/* interface */ ISortField;
struct __declspec(uuid("000244aa-0001-0000-c000-000000000046"))
/* interface */ ISortFields;
struct __declspec(uuid("000244ab-0001-0000-c000-000000000046"))
/* interface */ ISort;
struct __declspec(uuid("000244ac-0001-0000-c000-000000000046"))
/* interface */ IResearch;
struct __declspec(uuid("000244ad-0001-0000-c000-000000000046"))
/* interface */ IColorStop;
struct __declspec(uuid("000244ae-0001-0000-c000-000000000046"))
/* interface */ IColorStops;
struct __declspec(uuid("000244af-0001-0000-c000-000000000046"))
/* interface */ ILinearGradient;
struct __declspec(uuid("000244b0-0001-0000-c000-000000000046"))
/* interface */ IRectangularGradient;
struct __declspec(uuid("000244b1-0001-0000-c000-000000000046"))
/* interface */ IMultiThreadedCalculation;
struct __declspec(uuid("000244b2-0001-0000-c000-000000000046"))
/* interface */ IChartFormat;
struct __declspec(uuid("0002084d-0000-0000-c000-000000000046"))
/* dispinterface */ excelFont;
struct __declspec(uuid("00020893-0000-0000-c000-000000000046"))
/* dispinterface */ Window;
struct __declspec(uuid("00020892-0000-0000-c000-000000000046"))
/* dispinterface */ Windows;
struct __declspec(uuid("00024413-0000-0000-c000-000000000046"))
/* dispinterface */ AppEvents;
struct __declspec(uuid("00020845-0000-0000-c000-000000000046"))
/* dispinterface */ WorksheetFunction;
struct __declspec(uuid("00020846-0000-0000-c000-000000000046"))
/* dispinterface */ Range;
struct __declspec(uuid("0002440f-0000-0000-c000-000000000046"))
/* dispinterface */ ChartEvents;
struct __declspec(uuid("00024402-0000-0000-c000-000000000046"))
/* dispinterface */ VPageBreak;
struct __declspec(uuid("00024401-0000-0000-c000-000000000046"))
/* dispinterface */ HPageBreak;
struct __declspec(uuid("00024404-0000-0000-c000-000000000046"))
/* dispinterface */ HPageBreaks;
struct __declspec(uuid("00024405-0000-0000-c000-000000000046"))
/* dispinterface */ VPageBreaks;
struct __declspec(uuid("00024407-0000-0000-c000-000000000046"))
/* dispinterface */ RecentFile;
struct __declspec(uuid("00024406-0000-0000-c000-000000000046"))
/* dispinterface */ RecentFiles;
struct __declspec(uuid("00024411-0000-0000-c000-000000000046"))
/* dispinterface */ DocEvents;
struct __declspec(uuid("00020852-0000-0000-c000-000000000046"))
/* dispinterface */ Style;
struct __declspec(uuid("00020853-0000-0000-c000-000000000046"))
/* dispinterface */ Styles;
struct __declspec(uuid("00020855-0000-0000-c000-000000000046"))
/* dispinterface */ excelBorders;
struct __declspec(uuid("00020857-0000-0000-c000-000000000046"))
/* dispinterface */ excelAddIn;
struct __declspec(uuid("00020858-0000-0000-c000-000000000046"))
/* dispinterface */ excelAddIns;
struct __declspec(uuid("0002085c-0000-0000-c000-000000000046"))
/* dispinterface */ Toolbar;
struct __declspec(uuid("0002085d-0000-0000-c000-000000000046"))
/* dispinterface */ Toolbars;
struct __declspec(uuid("0002085e-0000-0000-c000-000000000046"))
/* dispinterface */ ToolbarButton;
struct __declspec(uuid("0002085f-0000-0000-c000-000000000046"))
/* dispinterface */ ToolbarButtons;
struct __declspec(uuid("00020860-0000-0000-c000-000000000046"))
/* dispinterface */ Areas;
struct __declspec(uuid("00024412-0000-0000-c000-000000000046"))
/* dispinterface */ WorkbookEvents;
struct __declspec(uuid("00020863-0000-0000-c000-000000000046"))
/* dispinterface */ MenuBars;
struct __declspec(uuid("00020864-0000-0000-c000-000000000046"))
/* dispinterface */ MenuBar;
struct __declspec(uuid("00020865-0000-0000-c000-000000000046"))
/* dispinterface */ Menus;
struct __declspec(uuid("00020866-0000-0000-c000-000000000046"))
/* dispinterface */ Menu;
struct __declspec(uuid("00020867-0000-0000-c000-000000000046"))
/* dispinterface */ MenuItems;
struct __declspec(uuid("00020868-0000-0000-c000-000000000046"))
/* dispinterface */ MenuItem;
struct __declspec(uuid("0002086d-0000-0000-c000-000000000046"))
/* dispinterface */ Charts;
struct __declspec(uuid("0002086f-0000-0000-c000-000000000046"))
/* dispinterface */ DrawingObjects;
struct __declspec(uuid("0002441c-0000-0000-c000-000000000046"))
/* dispinterface */ PivotCache;
struct __declspec(uuid("0002441d-0000-0000-c000-000000000046"))
/* dispinterface */ PivotCaches;
struct __declspec(uuid("0002441e-0000-0000-c000-000000000046"))
/* dispinterface */ PivotFormula;
struct __declspec(uuid("0002441f-0000-0000-c000-000000000046"))
/* dispinterface */ PivotFormulas;
struct __declspec(uuid("00020872-0000-0000-c000-000000000046"))
/* dispinterface */ PivotTable;
struct __declspec(uuid("00020873-0000-0000-c000-000000000046"))
/* dispinterface */ PivotTables;
struct __declspec(uuid("00020874-0000-0000-c000-000000000046"))
/* dispinterface */ PivotField;
struct __declspec(uuid("00020875-0000-0000-c000-000000000046"))
/* dispinterface */ PivotFields;
struct __declspec(uuid("00024420-0000-0000-c000-000000000046"))
/* dispinterface */ CalculatedFields;
struct __declspec(uuid("00020876-0000-0000-c000-000000000046"))
/* dispinterface */ PivotItem;
struct __declspec(uuid("00020877-0000-0000-c000-000000000046"))
/* dispinterface */ PivotItems;
struct __declspec(uuid("00024421-0000-0000-c000-000000000046"))
/* dispinterface */ CalculatedItems;
struct __declspec(uuid("00020878-0000-0000-c000-000000000046"))
/* dispinterface */ Characters;
struct __declspec(uuid("00020879-0000-0000-c000-000000000046"))
/* dispinterface */ Dialogs;
struct __declspec(uuid("0002087a-0000-0000-c000-000000000046"))
/* dispinterface */ Dialog;
struct __declspec(uuid("0002087b-0000-0000-c000-000000000046"))
/* dispinterface */ SoundNote;
struct __declspec(uuid("0002087d-0000-0000-c000-000000000046"))
/* dispinterface */ Button;
struct __declspec(uuid("0002087e-0000-0000-c000-000000000046"))
/* dispinterface */ Buttons;
struct __declspec(uuid("0002087f-0000-0000-c000-000000000046"))
/* dispinterface */ CheckBox;
struct __declspec(uuid("00020880-0000-0000-c000-000000000046"))
/* dispinterface */ CheckBoxes;
struct __declspec(uuid("00020881-0000-0000-c000-000000000046"))
/* dispinterface */ OptionButton;
struct __declspec(uuid("00020882-0000-0000-c000-000000000046"))
/* dispinterface */ OptionButtons;
struct __declspec(uuid("00020883-0000-0000-c000-000000000046"))
/* dispinterface */ EditBox;
struct __declspec(uuid("00020884-0000-0000-c000-000000000046"))
/* dispinterface */ EditBoxes;
struct __declspec(uuid("00020885-0000-0000-c000-000000000046"))
/* dispinterface */ ScrollBar;
struct __declspec(uuid("00020886-0000-0000-c000-000000000046"))
/* dispinterface */ ScrollBars;
struct __declspec(uuid("00020887-0000-0000-c000-000000000046"))
/* dispinterface */ ListBox;
struct __declspec(uuid("00020888-0000-0000-c000-000000000046"))
/* dispinterface */ ListBoxes;
struct __declspec(uuid("00020889-0000-0000-c000-000000000046"))
/* dispinterface */ GroupBox;
struct __declspec(uuid("0002088a-0000-0000-c000-000000000046"))
/* dispinterface */ GroupBoxes;
struct __declspec(uuid("0002088b-0000-0000-c000-000000000046"))
/* dispinterface */ DropDown;
struct __declspec(uuid("0002088c-0000-0000-c000-000000000046"))
/* dispinterface */ DropDowns;
struct __declspec(uuid("0002088d-0000-0000-c000-000000000046"))
/* dispinterface */ Spinner;
struct __declspec(uuid("0002088e-0000-0000-c000-000000000046"))
/* dispinterface */ Spinners;
struct __declspec(uuid("0002088f-0000-0000-c000-000000000046"))
/* dispinterface */ DialogFrame;
struct __declspec(uuid("00020890-0000-0000-c000-000000000046"))
/* dispinterface */ Label;
struct __declspec(uuid("00020891-0000-0000-c000-000000000046"))
/* dispinterface */ Labels;
struct __declspec(uuid("00020894-0000-0000-c000-000000000046"))
/* dispinterface */ excelPanes;
struct __declspec(uuid("00020895-0000-0000-c000-000000000046"))
/* dispinterface */ excelPane;
struct __declspec(uuid("00020896-0000-0000-c000-000000000046"))
/* dispinterface */ Scenarios;
struct __declspec(uuid("00020897-0000-0000-c000-000000000046"))
/* dispinterface */ Scenario;
struct __declspec(uuid("00020898-0000-0000-c000-000000000046"))
/* dispinterface */ GroupObject;
struct __declspec(uuid("00020899-0000-0000-c000-000000000046"))
/* dispinterface */ GroupObjects;
struct __declspec(uuid("0002089a-0000-0000-c000-000000000046"))
/* dispinterface */ Line;
struct __declspec(uuid("0002089b-0000-0000-c000-000000000046"))
/* dispinterface */ Lines;
struct __declspec(uuid("0002089c-0000-0000-c000-000000000046"))
/* dispinterface */ Rectangle;
struct __declspec(uuid("0002089d-0000-0000-c000-000000000046"))
/* dispinterface */ Rectangles;
struct __declspec(uuid("0002089e-0000-0000-c000-000000000046"))
/* dispinterface */ Oval;
struct __declspec(uuid("0002089f-0000-0000-c000-000000000046"))
/* dispinterface */ Ovals;
struct __declspec(uuid("000208a0-0000-0000-c000-000000000046"))
/* dispinterface */ Arc;
struct __declspec(uuid("000208a1-0000-0000-c000-000000000046"))
/* dispinterface */ Arcs;
struct __declspec(uuid("00024410-0000-0000-c000-000000000046"))
/* dispinterface */ OLEObjectEvents;
struct __declspec(uuid("000208a2-0000-0000-c000-000000000046"))
/* dispinterface */ _OLEObject;
struct __declspec(uuid("000208a3-0000-0000-c000-000000000046"))
/* dispinterface */ OLEObjects;
struct __declspec(uuid("000208a4-0000-0000-c000-000000000046"))
/* dispinterface */ TextBox;
struct __declspec(uuid("000208a5-0000-0000-c000-000000000046"))
/* dispinterface */ TextBoxes;
struct __declspec(uuid("000208a6-0000-0000-c000-000000000046"))
/* dispinterface */ excelPicture;
struct __declspec(uuid("000208a7-0000-0000-c000-000000000046"))
/* dispinterface */ Pictures;
struct __declspec(uuid("000208a8-0000-0000-c000-000000000046"))
/* dispinterface */ Drawing;
struct __declspec(uuid("000208a9-0000-0000-c000-000000000046"))
/* dispinterface */ Drawings;
struct __declspec(uuid("000208aa-0000-0000-c000-000000000046"))
/* dispinterface */ RoutingSlip;
struct __declspec(uuid("000208ab-0000-0000-c000-000000000046"))
/* dispinterface */ Outline;
struct __declspec(uuid("000208ad-0000-0000-c000-000000000046"))
/* dispinterface */ Module;
struct __declspec(uuid("000208ae-0000-0000-c000-000000000046"))
/* dispinterface */ Modules;
struct __declspec(uuid("000208af-0000-0000-c000-000000000046"))
/* dispinterface */ DialogSheet;
struct __declspec(uuid("000208b0-0000-0000-c000-000000000046"))
/* dispinterface */ DialogSheets;
struct __declspec(uuid("000208b1-0000-0000-c000-000000000046"))
/* dispinterface */ Worksheets;
struct __declspec(uuid("000208b4-0000-0000-c000-000000000046"))
/* dispinterface */ excelPageSetup;
struct __declspec(uuid("000208b8-0000-0000-c000-000000000046"))
/* dispinterface */ Names;
struct __declspec(uuid("000208b9-0000-0000-c000-000000000046"))
/* dispinterface */ Name;
struct __declspec(uuid("000208cf-0000-0000-c000-000000000046"))
/* dispinterface */ ChartObject;
struct __declspec(uuid("000208d0-0000-0000-c000-000000000046"))
/* dispinterface */ ChartObjects;
struct __declspec(uuid("000208d1-0000-0000-c000-000000000046"))
/* dispinterface */ Mailer;
struct __declspec(uuid("00024422-0000-0000-c000-000000000046"))
/* dispinterface */ CustomViews;
struct __declspec(uuid("00024423-0000-0000-c000-000000000046"))
/* dispinterface */ CustomView;
struct __declspec(uuid("00024424-0000-0000-c000-000000000046"))
/* dispinterface */ FormatConditions;
struct __declspec(uuid("00024425-0000-0000-c000-000000000046"))
/* dispinterface */ FormatCondition;
struct __declspec(uuid("00024426-0000-0000-c000-000000000046"))
/* dispinterface */ excelComments;
struct __declspec(uuid("00024427-0000-0000-c000-000000000046"))
/* dispinterface */ excelComment;
struct __declspec(uuid("0002441b-0000-0000-c000-000000000046"))
/* dispinterface */ RefreshEvents;
struct __declspec(uuid("00024428-0000-0000-c000-000000000046"))
/* dispinterface */ _QueryTable;
struct __declspec(uuid("00024429-0000-0000-c000-000000000046"))
/* dispinterface */ QueryTables;
struct __declspec(uuid("0002442a-0000-0000-c000-000000000046"))
/* dispinterface */ Parameter;
struct __declspec(uuid("0002442b-0000-0000-c000-000000000046"))
/* dispinterface */ Parameters;
struct __declspec(uuid("0002442c-0000-0000-c000-000000000046"))
/* dispinterface */ ODBCError;
struct __declspec(uuid("0002442d-0000-0000-c000-000000000046"))
/* dispinterface */ ODBCErrors;
struct __declspec(uuid("0002442f-0000-0000-c000-000000000046"))
/* dispinterface */ Validation;
struct __declspec(uuid("00024430-0000-0000-c000-000000000046"))
/* dispinterface */ excelHyperlinks;
struct __declspec(uuid("00024431-0000-0000-c000-000000000046"))
/* dispinterface */ excelHyperlink;
struct __declspec(uuid("00024432-0000-0000-c000-000000000046"))
/* dispinterface */ AutoFilter;
struct __declspec(uuid("00024433-0000-0000-c000-000000000046"))
/* dispinterface */ Filters;
struct __declspec(uuid("00024434-0000-0000-c000-000000000046"))
/* dispinterface */ Filter;
struct __declspec(uuid("000208d4-0000-0000-c000-000000000046"))
/* dispinterface */ excelAutoCorrect;
struct __declspec(uuid("00020854-0000-0000-c000-000000000046"))
/* dispinterface */ Border;
struct __declspec(uuid("00020870-0000-0000-c000-000000000046"))
/* dispinterface */ Interior;
struct __declspec(uuid("00024435-0000-0000-c000-000000000046"))
/* dispinterface */ ChartFillFormat;
struct __declspec(uuid("00024436-0000-0000-c000-000000000046"))
/* dispinterface */ ChartColorFormat;
struct __declspec(uuid("00020848-0000-0000-c000-000000000046"))
/* dispinterface */ Axis;
struct __declspec(uuid("00020849-0000-0000-c000-000000000046"))
/* dispinterface */ ChartTitle;
struct __declspec(uuid("0002084a-0000-0000-c000-000000000046"))
/* dispinterface */ AxisTitle;
struct __declspec(uuid("00020859-0000-0000-c000-000000000046"))
/* dispinterface */ ChartGroup;
struct __declspec(uuid("0002085a-0000-0000-c000-000000000046"))
/* dispinterface */ ChartGroups;
struct __declspec(uuid("0002085b-0000-0000-c000-000000000046"))
/* dispinterface */ Axes;
struct __declspec(uuid("00020869-0000-0000-c000-000000000046"))
/* dispinterface */ Points;
struct __declspec(uuid("0002086a-0000-0000-c000-000000000046"))
/* dispinterface */ Point;
struct __declspec(uuid("0002086b-0000-0000-c000-000000000046"))
/* dispinterface */ Series;
struct __declspec(uuid("0002086c-0000-0000-c000-000000000046"))
/* dispinterface */ SeriesCollection;
struct __declspec(uuid("000208b2-0000-0000-c000-000000000046"))
/* dispinterface */ DataLabel;
struct __declspec(uuid("000208b3-0000-0000-c000-000000000046"))
/* dispinterface */ DataLabels;
struct __declspec(uuid("000208ba-0000-0000-c000-000000000046"))
/* dispinterface */ LegendEntry;
struct __declspec(uuid("000208bb-0000-0000-c000-000000000046"))
/* dispinterface */ LegendEntries;
struct __declspec(uuid("000208bc-0000-0000-c000-000000000046"))
/* dispinterface */ LegendKey;
struct __declspec(uuid("000208bd-0000-0000-c000-000000000046"))
/* dispinterface */ Trendlines;
struct __declspec(uuid("000208be-0000-0000-c000-000000000046"))
/* dispinterface */ Trendline;
struct __declspec(uuid("000208c0-0000-0000-c000-000000000046"))
/* dispinterface */ Corners;
struct __declspec(uuid("000208c1-0000-0000-c000-000000000046"))
/* dispinterface */ SeriesLines;
struct __declspec(uuid("000208c2-0000-0000-c000-000000000046"))
/* dispinterface */ HiLoLines;
struct __declspec(uuid("000208c3-0000-0000-c000-000000000046"))
/* dispinterface */ Gridlines;
struct __declspec(uuid("000208c4-0000-0000-c000-000000000046"))
/* dispinterface */ DropLines;
struct __declspec(uuid("00024437-0000-0000-c000-000000000046"))
/* dispinterface */ LeaderLines;
struct __declspec(uuid("000208c5-0000-0000-c000-000000000046"))
/* dispinterface */ UpBars;
struct __declspec(uuid("000208c6-0000-0000-c000-000000000046"))
/* dispinterface */ DownBars;
struct __declspec(uuid("000208c7-0000-0000-c000-000000000046"))
/* dispinterface */ Floor;
struct __declspec(uuid("000208c8-0000-0000-c000-000000000046"))
/* dispinterface */ Walls;
struct __declspec(uuid("000208c9-0000-0000-c000-000000000046"))
/* dispinterface */ TickLabels;
struct __declspec(uuid("000208cb-0000-0000-c000-000000000046"))
/* dispinterface */ PlotArea;
struct __declspec(uuid("000208cc-0000-0000-c000-000000000046"))
/* dispinterface */ ChartArea;
struct __declspec(uuid("000208cd-0000-0000-c000-000000000046"))
/* dispinterface */ Legend;
struct __declspec(uuid("000208ce-0000-0000-c000-000000000046"))
/* dispinterface */ ErrorBars;
struct __declspec(uuid("00020843-0000-0000-c000-000000000046"))
/* dispinterface */ DataTable;
struct __declspec(uuid("00024438-0000-0000-c000-000000000046"))
/* dispinterface */ Phonetic;
struct __declspec(uuid("00024439-0000-0000-c000-000000000046"))
/* dispinterface */ excelShape;
struct __declspec(uuid("0002443a-0000-0000-c000-000000000046"))
/* dispinterface */ excelShapes;
struct __declspec(uuid("0002443b-0000-0000-c000-000000000046"))
/* dispinterface */ excelShapeRange;
struct __declspec(uuid("0002443c-0000-0000-c000-000000000046"))
/* dispinterface */ excelGroupShapes;
struct __declspec(uuid("0002443d-0000-0000-c000-000000000046"))
/* dispinterface */ excelTextFrame;
struct __declspec(uuid("0002443e-0000-0000-c000-000000000046"))
/* dispinterface */ excelConnectorFormat;
struct __declspec(uuid("0002443f-0000-0000-c000-000000000046"))
/* dispinterface */ excelFreeformBuilder;
struct __declspec(uuid("00024440-0000-0000-c000-000000000046"))
/* dispinterface */ ControlFormat;
struct __declspec(uuid("00024441-0000-0000-c000-000000000046"))
/* dispinterface */ excelOLEFormat;
struct __declspec(uuid("00024442-0000-0000-c000-000000000046"))
/* dispinterface */ excelLinkFormat;
struct __declspec(uuid("00024443-0000-0000-c000-000000000046"))
/* dispinterface */ PublishObjects;
struct __declspec(uuid("00024445-0000-0000-c000-000000000046"))
/* dispinterface */ OLEDBError;
struct __declspec(uuid("00024446-0000-0000-c000-000000000046"))
/* dispinterface */ OLEDBErrors;
struct __declspec(uuid("00024447-0000-0000-c000-000000000046"))
/* dispinterface */ Phonetics;
struct __declspec(uuid("0002444a-0000-0000-c000-000000000046"))
/* dispinterface */ PivotLayout;
struct __declspec(uuid("0002084c-0000-0000-c000-000000000046"))
/* dispinterface */ DisplayUnitLabel;
struct __declspec(uuid("00024450-0000-0000-c000-000000000046"))
/* dispinterface */ CellFormat;
struct __declspec(uuid("00024451-0000-0000-c000-000000000046"))
/* dispinterface */ UsedObjects;
struct __declspec(uuid("00024452-0000-0000-c000-000000000046"))
/* dispinterface */ CustomProperties;
struct __declspec(uuid("00024453-0000-0000-c000-000000000046"))
/* dispinterface */ CustomProperty;
struct __declspec(uuid("00024454-0000-0000-c000-000000000046"))
/* dispinterface */ CalculatedMembers;
struct __declspec(uuid("00024455-0000-0000-c000-000000000046"))
/* dispinterface */ CalculatedMember;
struct __declspec(uuid("00024456-0000-0000-c000-000000000046"))
/* dispinterface */ Watches;
struct __declspec(uuid("00024457-0000-0000-c000-000000000046"))
/* dispinterface */ Watch;
struct __declspec(uuid("00024458-0000-0000-c000-000000000046"))
/* dispinterface */ PivotCell;
struct __declspec(uuid("00024459-0000-0000-c000-000000000046"))
/* dispinterface */ Graphic;
struct __declspec(uuid("0002445a-0000-0000-c000-000000000046"))
/* dispinterface */ AutoRecover;
struct __declspec(uuid("0002445b-0000-0000-c000-000000000046"))
/* dispinterface */ ErrorCheckingOptions;
struct __declspec(uuid("0002445c-0000-0000-c000-000000000046"))
/* dispinterface */ Errors;
struct __declspec(uuid("0002445d-0000-0000-c000-000000000046"))
/* dispinterface */ Error;
struct __declspec(uuid("0002445e-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTagAction;
struct __declspec(uuid("0002445f-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTagActions;
struct __declspec(uuid("00024460-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTag;
struct __declspec(uuid("00024461-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTags;
struct __declspec(uuid("00024462-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTagRecognizer;
struct __declspec(uuid("00024463-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTagRecognizers;
struct __declspec(uuid("00024464-0000-0000-c000-000000000046"))
/* dispinterface */ SmartTagOptions;
struct __declspec(uuid("00024465-0000-0000-c000-000000000046"))
/* dispinterface */ SpellingOptions;
struct __declspec(uuid("00024466-0000-0000-c000-000000000046"))
/* dispinterface */ Speech;
struct __declspec(uuid("00024467-0000-0000-c000-000000000046"))
/* dispinterface */ Protection;
struct __declspec(uuid("00024468-0000-0000-c000-000000000046"))
/* dispinterface */ PivotItemList;
struct __declspec(uuid("00024469-0000-0000-c000-000000000046"))
/* dispinterface */ Tab;
struct __declspec(uuid("0002446a-0000-0000-c000-000000000046"))
/* dispinterface */ AllowEditRanges;
struct __declspec(uuid("0002446b-0000-0000-c000-000000000046"))
/* dispinterface */ AllowEditRange;
struct __declspec(uuid("0002446c-0000-0000-c000-000000000046"))
/* dispinterface */ UserAccessList;
struct __declspec(uuid("0002446d-0000-0000-c000-000000000046"))
/* dispinterface */ UserAccess;
struct __declspec(uuid("0002446e-0000-0000-c000-000000000046"))
/* dispinterface */ RTD;
struct __declspec(uuid("0002446f-0000-0000-c000-000000000046"))
/* dispinterface */ excelDiagram;
struct __declspec(uuid("00024470-0000-0000-c000-000000000046"))
/* dispinterface */ ListObjects;
struct __declspec(uuid("00024471-0000-0000-c000-000000000046"))
/* dispinterface */ ListObject;
struct __declspec(uuid("00024472-0000-0000-c000-000000000046"))
/* dispinterface */ ListColumns;
struct __declspec(uuid("00024473-0000-0000-c000-000000000046"))
/* dispinterface */ ListColumn;
struct __declspec(uuid("00024474-0000-0000-c000-000000000046"))
/* dispinterface */ ListRows;
struct __declspec(uuid("00024475-0000-0000-c000-000000000046"))
/* dispinterface */ ListRow;
struct __declspec(uuid("00024476-0000-0000-c000-000000000046"))
/* dispinterface */ XmlNamespace;
struct __declspec(uuid("00024477-0000-0000-c000-000000000046"))
/* dispinterface */ XmlNamespaces;
struct __declspec(uuid("00024478-0000-0000-c000-000000000046"))
/* dispinterface */ XmlDataBinding;
struct __declspec(uuid("00024479-0000-0000-c000-000000000046"))
/* dispinterface */ XmlSchema;
struct __declspec(uuid("0002447a-0000-0000-c000-000000000046"))
/* dispinterface */ XmlSchemas;
struct __declspec(uuid("0002447b-0000-0000-c000-000000000046"))
/* dispinterface */ XmlMap;
struct __declspec(uuid("0002447c-0000-0000-c000-000000000046"))
/* dispinterface */ XmlMaps;
struct __declspec(uuid("0002447d-0000-0000-c000-000000000046"))
/* dispinterface */ ListDataFormat;
struct __declspec(uuid("0002447e-0000-0000-c000-000000000046"))
/* dispinterface */ XPath;
struct __declspec(uuid("0002447f-0000-0000-c000-000000000046"))
/* dispinterface */ PivotLineCells;
struct __declspec(uuid("00024480-0000-0000-c000-000000000046"))
/* dispinterface */ PivotLine;
struct __declspec(uuid("00024481-0000-0000-c000-000000000046"))
/* dispinterface */ PivotLines;
struct __declspec(uuid("00024482-0000-0000-c000-000000000046"))
/* dispinterface */ PivotAxis;
struct __declspec(uuid("00024483-0000-0000-c000-000000000046"))
/* dispinterface */ PivotFilter;
struct __declspec(uuid("00024484-0000-0000-c000-000000000046"))
/* dispinterface */ PivotFilters;
struct __declspec(uuid("00024485-0000-0000-c000-000000000046"))
/* dispinterface */ WorkbookConnection;
struct __declspec(uuid("00024486-0000-0000-c000-000000000046"))
/* dispinterface */ Connections;
struct __declspec(uuid("00024487-0000-0000-c000-000000000046"))
/* dispinterface */ WorksheetView;
struct __declspec(uuid("00024488-0000-0000-c000-000000000046"))
/* dispinterface */ ChartView;
struct __declspec(uuid("00024489-0000-0000-c000-000000000046"))
/* dispinterface */ ModuleView;
struct __declspec(uuid("0002448a-0000-0000-c000-000000000046"))
/* dispinterface */ DialogSheetView;
struct __declspec(uuid("0002448c-0000-0000-c000-000000000046"))
/* dispinterface */ SheetViews;
struct __declspec(uuid("0002448d-0000-0000-c000-000000000046"))
/* dispinterface */ OLEDBConnection;
struct __declspec(uuid("0002448e-0000-0000-c000-000000000046"))
/* dispinterface */ ODBCConnection;
struct __declspec(uuid("0002448f-0000-0000-c000-000000000046"))
/* dispinterface */ Action;
struct __declspec(uuid("00024490-0000-0000-c000-000000000046"))
/* dispinterface */ Actions;
struct __declspec(uuid("00024491-0000-0000-c000-000000000046"))
/* dispinterface */ FormatColor;
struct __declspec(uuid("00024492-0000-0000-c000-000000000046"))
/* dispinterface */ ConditionValue;
struct __declspec(uuid("00024493-0000-0000-c000-000000000046"))
/* dispinterface */ ColorScale;
struct __declspec(uuid("00024494-0000-0000-c000-000000000046"))
/* dispinterface */ ColorScaleCriteria;
struct __declspec(uuid("00024495-0000-0000-c000-000000000046"))
/* dispinterface */ ColorScaleCriterion;
struct __declspec(uuid("00024496-0000-0000-c000-000000000046"))
/* dispinterface */ Databar;
struct __declspec(uuid("00024497-0000-0000-c000-000000000046"))
/* dispinterface */ IconSetCondition;
struct __declspec(uuid("00024498-0000-0000-c000-000000000046"))
/* dispinterface */ IconCriteria;
struct __declspec(uuid("00024499-0000-0000-c000-000000000046"))
/* dispinterface */ IconCriterion;
struct __declspec(uuid("0002449a-0000-0000-c000-000000000046"))
/* dispinterface */ Icon;
struct __declspec(uuid("0002449b-0000-0000-c000-000000000046"))
/* dispinterface */ IconSet;
struct __declspec(uuid("0002449c-0000-0000-c000-000000000046"))
/* dispinterface */ IconSets;
struct __declspec(uuid("0002449d-0000-0000-c000-000000000046"))
/* dispinterface */ Top10;
struct __declspec(uuid("0002449e-0000-0000-c000-000000000046"))
/* dispinterface */ AboveAverage;
struct __declspec(uuid("0002449f-0000-0000-c000-000000000046"))
/* dispinterface */ UniqueValues;
struct __declspec(uuid("000244a0-0000-0000-c000-000000000046"))
/* dispinterface */ Ranges;
struct __declspec(uuid("000244a1-0000-0000-c000-000000000046"))
/* dispinterface */ excelHeaderFooter;
struct __declspec(uuid("000244a2-0000-0000-c000-000000000046"))
/* dispinterface */ Page;
struct __declspec(uuid("000244a3-0000-0000-c000-000000000046"))
/* dispinterface */ excelPages;
struct __declspec(uuid("000244a4-0000-0000-c000-000000000046"))
/* dispinterface */ ServerViewableItems;
struct __declspec(uuid("000244a5-0000-0000-c000-000000000046"))
/* dispinterface */ TableStyleElement;
struct __declspec(uuid("000244a6-0000-0000-c000-000000000046"))
/* dispinterface */ TableStyleElements;
struct __declspec(uuid("000244a7-0000-0000-c000-000000000046"))
/* dispinterface */ excelTableStyle;
struct __declspec(uuid("000244a8-0000-0000-c000-000000000046"))
/* dispinterface */ TableStyles;
struct __declspec(uuid("000244a9-0000-0000-c000-000000000046"))
/* dispinterface */ SortField;
struct __declspec(uuid("000244aa-0000-0000-c000-000000000046"))
/* dispinterface */ SortFields;
struct __declspec(uuid("000244ab-0000-0000-c000-000000000046"))
/* dispinterface */ Sort;
struct __declspec(uuid("000244ac-0000-0000-c000-000000000046"))
/* dispinterface */ excelResearch;
struct __declspec(uuid("000244ad-0000-0000-c000-000000000046"))
/* dispinterface */ ColorStop;
struct __declspec(uuid("000244ae-0000-0000-c000-000000000046"))
/* dispinterface */ ColorStops;
struct __declspec(uuid("000244af-0000-0000-c000-000000000046"))
/* dispinterface */ LinearGradient;
struct __declspec(uuid("000244b0-0000-0000-c000-000000000046"))
/* dispinterface */ RectangularGradient;
struct __declspec(uuid("000244b1-0000-0000-c000-000000000046"))
/* dispinterface */ MultiThreadedCalculation;
struct __declspec(uuid("000244b2-0000-0000-c000-000000000046"))
/* dispinterface */ ChartFormat;
struct __declspec(uuid("0002442e-0001-0000-c000-000000000046"))
/* interface */ IDummy;
struct __declspec(uuid("0002444f-0001-0000-c000-000000000046"))
/* interface */ ICanvasShapes;
struct /* coclass */ QueryTable;
struct /* coclass */ excelApplication;
struct /* coclass */ Chart;
struct /* coclass */ Worksheet;
struct /* coclass */ excelGlobal;
struct /* coclass */ Workbook;
struct /* coclass */ OLEObject;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(excelAdjustments, __uuidof(excelAdjustments));
_COM_SMARTPTR_TYPEDEF(excelCalloutFormat, __uuidof(excelCalloutFormat));
_COM_SMARTPTR_TYPEDEF(excelColorFormat, __uuidof(excelColorFormat));
_COM_SMARTPTR_TYPEDEF(excelLineFormat, __uuidof(excelLineFormat));
_COM_SMARTPTR_TYPEDEF(excelShapeNode, __uuidof(excelShapeNode));
_COM_SMARTPTR_TYPEDEF(excelShapeNodes, __uuidof(excelShapeNodes));
_COM_SMARTPTR_TYPEDEF(excelPictureFormat, __uuidof(excelPictureFormat));
_COM_SMARTPTR_TYPEDEF(excelShadowFormat, __uuidof(excelShadowFormat));
_COM_SMARTPTR_TYPEDEF(excelTextEffectFormat, __uuidof(excelTextEffectFormat));
_COM_SMARTPTR_TYPEDEF(excelThreeDFormat, __uuidof(excelThreeDFormat));
_COM_SMARTPTR_TYPEDEF(excelFillFormat, __uuidof(excelFillFormat));
_COM_SMARTPTR_TYPEDEF(IRTDUpdateEvent, __uuidof(IRTDUpdateEvent));
_COM_SMARTPTR_TYPEDEF(IRtdServer, __uuidof(IRtdServer));
_COM_SMARTPTR_TYPEDEF(excelTextFrame2, __uuidof(excelTextFrame2));
_COM_SMARTPTR_TYPEDEF(IChartEvents, __uuidof(IChartEvents));
_COM_SMARTPTR_TYPEDEF(IOLEObjectEvents, __uuidof(IOLEObjectEvents));
_COM_SMARTPTR_TYPEDEF(IRefreshEvents, __uuidof(IRefreshEvents));
_COM_SMARTPTR_TYPEDEF(ISpellingOptions, __uuidof(ISpellingOptions));
_COM_SMARTPTR_TYPEDEF(ISpeech, __uuidof(ISpeech));
_COM_SMARTPTR_TYPEDEF(IUserAccess, __uuidof(IUserAccess));
_COM_SMARTPTR_TYPEDEF(IRTD, __uuidof(IRTD));
_COM_SMARTPTR_TYPEDEF(IIconCriterion, __uuidof(IIconCriterion));
_COM_SMARTPTR_TYPEDEF(excelFont, __uuidof(excelFont));
_COM_SMARTPTR_TYPEDEF(Window, __uuidof(Window));
_COM_SMARTPTR_TYPEDEF(Windows, __uuidof(Windows));
_COM_SMARTPTR_TYPEDEF(AppEvents, __uuidof(AppEvents));
_COM_SMARTPTR_TYPEDEF(WorksheetFunction, __uuidof(WorksheetFunction));
_COM_SMARTPTR_TYPEDEF(Range, __uuidof(Range));
_COM_SMARTPTR_TYPEDEF(ChartEvents, __uuidof(ChartEvents));
_COM_SMARTPTR_TYPEDEF(VPageBreak, __uuidof(VPageBreak));
_COM_SMARTPTR_TYPEDEF(HPageBreak, __uuidof(HPageBreak));
_COM_SMARTPTR_TYPEDEF(HPageBreaks, __uuidof(HPageBreaks));
_COM_SMARTPTR_TYPEDEF(VPageBreaks, __uuidof(VPageBreaks));
_COM_SMARTPTR_TYPEDEF(RecentFile, __uuidof(RecentFile));
_COM_SMARTPTR_TYPEDEF(RecentFiles, __uuidof(RecentFiles));
_COM_SMARTPTR_TYPEDEF(DocEvents, __uuidof(DocEvents));
_COM_SMARTPTR_TYPEDEF(Style, __uuidof(Style));
_COM_SMARTPTR_TYPEDEF(Styles, __uuidof(Styles));
_COM_SMARTPTR_TYPEDEF(excelBorders, __uuidof(excelBorders));
_COM_SMARTPTR_TYPEDEF(excelAddIn, __uuidof(excelAddIn));
_COM_SMARTPTR_TYPEDEF(excelAddIns, __uuidof(excelAddIns));
_COM_SMARTPTR_TYPEDEF(Toolbar, __uuidof(Toolbar));
_COM_SMARTPTR_TYPEDEF(Toolbars, __uuidof(Toolbars));
_COM_SMARTPTR_TYPEDEF(ToolbarButton, __uuidof(ToolbarButton));
_COM_SMARTPTR_TYPEDEF(ToolbarButtons, __uuidof(ToolbarButtons));
_COM_SMARTPTR_TYPEDEF(Areas, __uuidof(Areas));
_COM_SMARTPTR_TYPEDEF(WorkbookEvents, __uuidof(WorkbookEvents));
_COM_SMARTPTR_TYPEDEF(MenuBars, __uuidof(MenuBars));
_COM_SMARTPTR_TYPEDEF(MenuBar, __uuidof(MenuBar));
_COM_SMARTPTR_TYPEDEF(Menus, __uuidof(Menus));
_COM_SMARTPTR_TYPEDEF(Menu, __uuidof(Menu));
_COM_SMARTPTR_TYPEDEF(MenuItems, __uuidof(MenuItems));
_COM_SMARTPTR_TYPEDEF(MenuItem, __uuidof(MenuItem));
_COM_SMARTPTR_TYPEDEF(Charts, __uuidof(Charts));
_COM_SMARTPTR_TYPEDEF(DrawingObjects, __uuidof(DrawingObjects));
_COM_SMARTPTR_TYPEDEF(PivotCache, __uuidof(PivotCache));
_COM_SMARTPTR_TYPEDEF(PivotCaches, __uuidof(PivotCaches));
_COM_SMARTPTR_TYPEDEF(PivotFormula, __uuidof(PivotFormula));
_COM_SMARTPTR_TYPEDEF(PivotFormulas, __uuidof(PivotFormulas));
_COM_SMARTPTR_TYPEDEF(PivotTable, __uuidof(PivotTable));
_COM_SMARTPTR_TYPEDEF(PivotTables, __uuidof(PivotTables));
_COM_SMARTPTR_TYPEDEF(PivotField, __uuidof(PivotField));
_COM_SMARTPTR_TYPEDEF(PivotFields, __uuidof(PivotFields));
_COM_SMARTPTR_TYPEDEF(CalculatedFields, __uuidof(CalculatedFields));
_COM_SMARTPTR_TYPEDEF(PivotItem, __uuidof(PivotItem));
_COM_SMARTPTR_TYPEDEF(PivotItems, __uuidof(PivotItems));
_COM_SMARTPTR_TYPEDEF(CalculatedItems, __uuidof(CalculatedItems));
_COM_SMARTPTR_TYPEDEF(Characters, __uuidof(Characters));
_COM_SMARTPTR_TYPEDEF(Dialogs, __uuidof(Dialogs));
_COM_SMARTPTR_TYPEDEF(Dialog, __uuidof(Dialog));
_COM_SMARTPTR_TYPEDEF(SoundNote, __uuidof(SoundNote));
_COM_SMARTPTR_TYPEDEF(Button, __uuidof(Button));
_COM_SMARTPTR_TYPEDEF(Buttons, __uuidof(Buttons));
_COM_SMARTPTR_TYPEDEF(CheckBox, __uuidof(CheckBox));
_COM_SMARTPTR_TYPEDEF(CheckBoxes, __uuidof(CheckBoxes));
_COM_SMARTPTR_TYPEDEF(OptionButton, __uuidof(OptionButton));
_COM_SMARTPTR_TYPEDEF(OptionButtons, __uuidof(OptionButtons));
_COM_SMARTPTR_TYPEDEF(EditBox, __uuidof(EditBox));
_COM_SMARTPTR_TYPEDEF(EditBoxes, __uuidof(EditBoxes));
_COM_SMARTPTR_TYPEDEF(ScrollBar, __uuidof(ScrollBar));
_COM_SMARTPTR_TYPEDEF(ScrollBars, __uuidof(ScrollBars));
_COM_SMARTPTR_TYPEDEF(ListBox, __uuidof(ListBox));
_COM_SMARTPTR_TYPEDEF(ListBoxes, __uuidof(ListBoxes));
_COM_SMARTPTR_TYPEDEF(GroupBox, __uuidof(GroupBox));
_COM_SMARTPTR_TYPEDEF(GroupBoxes, __uuidof(GroupBoxes));
_COM_SMARTPTR_TYPEDEF(DropDown, __uuidof(DropDown));
_COM_SMARTPTR_TYPEDEF(DropDowns, __uuidof(DropDowns));
_COM_SMARTPTR_TYPEDEF(Spinner, __uuidof(Spinner));
_COM_SMARTPTR_TYPEDEF(Spinners, __uuidof(Spinners));
_COM_SMARTPTR_TYPEDEF(DialogFrame, __uuidof(DialogFrame));
_COM_SMARTPTR_TYPEDEF(Label, __uuidof(Label));
_COM_SMARTPTR_TYPEDEF(Labels, __uuidof(Labels));
_COM_SMARTPTR_TYPEDEF(excelPanes, __uuidof(excelPanes));
_COM_SMARTPTR_TYPEDEF(excelPane, __uuidof(excelPane));
_COM_SMARTPTR_TYPEDEF(Scenarios, __uuidof(Scenarios));
_COM_SMARTPTR_TYPEDEF(Scenario, __uuidof(Scenario));
_COM_SMARTPTR_TYPEDEF(GroupObject, __uuidof(GroupObject));
_COM_SMARTPTR_TYPEDEF(GroupObjects, __uuidof(GroupObjects));
_COM_SMARTPTR_TYPEDEF(Line, __uuidof(Line));
_COM_SMARTPTR_TYPEDEF(Lines, __uuidof(Lines));
_COM_SMARTPTR_TYPEDEF(Rectangle, __uuidof(Rectangle));
_COM_SMARTPTR_TYPEDEF(Rectangles, __uuidof(Rectangles));
_COM_SMARTPTR_TYPEDEF(Oval, __uuidof(Oval));
_COM_SMARTPTR_TYPEDEF(Ovals, __uuidof(Ovals));
_COM_SMARTPTR_TYPEDEF(Arc, __uuidof(Arc));
_COM_SMARTPTR_TYPEDEF(Arcs, __uuidof(Arcs));
_COM_SMARTPTR_TYPEDEF(OLEObjectEvents, __uuidof(OLEObjectEvents));
_COM_SMARTPTR_TYPEDEF(_OLEObject, __uuidof(_OLEObject));
_COM_SMARTPTR_TYPEDEF(OLEObjects, __uuidof(OLEObjects));
_COM_SMARTPTR_TYPEDEF(TextBox, __uuidof(TextBox));
_COM_SMARTPTR_TYPEDEF(TextBoxes, __uuidof(TextBoxes));
_COM_SMARTPTR_TYPEDEF(excelPicture, __uuidof(excelPicture));
_COM_SMARTPTR_TYPEDEF(Pictures, __uuidof(Pictures));
_COM_SMARTPTR_TYPEDEF(Drawing, __uuidof(Drawing));
_COM_SMARTPTR_TYPEDEF(Drawings, __uuidof(Drawings));
_COM_SMARTPTR_TYPEDEF(RoutingSlip, __uuidof(RoutingSlip));
_COM_SMARTPTR_TYPEDEF(Outline, __uuidof(Outline));
_COM_SMARTPTR_TYPEDEF(Module, __uuidof(Module));
_COM_SMARTPTR_TYPEDEF(Modules, __uuidof(Modules));
_COM_SMARTPTR_TYPEDEF(DialogSheet, __uuidof(DialogSheet));
_COM_SMARTPTR_TYPEDEF(DialogSheets, __uuidof(DialogSheets));
_COM_SMARTPTR_TYPEDEF(Worksheets, __uuidof(Worksheets));
_COM_SMARTPTR_TYPEDEF(excelPageSetup, __uuidof(excelPageSetup));
_COM_SMARTPTR_TYPEDEF(Names, __uuidof(Names));
_COM_SMARTPTR_TYPEDEF(Name, __uuidof(Name));
_COM_SMARTPTR_TYPEDEF(ChartObject, __uuidof(ChartObject));
_COM_SMARTPTR_TYPEDEF(ChartObjects, __uuidof(ChartObjects));
_COM_SMARTPTR_TYPEDEF(Mailer, __uuidof(Mailer));
_COM_SMARTPTR_TYPEDEF(CustomViews, __uuidof(CustomViews));
_COM_SMARTPTR_TYPEDEF(CustomView, __uuidof(CustomView));
_COM_SMARTPTR_TYPEDEF(FormatConditions, __uuidof(FormatConditions));
_COM_SMARTPTR_TYPEDEF(FormatCondition, __uuidof(FormatCondition));
_COM_SMARTPTR_TYPEDEF(excelComments, __uuidof(excelComments));
_COM_SMARTPTR_TYPEDEF(excelComment, __uuidof(excelComment));
_COM_SMARTPTR_TYPEDEF(RefreshEvents, __uuidof(RefreshEvents));
_COM_SMARTPTR_TYPEDEF(_QueryTable, __uuidof(_QueryTable));
_COM_SMARTPTR_TYPEDEF(QueryTables, __uuidof(QueryTables));
_COM_SMARTPTR_TYPEDEF(Parameter, __uuidof(Parameter));
_COM_SMARTPTR_TYPEDEF(Parameters, __uuidof(Parameters));
_COM_SMARTPTR_TYPEDEF(ODBCError, __uuidof(ODBCError));
_COM_SMARTPTR_TYPEDEF(ODBCErrors, __uuidof(ODBCErrors));
_COM_SMARTPTR_TYPEDEF(Validation, __uuidof(Validation));
_COM_SMARTPTR_TYPEDEF(excelHyperlinks, __uuidof(excelHyperlinks));
_COM_SMARTPTR_TYPEDEF(excelHyperlink, __uuidof(excelHyperlink));
_COM_SMARTPTR_TYPEDEF(IDocEvents, __uuidof(IDocEvents));
_COM_SMARTPTR_TYPEDEF(AutoFilter, __uuidof(AutoFilter));
_COM_SMARTPTR_TYPEDEF(Filters, __uuidof(Filters));
_COM_SMARTPTR_TYPEDEF(Filter, __uuidof(Filter));
_COM_SMARTPTR_TYPEDEF(excelAutoCorrect, __uuidof(excelAutoCorrect));
_COM_SMARTPTR_TYPEDEF(Border, __uuidof(Border));
_COM_SMARTPTR_TYPEDEF(Interior, __uuidof(Interior));
_COM_SMARTPTR_TYPEDEF(ChartFillFormat, __uuidof(ChartFillFormat));
_COM_SMARTPTR_TYPEDEF(ChartColorFormat, __uuidof(ChartColorFormat));
_COM_SMARTPTR_TYPEDEF(Axis, __uuidof(Axis));
_COM_SMARTPTR_TYPEDEF(ChartTitle, __uuidof(ChartTitle));
_COM_SMARTPTR_TYPEDEF(AxisTitle, __uuidof(AxisTitle));
_COM_SMARTPTR_TYPEDEF(ChartGroup, __uuidof(ChartGroup));
_COM_SMARTPTR_TYPEDEF(ChartGroups, __uuidof(ChartGroups));
_COM_SMARTPTR_TYPEDEF(Axes, __uuidof(Axes));
_COM_SMARTPTR_TYPEDEF(Points, __uuidof(Points));
_COM_SMARTPTR_TYPEDEF(Point, __uuidof(Point));
_COM_SMARTPTR_TYPEDEF(Series, __uuidof(Series));
_COM_SMARTPTR_TYPEDEF(SeriesCollection, __uuidof(SeriesCollection));
_COM_SMARTPTR_TYPEDEF(DataLabel, __uuidof(DataLabel));
_COM_SMARTPTR_TYPEDEF(DataLabels, __uuidof(DataLabels));
_COM_SMARTPTR_TYPEDEF(LegendEntry, __uuidof(LegendEntry));
_COM_SMARTPTR_TYPEDEF(LegendEntries, __uuidof(LegendEntries));
_COM_SMARTPTR_TYPEDEF(LegendKey, __uuidof(LegendKey));
_COM_SMARTPTR_TYPEDEF(Trendlines, __uuidof(Trendlines));
_COM_SMARTPTR_TYPEDEF(Trendline, __uuidof(Trendline));
_COM_SMARTPTR_TYPEDEF(Corners, __uuidof(Corners));
_COM_SMARTPTR_TYPEDEF(SeriesLines, __uuidof(SeriesLines));
_COM_SMARTPTR_TYPEDEF(HiLoLines, __uuidof(HiLoLines));
_COM_SMARTPTR_TYPEDEF(Gridlines, __uuidof(Gridlines));
_COM_SMARTPTR_TYPEDEF(DropLines, __uuidof(DropLines));
_COM_SMARTPTR_TYPEDEF(LeaderLines, __uuidof(LeaderLines));
_COM_SMARTPTR_TYPEDEF(UpBars, __uuidof(UpBars));
_COM_SMARTPTR_TYPEDEF(DownBars, __uuidof(DownBars));
_COM_SMARTPTR_TYPEDEF(Floor, __uuidof(Floor));
_COM_SMARTPTR_TYPEDEF(Walls, __uuidof(Walls));
_COM_SMARTPTR_TYPEDEF(TickLabels, __uuidof(TickLabels));
_COM_SMARTPTR_TYPEDEF(PlotArea, __uuidof(PlotArea));
_COM_SMARTPTR_TYPEDEF(ChartArea, __uuidof(ChartArea));
_COM_SMARTPTR_TYPEDEF(Legend, __uuidof(Legend));
_COM_SMARTPTR_TYPEDEF(ErrorBars, __uuidof(ErrorBars));
_COM_SMARTPTR_TYPEDEF(DataTable, __uuidof(DataTable));
_COM_SMARTPTR_TYPEDEF(Phonetic, __uuidof(Phonetic));
_COM_SMARTPTR_TYPEDEF(excelShape, __uuidof(excelShape));
_COM_SMARTPTR_TYPEDEF(excelShapes, __uuidof(excelShapes));
_COM_SMARTPTR_TYPEDEF(excelShapeRange, __uuidof(excelShapeRange));
_COM_SMARTPTR_TYPEDEF(excelGroupShapes, __uuidof(excelGroupShapes));
_COM_SMARTPTR_TYPEDEF(excelTextFrame, __uuidof(excelTextFrame));
_COM_SMARTPTR_TYPEDEF(excelConnectorFormat, __uuidof(excelConnectorFormat));
_COM_SMARTPTR_TYPEDEF(excelFreeformBuilder, __uuidof(excelFreeformBuilder));
_COM_SMARTPTR_TYPEDEF(ControlFormat, __uuidof(ControlFormat));
_COM_SMARTPTR_TYPEDEF(excelOLEFormat, __uuidof(excelOLEFormat));
_COM_SMARTPTR_TYPEDEF(excelLinkFormat, __uuidof(excelLinkFormat));
_COM_SMARTPTR_TYPEDEF(PublishObjects, __uuidof(PublishObjects));
_COM_SMARTPTR_TYPEDEF(OLEDBError, __uuidof(OLEDBError));
_COM_SMARTPTR_TYPEDEF(OLEDBErrors, __uuidof(OLEDBErrors));
_COM_SMARTPTR_TYPEDEF(Phonetics, __uuidof(Phonetics));
_COM_SMARTPTR_TYPEDEF(PivotLayout, __uuidof(PivotLayout));
_COM_SMARTPTR_TYPEDEF(DisplayUnitLabel, __uuidof(DisplayUnitLabel));
_COM_SMARTPTR_TYPEDEF(CellFormat, __uuidof(CellFormat));
_COM_SMARTPTR_TYPEDEF(UsedObjects, __uuidof(UsedObjects));
_COM_SMARTPTR_TYPEDEF(CustomProperties, __uuidof(CustomProperties));
_COM_SMARTPTR_TYPEDEF(CustomProperty, __uuidof(CustomProperty));
_COM_SMARTPTR_TYPEDEF(CalculatedMembers, __uuidof(CalculatedMembers));
_COM_SMARTPTR_TYPEDEF(CalculatedMember, __uuidof(CalculatedMember));
_COM_SMARTPTR_TYPEDEF(Watches, __uuidof(Watches));
_COM_SMARTPTR_TYPEDEF(Watch, __uuidof(Watch));
_COM_SMARTPTR_TYPEDEF(PivotCell, __uuidof(PivotCell));
_COM_SMARTPTR_TYPEDEF(Graphic, __uuidof(Graphic));
_COM_SMARTPTR_TYPEDEF(IHeaderFooter, __uuidof(IHeaderFooter));
_COM_SMARTPTR_TYPEDEF(AutoRecover, __uuidof(AutoRecover));
_COM_SMARTPTR_TYPEDEF(ErrorCheckingOptions, __uuidof(ErrorCheckingOptions));
_COM_SMARTPTR_TYPEDEF(Errors, __uuidof(Errors));
_COM_SMARTPTR_TYPEDEF(Error, __uuidof(Error));
_COM_SMARTPTR_TYPEDEF(SmartTagAction, __uuidof(SmartTagAction));
_COM_SMARTPTR_TYPEDEF(SmartTagActions, __uuidof(SmartTagActions));
_COM_SMARTPTR_TYPEDEF(SmartTag, __uuidof(SmartTag));
_COM_SMARTPTR_TYPEDEF(SmartTags, __uuidof(SmartTags));
_COM_SMARTPTR_TYPEDEF(SmartTagRecognizer, __uuidof(SmartTagRecognizer));
_COM_SMARTPTR_TYPEDEF(SmartTagRecognizers, __uuidof(SmartTagRecognizers));
_COM_SMARTPTR_TYPEDEF(SmartTagOptions, __uuidof(SmartTagOptions));
_COM_SMARTPTR_TYPEDEF(SpellingOptions, __uuidof(SpellingOptions));
_COM_SMARTPTR_TYPEDEF(Speech, __uuidof(Speech));
_COM_SMARTPTR_TYPEDEF(Protection, __uuidof(Protection));
_COM_SMARTPTR_TYPEDEF(PivotItemList, __uuidof(PivotItemList));
_COM_SMARTPTR_TYPEDEF(Tab, __uuidof(Tab));
_COM_SMARTPTR_TYPEDEF(AllowEditRanges, __uuidof(AllowEditRanges));
_COM_SMARTPTR_TYPEDEF(IProtection, __uuidof(IProtection));
_COM_SMARTPTR_TYPEDEF(AllowEditRange, __uuidof(AllowEditRange));
_COM_SMARTPTR_TYPEDEF(IAllowEditRanges, __uuidof(IAllowEditRanges));
_COM_SMARTPTR_TYPEDEF(UserAccessList, __uuidof(UserAccessList));
_COM_SMARTPTR_TYPEDEF(IAllowEditRange, __uuidof(IAllowEditRange));
_COM_SMARTPTR_TYPEDEF(UserAccess, __uuidof(UserAccess));
_COM_SMARTPTR_TYPEDEF(IUserAccessList, __uuidof(IUserAccessList));
_COM_SMARTPTR_TYPEDEF(RTD, __uuidof(RTD));
_COM_SMARTPTR_TYPEDEF(excelDiagram, __uuidof(excelDiagram));
_COM_SMARTPTR_TYPEDEF(ListObjects, __uuidof(ListObjects));
_COM_SMARTPTR_TYPEDEF(ListObject, __uuidof(ListObject));
_COM_SMARTPTR_TYPEDEF(ListColumns, __uuidof(ListColumns));
_COM_SMARTPTR_TYPEDEF(ListColumn, __uuidof(ListColumn));
_COM_SMARTPTR_TYPEDEF(ListRows, __uuidof(ListRows));
_COM_SMARTPTR_TYPEDEF(ListRow, __uuidof(ListRow));
_COM_SMARTPTR_TYPEDEF(XmlNamespace, __uuidof(XmlNamespace));
_COM_SMARTPTR_TYPEDEF(XmlNamespaces, __uuidof(XmlNamespaces));
_COM_SMARTPTR_TYPEDEF(XmlDataBinding, __uuidof(XmlDataBinding));
_COM_SMARTPTR_TYPEDEF(XmlSchema, __uuidof(XmlSchema));
_COM_SMARTPTR_TYPEDEF(XmlSchemas, __uuidof(XmlSchemas));
_COM_SMARTPTR_TYPEDEF(XmlMap, __uuidof(XmlMap));
_COM_SMARTPTR_TYPEDEF(IWorkbookEvents, __uuidof(IWorkbookEvents));
_COM_SMARTPTR_TYPEDEF(XmlMaps, __uuidof(XmlMaps));
_COM_SMARTPTR_TYPEDEF(ListDataFormat, __uuidof(ListDataFormat));
_COM_SMARTPTR_TYPEDEF(XPath, __uuidof(XPath));
_COM_SMARTPTR_TYPEDEF(PivotLineCells, __uuidof(PivotLineCells));
_COM_SMARTPTR_TYPEDEF(PivotLine, __uuidof(PivotLine));
_COM_SMARTPTR_TYPEDEF(PivotLines, __uuidof(PivotLines));
_COM_SMARTPTR_TYPEDEF(PivotAxis, __uuidof(PivotAxis));
_COM_SMARTPTR_TYPEDEF(PivotFilter, __uuidof(PivotFilter));
_COM_SMARTPTR_TYPEDEF(PivotFilters, __uuidof(PivotFilters));
_COM_SMARTPTR_TYPEDEF(WorkbookConnection, __uuidof(WorkbookConnection));
_COM_SMARTPTR_TYPEDEF(Connections, __uuidof(Connections));
_COM_SMARTPTR_TYPEDEF(WorksheetView, __uuidof(WorksheetView));
_COM_SMARTPTR_TYPEDEF(ChartView, __uuidof(ChartView));
_COM_SMARTPTR_TYPEDEF(ModuleView, __uuidof(ModuleView));
_COM_SMARTPTR_TYPEDEF(DialogSheetView, __uuidof(DialogSheetView));
_COM_SMARTPTR_TYPEDEF(SheetViews, __uuidof(SheetViews));
_COM_SMARTPTR_TYPEDEF(OLEDBConnection, __uuidof(OLEDBConnection));
_COM_SMARTPTR_TYPEDEF(ODBCConnection, __uuidof(ODBCConnection));
_COM_SMARTPTR_TYPEDEF(Action, __uuidof(Action));
_COM_SMARTPTR_TYPEDEF(Actions, __uuidof(Actions));
_COM_SMARTPTR_TYPEDEF(FormatColor, __uuidof(FormatColor));
_COM_SMARTPTR_TYPEDEF(IColorScaleCriterion, __uuidof(IColorScaleCriterion));
_COM_SMARTPTR_TYPEDEF(ConditionValue, __uuidof(ConditionValue));
_COM_SMARTPTR_TYPEDEF(ColorScale, __uuidof(ColorScale));
_COM_SMARTPTR_TYPEDEF(ColorScaleCriteria, __uuidof(ColorScaleCriteria));
_COM_SMARTPTR_TYPEDEF(ColorScaleCriterion, __uuidof(ColorScaleCriterion));
_COM_SMARTPTR_TYPEDEF(IColorScaleCriteria, __uuidof(IColorScaleCriteria));
_COM_SMARTPTR_TYPEDEF(Databar, __uuidof(Databar));
_COM_SMARTPTR_TYPEDEF(IconSetCondition, __uuidof(IconSetCondition));
_COM_SMARTPTR_TYPEDEF(IconCriteria, __uuidof(IconCriteria));
_COM_SMARTPTR_TYPEDEF(IconCriterion, __uuidof(IconCriterion));
_COM_SMARTPTR_TYPEDEF(IIconCriteria, __uuidof(IIconCriteria));
_COM_SMARTPTR_TYPEDEF(Icon, __uuidof(Icon));
_COM_SMARTPTR_TYPEDEF(IconSet, __uuidof(IconSet));
_COM_SMARTPTR_TYPEDEF(IconSets, __uuidof(IconSets));
_COM_SMARTPTR_TYPEDEF(Top10, __uuidof(Top10));
_COM_SMARTPTR_TYPEDEF(AboveAverage, __uuidof(AboveAverage));
_COM_SMARTPTR_TYPEDEF(UniqueValues, __uuidof(UniqueValues));
_COM_SMARTPTR_TYPEDEF(Ranges, __uuidof(Ranges));
_COM_SMARTPTR_TYPEDEF(excelHeaderFooter, __uuidof(excelHeaderFooter));
_COM_SMARTPTR_TYPEDEF(IPage, __uuidof(IPage));
_COM_SMARTPTR_TYPEDEF(Page, __uuidof(Page));
_COM_SMARTPTR_TYPEDEF(IPages, __uuidof(IPages));
_COM_SMARTPTR_TYPEDEF(excelPages, __uuidof(excelPages));
_COM_SMARTPTR_TYPEDEF(ServerViewableItems, __uuidof(ServerViewableItems));
_COM_SMARTPTR_TYPEDEF(TableStyleElement, __uuidof(TableStyleElement));
_COM_SMARTPTR_TYPEDEF(TableStyleElements, __uuidof(TableStyleElements));
_COM_SMARTPTR_TYPEDEF(excelTableStyle, __uuidof(excelTableStyle));
_COM_SMARTPTR_TYPEDEF(TableStyles, __uuidof(TableStyles));
_COM_SMARTPTR_TYPEDEF(SortField, __uuidof(SortField));
_COM_SMARTPTR_TYPEDEF(SortFields, __uuidof(SortFields));
_COM_SMARTPTR_TYPEDEF(Sort, __uuidof(Sort));
_COM_SMARTPTR_TYPEDEF(excelResearch, __uuidof(excelResearch));
_COM_SMARTPTR_TYPEDEF(ColorStop, __uuidof(ColorStop));
_COM_SMARTPTR_TYPEDEF(ColorStops, __uuidof(ColorStops));
_COM_SMARTPTR_TYPEDEF(LinearGradient, __uuidof(LinearGradient));
_COM_SMARTPTR_TYPEDEF(RectangularGradient, __uuidof(RectangularGradient));
_COM_SMARTPTR_TYPEDEF(MultiThreadedCalculation, __uuidof(MultiThreadedCalculation));
_COM_SMARTPTR_TYPEDEF(ChartFormat, __uuidof(ChartFormat));
_COM_SMARTPTR_TYPEDEF(IDummy, __uuidof(IDummy));
_COM_SMARTPTR_TYPEDEF(ICanvasShapes, __uuidof(ICanvasShapes));
_COM_SMARTPTR_TYPEDEF(IWindows, __uuidof(IWindows));
_COM_SMARTPTR_TYPEDEF(IWorksheetFunction, __uuidof(IWorksheetFunction));
_COM_SMARTPTR_TYPEDEF(Sheets, __uuidof(Sheets));
_COM_SMARTPTR_TYPEDEF(IHPageBreaks, __uuidof(IHPageBreaks));
_COM_SMARTPTR_TYPEDEF(IVPageBreaks, __uuidof(IVPageBreaks));
_COM_SMARTPTR_TYPEDEF(IRecentFiles, __uuidof(IRecentFiles));
_COM_SMARTPTR_TYPEDEF(_Worksheet, __uuidof(_Worksheet));
_COM_SMARTPTR_TYPEDEF(IStyle, __uuidof(IStyle));
_COM_SMARTPTR_TYPEDEF(IStyles, __uuidof(IStyles));
_COM_SMARTPTR_TYPEDEF(IBorders, __uuidof(IBorders));
_COM_SMARTPTR_TYPEDEF(IAddIn, __uuidof(IAddIn));
_COM_SMARTPTR_TYPEDEF(IAddIns, __uuidof(IAddIns));
_COM_SMARTPTR_TYPEDEF(IToolbar, __uuidof(IToolbar));
_COM_SMARTPTR_TYPEDEF(IToolbars, __uuidof(IToolbars));
_COM_SMARTPTR_TYPEDEF(IToolbarButton, __uuidof(IToolbarButton));
_COM_SMARTPTR_TYPEDEF(IToolbarButtons, __uuidof(IToolbarButtons));
_COM_SMARTPTR_TYPEDEF(IAreas, __uuidof(IAreas));
_COM_SMARTPTR_TYPEDEF(IMenuBars, __uuidof(IMenuBars));
_COM_SMARTPTR_TYPEDEF(IMenuBar, __uuidof(IMenuBar));
_COM_SMARTPTR_TYPEDEF(IMenus, __uuidof(IMenus));
_COM_SMARTPTR_TYPEDEF(IMenu, __uuidof(IMenu));
_COM_SMARTPTR_TYPEDEF(IMenuItems, __uuidof(IMenuItems));
_COM_SMARTPTR_TYPEDEF(IMenuItem, __uuidof(IMenuItem));
_COM_SMARTPTR_TYPEDEF(IDrawingObjects, __uuidof(IDrawingObjects));
_COM_SMARTPTR_TYPEDEF(IPivotCache, __uuidof(IPivotCache));
_COM_SMARTPTR_TYPEDEF(IPivotCaches, __uuidof(IPivotCaches));
_COM_SMARTPTR_TYPEDEF(IPivotFormula, __uuidof(IPivotFormula));
_COM_SMARTPTR_TYPEDEF(IPivotFormulas, __uuidof(IPivotFormulas));
_COM_SMARTPTR_TYPEDEF(IPivotTables, __uuidof(IPivotTables));
_COM_SMARTPTR_TYPEDEF(IPivotFields, __uuidof(IPivotFields));
_COM_SMARTPTR_TYPEDEF(ICalculatedFields, __uuidof(ICalculatedFields));
_COM_SMARTPTR_TYPEDEF(IPivotItem, __uuidof(IPivotItem));
_COM_SMARTPTR_TYPEDEF(IPivotItems, __uuidof(IPivotItems));
_COM_SMARTPTR_TYPEDEF(ICalculatedItems, __uuidof(ICalculatedItems));
_COM_SMARTPTR_TYPEDEF(ICharacters, __uuidof(ICharacters));
_COM_SMARTPTR_TYPEDEF(IDialogs, __uuidof(IDialogs));
_COM_SMARTPTR_TYPEDEF(IDialog, __uuidof(IDialog));
_COM_SMARTPTR_TYPEDEF(ISoundNote, __uuidof(ISoundNote));
_COM_SMARTPTR_TYPEDEF(IButton, __uuidof(IButton));
_COM_SMARTPTR_TYPEDEF(IButtons, __uuidof(IButtons));
_COM_SMARTPTR_TYPEDEF(ICheckBox, __uuidof(ICheckBox));
_COM_SMARTPTR_TYPEDEF(ICheckBoxes, __uuidof(ICheckBoxes));
_COM_SMARTPTR_TYPEDEF(IOptionButton, __uuidof(IOptionButton));
_COM_SMARTPTR_TYPEDEF(IOptionButtons, __uuidof(IOptionButtons));
_COM_SMARTPTR_TYPEDEF(IEditBox, __uuidof(IEditBox));
_COM_SMARTPTR_TYPEDEF(IEditBoxes, __uuidof(IEditBoxes));
_COM_SMARTPTR_TYPEDEF(IScrollBar, __uuidof(IScrollBar));
_COM_SMARTPTR_TYPEDEF(IScrollBars, __uuidof(IScrollBars));
_COM_SMARTPTR_TYPEDEF(IListBox, __uuidof(IListBox));
_COM_SMARTPTR_TYPEDEF(IListBoxes, __uuidof(IListBoxes));
_COM_SMARTPTR_TYPEDEF(IGroupBox, __uuidof(IGroupBox));
_COM_SMARTPTR_TYPEDEF(IGroupBoxes, __uuidof(IGroupBoxes));
_COM_SMARTPTR_TYPEDEF(IDropDown, __uuidof(IDropDown));
_COM_SMARTPTR_TYPEDEF(IDropDowns, __uuidof(IDropDowns));
_COM_SMARTPTR_TYPEDEF(ISpinner, __uuidof(ISpinner));
_COM_SMARTPTR_TYPEDEF(ISpinners, __uuidof(ISpinners));
_COM_SMARTPTR_TYPEDEF(IDialogFrame, __uuidof(IDialogFrame));
_COM_SMARTPTR_TYPEDEF(ILabel, __uuidof(ILabel));
_COM_SMARTPTR_TYPEDEF(ILabels, __uuidof(ILabels));
_COM_SMARTPTR_TYPEDEF(IPanes, __uuidof(IPanes));
_COM_SMARTPTR_TYPEDEF(IPane, __uuidof(IPane));
_COM_SMARTPTR_TYPEDEF(IScenarios, __uuidof(IScenarios));
_COM_SMARTPTR_TYPEDEF(IScenario, __uuidof(IScenario));
_COM_SMARTPTR_TYPEDEF(IGroupObject, __uuidof(IGroupObject));
_COM_SMARTPTR_TYPEDEF(IGroupObjects, __uuidof(IGroupObjects));
_COM_SMARTPTR_TYPEDEF(ILine, __uuidof(ILine));
_COM_SMARTPTR_TYPEDEF(ILines, __uuidof(ILines));
_COM_SMARTPTR_TYPEDEF(IRectangle, __uuidof(IRectangle));
_COM_SMARTPTR_TYPEDEF(IRectangles, __uuidof(IRectangles));
_COM_SMARTPTR_TYPEDEF(IOval, __uuidof(IOval));
_COM_SMARTPTR_TYPEDEF(IOvals, __uuidof(IOvals));
_COM_SMARTPTR_TYPEDEF(IArc, __uuidof(IArc));
_COM_SMARTPTR_TYPEDEF(IArcs, __uuidof(IArcs));
_COM_SMARTPTR_TYPEDEF(_IOLEObject, __uuidof(_IOLEObject));
_COM_SMARTPTR_TYPEDEF(ITextBox, __uuidof(ITextBox));
_COM_SMARTPTR_TYPEDEF(ITextBoxes, __uuidof(ITextBoxes));
_COM_SMARTPTR_TYPEDEF(IPictures, __uuidof(IPictures));
_COM_SMARTPTR_TYPEDEF(IDrawing, __uuidof(IDrawing));
_COM_SMARTPTR_TYPEDEF(IDrawings, __uuidof(IDrawings));
_COM_SMARTPTR_TYPEDEF(IRoutingSlip, __uuidof(IRoutingSlip));
_COM_SMARTPTR_TYPEDEF(IOutline, __uuidof(IOutline));
_COM_SMARTPTR_TYPEDEF(IModule, __uuidof(IModule));
_COM_SMARTPTR_TYPEDEF(IModules, __uuidof(IModules));
_COM_SMARTPTR_TYPEDEF(IDialogSheet, __uuidof(IDialogSheet));
_COM_SMARTPTR_TYPEDEF(IDialogSheets, __uuidof(IDialogSheets));
_COM_SMARTPTR_TYPEDEF(IWorksheets, __uuidof(IWorksheets));
_COM_SMARTPTR_TYPEDEF(IPageSetup, __uuidof(IPageSetup));
_COM_SMARTPTR_TYPEDEF(INames, __uuidof(INames));
_COM_SMARTPTR_TYPEDEF(IName, __uuidof(IName));
_COM_SMARTPTR_TYPEDEF(IChartObjects, __uuidof(IChartObjects));
_COM_SMARTPTR_TYPEDEF(IMailer, __uuidof(IMailer));
_COM_SMARTPTR_TYPEDEF(ICustomViews, __uuidof(ICustomViews));
_COM_SMARTPTR_TYPEDEF(ICustomView, __uuidof(ICustomView));
_COM_SMARTPTR_TYPEDEF(IFormatConditions, __uuidof(IFormatConditions));
_COM_SMARTPTR_TYPEDEF(IFormatCondition, __uuidof(IFormatCondition));
_COM_SMARTPTR_TYPEDEF(IComments, __uuidof(IComments));
_COM_SMARTPTR_TYPEDEF(IComment, __uuidof(IComment));
_COM_SMARTPTR_TYPEDEF(_IQueryTable, __uuidof(_IQueryTable));
_COM_SMARTPTR_TYPEDEF(IQueryTables, __uuidof(IQueryTables));
_COM_SMARTPTR_TYPEDEF(IParameter, __uuidof(IParameter));
_COM_SMARTPTR_TYPEDEF(IParameters, __uuidof(IParameters));
_COM_SMARTPTR_TYPEDEF(IODBCError, __uuidof(IODBCError));
_COM_SMARTPTR_TYPEDEF(IODBCErrors, __uuidof(IODBCErrors));
_COM_SMARTPTR_TYPEDEF(IValidation, __uuidof(IValidation));
_COM_SMARTPTR_TYPEDEF(IHyperlinks, __uuidof(IHyperlinks));
_COM_SMARTPTR_TYPEDEF(IHyperlink, __uuidof(IHyperlink));
_COM_SMARTPTR_TYPEDEF(IAutoFilter, __uuidof(IAutoFilter));
_COM_SMARTPTR_TYPEDEF(IFilters, __uuidof(IFilters));
_COM_SMARTPTR_TYPEDEF(IFilter, __uuidof(IFilter));
_COM_SMARTPTR_TYPEDEF(IAutoCorrect, __uuidof(IAutoCorrect));
_COM_SMARTPTR_TYPEDEF(IBorder, __uuidof(IBorder));
_COM_SMARTPTR_TYPEDEF(IInterior, __uuidof(IInterior));
_COM_SMARTPTR_TYPEDEF(IChartFillFormat, __uuidof(IChartFillFormat));
_COM_SMARTPTR_TYPEDEF(IChartColorFormat, __uuidof(IChartColorFormat));
_COM_SMARTPTR_TYPEDEF(IAxis, __uuidof(IAxis));
_COM_SMARTPTR_TYPEDEF(IChartTitle, __uuidof(IChartTitle));
_COM_SMARTPTR_TYPEDEF(IAxisTitle, __uuidof(IAxisTitle));
_COM_SMARTPTR_TYPEDEF(IChartGroup, __uuidof(IChartGroup));
_COM_SMARTPTR_TYPEDEF(IChartGroups, __uuidof(IChartGroups));
_COM_SMARTPTR_TYPEDEF(IAxes, __uuidof(IAxes));
_COM_SMARTPTR_TYPEDEF(IPoints, __uuidof(IPoints));
_COM_SMARTPTR_TYPEDEF(IPoint, __uuidof(IPoint));
_COM_SMARTPTR_TYPEDEF(ISeries, __uuidof(ISeries));
_COM_SMARTPTR_TYPEDEF(ISeriesCollection, __uuidof(ISeriesCollection));
_COM_SMARTPTR_TYPEDEF(IDataLabel, __uuidof(IDataLabel));
_COM_SMARTPTR_TYPEDEF(IDataLabels, __uuidof(IDataLabels));
_COM_SMARTPTR_TYPEDEF(ILegendEntry, __uuidof(ILegendEntry));
_COM_SMARTPTR_TYPEDEF(ILegendEntries, __uuidof(ILegendEntries));
_COM_SMARTPTR_TYPEDEF(ILegendKey, __uuidof(ILegendKey));
_COM_SMARTPTR_TYPEDEF(ITrendlines, __uuidof(ITrendlines));
_COM_SMARTPTR_TYPEDEF(ITrendline, __uuidof(ITrendline));
_COM_SMARTPTR_TYPEDEF(ICorners, __uuidof(ICorners));
_COM_SMARTPTR_TYPEDEF(ISeriesLines, __uuidof(ISeriesLines));
_COM_SMARTPTR_TYPEDEF(IHiLoLines, __uuidof(IHiLoLines));
_COM_SMARTPTR_TYPEDEF(IGridlines, __uuidof(IGridlines));
_COM_SMARTPTR_TYPEDEF(IDropLines, __uuidof(IDropLines));
_COM_SMARTPTR_TYPEDEF(ILeaderLines, __uuidof(ILeaderLines));
_COM_SMARTPTR_TYPEDEF(IUpBars, __uuidof(IUpBars));
_COM_SMARTPTR_TYPEDEF(IDownBars, __uuidof(IDownBars));
_COM_SMARTPTR_TYPEDEF(IFloor, __uuidof(IFloor));
_COM_SMARTPTR_TYPEDEF(IWalls, __uuidof(IWalls));
_COM_SMARTPTR_TYPEDEF(ITickLabels, __uuidof(ITickLabels));
_COM_SMARTPTR_TYPEDEF(IPlotArea, __uuidof(IPlotArea));
_COM_SMARTPTR_TYPEDEF(IChartArea, __uuidof(IChartArea));
_COM_SMARTPTR_TYPEDEF(ILegend, __uuidof(ILegend));
_COM_SMARTPTR_TYPEDEF(IErrorBars, __uuidof(IErrorBars));
_COM_SMARTPTR_TYPEDEF(IDataTable, __uuidof(IDataTable));
_COM_SMARTPTR_TYPEDEF(IPhonetic, __uuidof(IPhonetic));
_COM_SMARTPTR_TYPEDEF(IShapes, __uuidof(IShapes));
_COM_SMARTPTR_TYPEDEF(IGroupShapes, __uuidof(IGroupShapes));
_COM_SMARTPTR_TYPEDEF(ITextFrame, __uuidof(ITextFrame));
_COM_SMARTPTR_TYPEDEF(IConnectorFormat, __uuidof(IConnectorFormat));
_COM_SMARTPTR_TYPEDEF(IFreeformBuilder, __uuidof(IFreeformBuilder));
_COM_SMARTPTR_TYPEDEF(IControlFormat, __uuidof(IControlFormat));
_COM_SMARTPTR_TYPEDEF(IOLEFormat, __uuidof(IOLEFormat));
_COM_SMARTPTR_TYPEDEF(ILinkFormat, __uuidof(ILinkFormat));
_COM_SMARTPTR_TYPEDEF(excelPublishObject, __uuidof(excelPublishObject));
_COM_SMARTPTR_TYPEDEF(IPublishObjects, __uuidof(IPublishObjects));
_COM_SMARTPTR_TYPEDEF(IOLEDBError, __uuidof(IOLEDBError));
_COM_SMARTPTR_TYPEDEF(IOLEDBErrors, __uuidof(IOLEDBErrors));
_COM_SMARTPTR_TYPEDEF(IPhonetics, __uuidof(IPhonetics));
_COM_SMARTPTR_TYPEDEF(excelDefaultWebOptions, __uuidof(excelDefaultWebOptions));
_COM_SMARTPTR_TYPEDEF(excelWebOptions, __uuidof(excelWebOptions));
_COM_SMARTPTR_TYPEDEF(TreeviewControl, __uuidof(TreeviewControl));
_COM_SMARTPTR_TYPEDEF(CubeField, __uuidof(CubeField));
_COM_SMARTPTR_TYPEDEF(IPivotField, __uuidof(IPivotField));
_COM_SMARTPTR_TYPEDEF(CubeFields, __uuidof(CubeFields));
_COM_SMARTPTR_TYPEDEF(IPivotTable, __uuidof(IPivotTable));
_COM_SMARTPTR_TYPEDEF(IPivotLayout, __uuidof(IPivotLayout));
_COM_SMARTPTR_TYPEDEF(IDisplayUnitLabel, __uuidof(IDisplayUnitLabel));
_COM_SMARTPTR_TYPEDEF(ICellFormat, __uuidof(ICellFormat));
_COM_SMARTPTR_TYPEDEF(IUsedObjects, __uuidof(IUsedObjects));
_COM_SMARTPTR_TYPEDEF(ICustomProperties, __uuidof(ICustomProperties));
_COM_SMARTPTR_TYPEDEF(ICustomProperty, __uuidof(ICustomProperty));
_COM_SMARTPTR_TYPEDEF(ICalculatedMembers, __uuidof(ICalculatedMembers));
_COM_SMARTPTR_TYPEDEF(ICalculatedMember, __uuidof(ICalculatedMember));
_COM_SMARTPTR_TYPEDEF(IWatches, __uuidof(IWatches));
_COM_SMARTPTR_TYPEDEF(IWatch, __uuidof(IWatch));
_COM_SMARTPTR_TYPEDEF(IPivotCell, __uuidof(IPivotCell));
_COM_SMARTPTR_TYPEDEF(IGraphic, __uuidof(IGraphic));
_COM_SMARTPTR_TYPEDEF(IAutoRecover, __uuidof(IAutoRecover));
_COM_SMARTPTR_TYPEDEF(IErrorCheckingOptions, __uuidof(IErrorCheckingOptions));
_COM_SMARTPTR_TYPEDEF(IErrors, __uuidof(IErrors));
_COM_SMARTPTR_TYPEDEF(IError, __uuidof(IError));
_COM_SMARTPTR_TYPEDEF(ISmartTagAction, __uuidof(ISmartTagAction));
_COM_SMARTPTR_TYPEDEF(ISmartTagActions, __uuidof(ISmartTagActions));
_COM_SMARTPTR_TYPEDEF(ISmartTag, __uuidof(ISmartTag));
_COM_SMARTPTR_TYPEDEF(ISmartTags, __uuidof(ISmartTags));
_COM_SMARTPTR_TYPEDEF(ISmartTagRecognizer, __uuidof(ISmartTagRecognizer));
_COM_SMARTPTR_TYPEDEF(ISmartTagRecognizers, __uuidof(ISmartTagRecognizers));
_COM_SMARTPTR_TYPEDEF(ISmartTagOptions, __uuidof(ISmartTagOptions));
_COM_SMARTPTR_TYPEDEF(IPivotItemList, __uuidof(IPivotItemList));
_COM_SMARTPTR_TYPEDEF(ITab, __uuidof(ITab));
_COM_SMARTPTR_TYPEDEF(IListObjects, __uuidof(IListObjects));
_COM_SMARTPTR_TYPEDEF(IListObject, __uuidof(IListObject));
_COM_SMARTPTR_TYPEDEF(IListColumns, __uuidof(IListColumns));
_COM_SMARTPTR_TYPEDEF(IListColumn, __uuidof(IListColumn));
_COM_SMARTPTR_TYPEDEF(IListRows, __uuidof(IListRows));
_COM_SMARTPTR_TYPEDEF(IListRow, __uuidof(IListRow));
_COM_SMARTPTR_TYPEDEF(IXmlNamespace, __uuidof(IXmlNamespace));
_COM_SMARTPTR_TYPEDEF(IXmlNamespaces, __uuidof(IXmlNamespaces));
_COM_SMARTPTR_TYPEDEF(IXmlDataBinding, __uuidof(IXmlDataBinding));
_COM_SMARTPTR_TYPEDEF(IXmlSchema, __uuidof(IXmlSchema));
_COM_SMARTPTR_TYPEDEF(IXmlSchemas, __uuidof(IXmlSchemas));
_COM_SMARTPTR_TYPEDEF(IXmlMap, __uuidof(IXmlMap));
_COM_SMARTPTR_TYPEDEF(IXmlMaps, __uuidof(IXmlMaps));
_COM_SMARTPTR_TYPEDEF(IListDataFormat, __uuidof(IListDataFormat));
_COM_SMARTPTR_TYPEDEF(IXPath, __uuidof(IXPath));
_COM_SMARTPTR_TYPEDEF(IPivotLineCells, __uuidof(IPivotLineCells));
_COM_SMARTPTR_TYPEDEF(IPivotLine, __uuidof(IPivotLine));
_COM_SMARTPTR_TYPEDEF(IPivotLines, __uuidof(IPivotLines));
_COM_SMARTPTR_TYPEDEF(IPivotAxis, __uuidof(IPivotAxis));
_COM_SMARTPTR_TYPEDEF(IPivotFilter, __uuidof(IPivotFilter));
_COM_SMARTPTR_TYPEDEF(IPivotFilters, __uuidof(IPivotFilters));
_COM_SMARTPTR_TYPEDEF(IWorkbookConnection, __uuidof(IWorkbookConnection));
_COM_SMARTPTR_TYPEDEF(IConnections, __uuidof(IConnections));
_COM_SMARTPTR_TYPEDEF(IWorksheetView, __uuidof(IWorksheetView));
_COM_SMARTPTR_TYPEDEF(IChartView, __uuidof(IChartView));
_COM_SMARTPTR_TYPEDEF(IModuleView, __uuidof(IModuleView));
_COM_SMARTPTR_TYPEDEF(IDialogSheetView, __uuidof(IDialogSheetView));
_COM_SMARTPTR_TYPEDEF(ISheetViews, __uuidof(ISheetViews));
_COM_SMARTPTR_TYPEDEF(IOLEDBConnection, __uuidof(IOLEDBConnection));
_COM_SMARTPTR_TYPEDEF(IODBCConnection, __uuidof(IODBCConnection));
_COM_SMARTPTR_TYPEDEF(IAction, __uuidof(IAction));
_COM_SMARTPTR_TYPEDEF(IActions, __uuidof(IActions));
_COM_SMARTPTR_TYPEDEF(IFormatColor, __uuidof(IFormatColor));
_COM_SMARTPTR_TYPEDEF(IConditionValue, __uuidof(IConditionValue));
_COM_SMARTPTR_TYPEDEF(IColorScale, __uuidof(IColorScale));
_COM_SMARTPTR_TYPEDEF(IDatabar, __uuidof(IDatabar));
_COM_SMARTPTR_TYPEDEF(IIconSetCondition, __uuidof(IIconSetCondition));
_COM_SMARTPTR_TYPEDEF(IIcon, __uuidof(IIcon));
_COM_SMARTPTR_TYPEDEF(IIconSet, __uuidof(IIconSet));
_COM_SMARTPTR_TYPEDEF(IIconSets, __uuidof(IIconSets));
_COM_SMARTPTR_TYPEDEF(ITop10, __uuidof(ITop10));
_COM_SMARTPTR_TYPEDEF(IAboveAverage, __uuidof(IAboveAverage));
_COM_SMARTPTR_TYPEDEF(IUniqueValues, __uuidof(IUniqueValues));
_COM_SMARTPTR_TYPEDEF(IRanges, __uuidof(IRanges));
_COM_SMARTPTR_TYPEDEF(IServerViewableItems, __uuidof(IServerViewableItems));
_COM_SMARTPTR_TYPEDEF(ITableStyleElement, __uuidof(ITableStyleElement));
_COM_SMARTPTR_TYPEDEF(ITableStyleElements, __uuidof(ITableStyleElements));
_COM_SMARTPTR_TYPEDEF(ITableStyle, __uuidof(ITableStyle));
_COM_SMARTPTR_TYPEDEF(ITableStyles, __uuidof(ITableStyles));
_COM_SMARTPTR_TYPEDEF(ISortField, __uuidof(ISortField));
_COM_SMARTPTR_TYPEDEF(ISortFields, __uuidof(ISortFields));
_COM_SMARTPTR_TYPEDEF(ISort, __uuidof(ISort));
_COM_SMARTPTR_TYPEDEF(IResearch, __uuidof(IResearch));
_COM_SMARTPTR_TYPEDEF(IColorStop, __uuidof(IColorStop));
_COM_SMARTPTR_TYPEDEF(IColorStops, __uuidof(IColorStops));
_COM_SMARTPTR_TYPEDEF(ILinearGradient, __uuidof(ILinearGradient));
_COM_SMARTPTR_TYPEDEF(IRectangularGradient, __uuidof(IRectangularGradient));
_COM_SMARTPTR_TYPEDEF(IMultiThreadedCalculation, __uuidof(IMultiThreadedCalculation));
_COM_SMARTPTR_TYPEDEF(IChartFormat, __uuidof(IChartFormat));
_COM_SMARTPTR_TYPEDEF(IWindow, __uuidof(IWindow));
_COM_SMARTPTR_TYPEDEF(_Chart, __uuidof(_Chart));
_COM_SMARTPTR_TYPEDEF(_Workbook, __uuidof(_Workbook));
_COM_SMARTPTR_TYPEDEF(ICharts, __uuidof(ICharts));
_COM_SMARTPTR_TYPEDEF(IChartObject, __uuidof(IChartObject));
_COM_SMARTPTR_TYPEDEF(IRange, __uuidof(IRange));
_COM_SMARTPTR_TYPEDEF(IVPageBreak, __uuidof(IVPageBreak));
_COM_SMARTPTR_TYPEDEF(IHPageBreak, __uuidof(IHPageBreak));
_COM_SMARTPTR_TYPEDEF(IAppEvents, __uuidof(IAppEvents));
_COM_SMARTPTR_TYPEDEF(IRecentFile, __uuidof(IRecentFile));
_COM_SMARTPTR_TYPEDEF(Workbooks, __uuidof(Workbooks));
_COM_SMARTPTR_TYPEDEF(_excelApplication, __uuidof(_excelApplication));
_COM_SMARTPTR_TYPEDEF(_excelGlobal, __uuidof(_excelGlobal));
_COM_SMARTPTR_TYPEDEF(IOLEObjects, __uuidof(IOLEObjects));
_COM_SMARTPTR_TYPEDEF(excelDiagramNodes, __uuidof(excelDiagramNodes));
_COM_SMARTPTR_TYPEDEF(IDiagram, __uuidof(IDiagram));
_COM_SMARTPTR_TYPEDEF(excelDiagramNodeChildren, __uuidof(excelDiagramNodeChildren));
_COM_SMARTPTR_TYPEDEF(excelDiagramNode, __uuidof(excelDiagramNode));
_COM_SMARTPTR_TYPEDEF(IShape, __uuidof(IShape));
_COM_SMARTPTR_TYPEDEF(IShapeRange, __uuidof(IShapeRange));

//
// Type library items
//

struct __declspec(uuid("000c0310-0000-0000-c000-000000000046"))
excelAdjustments : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ float * Val ) = 0;
      virtual HRESULT __stdcall put_Item (
        /*[in]*/ int Index,
        /*[in]*/ float Val ) = 0;
};

struct __declspec(uuid("000c0311-0000-0000-c000-000000000046"))
excelCalloutFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall AutomaticLength ( ) = 0;
      virtual HRESULT __stdcall CustomDrop (
        /*[in]*/ float Drop ) = 0;
      virtual HRESULT __stdcall CustomLength (
        /*[in]*/ float Length ) = 0;
      virtual HRESULT __stdcall PresetDrop (
        /*[in]*/ enum Office::MsoCalloutDropType DropType ) = 0;
      virtual HRESULT __stdcall get_Accent (
        /*[out,retval]*/ enum Office::MsoTriState * Accent ) = 0;
      virtual HRESULT __stdcall put_Accent (
        /*[in]*/ enum Office::MsoTriState Accent ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ enum Office::MsoCalloutAngleType * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ enum Office::MsoCalloutAngleType Angle ) = 0;
      virtual HRESULT __stdcall get_AutoAttach (
        /*[out,retval]*/ enum Office::MsoTriState * AutoAttach ) = 0;
      virtual HRESULT __stdcall put_AutoAttach (
        /*[in]*/ enum Office::MsoTriState AutoAttach ) = 0;
      virtual HRESULT __stdcall get_AutoLength (
        /*[out,retval]*/ enum Office::MsoTriState * AutoLength ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ enum Office::MsoTriState * Border ) = 0;
      virtual HRESULT __stdcall put_Border (
        /*[in]*/ enum Office::MsoTriState Border ) = 0;
      virtual HRESULT __stdcall get_Drop (
        /*[out,retval]*/ float * Drop ) = 0;
      virtual HRESULT __stdcall get_DropType (
        /*[out,retval]*/ enum Office::MsoCalloutDropType * DropType ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ float * Gap ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ float Gap ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ float * Length ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoCalloutType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoCalloutType Type ) = 0;
};

struct __declspec(uuid("000c0312-0000-0000-c000-000000000046"))
excelColorFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_excelRGB (
        /*[out,retval]*/ Office::MsoRGBType * excelRGB ) = 0;
      virtual HRESULT __stdcall put_excelRGB (
        /*[in]*/ Office::MsoRGBType excelRGB ) = 0;
      virtual HRESULT __stdcall get_SchemeColor (
        /*[out,retval]*/ int * SchemeColor ) = 0;
      virtual HRESULT __stdcall put_SchemeColor (
        /*[in]*/ int SchemeColor ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoColorType * Type ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ float * pValue ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ float pValue ) = 0;
      virtual HRESULT __stdcall get_ObjectThemeColor (
        /*[out,retval]*/ enum Office::MsoThemeColorIndex * ObjectThemeColor ) = 0;
      virtual HRESULT __stdcall put_ObjectThemeColor (
        /*[in]*/ enum Office::MsoThemeColorIndex ObjectThemeColor ) = 0;
};

struct __declspec(uuid("000c0317-0000-0000-c000-000000000046"))
excelLineFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct excelColorFormat * * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ struct excelColorFormat * BackColor ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * BeginArrowheadLength ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength BeginArrowheadLength ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * BeginArrowheadStyle ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle BeginArrowheadStyle ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * BeginArrowheadWidth ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth BeginArrowheadWidth ) = 0;
      virtual HRESULT __stdcall get_DashStyle (
        /*[out,retval]*/ enum Office::MsoLineDashStyle * DashStyle ) = 0;
      virtual HRESULT __stdcall put_DashStyle (
        /*[in]*/ enum Office::MsoLineDashStyle DashStyle ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * EndArrowheadLength ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength EndArrowheadLength ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * EndArrowheadStyle ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle EndArrowheadStyle ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * EndArrowheadWidth ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth EndArrowheadWidth ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct excelColorFormat * * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ struct excelColorFormat * ForeColor ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * Pattern ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoLineStyle * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoLineStyle Style ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float Transparency ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ float * Weight ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ float Weight ) = 0;
};

struct __declspec(uuid("000c0318-0000-0000-c000-000000000046"))
excelShapeNode : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_EditingType (
        /*[out,retval]*/ enum Office::MsoEditingType * EditingType ) = 0;
      virtual HRESULT __stdcall get_Points (
        /*[out,retval]*/ VARIANT * Points ) = 0;
      virtual HRESULT __stdcall get_SegmentType (
        /*[out,retval]*/ enum Office::MsoSegmentType * SegmentType ) = 0;
};

struct __declspec(uuid("000c0319-0000-0000-c000-000000000046"))
excelShapeNodes : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShapeNode * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
      virtual HRESULT __stdcall SetEditingType (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoEditingType EditingType ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ int Index,
        /*[in]*/ float X1,
        /*[in]*/ float Y1 ) = 0;
      virtual HRESULT __stdcall SetSegmentType (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType ) = 0;
};

struct __declspec(uuid("000c031a-0000-0000-c000-000000000046"))
excelPictureFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall IncrementBrightness (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementContrast (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ float * Brightness ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ float Brightness ) = 0;
      virtual HRESULT __stdcall get_ColorType (
        /*[out,retval]*/ enum Office::MsoPictureColorType * ColorType ) = 0;
      virtual HRESULT __stdcall put_ColorType (
        /*[in]*/ enum Office::MsoPictureColorType ColorType ) = 0;
      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ float * Contrast ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ float Contrast ) = 0;
      virtual HRESULT __stdcall get_CropBottom (
        /*[out,retval]*/ float * CropBottom ) = 0;
      virtual HRESULT __stdcall put_CropBottom (
        /*[in]*/ float CropBottom ) = 0;
      virtual HRESULT __stdcall get_CropLeft (
        /*[out,retval]*/ float * CropLeft ) = 0;
      virtual HRESULT __stdcall put_CropLeft (
        /*[in]*/ float CropLeft ) = 0;
      virtual HRESULT __stdcall get_CropRight (
        /*[out,retval]*/ float * CropRight ) = 0;
      virtual HRESULT __stdcall put_CropRight (
        /*[in]*/ float CropRight ) = 0;
      virtual HRESULT __stdcall get_CropTop (
        /*[out,retval]*/ float * CropTop ) = 0;
      virtual HRESULT __stdcall put_CropTop (
        /*[in]*/ float CropTop ) = 0;
      virtual HRESULT __stdcall get_TransparencyColor (
        /*[out,retval]*/ Office::MsoRGBType * TransparencyColor ) = 0;
      virtual HRESULT __stdcall put_TransparencyColor (
        /*[in]*/ Office::MsoRGBType TransparencyColor ) = 0;
      virtual HRESULT __stdcall get_TransparentBackground (
        /*[out,retval]*/ enum Office::MsoTriState * TransparentBackground ) = 0;
      virtual HRESULT __stdcall put_TransparentBackground (
        /*[in]*/ enum Office::MsoTriState TransparentBackground ) = 0;
};

struct __declspec(uuid("000c031b-0000-0000-c000-000000000046"))
excelShadowFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall IncrementOffsetX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementOffsetY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct excelColorFormat * * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ struct excelColorFormat * ForeColor ) = 0;
      virtual HRESULT __stdcall get_Obscured (
        /*[out,retval]*/ enum Office::MsoTriState * Obscured ) = 0;
      virtual HRESULT __stdcall put_Obscured (
        /*[in]*/ enum Office::MsoTriState Obscured ) = 0;
      virtual HRESULT __stdcall get_OffsetX (
        /*[out,retval]*/ float * OffsetX ) = 0;
      virtual HRESULT __stdcall put_OffsetX (
        /*[in]*/ float OffsetX ) = 0;
      virtual HRESULT __stdcall get_OffsetY (
        /*[out,retval]*/ float * OffsetY ) = 0;
      virtual HRESULT __stdcall put_OffsetY (
        /*[in]*/ float OffsetY ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float Transparency ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShadowType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoShadowType Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoShadowStyle * ShadowStyle ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoShadowStyle ShadowStyle ) = 0;
      virtual HRESULT __stdcall get_Blur (
        /*[out,retval]*/ float * Blur ) = 0;
      virtual HRESULT __stdcall put_Blur (
        /*[in]*/ float Blur ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * Size ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float Size ) = 0;
      virtual HRESULT __stdcall get_RotateWithShape (
        /*[out,retval]*/ enum Office::MsoTriState * RotateWithShape ) = 0;
      virtual HRESULT __stdcall put_RotateWithShape (
        /*[in]*/ enum Office::MsoTriState RotateWithShape ) = 0;
};

struct __declspec(uuid("000c031f-0000-0000-c000-000000000046"))
excelTextEffectFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall ToggleVerticalText ( ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum Office::MsoTextEffectAlignment * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum Office::MsoTextEffectAlignment Alignment ) = 0;
      virtual HRESULT __stdcall get_FontBold (
        /*[out,retval]*/ enum Office::MsoTriState * FontBold ) = 0;
      virtual HRESULT __stdcall put_FontBold (
        /*[in]*/ enum Office::MsoTriState FontBold ) = 0;
      virtual HRESULT __stdcall get_FontItalic (
        /*[out,retval]*/ enum Office::MsoTriState * FontItalic ) = 0;
      virtual HRESULT __stdcall put_FontItalic (
        /*[in]*/ enum Office::MsoTriState FontItalic ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_FontSize (
        /*[out,retval]*/ float * FontSize ) = 0;
      virtual HRESULT __stdcall put_FontSize (
        /*[in]*/ float FontSize ) = 0;
      virtual HRESULT __stdcall get_KernedPairs (
        /*[out,retval]*/ enum Office::MsoTriState * KernedPairs ) = 0;
      virtual HRESULT __stdcall put_KernedPairs (
        /*[in]*/ enum Office::MsoTriState KernedPairs ) = 0;
      virtual HRESULT __stdcall get_NormalizedHeight (
        /*[out,retval]*/ enum Office::MsoTriState * NormalizedHeight ) = 0;
      virtual HRESULT __stdcall put_NormalizedHeight (
        /*[in]*/ enum Office::MsoTriState NormalizedHeight ) = 0;
      virtual HRESULT __stdcall get_PresetShape (
        /*[out,retval]*/ enum Office::MsoPresetTextEffectShape * PresetShape ) = 0;
      virtual HRESULT __stdcall put_PresetShape (
        /*[in]*/ enum Office::MsoPresetTextEffectShape PresetShape ) = 0;
      virtual HRESULT __stdcall get_PresetTextEffect (
        /*[out,retval]*/ enum Office::MsoPresetTextEffect * Preset ) = 0;
      virtual HRESULT __stdcall put_PresetTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect Preset ) = 0;
      virtual HRESULT __stdcall get_RotatedChars (
        /*[out,retval]*/ enum Office::MsoTriState * RotatedChars ) = 0;
      virtual HRESULT __stdcall put_RotatedChars (
        /*[in]*/ enum Office::MsoTriState RotatedChars ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Tracking (
        /*[out,retval]*/ float * Tracking ) = 0;
      virtual HRESULT __stdcall put_Tracking (
        /*[in]*/ float Tracking ) = 0;
};

struct __declspec(uuid("000c0321-0000-0000-c000-000000000046"))
excelThreeDFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall IncrementRotationX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall ResetRotation ( ) = 0;
      virtual HRESULT __stdcall SetThreeDFormat (
        /*[in]*/ enum Office::MsoPresetThreeDFormat PresetThreeDFormat ) = 0;
      virtual HRESULT __stdcall SetExtrusionDirection (
        /*[in]*/ enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ float * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ float Depth ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColor (
        /*[out,retval]*/ struct excelColorFormat * * ExtrusionColor ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColorType (
        /*[out,retval]*/ enum Office::MsoExtrusionColorType * ExtrusionColorType ) = 0;
      virtual HRESULT __stdcall put_ExtrusionColorType (
        /*[in]*/ enum Office::MsoExtrusionColorType ExtrusionColorType ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[out,retval]*/ enum Office::MsoTriState * Perspective ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in]*/ enum Office::MsoTriState Perspective ) = 0;
      virtual HRESULT __stdcall get_PresetExtrusionDirection (
        /*[out,retval]*/ enum Office::MsoPresetExtrusionDirection * PresetExtrusionDirection ) = 0;
      virtual HRESULT __stdcall get_PresetLightingDirection (
        /*[out,retval]*/ enum Office::MsoPresetLightingDirection * PresetLightingDirection ) = 0;
      virtual HRESULT __stdcall put_PresetLightingDirection (
        /*[in]*/ enum Office::MsoPresetLightingDirection PresetLightingDirection ) = 0;
      virtual HRESULT __stdcall get_PresetLightingSoftness (
        /*[out,retval]*/ enum Office::MsoPresetLightingSoftness * PresetLightingSoftness ) = 0;
      virtual HRESULT __stdcall put_PresetLightingSoftness (
        /*[in]*/ enum Office::MsoPresetLightingSoftness PresetLightingSoftness ) = 0;
      virtual HRESULT __stdcall get_PresetMaterial (
        /*[out,retval]*/ enum Office::MsoPresetMaterial * PresetMaterial ) = 0;
      virtual HRESULT __stdcall put_PresetMaterial (
        /*[in]*/ enum Office::MsoPresetMaterial PresetMaterial ) = 0;
      virtual HRESULT __stdcall get_PresetThreeDFormat (
        /*[out,retval]*/ enum Office::MsoPresetThreeDFormat * PresetThreeDFormat ) = 0;
      virtual HRESULT __stdcall get_RotationX (
        /*[out,retval]*/ float * RotationX ) = 0;
      virtual HRESULT __stdcall put_RotationX (
        /*[in]*/ float RotationX ) = 0;
      virtual HRESULT __stdcall get_RotationY (
        /*[out,retval]*/ float * RotationY ) = 0;
      virtual HRESULT __stdcall put_RotationY (
        /*[in]*/ float RotationY ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall SetPresetCamera (
        /*[in]*/ enum Office::MsoPresetCamera PresetCamera ) = 0;
      virtual HRESULT __stdcall IncrementRotationZ (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationHorizontal (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationVertical (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_PresetLighting (
        /*[out,retval]*/ enum Office::MsoLightRigType * PresetLightRigType ) = 0;
      virtual HRESULT __stdcall put_PresetLighting (
        /*[in]*/ enum Office::MsoLightRigType PresetLightRigType ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ float * Z ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall get_BevelTopType (
        /*[out,retval]*/ enum Office::MsoBevelType * BevelTopType ) = 0;
      virtual HRESULT __stdcall put_BevelTopType (
        /*[in]*/ enum Office::MsoBevelType BevelTopType ) = 0;
      virtual HRESULT __stdcall get_BevelTopInset (
        /*[out,retval]*/ float * BevelTopInset ) = 0;
      virtual HRESULT __stdcall put_BevelTopInset (
        /*[in]*/ float BevelTopInset ) = 0;
      virtual HRESULT __stdcall get_BevelTopDepth (
        /*[out,retval]*/ float * BevelTopDepth ) = 0;
      virtual HRESULT __stdcall put_BevelTopDepth (
        /*[in]*/ float BevelTopDepth ) = 0;
      virtual HRESULT __stdcall get_BevelBottomType (
        /*[out,retval]*/ enum Office::MsoBevelType * BevelBottomType ) = 0;
      virtual HRESULT __stdcall put_BevelBottomType (
        /*[in]*/ enum Office::MsoBevelType BevelBottomType ) = 0;
      virtual HRESULT __stdcall get_BevelBottomInset (
        /*[out,retval]*/ float * BevelBottomInset ) = 0;
      virtual HRESULT __stdcall put_BevelBottomInset (
        /*[in]*/ float BevelBottomInset ) = 0;
      virtual HRESULT __stdcall get_BevelBottomDepth (
        /*[out,retval]*/ float * BevelBottomDepth ) = 0;
      virtual HRESULT __stdcall put_BevelBottomDepth (
        /*[in]*/ float BevelBottomDepth ) = 0;
      virtual HRESULT __stdcall get_PresetCamera (
        /*[out,retval]*/ enum Office::MsoPresetCamera * PresetCamera ) = 0;
      virtual HRESULT __stdcall get_RotationZ (
        /*[out,retval]*/ float * RotationZ ) = 0;
      virtual HRESULT __stdcall put_RotationZ (
        /*[in]*/ float RotationZ ) = 0;
      virtual HRESULT __stdcall get_ContourWidth (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_ContourWidth (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_ContourColor (
        /*[out,retval]*/ struct excelColorFormat * * ContourColor ) = 0;
      virtual HRESULT __stdcall get_FieldOfView (
        /*[out,retval]*/ float * FOV ) = 0;
      virtual HRESULT __stdcall put_FieldOfView (
        /*[in]*/ float FOV ) = 0;
      virtual HRESULT __stdcall get_ProjectText (
        /*[out,retval]*/ enum Office::MsoTriState * ProjectText ) = 0;
      virtual HRESULT __stdcall put_ProjectText (
        /*[in]*/ enum Office::MsoTriState ProjectText ) = 0;
      virtual HRESULT __stdcall get_LightAngle (
        /*[out,retval]*/ float * LightAngle ) = 0;
      virtual HRESULT __stdcall put_LightAngle (
        /*[in]*/ float LightAngle ) = 0;
};

struct __declspec(uuid("000c0314-0000-0000-c000-000000000046"))
excelFillFormat : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Background ( ) = 0;
      virtual HRESULT __stdcall OneColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ int Variant,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall Patterned (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall PresetGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ int Variant,
        /*[in]*/ enum Office::MsoPresetGradientType PresetGradientType ) = 0;
      virtual HRESULT __stdcall PresetTextured (
        /*[in]*/ enum Office::MsoPresetTexture PresetTexture ) = 0;
      virtual HRESULT __stdcall Solid ( ) = 0;
      virtual HRESULT __stdcall TwoColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ int Variant ) = 0;
      virtual HRESULT __stdcall UserPicture (
        /*[in]*/ BSTR PictureFile ) = 0;
      virtual HRESULT __stdcall UserTextured (
        /*[in]*/ BSTR TextureFile ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct excelColorFormat * * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ struct excelColorFormat * BackColor ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct excelColorFormat * * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ struct excelColorFormat * ForeColor ) = 0;
      virtual HRESULT __stdcall get_GradientColorType (
        /*[out,retval]*/ enum Office::MsoGradientColorType * GradientColorType ) = 0;
      virtual HRESULT __stdcall get_GradientDegree (
        /*[out,retval]*/ float * GradientDegree ) = 0;
      virtual HRESULT __stdcall get_GradientStyle (
        /*[out,retval]*/ enum Office::MsoGradientStyle * GradientStyle ) = 0;
      virtual HRESULT __stdcall get_GradientVariant (
        /*[out,retval]*/ int * GradientVariant ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * Pattern ) = 0;
      virtual HRESULT __stdcall get_PresetGradientType (
        /*[out,retval]*/ enum Office::MsoPresetGradientType * PresetGradientType ) = 0;
      virtual HRESULT __stdcall get_PresetTexture (
        /*[out,retval]*/ enum Office::MsoPresetTexture * PresetTexture ) = 0;
      virtual HRESULT __stdcall get_TextureName (
        /*[out,retval]*/ BSTR * TextureName ) = 0;
      virtual HRESULT __stdcall get_TextureType (
        /*[out,retval]*/ enum Office::MsoTextureType * TextureType ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float Transparency ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoFillType * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_GradientStops (
        /*[out,retval]*/ struct Office::GradientStops * * GradientStops ) = 0;
      virtual HRESULT __stdcall get_TextureOffsetX (
        /*[out,retval]*/ float * TextureOffsetX ) = 0;
      virtual HRESULT __stdcall put_TextureOffsetX (
        /*[in]*/ float TextureOffsetX ) = 0;
      virtual HRESULT __stdcall get_TextureOffsetY (
        /*[out,retval]*/ float * TextureOffsetY ) = 0;
      virtual HRESULT __stdcall put_TextureOffsetY (
        /*[in]*/ float TextureOffsetY ) = 0;
      virtual HRESULT __stdcall get_TextureAlignment (
        /*[out,retval]*/ enum Office::MsoTextureAlignment * TextureAlignment ) = 0;
      virtual HRESULT __stdcall put_TextureAlignment (
        /*[in]*/ enum Office::MsoTextureAlignment TextureAlignment ) = 0;
      virtual HRESULT __stdcall get_TextureHorizontalScale (
        /*[out,retval]*/ float * HorizontalScale ) = 0;
      virtual HRESULT __stdcall put_TextureHorizontalScale (
        /*[in]*/ float HorizontalScale ) = 0;
      virtual HRESULT __stdcall get_TextureVerticalScale (
        /*[out,retval]*/ float * VerticalScale ) = 0;
      virtual HRESULT __stdcall put_TextureVerticalScale (
        /*[in]*/ float VerticalScale ) = 0;
      virtual HRESULT __stdcall get_TextureTile (
        /*[out,retval]*/ enum Office::MsoTriState * TextureTile ) = 0;
      virtual HRESULT __stdcall put_TextureTile (
        /*[in]*/ enum Office::MsoTriState TextureTile ) = 0;
      virtual HRESULT __stdcall get_RotateWithObject (
        /*[out,retval]*/ enum Office::MsoTriState * RotateWithObject ) = 0;
      virtual HRESULT __stdcall put_RotateWithObject (
        /*[in]*/ enum Office::MsoTriState RotateWithObject ) = 0;
};

struct __declspec(uuid("a43788c1-d91b-11d3-8f39-00c04f3651b8"))
IRTDUpdateEvent : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall UpdateNotify ( ) = 0;
      virtual HRESULT __stdcall get_HeartbeatInterval (
        /*[out,retval]*/ long * plRetVal ) = 0;
      virtual HRESULT __stdcall put_HeartbeatInterval (
        /*[in]*/ long plRetVal ) = 0;
      virtual HRESULT __stdcall Disconnect ( ) = 0;
};

struct __declspec(uuid("ec0e6191-db51-11d3-8f3e-00c04f3651b8"))
IRtdServer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ServerStart (
        /*[in]*/ struct IRTDUpdateEvent * CallbackObject,
        /*[out,retval]*/ long * pfRes ) = 0;
      virtual HRESULT __stdcall ConnectData (
        /*[in]*/ long TopicID,
        /*[in]*/ SAFEARRAY * * Strings,
        /*[in,out]*/ VARIANT_BOOL * GetNewValues,
        /*[out,retval]*/ VARIANT * pvarOut ) = 0;
      virtual HRESULT __stdcall RefreshData (
        /*[in,out]*/ long * TopicCount,
        /*[out,retval]*/ SAFEARRAY * * parrayOut ) = 0;
      virtual HRESULT __stdcall DisconnectData (
        /*[in]*/ long TopicID ) = 0;
      virtual HRESULT __stdcall Heartbeat (
        /*[out,retval]*/ long * pfRes ) = 0;
      virtual HRESULT __stdcall ServerTerminate ( ) = 0;
};

struct __declspec(uuid("000c0398-0000-0000-c000-000000000046"))
excelTextFrame2 : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_MarginBottom (
        /*[out,retval]*/ float * MarginBottom ) = 0;
      virtual HRESULT __stdcall put_MarginBottom (
        /*[in]*/ float MarginBottom ) = 0;
      virtual HRESULT __stdcall get_MarginLeft (
        /*[out,retval]*/ float * MarginLeft ) = 0;
      virtual HRESULT __stdcall put_MarginLeft (
        /*[in]*/ float MarginLeft ) = 0;
      virtual HRESULT __stdcall get_MarginRight (
        /*[out,retval]*/ float * MarginRight ) = 0;
      virtual HRESULT __stdcall put_MarginRight (
        /*[in]*/ float MarginRight ) = 0;
      virtual HRESULT __stdcall get_MarginTop (
        /*[out,retval]*/ float * MarginTop ) = 0;
      virtual HRESULT __stdcall put_MarginTop (
        /*[in]*/ float MarginTop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum Office::MsoTextOrientation * Orientation ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum Office::MsoTextOrientation Orientation ) = 0;
      virtual HRESULT __stdcall get_HorizontalAnchor (
        /*[out,retval]*/ enum Office::MsoHorizontalAnchor * HorizontalAnchor ) = 0;
      virtual HRESULT __stdcall put_HorizontalAnchor (
        /*[in]*/ enum Office::MsoHorizontalAnchor HorizontalAnchor ) = 0;
      virtual HRESULT __stdcall get_VerticalAnchor (
        /*[out,retval]*/ enum Office::MsoVerticalAnchor * VerticalAnchor ) = 0;
      virtual HRESULT __stdcall put_VerticalAnchor (
        /*[in]*/ enum Office::MsoVerticalAnchor VerticalAnchor ) = 0;
      virtual HRESULT __stdcall get_PathFormat (
        /*[out,retval]*/ enum Office::MsoPathFormat * PathFormat ) = 0;
      virtual HRESULT __stdcall put_PathFormat (
        /*[in]*/ enum Office::MsoPathFormat PathFormat ) = 0;
      virtual HRESULT __stdcall get_WarpFormat (
        /*[out,retval]*/ enum Office::MsoWarpFormat * WarpFormat ) = 0;
      virtual HRESULT __stdcall put_WarpFormat (
        /*[in]*/ enum Office::MsoWarpFormat WarpFormat ) = 0;
      virtual HRESULT __stdcall get_WordArtformat (
        /*[out,retval]*/ enum Office::MsoPresetTextEffect * WordArtformat ) = 0;
      virtual HRESULT __stdcall put_WordArtformat (
        /*[in]*/ enum Office::MsoPresetTextEffect WordArtformat ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ enum Office::MsoTriState * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ enum Office::MsoTriState WordWrap ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ enum Office::MsoAutoSize * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ enum Office::MsoAutoSize AutoSize ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct excelThreeDFormat * * ThreeD ) = 0;
      virtual HRESULT __stdcall get_HasText (
        /*[out,retval]*/ enum Office::MsoTriState * pHasText ) = 0;
      virtual HRESULT __stdcall get_TextRange (
        /*[out,retval]*/ struct Office::TextRange2 * * Range ) = 0;
      virtual HRESULT __stdcall get_excelColumn (
        /*[out,retval]*/ struct Office::TextColumn2 * * excelColumn ) = 0;
      virtual HRESULT __stdcall get_Ruler (
        /*[out,retval]*/ struct Office::Ruler2 * * Ruler ) = 0;
      virtual HRESULT __stdcall DeleteText ( ) = 0;
};

enum Constants
{
    xlAll = -4104,
    xlAutomatic = -4105,
    xlBoth = 1,
    xlCenter = -4108,
    xlChecker = 9,
    xlCircle = 8,
    xlCorner = 2,
    xlCrissCross = 16,
    xlCross = 4,
    xlDiamond = 2,
    xlDistributed = -4117,
    xlDoubleAccounting = 5,
    xlFixedValue = 1,
    xlFormats = -4122,
    xlGray16 = 17,
    xlGray8 = 18,
    xlGrid = 15,
    xlHigh = -4127,
    xlInside = 2,
    xlJustify = -4130,
    xlLightDown = 13,
    xlLightHorizontal = 11,
    xlLightUp = 14,
    xlLightVertical = 12,
    xlLow = -4134,
    xlManual = -4135,
    xlMinusValues = 3,
    xlModule = -4141,
    xlNextToAxis = 4,
    xlNone = -4142,
    xlNotes = -4144,
    xlOff = -4146,
    xlOn = 1,
    xlPercent = 2,
    xlPlus = 9,
    xlPlusValues = 2,
    xlSemiGray75 = 10,
    xlShowLabel = 4,
    xlShowLabelAndPercent = 5,
    xlShowPercent = 3,
    xlShowValue = 2,
    xlSimple = -4154,
    xlSingle = 2,
    xlSingleAccounting = 4,
    xlSolid = 1,
    xlSquare = 1,
    xlStar = 5,
    xlStError = 4,
    xlToolbarButton = 2,
    xlTriangle = 3,
    xlGray25 = -4124,
    xlGray50 = -4125,
    xlGray75 = -4126,
    xlBottom = -4107,
    xlLeft = -4131,
    xlRight = -4152,
    xlTop = -4160,
    xl3DBar = -4099,
    xl3DSurface = -4103,
    xlBar = 2,
    xlColumn = 3,
    xlCombination = -4111,
    xlCustom = -4114,
    xlDefaultAutoFormat = -1,
    xlMaximum = 2,
    xlMinimum = 4,
    xlOpaque = 3,
    xlTransparent = 2,
    xlBidi = -5000,
    xlLatin = -5001,
    xlContext = -5002,
    xlLTR = -5003,
    xlRTL = -5004,
    xlFullScript = 1,
    xlPartialScript = 2,
    xlMixedScript = 3,
    xlMixedAuthorizedScript = 4,
    xlVisualCursor = 2,
    xlLogicalCursor = 1,
    xlSystem = 1,
    xlPartial = 3,
    xlHindiNumerals = 3,
    xlBidiCalendar = 3,
    xlGregorian = 2,
    xlComplete = 4,
    xlScale = 3,
    xlClosed = 3,
    xlColor1 = 7,
    xlColor2 = 8,
    xlColor3 = 9,
    xlConstants = 2,
    xlContents = 2,
    xlBelow = 1,
    xlCascade = 7,
    xlCenterAcrossSelection = 7,
    xlChart4 = 2,
    xlChartSeries = 17,
    xlChartShort = 6,
    xlChartTitles = 18,
    xlClassic1 = 1,
    xlClassic2 = 2,
    xlClassic3 = 3,
    xl3DEffects1 = 13,
    xl3DEffects2 = 14,
    xlAbove = 0,
    xlAccounting1 = 4,
    xlAccounting2 = 5,
    xlAccounting3 = 6,
    xlAccounting4 = 17,
    xlAdd = 2,
    xlDebugCodePane = 13,
    xlDesktop = 9,
    xlDirect = 1,
    xlDivide = 5,
    xlDoubleClosed = 5,
    xlDoubleOpen = 4,
    xlDoubleQuote = 1,
    xlEntireChart = 20,
    xlExcelMenus = 1,
    xlExtended = 3,
    xlFill = 5,
    xlFirst = 0,
    xlFloating = 5,
    xlFormula = 5,
    xlGeneral = 1,
    xlGridline = 22,
    xlIcons = 1,
    xlImmediatePane = 12,
    xlInteger = 2,
    xlLast = 1,
    xlLastCell = 11,
    xlList1 = 10,
    xlList2 = 11,
    xlList3 = 12,
    xlLocalFormat1 = 15,
    xlLocalFormat2 = 16,
    xlLong = 3,
    xlLotusHelp = 2,
    xlMacrosheetCell = 7,
    xlMixed = 2,
    xlMultiply = 4,
    xlNarrow = 1,
    xlNoDocuments = 3,
    xlOpen = 2,
    xlOutside = 3,
    xlReference = 4,
    xlSemiautomatic = 2,
    xlShort = 1,
    xlSingleQuote = 2,
    xlStrict = 2,
    xlSubtract = 3,
    xlTextBox = 16,
    xlTiled = 1,
    xlTitleBar = 8,
    xlToolbar = 1,
    xlVisible = 12,
    xlWatchPane = 11,
    xlWide = 3,
    xlWorkbookTab = 6,
    xlWorksheet4 = 1,
    xlWorksheetCell = 3,
    xlWorksheetShort = 5,
    xlAllExceptBorders = 7,
    xlLeftToRight = 2,
    xlTopToBottom = 1,
    xlVeryHidden = 2,
    xlDrawingObject = 14
};

enum XlCreator
{
    xlCreatorCode = 1480803660
};

enum XlChartGallery
{
    xlBuiltIn = 21,
    xlUserDefined = 22,
    xlAnyGallery = 23
};

enum XlColorIndex
{
    xlColorIndexAutomatic = -4105,
    xlColorIndexNone = -4142
};

enum XlEndStyleCap
{
    xlCap = 1,
    xlNoCap = 2
};

enum XlRowCol
{
    xlColumns = 2,
    xlRows = 1
};

enum XlScaleType
{
    xlScaleLinear = -4132,
    xlScaleLogarithmic = -4133
};

enum XlDataSeriesType
{
    xlAutoFill = 4,
    xlChronological = 3,
    xlGrowth = 2,
    xlDataSeriesLinear = -4132
};

enum XlAxisCrosses
{
    xlAxisCrossesAutomatic = -4105,
    xlAxisCrossesCustom = -4114,
    xlAxisCrossesMaximum = 2,
    xlAxisCrossesMinimum = 4
};

enum XlAxisGroup
{
    xlPrimary = 1,
    xlSecondary = 2
};

enum XlBackground
{
    xlBackgroundAutomatic = -4105,
    xlBackgroundOpaque = 3,
    xlBackgroundTransparent = 2
};

enum XlWindowState
{
    xlMaximized = -4137,
    xlMinimized = -4140,
    xlNormal = -4143
};

enum XlAxisType
{
    xlCategory = 1,
    xlSeriesAxis = 3,
    xlValue = 2
};

enum XlArrowHeadLength
{
    xlArrowHeadLengthLong = 3,
    xlArrowHeadLengthMedium = -4138,
    xlArrowHeadLengthShort = 1
};

enum XlVAlign
{
    xlVAlignBottom = -4107,
    xlVAlignCenter = -4108,
    xlVAlignDistributed = -4117,
    xlVAlignJustify = -4130,
    xlVAlignTop = -4160
};

enum XlTickMark
{
    xlTickMarkCross = 4,
    xlTickMarkInside = 2,
    xlTickMarkNone = -4142,
    xlTickMarkOutside = 3
};

enum XlErrorBarDirection
{
    xlX = -4168,
    xlY = 1
};

enum XlErrorBarInclude
{
    xlErrorBarIncludeBoth = 1,
    xlErrorBarIncludeMinusValues = 3,
    xlErrorBarIncludeNone = -4142,
    xlErrorBarIncludePlusValues = 2
};

enum XlDisplayBlanksAs
{
    xlInterpolated = 3,
    xlNotPlotted = 1,
    xlZero = 2
};

enum XlArrowHeadStyle
{
    xlArrowHeadStyleClosed = 3,
    xlArrowHeadStyleDoubleClosed = 5,
    xlArrowHeadStyleDoubleOpen = 4,
    xlArrowHeadStyleNone = -4142,
    xlArrowHeadStyleOpen = 2
};

enum XlArrowHeadWidth
{
    xlArrowHeadWidthMedium = -4138,
    xlArrowHeadWidthNarrow = 1,
    xlArrowHeadWidthWide = 3
};

enum XlHAlign
{
    xlHAlignCenter = -4108,
    xlHAlignCenterAcrossSelection = 7,
    xlHAlignDistributed = -4117,
    xlHAlignFill = 5,
    xlHAlignGeneral = 1,
    xlHAlignJustify = -4130,
    xlHAlignLeft = -4131,
    xlHAlignRight = -4152
};

enum XlTickLabelPosition
{
    xlTickLabelPositionHigh = -4127,
    xlTickLabelPositionLow = -4134,
    xlTickLabelPositionNextToAxis = 4,
    xlTickLabelPositionNone = -4142
};

enum XlLegendPosition
{
    xlLegendPositionBottom = -4107,
    xlLegendPositionCorner = 2,
    xlLegendPositionLeft = -4131,
    xlLegendPositionRight = -4152,
    xlLegendPositionTop = -4160,
    xlLegendPositionCustom = -4161
};

enum XlChartPictureType
{
    xlStackScale = 3,
    xlStack = 2,
    xlStretch = 1
};

enum XlChartPicturePlacement
{
    xlSides = 1,
    xlEnd = 2,
    xlEndSides = 3,
    xlFront = 4,
    xlFrontSides = 5,
    xlFrontEnd = 6,
    xlAllFaces = 7
};

enum XlOrientation
{
    xlDownward = -4170,
    xlHorizontal = -4128,
    xlUpward = -4171,
    xlVertical = -4166
};

enum XlTickLabelOrientation
{
    xlTickLabelOrientationAutomatic = -4105,
    xlTickLabelOrientationDownward = -4170,
    xlTickLabelOrientationHorizontal = -4128,
    xlTickLabelOrientationUpward = -4171,
    xlTickLabelOrientationVertical = -4166
};

enum XlBorderWeight
{
    xlHairline = 1,
    xlMedium = -4138,
    xlThick = 4,
    xlThin = 2
};

enum XlDataSeriesDate
{
    xlDay = 1,
    xlMonth = 3,
    xlWeekday = 2,
    xlYear = 4
};

enum XlUnderlineStyle
{
    xlUnderlineStyleDouble = -4119,
    xlUnderlineStyleDoubleAccounting = 5,
    xlUnderlineStyleNone = -4142,
    xlUnderlineStyleSingle = 2,
    xlUnderlineStyleSingleAccounting = 4
};

enum XlErrorBarType
{
    xlErrorBarTypeCustom = -4114,
    xlErrorBarTypeFixedValue = 1,
    xlErrorBarTypePercent = 2,
    xlErrorBarTypeStDev = -4155,
    xlErrorBarTypeStError = 4
};

enum XlTrendlineType
{
    xlExponential = 5,
    xlLinear = -4132,
    xlLogarithmic = -4133,
    xlMovingAvg = 6,
    xlPolynomial = 3,
    xlPower = 4
};

enum XlLineStyle
{
    xlContinuous = 1,
    xlDash = -4115,
    xlDashDot = 4,
    xlDashDotDot = 5,
    xlDot = -4118,
    xlDouble = -4119,
    xlSlantDashDot = 13,
    xlLineStyleNone = -4142
};

enum XlDataLabelsType
{
    xlDataLabelsShowNone = -4142,
    xlDataLabelsShowValue = 2,
    xlDataLabelsShowPercent = 3,
    xlDataLabelsShowLabel = 4,
    xlDataLabelsShowLabelAndPercent = 5,
    xlDataLabelsShowBubbleSizes = 6
};

enum XlMarkerStyle
{
    xlMarkerStyleAutomatic = -4105,
    xlMarkerStyleCircle = 8,
    xlMarkerStyleDash = -4115,
    xlMarkerStyleDiamond = 2,
    xlMarkerStyleDot = -4118,
    xlMarkerStyleNone = -4142,
    xlMarkerStylePicture = -4147,
    xlMarkerStylePlus = 9,
    xlMarkerStyleSquare = 1,
    xlMarkerStyleStar = 5,
    xlMarkerStyleTriangle = 3,
    xlMarkerStyleX = -4168
};

enum XlPictureConvertorType
{
    xlBMP = 1,
    xlCGM = 7,
    xlDRW = 4,
    xlDXF = 5,
    xlEPS = 8,
    xlHGL = 6,
    xlPCT = 13,
    xlPCX = 10,
    xlPIC = 11,
    xlPLT = 12,
    xlTIF = 9,
    xlWMF = 2,
    xlWPG = 3
};

enum XlPattern
{
    xlPatternAutomatic = -4105,
    xlPatternChecker = 9,
    xlPatternCrissCross = 16,
    xlPatternDown = -4121,
    xlPatternGray16 = 17,
    xlPatternGray25 = -4124,
    xlPatternGray50 = -4125,
    xlPatternGray75 = -4126,
    xlPatternGray8 = 18,
    xlPatternGrid = 15,
    xlPatternHorizontal = -4128,
    xlPatternLightDown = 13,
    xlPatternLightHorizontal = 11,
    xlPatternLightUp = 14,
    xlPatternLightVertical = 12,
    xlPatternNone = -4142,
    xlPatternSemiGray75 = 10,
    xlPatternSolid = 1,
    xlPatternUp = -4162,
    xlPatternVertical = -4166,
    xlPatternLinearGradient = 4000,
    xlPatternRectangularGradient = 4001
};

enum XlChartSplitType
{
    xlSplitByPosition = 1,
    xlSplitByPercentValue = 3,
    xlSplitByCustomSplit = 4,
    xlSplitByValue = 2
};

enum XlDisplayUnit
{
    xlHundreds = -2,
    xlThousands = -3,
    xlTenThousands = -4,
    xlHundredThousands = -5,
    xlMillions = -6,
    xlTenMillions = -7,
    xlHundredMillions = -8,
    xlThousandMillions = -9,
    xlMillionMillions = -10
};

enum XlDataLabelPosition
{
    xlLabelPositionCenter = -4108,
    xlLabelPositionAbove = 0,
    xlLabelPositionBelow = 1,
    xlLabelPositionLeft = -4131,
    xlLabelPositionRight = -4152,
    xlLabelPositionOutsideEnd = 2,
    xlLabelPositionInsideEnd = 3,
    xlLabelPositionInsideBase = 4,
    xlLabelPositionBestFit = 5,
    xlLabelPositionMixed = 6,
    xlLabelPositionCustom = 7
};

enum XlTimeUnit
{
    xlDays = 0,
    xlMonths = 1,
    xlYears = 2
};

enum XlCategoryType
{
    xlCategoryScale = 2,
    xlTimeScale = 3,
    xlAutomaticScale = -4105
};

enum XlBarShape
{
    xlBox = 0,
    xlPyramidToPoint = 1,
    xlPyramidToMax = 2,
    xlCylinder = 3,
    xlConeToPoint = 4,
    xlConeToMax = 5
};

enum excelXlChartType
{
    xlColumnClustered = 51,
    xlColumnStacked = 52,
    xlColumnStacked100 = 53,
    xl3DColumnClustered = 54,
    xl3DColumnStacked = 55,
    xl3DColumnStacked100 = 56,
    xlBarClustered = 57,
    xlBarStacked = 58,
    xlBarStacked100 = 59,
    xl3DBarClustered = 60,
    xl3DBarStacked = 61,
    xl3DBarStacked100 = 62,
    xlLineStacked = 63,
    xlLineStacked100 = 64,
    xlLineMarkers = 65,
    xlLineMarkersStacked = 66,
    xlLineMarkersStacked100 = 67,
    xlPieOfPie = 68,
    xlPieExploded = 69,
    xl3DPieExploded = 70,
    xlBarOfPie = 71,
    xlXYScatterSmooth = 72,
    xlXYScatterSmoothNoMarkers = 73,
    xlXYScatterLines = 74,
    xlXYScatterLinesNoMarkers = 75,
    xlAreaStacked = 76,
    xlAreaStacked100 = 77,
    xl3DAreaStacked = 78,
    xl3DAreaStacked100 = 79,
    xlDoughnutExploded = 80,
    xlRadarMarkers = 81,
    xlRadarFilled = 82,
    xlSurface = 83,
    xlSurfaceWireframe = 84,
    xlSurfaceTopView = 85,
    xlSurfaceTopViewWireframe = 86,
    xlBubble = 15,
    xlBubble3DEffect = 87,
    xlStockHLC = 88,
    xlStockOHLC = 89,
    xlStockVHLC = 90,
    xlStockVOHLC = 91,
    xlCylinderColClustered = 92,
    xlCylinderColStacked = 93,
    xlCylinderColStacked100 = 94,
    xlCylinderBarClustered = 95,
    xlCylinderBarStacked = 96,
    xlCylinderBarStacked100 = 97,
    xlCylinderCol = 98,
    xlConeColClustered = 99,
    xlConeColStacked = 100,
    xlConeColStacked100 = 101,
    xlConeBarClustered = 102,
    xlConeBarStacked = 103,
    xlConeBarStacked100 = 104,
    xlConeCol = 105,
    xlPyramidColClustered = 106,
    xlPyramidColStacked = 107,
    xlPyramidColStacked100 = 108,
    xlPyramidBarClustered = 109,
    xlPyramidBarStacked = 110,
    xlPyramidBarStacked100 = 111,
    xlPyramidCol = 112,
    xl3DColumn = -4100,
    xlLine = 4,
    xl3DLine = -4101,
    xl3DPie = -4102,
    xlPie = 5,
    xlXYScatter = -4169,
    xl3DArea = -4098,
    xlArea = 1,
    xlDoughnut = -4120,
    xlRadar = -4151
};

enum XlChartItem
{
    xlDataLabel = 0,
    xlChartArea = 2,
    xlSeries = 3,
    xlChartTitle = 4,
    xlWalls = 5,
    xlCorners = 6,
    xlDataTable = 7,
    xlTrendline = 8,
    xlErrorBars = 9,
    xlXErrorBars = 10,
    xlYErrorBars = 11,
    xlLegendEntry = 12,
    xlLegendKey = 13,
    xlShape = 14,
    xlMajorGridlines = 15,
    xlMinorGridlines = 16,
    xlAxisTitle = 17,
    xlUpBars = 18,
    xlPlotArea = 19,
    xlDownBars = 20,
    xlAxis = 21,
    xlSeriesLines = 22,
    xlFloor = 23,
    xlLegend = 24,
    xlHiLoLines = 25,
    xlDropLines = 26,
    xlRadarAxisLabels = 27,
    xlNothing = 28,
    xlLeaderLines = 29,
    xlDisplayUnitLabel = 30,
    xlPivotChartFieldButton = 31,
    xlPivotChartDropZone = 32
};

enum XlSizeRepresents
{
    xlSizeIsWidth = 2,
    xlSizeIsArea = 1
};

enum XlInsertShiftDirection
{
    xlShiftDown = -4121,
    xlShiftToRight = -4161
};

enum XlDeleteShiftDirection
{
    xlShiftToLeft = -4159,
    xlShiftUp = -4162
};

enum XlDirection
{
    xlDown = -4121,
    xlToLeft = -4159,
    xlToRight = -4161,
    xlUp = -4162
};

enum XlConsolidationFunction
{
    xlAverage = -4106,
    xlCount = -4112,
    xlCountNums = -4113,
    xlMax = -4136,
    xlMin = -4139,
    xlProduct = -4149,
    xlStDev = -4155,
    xlStDevP = -4156,
    xlSum = -4157,
    xlVar = -4164,
    xlVarP = -4165,
    xlUnknown = 1000
};

enum XlSheetType
{
    xlChart = -4109,
    xlDialogSheet = -4116,
    xlExcel4IntlMacroSheet = 4,
    xlExcel4MacroSheet = 3,
    xlWorksheet = -4167
};

enum XlLocationInTable
{
    xlColumnHeader = -4110,
    xlColumnItem = 5,
    xlDataHeader = 3,
    xlDataItem = 7,
    xlPageHeader = 2,
    xlPageItem = 6,
    xlRowHeader = -4153,
    xlRowItem = 4,
    xlTableBody = 8
};

enum XlFindLookIn
{
    xlFormulas = -4123,
    xlComments = -4144,
    xlValues = -4163
};

enum XlWindowType
{
    xlChartAsWindow = 5,
    xlChartInPlace = 4,
    xlClipboard = 3,
    xlInfo = -4129,
    xlWorkbook = 1
};

enum XlPivotFieldDataType
{
    xlDate = 2,
    xlNumber = -4145,
    xlText = -4158
};

enum XlCopyPictureFormat
{
    xlBitmap = 2,
    xlPicture = -4147
};

enum XlPivotTableSourceType
{
    xlScenario = 4,
    xlConsolidation = 3,
    xlDatabase = 1,
    xlExternal = 2,
    xlPivotTable = -4148
};

enum XlReferenceStyle
{
    xlA1 = 1,
    xlR1C1 = -4150
};

enum XlMSApplication
{
    xlMicrosoftAccess = 4,
    xlMicrosoftFoxPro = 5,
    xlMicrosoftMail = 3,
    xlMicrosoftPowerPoint = 2,
    xlMicrosoftProject = 6,
    xlMicrosoftSchedulePlus = 7,
    xlMicrosoftWord = 1
};

enum XlMouseButton
{
    xlNoButton = 0,
    xlPrimaryButton = 1,
    xlSecondaryButton = 2
};

enum XlCutCopyMode
{
    xlCopy = 1,
    xlCut = 2
};

enum XlFillWith
{
    xlFillWithAll = -4104,
    xlFillWithContents = 2,
    xlFillWithFormats = -4122
};

enum XlFilterAction
{
    xlFilterCopy = 2,
    xlFilterInPlace = 1
};

enum XlOrder
{
    xlDownThenOver = 1,
    xlOverThenDown = 2
};

enum XlLinkType
{
    xlLinkTypeExcelLinks = 1,
    xlLinkTypeOLELinks = 2
};

enum XlApplyNamesOrder
{
    xlColumnThenRow = 2,
    xlRowThenColumn = 1
};

enum XlEnableCancelKey
{
    xlDisabled = 0,
    xlErrorHandler = 2,
    xlInterrupt = 1
};

enum XlPageBreak
{
    xlPageBreakAutomatic = -4105,
    xlPageBreakManual = -4135,
    xlPageBreakNone = -4142
};

enum XlOLEType
{
    xlOLEControl = 2,
    xlOLEEmbed = 1,
    xlOLELink = 0
};

enum XlPageOrientation
{
    xlLandscape = 2,
    xlPortrait = 1
};

enum XlLinkInfo
{
    xlEditionDate = 2,
    xlUpdateState = 1,
    xlLinkInfoStatus = 3
};

enum XlCommandUnderlines
{
    xlCommandUnderlinesAutomatic = -4105,
    xlCommandUnderlinesOff = -4146,
    xlCommandUnderlinesOn = 1
};

enum XlOLEVerb
{
    xlVerbOpen = 2,
    xlVerbPrimary = 1
};

enum XlCalculation
{
    xlCalculationAutomatic = -4105,
    xlCalculationManual = -4135,
    xlCalculationSemiautomatic = 2
};

enum XlFileAccess
{
    xlReadOnly = 3,
    xlReadWrite = 2
};

enum XlEditionType
{
    xlPublisher = 1,
    xlSubscriber = 2
};

enum XlObjectSize
{
    xlFitToPage = 2,
    xlFullPage = 3,
    xlScreenSize = 1
};

enum XlLookAt
{
    xlPart = 2,
    xlWhole = 1
};

enum XlMailSystem
{
    xlMAPI = 1,
    xlNoMailSystem = 0,
    xlPowerTalk = 2
};

enum XlLinkInfoType
{
    xlLinkInfoOLELinks = 2,
    xlLinkInfoPublishers = 5,
    xlLinkInfoSubscribers = 6
};

enum XlCVError
{
    xlErrDiv0 = 2007,
    xlErrNA = 2042,
    xlErrName = 2029,
    xlErrNull = 2000,
    xlErrNum = 2036,
    xlErrRef = 2023,
    xlErrValue = 2015
};

enum XlEditionFormat
{
    xlBIFF = 2,
    xlPICT = 1,
    xlRTF = 4,
    xlVALU = 8
};

enum XlLink
{
    xlExcelLinks = 1,
    xlOLELinks = 2,
    xlPublishers = 5,
    xlSubscribers = 6
};

enum XlCellType
{
    xlCellTypeBlanks = 4,
    xlCellTypeConstants = 2,
    xlCellTypeFormulas = -4123,
    xlCellTypeLastCell = 11,
    xlCellTypeComments = -4144,
    xlCellTypeVisible = 12,
    xlCellTypeAllFormatConditions = -4172,
    xlCellTypeSameFormatConditions = -4173,
    xlCellTypeAllValidation = -4174,
    xlCellTypeSameValidation = -4175
};

enum XlArrangeStyle
{
    xlArrangeStyleCascade = 7,
    xlArrangeStyleHorizontal = -4128,
    xlArrangeStyleTiled = 1,
    xlArrangeStyleVertical = -4166
};

enum XlMousePointer
{
    xlIBeam = 3,
    xlDefault = -4143,
    xlNorthwestArrow = 1,
    xlWait = 2
};

enum XlEditionOptionsOption
{
    xlAutomaticUpdate = 4,
    xlCancel = 1,
    xlChangeAttributes = 6,
    xlManualUpdate = 5,
    xlOpenSource = 3,
    xlSelect = 3,
    xlSendPublisher = 2,
    xlUpdateSubscriber = 2
};

enum XlAutoFillType
{
    xlFillCopy = 1,
    xlFillDays = 5,
    xlFillDefault = 0,
    xlFillFormats = 3,
    xlFillMonths = 7,
    xlFillSeries = 2,
    xlFillValues = 4,
    xlFillWeekdays = 6,
    xlFillYears = 8,
    xlGrowthTrend = 10,
    xlLinearTrend = 9
};

enum XlAutoFilterOperator
{
    xlAnd = 1,
    xlBottom10Items = 4,
    xlBottom10Percent = 6,
    xlOr = 2,
    xlTop10Items = 3,
    xlTop10Percent = 5,
    xlFilterValues = 7,
    xlFilterCellColor = 8,
    xlFilterFontColor = 9,
    xlFilterIcon = 10,
    xlFilterDynamic = 11,
    xlFilterNoFill = 12,
    xlFilterAutomaticFontColor = 13,
    xlFilterNoIcon = 14
};

enum XlClipboardFormat
{
    xlClipboardFormatBIFF12 = 63,
    xlClipboardFormatBIFF = 8,
    xlClipboardFormatBIFF2 = 18,
    xlClipboardFormatBIFF3 = 20,
    xlClipboardFormatBIFF4 = 30,
    xlClipboardFormatBinary = 15,
    xlClipboardFormatBitmap = 9,
    xlClipboardFormatCGM = 13,
    xlClipboardFormatCSV = 5,
    xlClipboardFormatDIF = 4,
    xlClipboardFormatDspText = 12,
    xlClipboardFormatEmbeddedObject = 21,
    xlClipboardFormatEmbedSource = 22,
    xlClipboardFormatLink = 11,
    xlClipboardFormatLinkSource = 23,
    xlClipboardFormatLinkSourceDesc = 32,
    xlClipboardFormatMovie = 24,
    xlClipboardFormatNative = 14,
    xlClipboardFormatObjectDesc = 31,
    xlClipboardFormatObjectLink = 19,
    xlClipboardFormatOwnerLink = 17,
    xlClipboardFormatPICT = 2,
    xlClipboardFormatPrintPICT = 3,
    xlClipboardFormatRTF = 7,
    xlClipboardFormatScreenPICT = 29,
    xlClipboardFormatStandardFont = 28,
    xlClipboardFormatStandardScale = 27,
    xlClipboardFormatSYLK = 6,
    xlClipboardFormatTable = 16,
    xlClipboardFormatText = 0,
    xlClipboardFormatToolFace = 25,
    xlClipboardFormatToolFacePICT = 26,
    xlClipboardFormatVALU = 1,
    xlClipboardFormatWK1 = 10
};

enum XlFileFormat
{
    xlAddIn = 18,
    xlCSV = 6,
    xlCSVMac = 22,
    xlCSVMSDOS = 24,
    xlCSVWindows = 23,
    xlDBF2 = 7,
    xlDBF3 = 8,
    xlDBF4 = 11,
    xlDIF = 9,
    xlExcel2 = 16,
    xlExcel2FarEast = 27,
    xlExcel3 = 29,
    xlExcel4 = 33,
    xlExcel5 = 39,
    xlExcel7 = 39,
    xlExcel9795 = 43,
    xlExcel4Workbook = 35,
    xlIntlAddIn = 26,
    xlIntlMacro = 25,
    xlWorkbookNormal = -4143,
    xlSYLK = 2,
    xlTemplate = 17,
    xlCurrentPlatformText = -4158,
    xlTextMac = 19,
    xlTextMSDOS = 21,
    xlTextPrinter = 36,
    xlTextWindows = 20,
    xlWJ2WD1 = 14,
    xlWK1 = 5,
    xlWK1ALL = 31,
    xlWK1FMT = 30,
    xlWK3 = 15,
    xlWK4 = 38,
    xlWK3FM3 = 32,
    xlWKS = 4,
    xlWorks2FarEast = 28,
    xlWQ1 = 34,
    xlWJ3 = 40,
    xlWJ3FJ3 = 41,
    xlUnicodeText = 42,
    xlHtml = 44,
    xlWebArchive = 45,
    xlXMLSpreadsheet = 46,
    xlExcel12 = 50,
    xlOpenXMLWorkbook = 51,
    xlOpenXMLWorkbookMacroEnabled = 52,
    xlOpenXMLTemplateMacroEnabled = 53,
    xlTemplate8 = 17,
    xlOpenXMLTemplate = 54,
    xlAddIn8 = 18,
    xlOpenXMLAddIn = 55,
    xlExcel8 = 56,
    xlWorkbookDefault = 51
};

enum XlApplicationInternational
{
    xl24HourClock = 33,
    xl4DigitYears = 43,
    xlAlternateArraySeparator = 16,
    xlColumnSeparator = 14,
    xlCountryCode = 1,
    xlCountrySetting = 2,
    xlCurrencyBefore = 37,
    xlCurrencyCode = 25,
    xlCurrencyDigits = 27,
    xlCurrencyLeadingZeros = 40,
    xlCurrencyMinusSign = 38,
    xlCurrencyNegative = 28,
    xlCurrencySpaceBefore = 36,
    xlCurrencyTrailingZeros = 39,
    xlDateOrder = 32,
    xlDateSeparator = 17,
    xlDayCode = 21,
    xlDayLeadingZero = 42,
    xlDecimalSeparator = 3,
    xlGeneralFormatName = 26,
    xlHourCode = 22,
    xlLeftBrace = 12,
    xlLeftBracket = 10,
    xlListSeparator = 5,
    xlLowerCaseColumnLetter = 9,
    xlLowerCaseRowLetter = 8,
    xlMDY = 44,
    xlMetric = 35,
    xlMinuteCode = 23,
    xlMonthCode = 20,
    xlMonthLeadingZero = 41,
    xlMonthNameChars = 30,
    xlNoncurrencyDigits = 29,
    xlNonEnglishFunctions = 34,
    xlRightBrace = 13,
    xlRightBracket = 11,
    xlRowSeparator = 15,
    xlSecondCode = 24,
    xlThousandsSeparator = 4,
    xlTimeLeadingZero = 45,
    xlTimeSeparator = 18,
    xlUpperCaseColumnLetter = 7,
    xlUpperCaseRowLetter = 6,
    xlWeekdayNameChars = 31,
    xlYearCode = 19
};

enum XlPageBreakExtent
{
    xlPageBreakFull = 1,
    xlPageBreakPartial = 2
};

enum XlCellInsertionMode
{
    xlOverwriteCells = 0,
    xlInsertDeleteCells = 1,
    xlInsertEntireRows = 2
};

enum XlFormulaLabel
{
    xlNoLabels = -4142,
    xlRowLabels = 1,
    xlColumnLabels = 2,
    xlMixedLabels = 3
};

enum XlHighlightChangesTime
{
    xlSinceMyLastSave = 1,
    xlAllChanges = 2,
    xlNotYetReviewed = 3
};

enum XlCommentDisplayMode
{
    xlNoIndicator = 0,
    xlCommentIndicatorOnly = -1,
    xlCommentAndIndicator = 1
};

enum XlFormatConditionType
{
    xlCellValue = 1,
    xlExpression = 2,
    xlColorScale = 3,
    xlDatabar = 4,
    xlTop10 = 5,
    xlIconSets = 6,
    xlUniqueValues = 8,
    xlTextString = 9,
    xlBlanksCondition = 10,
    xlTimePeriod = 11,
    xlAboveAverageCondition = 12,
    xlNoBlanksCondition = 13,
    xlErrorsCondition = 16,
    xlNoErrorsCondition = 17
};

enum XlFormatConditionOperator
{
    xlBetween = 1,
    xlNotBetween = 2,
    xlEqual = 3,
    xlNotEqual = 4,
    xlGreater = 5,
    xlLess = 6,
    xlGreaterEqual = 7,
    xlLessEqual = 8
};

enum XlEnableSelection
{
    xlNoRestrictions = 0,
    xlUnlockedCells = 1,
    xlNoSelection = -4142
};

enum XlDVType
{
    xlValidateInputOnly = 0,
    xlValidateWholeNumber = 1,
    xlValidateDecimal = 2,
    xlValidateList = 3,
    xlValidateDate = 4,
    xlValidateTime = 5,
    xlValidateTextLength = 6,
    xlValidateCustom = 7
};

enum XlIMEMode
{
    xlIMEModeNoControl = 0,
    xlIMEModeOn = 1,
    xlIMEModeOff = 2,
    xlIMEModeDisable = 3,
    xlIMEModeHiragana = 4,
    xlIMEModeKatakana = 5,
    xlIMEModeKatakanaHalf = 6,
    xlIMEModeAlphaFull = 7,
    xlIMEModeAlpha = 8,
    xlIMEModeHangulFull = 9,
    xlIMEModeHangul = 10
};

enum XlDVAlertStyle
{
    xlValidAlertStop = 1,
    xlValidAlertWarning = 2,
    xlValidAlertInformation = 3
};

enum XlChartLocation
{
    xlLocationAsNewSheet = 1,
    xlLocationAsObject = 2,
    xlLocationAutomatic = 3
};

enum XlPaperSize
{
    xlPaper10x14 = 16,
    xlPaper11x17 = 17,
    xlPaperA3 = 8,
    xlPaperA4 = 9,
    xlPaperA4Small = 10,
    xlPaperA5 = 11,
    xlPaperB4 = 12,
    xlPaperB5 = 13,
    xlPaperCsheet = 24,
    xlPaperDsheet = 25,
    xlPaperEnvelope10 = 20,
    xlPaperEnvelope11 = 21,
    xlPaperEnvelope12 = 22,
    xlPaperEnvelope14 = 23,
    xlPaperEnvelope9 = 19,
    xlPaperEnvelopeB4 = 33,
    xlPaperEnvelopeB5 = 34,
    xlPaperEnvelopeB6 = 35,
    xlPaperEnvelopeC3 = 29,
    xlPaperEnvelopeC4 = 30,
    xlPaperEnvelopeC5 = 28,
    xlPaperEnvelopeC6 = 31,
    xlPaperEnvelopeC65 = 32,
    xlPaperEnvelopeDL = 27,
    xlPaperEnvelopeItaly = 36,
    xlPaperEnvelopeMonarch = 37,
    xlPaperEnvelopePersonal = 38,
    xlPaperEsheet = 26,
    xlPaperExecutive = 7,
    xlPaperFanfoldLegalGerman = 41,
    xlPaperFanfoldStdGerman = 40,
    xlPaperFanfoldUS = 39,
    xlPaperFolio = 14,
    xlPaperLedger = 4,
    xlPaperLegal = 5,
    xlPaperLetter = 1,
    xlPaperLetterSmall = 2,
    xlPaperNote = 18,
    xlPaperQuarto = 15,
    xlPaperStatement = 6,
    xlPaperTabloid = 3,
    xlPaperUser = 256
};

enum XlPasteSpecialOperation
{
    xlPasteSpecialOperationAdd = 2,
    xlPasteSpecialOperationDivide = 5,
    xlPasteSpecialOperationMultiply = 4,
    xlPasteSpecialOperationNone = -4142,
    xlPasteSpecialOperationSubtract = 3
};

enum XlPasteType
{
    xlPasteAll = -4104,
    xlPasteAllUsingSourceTheme = 13,
    xlPasteAllExceptBorders = 7,
    xlPasteFormats = -4122,
    xlPasteFormulas = -4123,
    xlPasteComments = -4144,
    xlPasteValues = -4163,
    xlPasteColumnWidths = 8,
    xlPasteValidation = 6,
    xlPasteFormulasAndNumberFormats = 11,
    xlPasteValuesAndNumberFormats = 12
};

enum XlPhoneticCharacterType
{
    xlKatakanaHalf = 0,
    xlKatakana = 1,
    xlHiragana = 2,
    xlNoConversion = 3
};

enum XlPhoneticAlignment
{
    xlPhoneticAlignNoControl = 0,
    xlPhoneticAlignLeft = 1,
    xlPhoneticAlignCenter = 2,
    xlPhoneticAlignDistributed = 3
};

enum XlPictureAppearance
{
    xlPrinter = 2,
    xlScreen = 1
};

enum XlPivotFieldOrientation
{
    xlColumnField = 2,
    xlDataField = 4,
    xlHidden = 0,
    xlPageField = 3,
    xlRowField = 1
};

enum XlPivotFieldCalculation
{
    xlDifferenceFrom = 2,
    xlIndex = 9,
    xlNoAdditionalCalculation = -4143,
    xlPercentDifferenceFrom = 4,
    xlPercentOf = 3,
    xlPercentOfColumn = 7,
    xlPercentOfRow = 6,
    xlPercentOfTotal = 8,
    xlRunningTotal = 5
};

enum XlPlacement
{
    xlFreeFloating = 3,
    xlMove = 2,
    xlMoveAndSize = 1
};

enum XlPlatform
{
    xlMacintosh = 1,
    xlMSDOS = 3,
    xlWindows = 2
};

enum XlPrintLocation
{
    xlPrintSheetEnd = 1,
    xlPrintInPlace = 16,
    xlPrintNoComments = -4142
};

enum XlPriority
{
    xlPriorityHigh = -4127,
    xlPriorityLow = -4134,
    xlPriorityNormal = -4143
};

enum XlPTSelectionMode
{
    xlLabelOnly = 1,
    xlDataAndLabel = 0,
    xlDataOnly = 2,
    xlOrigin = 3,
    xlButton = 15,
    xlBlanks = 4,
    xlFirstRow = 256
};

enum XlRangeAutoFormat
{
    xlRangeAutoFormat3DEffects1 = 13,
    xlRangeAutoFormat3DEffects2 = 14,
    xlRangeAutoFormatAccounting1 = 4,
    xlRangeAutoFormatAccounting2 = 5,
    xlRangeAutoFormatAccounting3 = 6,
    xlRangeAutoFormatAccounting4 = 17,
    xlRangeAutoFormatClassic1 = 1,
    xlRangeAutoFormatClassic2 = 2,
    xlRangeAutoFormatClassic3 = 3,
    xlRangeAutoFormatColor1 = 7,
    xlRangeAutoFormatColor2 = 8,
    xlRangeAutoFormatColor3 = 9,
    xlRangeAutoFormatList1 = 10,
    xlRangeAutoFormatList2 = 11,
    xlRangeAutoFormatList3 = 12,
    xlRangeAutoFormatLocalFormat1 = 15,
    xlRangeAutoFormatLocalFormat2 = 16,
    xlRangeAutoFormatLocalFormat3 = 19,
    xlRangeAutoFormatLocalFormat4 = 20,
    xlRangeAutoFormatReport1 = 21,
    xlRangeAutoFormatReport2 = 22,
    xlRangeAutoFormatReport3 = 23,
    xlRangeAutoFormatReport4 = 24,
    xlRangeAutoFormatReport5 = 25,
    xlRangeAutoFormatReport6 = 26,
    xlRangeAutoFormatReport7 = 27,
    xlRangeAutoFormatReport8 = 28,
    xlRangeAutoFormatReport9 = 29,
    xlRangeAutoFormatReport10 = 30,
    xlRangeAutoFormatClassicPivotTable = 31,
    xlRangeAutoFormatTable1 = 32,
    xlRangeAutoFormatTable2 = 33,
    xlRangeAutoFormatTable3 = 34,
    xlRangeAutoFormatTable4 = 35,
    xlRangeAutoFormatTable5 = 36,
    xlRangeAutoFormatTable6 = 37,
    xlRangeAutoFormatTable7 = 38,
    xlRangeAutoFormatTable8 = 39,
    xlRangeAutoFormatTable9 = 40,
    xlRangeAutoFormatTable10 = 41,
    xlRangeAutoFormatPTNone = 42,
    xlRangeAutoFormatNone = -4142,
    xlRangeAutoFormatSimple = -4154
};

enum XlReferenceType
{
    xlAbsolute = 1,
    xlAbsRowRelColumn = 2,
    xlRelative = 4,
    xlRelRowAbsColumn = 3
};

enum XlLayoutFormType
{
    xlTabular = 0,
    xlOutline = 1
};

enum XlRoutingSlipDelivery
{
    xlAllAtOnce = 2,
    xlOneAfterAnother = 1
};

enum XlRoutingSlipStatus
{
    xlNotYetRouted = 0,
    xlRoutingComplete = 2,
    xlRoutingInProgress = 1
};

enum XlRunAutoMacro
{
    xlAutoActivate = 3,
    xlAutoClose = 2,
    xlAutoDeactivate = 4,
    xlAutoOpen = 1
};

enum XlSaveAction
{
    xlDoNotSaveChanges = 2,
    xlSaveChanges = 1
};

enum XlSaveAsAccessMode
{
    xlExclusive = 3,
    xlNoChange = 1,
    xlShared = 2
};

enum XlSaveConflictResolution
{
    xlLocalSessionChanges = 2,
    xlOtherSessionChanges = 3,
    xlUserResolution = 1
};

enum XlSearchDirection
{
    xlNext = 1,
    xlPrevious = 2
};

enum XlSearchOrder
{
    xlByColumns = 2,
    xlByRows = 1
};

enum XlSheetVisibility
{
    xlSheetVisible = -1,
    xlSheetHidden = 0,
    xlSheetVeryHidden = 2
};

enum XlSortMethod
{
    xlPinYin = 1,
    xlStroke = 2
};

enum XlSortMethodOld
{
    xlCodePage = 2,
    xlSyllabary = 1
};

enum XlSortOrder
{
    xlAscending = 1,
    xlDescending = 2
};

enum XlSortOrientation
{
    xlSortRows = 2,
    xlSortColumns = 1
};

enum XlSortType
{
    xlSortLabels = 2,
    xlSortValues = 1
};

enum XlSpecialCellsValue
{
    xlErrors = 16,
    xlLogical = 4,
    xlNumbers = 1,
    xlTextValues = 2
};

enum XlSubscribeToFormat
{
    xlSubscribeToPicture = -4147,
    xlSubscribeToText = -4158
};

enum XlSummaryRow
{
    xlSummaryAbove = 0,
    xlSummaryBelow = 1
};

enum XlSummaryColumn
{
    xlSummaryOnLeft = -4131,
    xlSummaryOnRight = -4152
};

enum XlSummaryReportType
{
    xlSummaryPivotTable = -4148,
    xlStandardSummary = 1
};

enum XlTabPosition
{
    xlTabPositionFirst = 0,
    xlTabPositionLast = 1
};

enum XlTextParsingType
{
    xlDelimited = 1,
    xlFixedWidth = 2
};

enum XlTextQualifier
{
    xlTextQualifierDoubleQuote = 1,
    xlTextQualifierNone = -4142,
    xlTextQualifierSingleQuote = 2
};

enum XlWBATemplate
{
    xlWBATChart = -4109,
    xlWBATExcel4IntlMacroSheet = 4,
    xlWBATExcel4MacroSheet = 3,
    xlWBATWorksheet = -4167
};

enum XlWindowView
{
    xlNormalView = 1,
    xlPageBreakPreview = 2,
    xlPageLayoutView = 3
};

enum XlXLMMacroType
{
    xlCommand = 2,
    xlFunction = 1,
    xlNotXLM = 3
};

enum XlYesNoGuess
{
    xlGuess = 0,
    xlNo = 2,
    xlYes = 1
};

enum XlBordersIndex
{
    xlInsideHorizontal = 12,
    xlInsideVertical = 11,
    xlDiagonalDown = 5,
    xlDiagonalUp = 6,
    xlEdgeBottom = 9,
    xlEdgeLeft = 7,
    xlEdgeRight = 10,
    xlEdgeTop = 8
};

enum XlToolbarProtection
{
    xlNoButtonChanges = 1,
    xlNoChanges = 4,
    xlNoDockingChanges = 3,
    xlToolbarProtectionNone = -4143,
    xlNoShapeChanges = 2
};

enum XlBuiltInDialog
{
    xlDialogOpen = 1,
    xlDialogOpenLinks = 2,
    xlDialogSaveAs = 5,
    xlDialogFileDelete = 6,
    xlDialogPageSetup = 7,
    xlDialogPrint = 8,
    xlDialogPrinterSetup = 9,
    xlDialogArrangeAll = 12,
    xlDialogWindowSize = 13,
    xlDialogWindowMove = 14,
    xlDialogRun = 17,
    xlDialogSetPrintTitles = 23,
    xlDialogFont = 26,
    xlDialogDisplay = 27,
    xlDialogProtectDocument = 28,
    xlDialogCalculation = 32,
    xlDialogExtract = 35,
    xlDialogDataDelete = 36,
    xlDialogSort = 39,
    xlDialogDataSeries = 40,
    xlDialogTable = 41,
    xlDialogFormatNumber = 42,
    xlDialogAlignment = 43,
    xlDialogStyle = 44,
    xlDialogBorder = 45,
    xlDialogCellProtection = 46,
    xlDialogColumnWidth = 47,
    xlDialogClear = 52,
    xlDialogPasteSpecial = 53,
    xlDialogEditDelete = 54,
    xlDialogInsert = 55,
    xlDialogPasteNames = 58,
    xlDialogDefineName = 61,
    xlDialogCreateNames = 62,
    xlDialogFormulaGoto = 63,
    xlDialogFormulaFind = 64,
    xlDialogGalleryArea = 67,
    xlDialogGalleryBar = 68,
    xlDialogGalleryColumn = 69,
    xlDialogGalleryLine = 70,
    xlDialogGalleryPie = 71,
    xlDialogGalleryScatter = 72,
    xlDialogCombination = 73,
    xlDialogGridlines = 76,
    xlDialogAxes = 78,
    xlDialogAttachText = 80,
    xlDialogPatterns = 84,
    xlDialogMainChart = 85,
    xlDialogOverlay = 86,
    xlDialogScale = 87,
    xlDialogFormatLegend = 88,
    xlDialogFormatText = 89,
    xlDialogParse = 91,
    xlDialogUnhide = 94,
    xlDialogWorkspace = 95,
    xlDialogActivate = 103,
    xlDialogCopyPicture = 108,
    xlDialogDeleteName = 110,
    xlDialogDeleteFormat = 111,
    xlDialogNew = 119,
    xlDialogRowHeight = 127,
    xlDialogFormatMove = 128,
    xlDialogFormatSize = 129,
    xlDialogFormulaReplace = 130,
    xlDialogSelectSpecial = 132,
    xlDialogApplyNames = 133,
    xlDialogReplaceFont = 134,
    xlDialogSplit = 137,
    xlDialogOutline = 142,
    xlDialogSaveWorkbook = 145,
    xlDialogCopyChart = 147,
    xlDialogFormatFont = 150,
    xlDialogNote = 154,
    xlDialogSetUpdateStatus = 159,
    xlDialogColorPalette = 161,
    xlDialogChangeLink = 166,
    xlDialogAppMove = 170,
    xlDialogAppSize = 171,
    xlDialogMainChartType = 185,
    xlDialogOverlayChartType = 186,
    xlDialogOpenMail = 188,
    xlDialogSendMail = 189,
    xlDialogStandardFont = 190,
    xlDialogConsolidate = 191,
    xlDialogSortSpecial = 192,
    xlDialogGallery3dArea = 193,
    xlDialogGallery3dColumn = 194,
    xlDialogGallery3dLine = 195,
    xlDialogGallery3dPie = 196,
    xlDialogView3d = 197,
    xlDialogGoalSeek = 198,
    xlDialogWorkgroup = 199,
    xlDialogFillGroup = 200,
    xlDialogUpdateLink = 201,
    xlDialogPromote = 202,
    xlDialogDemote = 203,
    xlDialogShowDetail = 204,
    xlDialogObjectProperties = 207,
    xlDialogSaveNewObject = 208,
    xlDialogApplyStyle = 212,
    xlDialogAssignToObject = 213,
    xlDialogObjectProtection = 214,
    xlDialogCreatePublisher = 217,
    xlDialogSubscribeTo = 218,
    xlDialogShowToolbar = 220,
    xlDialogPrintPreview = 222,
    xlDialogEditColor = 223,
    xlDialogFormatMain = 225,
    xlDialogFormatOverlay = 226,
    xlDialogEditSeries = 228,
    xlDialogDefineStyle = 229,
    xlDialogGalleryRadar = 249,
    xlDialogEditionOptions = 251,
    xlDialogZoom = 256,
    xlDialogInsertObject = 259,
    xlDialogSize = 261,
    xlDialogMove = 262,
    xlDialogFormatAuto = 269,
    xlDialogGallery3dBar = 272,
    xlDialogGallery3dSurface = 273,
    xlDialogCustomizeToolbar = 276,
    xlDialogWorkbookAdd = 281,
    xlDialogWorkbookMove = 282,
    xlDialogWorkbookCopy = 283,
    xlDialogWorkbookOptions = 284,
    xlDialogSaveWorkspace = 285,
    xlDialogChartWizard = 288,
    xlDialogAssignToTool = 293,
    xlDialogPlacement = 300,
    xlDialogFillWorkgroup = 301,
    xlDialogWorkbookNew = 302,
    xlDialogScenarioCells = 305,
    xlDialogScenarioAdd = 307,
    xlDialogScenarioEdit = 308,
    xlDialogScenarioSummary = 311,
    xlDialogPivotTableWizard = 312,
    xlDialogPivotFieldProperties = 313,
    xlDialogOptionsCalculation = 318,
    xlDialogOptionsEdit = 319,
    xlDialogOptionsView = 320,
    xlDialogAddinManager = 321,
    xlDialogMenuEditor = 322,
    xlDialogAttachToolbars = 323,
    xlDialogOptionsChart = 325,
    xlDialogVbaInsertFile = 328,
    xlDialogVbaProcedureDefinition = 330,
    xlDialogRoutingSlip = 336,
    xlDialogMailLogon = 339,
    xlDialogInsertPicture = 342,
    xlDialogGalleryDoughnut = 344,
    xlDialogChartTrend = 350,
    xlDialogWorkbookInsert = 354,
    xlDialogOptionsTransition = 355,
    xlDialogOptionsGeneral = 356,
    xlDialogFilterAdvanced = 370,
    xlDialogMailNextLetter = 378,
    xlDialogDataLabel = 379,
    xlDialogInsertTitle = 380,
    xlDialogFontProperties = 381,
    xlDialogMacroOptions = 382,
    xlDialogWorkbookUnhide = 384,
    xlDialogWorkbookName = 386,
    xlDialogGalleryCustom = 388,
    xlDialogAddChartAutoformat = 390,
    xlDialogChartAddData = 392,
    xlDialogTabOrder = 394,
    xlDialogSubtotalCreate = 398,
    xlDialogWorkbookTabSplit = 415,
    xlDialogWorkbookProtect = 417,
    xlDialogScrollbarProperties = 420,
    xlDialogPivotShowPages = 421,
    xlDialogTextToColumns = 422,
    xlDialogFormatCharttype = 423,
    xlDialogPivotFieldGroup = 433,
    xlDialogPivotFieldUngroup = 434,
    xlDialogCheckboxProperties = 435,
    xlDialogLabelProperties = 436,
    xlDialogListboxProperties = 437,
    xlDialogEditboxProperties = 438,
    xlDialogOpenText = 441,
    xlDialogPushbuttonProperties = 445,
    xlDialogFilter = 447,
    xlDialogFunctionWizard = 450,
    xlDialogSaveCopyAs = 456,
    xlDialogOptionsListsAdd = 458,
    xlDialogSeriesAxes = 460,
    xlDialogSeriesX = 461,
    xlDialogSeriesY = 462,
    xlDialogErrorbarX = 463,
    xlDialogErrorbarY = 464,
    xlDialogFormatChart = 465,
    xlDialogSeriesOrder = 466,
    xlDialogMailEditMailer = 470,
    xlDialogStandardWidth = 472,
    xlDialogScenarioMerge = 473,
    xlDialogProperties = 474,
    xlDialogSummaryInfo = 474,
    xlDialogFindFile = 475,
    xlDialogActiveCellFont = 476,
    xlDialogVbaMakeAddin = 478,
    xlDialogFileSharing = 481,
    xlDialogAutoCorrect = 485,
    xlDialogCustomViews = 493,
    xlDialogInsertNameLabel = 496,
    xlDialogSeriesShape = 504,
    xlDialogChartOptionsDataLabels = 505,
    xlDialogChartOptionsDataTable = 506,
    xlDialogSetBackgroundPicture = 509,
    xlDialogDataValidation = 525,
    xlDialogChartType = 526,
    xlDialogChartLocation = 527,
    _xlDialogPhonetic = 538,
    xlDialogChartSourceData = 540,
    _xlDialogChartSourceData = 541,
    xlDialogSeriesOptions = 557,
    xlDialogPivotTableOptions = 567,
    xlDialogPivotSolveOrder = 568,
    xlDialogPivotCalculatedField = 570,
    xlDialogPivotCalculatedItem = 572,
    xlDialogConditionalFormatting = 583,
    xlDialogInsertHyperlink = 596,
    xlDialogProtectSharing = 620,
    xlDialogOptionsME = 647,
    xlDialogPublishAsWebPage = 653,
    xlDialogPhonetic = 656,
    xlDialogNewWebQuery = 667,
    xlDialogImportTextFile = 666,
    xlDialogExternalDataProperties = 530,
    xlDialogWebOptionsGeneral = 683,
    xlDialogWebOptionsFiles = 684,
    xlDialogWebOptionsPictures = 685,
    xlDialogWebOptionsEncoding = 686,
    xlDialogWebOptionsFonts = 687,
    xlDialogPivotClientServerSet = 689,
    xlDialogPropertyFields = 754,
    xlDialogSearch = 731,
    xlDialogEvaluateFormula = 709,
    xlDialogDataLabelMultiple = 723,
    xlDialogChartOptionsDataLabelMultiple = 724,
    xlDialogErrorChecking = 732,
    xlDialogWebOptionsBrowsers = 773,
    xlDialogCreateList = 796,
    xlDialogPermission = 832,
    xlDialogMyPermission = 834,
    xlDialogDocumentInspector = 862,
    xlDialogNameManager = 977,
    xlDialogNewName = 978
};

enum XlParameterType
{
    xlPrompt = 0,
    xlConstant = 1,
    xlRange = 2
};

enum XlParameterDataType
{
    xlParamTypeUnknown = 0,
    xlParamTypeChar = 1,
    xlParamTypeNumeric = 2,
    xlParamTypeDecimal = 3,
    xlParamTypeInteger = 4,
    xlParamTypeSmallInt = 5,
    xlParamTypeFloat = 6,
    xlParamTypeReal = 7,
    xlParamTypeDouble = 8,
    xlParamTypeVarChar = 12,
    xlParamTypeDate = 9,
    xlParamTypeTime = 10,
    xlParamTypeTimestamp = 11,
    xlParamTypeLongVarChar = -1,
    xlParamTypeBinary = -2,
    xlParamTypeVarBinary = -3,
    xlParamTypeLongVarBinary = -4,
    xlParamTypeBigInt = -5,
    xlParamTypeTinyInt = -6,
    xlParamTypeBit = -7,
    xlParamTypeWChar = -8
};

enum XlFormControl
{
    xlButtonControl = 0,
    xlCheckBox = 1,
    xlDropDown = 2,
    xlEditBox = 3,
    xlGroupBox = 4,
    xlLabel = 5,
    xlListBox = 6,
    xlOptionButton = 7,
    xlScrollBar = 8,
    xlSpinner = 9
};

enum XlSourceType
{
    xlSourceWorkbook = 0,
    xlSourceSheet = 1,
    xlSourcePrintArea = 2,
    xlSourceAutoFilter = 3,
    xlSourceRange = 4,
    xlSourceChart = 5,
    xlSourcePivotTable = 6,
    xlSourceQuery = 7
};

enum XlHtmlType
{
    xlHtmlStatic = 0,
    xlHtmlCalc = 1,
    xlHtmlList = 2,
    xlHtmlChart = 3
};

enum XlPivotFormatType
{
    xlReport1 = 0,
    xlReport2 = 1,
    xlReport3 = 2,
    xlReport4 = 3,
    xlReport5 = 4,
    xlReport6 = 5,
    xlReport7 = 6,
    xlReport8 = 7,
    xlReport9 = 8,
    xlReport10 = 9,
    xlTable1 = 10,
    xlTable2 = 11,
    xlTable3 = 12,
    xlTable4 = 13,
    xlTable5 = 14,
    xlTable6 = 15,
    xlTable7 = 16,
    xlTable8 = 17,
    xlTable9 = 18,
    xlTable10 = 19,
    xlPTClassic = 20,
    xlPTNone = 21
};

enum XlCmdType
{
    xlCmdCube = 1,
    xlCmdSql = 2,
    xlCmdTable = 3,
    xlCmdDefault = 4,
    xlCmdList = 5
};

enum XlColumnDataType
{
    xlGeneralFormat = 1,
    xlTextFormat = 2,
    xlMDYFormat = 3,
    xlDMYFormat = 4,
    xlYMDFormat = 5,
    xlMYDFormat = 6,
    xlDYMFormat = 7,
    xlYDMFormat = 8,
    xlSkipColumn = 9,
    xlEMDFormat = 10
};

enum XlQueryType
{
    xlODBCQuery = 1,
    xlDAORecordset = 2,
    xlWebQuery = 4,
    xlOLEDBQuery = 5,
    xlTextImport = 6,
    xlADORecordset = 7
};

enum XlWebSelectionType
{
    xlEntirePage = 1,
    xlAllTables = 2,
    xlSpecifiedTables = 3
};

enum XlCubeFieldType
{
    xlHierarchy = 1,
    xlMeasure = 2,
    xlSet = 3
};

enum XlWebFormatting
{
    xlWebFormattingAll = 1,
    xlWebFormattingRTF = 2,
    xlWebFormattingNone = 3
};

enum XlDisplayDrawingObjects
{
    xlDisplayShapes = -4104,
    xlHide = 3,
    xlPlaceholders = 2
};

enum XlSubtototalLocationType
{
    xlAtTop = 1,
    xlAtBottom = 2
};

enum XlPivotTableVersionList
{
    xlPivotTableVersion2000 = 0,
    xlPivotTableVersion10 = 1,
    xlPivotTableVersion11 = 2,
    xlPivotTableVersion12 = 3,
    xlPivotTableVersionCurrent = -1
};

enum XlPrintErrors
{
    xlPrintErrorsDisplayed = 0,
    xlPrintErrorsBlank = 1,
    xlPrintErrorsDash = 2,
    xlPrintErrorsNA = 3
};

enum XlPivotCellType
{
    xlPivotCellValue = 0,
    xlPivotCellPivotItem = 1,
    xlPivotCellSubtotal = 2,
    xlPivotCellGrandTotal = 3,
    xlPivotCellDataField = 4,
    xlPivotCellPivotField = 5,
    xlPivotCellPageFieldItem = 6,
    xlPivotCellCustomSubtotal = 7,
    xlPivotCellDataPivotField = 8,
    xlPivotCellBlankCell = 9
};

enum XlPivotTableMissingItems
{
    xlMissingItemsDefault = -1,
    xlMissingItemsNone = 0,
    xlMissingItemsMax = 32500,
    xlMissingItemsMax2 = 1048576
};

enum XlCalculationState
{
    xlDone = 0,
    xlCalculating = 1,
    xlPending = 2
};

enum XlCalculationInterruptKey
{
    xlNoKey = 0,
    xlEscKey = 1,
    xlAnyKey = 2
};

enum XlSortDataOption
{
    xlSortNormal = 0,
    xlSortTextAsNumbers = 1
};

enum XlUpdateLinks
{
    xlUpdateLinksUserSetting = 1,
    xlUpdateLinksNever = 2,
    xlUpdateLinksAlways = 3
};

enum XlLinkStatus
{
    xlLinkStatusOK = 0,
    xlLinkStatusMissingFile = 1,
    xlLinkStatusMissingSheet = 2,
    xlLinkStatusOld = 3,
    xlLinkStatusSourceNotCalculated = 4,
    xlLinkStatusIndeterminate = 5,
    xlLinkStatusNotStarted = 6,
    xlLinkStatusInvalidName = 7,
    xlLinkStatusSourceNotOpen = 8,
    xlLinkStatusSourceOpen = 9,
    xlLinkStatusCopiedValues = 10
};

enum XlSearchWithin
{
    xlWithinSheet = 1,
    xlWithinWorkbook = 2
};

enum XlCorruptLoad
{
    xlNormalLoad = 0,
    xlRepairFile = 1,
    xlExtractData = 2
};

enum XlRobustConnect
{
    xlAsRequired = 0,
    xlAlways = 1,
    xlNever = 2
};

enum XlErrorChecks
{
    xlEvaluateToError = 1,
    xlTextDate = 2,
    xlNumberAsText = 3,
    xlInconsistentFormula = 4,
    xlOmittedCells = 5,
    xlUnlockedFormulaCells = 6,
    xlEmptyCellReferences = 7,
    xlListDataValidation = 8,
    xlInconsistentListFormula = 9
};

enum XlDataLabelSeparator
{
    xlDataLabelSeparatorDefault = 1
};

enum XlSmartTagDisplayMode
{
    xlIndicatorAndButton = 0,
    xlDisplayNone = 1,
    xlButtonOnly = 2
};

enum XlRangeValueDataType
{
    xlRangeValueDefault = 10,
    xlRangeValueXMLSpreadsheet = 11,
    xlRangeValueMSPersistXML = 12
};

enum XlSpeakDirection
{
    xlSpeakByRows = 0,
    xlSpeakByColumns = 1
};

enum XlInsertFormatOrigin
{
    xlFormatFromLeftOrAbove = 0,
    xlFormatFromRightOrBelow = 1
};

enum XlArabicModes
{
    xlArabicNone = 0,
    xlArabicStrictAlefHamza = 1,
    xlArabicStrictFinalYaa = 2,
    xlArabicBothStrict = 3
};

enum XlImportDataAs
{
    xlQueryTable = 0,
    xlPivotTableReport = 1,
    xlTable = 2
};

enum XlCalculatedMemberType
{
    xlCalculatedMember = 0,
    xlCalculatedSet = 1
};

enum XlHebrewModes
{
    xlHebrewFullScript = 0,
    xlHebrewPartialScript = 1,
    xlHebrewMixedScript = 2,
    xlHebrewMixedAuthorizedScript = 3
};

enum XlListObjectSourceType
{
    xlSrcExternal = 0,
    xlSrcRange = 1,
    xlSrcXml = 2,
    xlSrcQuery = 3
};

enum XlTextVisualLayoutType
{
    xlTextVisualLTR = 1,
    xlTextVisualRTL = 2
};

enum XlListDataType
{
    xlListDataTypeNone = 0,
    xlListDataTypeText = 1,
    xlListDataTypeMultiLineText = 2,
    xlListDataTypeNumber = 3,
    xlListDataTypeCurrency = 4,
    xlListDataTypeDateTime = 5,
    xlListDataTypeChoice = 6,
    xlListDataTypeChoiceMulti = 7,
    xlListDataTypeListLookup = 8,
    xlListDataTypeCheckbox = 9,
    xlListDataTypeHyperLink = 10,
    xlListDataTypeCounter = 11,
    xlListDataTypeMultiLineRichText = 12
};

enum XlTotalsCalculation
{
    xlTotalsCalculationNone = 0,
    xlTotalsCalculationSum = 1,
    xlTotalsCalculationAverage = 2,
    xlTotalsCalculationCount = 3,
    xlTotalsCalculationCountNums = 4,
    xlTotalsCalculationMin = 5,
    xlTotalsCalculationMax = 6,
    xlTotalsCalculationStdDev = 7,
    xlTotalsCalculationVar = 8,
    xlTotalsCalculationCustom = 9
};

enum XlXmlLoadOption
{
    xlXmlLoadPromptUser = 0,
    xlXmlLoadOpenXml = 1,
    xlXmlLoadImportToList = 2,
    xlXmlLoadMapXml = 3
};

enum XlSmartTagControlType
{
    xlSmartTagControlSmartTag = 1,
    xlSmartTagControlLink = 2,
    xlSmartTagControlHelp = 3,
    xlSmartTagControlHelpURL = 4,
    xlSmartTagControlSeparator = 5,
    xlSmartTagControlButton = 6,
    xlSmartTagControlLabel = 7,
    xlSmartTagControlImage = 8,
    xlSmartTagControlCheckbox = 9,
    xlSmartTagControlTextbox = 10,
    xlSmartTagControlListbox = 11,
    xlSmartTagControlCombo = 12,
    xlSmartTagControlActiveX = 13,
    xlSmartTagControlRadioGroup = 14
};

enum XlListConflict
{
    xlListConflictDialog = 0,
    xlListConflictRetryAllConflicts = 1,
    xlListConflictDiscardAllConflicts = 2,
    xlListConflictError = 3
};

enum XlXmlExportResult
{
    xlXmlExportSuccess = 0,
    xlXmlExportValidationFailed = 1
};

enum XlXmlImportResult
{
    xlXmlImportSuccess = 0,
    xlXmlImportElementsTruncated = 1,
    xlXmlImportValidationFailed = 2
};

enum XlRemoveDocInfoType
{
    xlRDIComments = 1,
    xlRDIRemovePersonalInformation = 4,
    xlRDIEmailHeader = 5,
    xlRDIRoutingSlip = 6,
    xlRDISendForReview = 7,
    xlRDIDocumentProperties = 8,
    xlRDIDocumentWorkspace = 10,
    xlRDIInkAnnotations = 11,
    xlRDIScenarioComments = 12,
    xlRDIPublishInfo = 13,
    xlRDIDocumentServerProperties = 14,
    xlRDIDocumentManagementPolicy = 15,
    xlRDIContentType = 16,
    xlRDIDefinedNameComments = 18,
    xlRDIInactiveDataConnections = 19,
    xlRDIPrinterPath = 20,
    xlRDIAll = 99
};

enum XlRgbColor
{
    rgbAliceBlue = 16775408,
    rgbAntiqueWhite = 14150650,
    rgbAqua = 16776960,
    rgbAquamarine = 13959039,
    rgbAzure = 16777200,
    rgbBeige = 14480885,
    rgbBisque = 12903679,
    rgbBlack = 0,
    rgbBlanchedAlmond = 13495295,
    rgbBlue = 16711680,
    rgbBlueViolet = 14822282,
    rgbBrown = 2763429,
    rgbBurlyWood = 8894686,
    rgbCadetBlue = 10526303,
    rgbChartreuse = 65407,
    rgbCoral = 5275647,
    rgbCornflowerBlue = 15570276,
    rgbCornsilk = 14481663,
    rgbCrimson = 3937500,
    rgbDarkBlue = 9109504,
    rgbDarkCyan = 9145088,
    rgbDarkGoldenrod = 755384,
    rgbDarkGreen = 25600,
    rgbDarkGray = 11119017,
    rgbDarkGrey = 11119017,
    rgbDarkKhaki = 7059389,
    rgbDarkMagenta = 9109643,
    rgbDarkOliveGreen = 3107669,
    rgbDarkOrange = 36095,
    rgbDarkOrchid = 13382297,
    rgbDarkRed = 139,
    rgbDarkSalmon = 8034025,
    rgbDarkSeaGreen = 9419919,
    rgbDarkSlateBlue = 9125192,
    rgbDarkSlateGray = 5197615,
    rgbDarkSlateGrey = 5197615,
    rgbDarkTurquoise = 13749760,
    rgbDarkViolet = 13828244,
    rgbDeepPink = 9639167,
    rgbDeepSkyBlue = 16760576,
    rgbDimGray = 6908265,
    rgbDimGrey = 6908265,
    rgbDodgerBlue = 16748574,
    rgbFireBrick = 2237106,
    rgbFloralWhite = 15792895,
    rgbForestGreen = 2263842,
    rgbFuchsia = 16711935,
    rgbGainsboro = 14474460,
    rgbGhostWhite = 16775416,
    rgbGold = 55295,
    rgbGoldenrod = 2139610,
    rgbGray = 8421504,
    rgbGreen = 32768,
    rgbGrey = 8421504,
    rgbGreenYellow = 3145645,
    rgbHoneydew = 15794160,
    rgbHotPink = 11823615,
    rgbIndianRed = 6053069,
    rgbIndigo = 8519755,
    rgbIvory = 15794175,
    rgbKhaki = 9234160,
    rgbLavender = 16443110,
    rgbLavenderBlush = 16118015,
    rgbLawnGreen = 64636,
    rgbLemonChiffon = 13499135,
    rgbLightBlue = 15128749,
    rgbLightCoral = 8421616,
    rgbLightCyan = 9145088,
    rgbLightGoldenrodYellow = 13826810,
    rgbLightGray = 13882323,
    rgbLightGreen = 9498256,
    rgbLightGrey = 13882323,
    rgbLightPink = 12695295,
    rgbLightSalmon = 8036607,
    rgbLightSeaGreen = 11186720,
    rgbLightSkyBlue = 16436871,
    rgbLightSlateGray = 10061943,
    rgbLightSlateGrey = 10061943,
    rgbLightSteelBlue = 14599344,
    rgbLightYellow = 14745599,
    rgbLime = 65280,
    rgbLimeGreen = 3329330,
    rgbLinen = 15134970,
    rgbMaroon = 128,
    rgbMediumAquamarine = 11206502,
    rgbMediumBlue = 13434880,
    rgbMediumOrchid = 13850042,
    rgbMediumPurple = 14381203,
    rgbMediumSeaGreen = 7451452,
    rgbMediumSlateBlue = 15624315,
    rgbMediumSpringGreen = 10156544,
    rgbMediumTurquoise = 13422920,
    rgbMediumVioletRed = 8721863,
    rgbMidnightBlue = 7346457,
    rgbMintCream = 16449525,
    rgbMistyRose = 14804223,
    rgbMoccasin = 11920639,
    rgbNavajoWhite = 11394815,
    rgbNavy = 8388608,
    rgbNavyBlue = 8388608,
    rgbOldLace = 15136253,
    rgbOlive = 32896,
    rgbOliveDrab = 2330219,
    rgbOrange = 42495,
    rgbOrangeRed = 17919,
    rgbOrchid = 14053594,
    rgbPaleGoldenrod = 7071982,
    rgbPaleGreen = 10025880,
    rgbPaleTurquoise = 15658671,
    rgbPaleVioletRed = 9662683,
    rgbPapayaWhip = 14020607,
    rgbPeachPuff = 12180223,
    rgbPeru = 4163021,
    rgbPink = 13353215,
    rgbPlum = 14524637,
    rgbPowderBlue = 15130800,
    rgbPurple = 8388736,
    rgbRed = 255,
    rgbRosyBrown = 9408444,
    rgbRoyalBlue = 14772545,
    rgbSalmon = 7504122,
    rgbSandyBrown = 6333684,
    rgbSeaGreen = 5737262,
    rgbSeashell = 15660543,
    rgbSienna = 2970272,
    rgbSilver = 12632256,
    rgbSkyBlue = 15453831,
    rgbSlateBlue = 13458026,
    rgbSlateGray = 9470064,
    rgbSlateGrey = 9470064,
    rgbSnow = 16448255,
    rgbSpringGreen = 8388352,
    rgbSteelBlue = 11829830,
    rgbTan = 9221330,
    rgbTeal = 8421376,
    rgbThistle = 14204888,
    rgbTomato = 4678655,
    rgbTurquoise = 13688896,
    rgbYellow = 65535,
    rgbYellowGreen = 3329434,
    rgbViolet = 15631086,
    rgbWheat = 11788021,
    rgbWhite = 16777215,
    rgbWhiteSmoke = 16119285
};

enum XlStdColorScale
{
    xlColorScaleRYG = 1,
    xlColorScaleGYR = 2,
    xlColorScaleBlackWhite = 3,
    xlColorScaleWhiteBlack = 4
};

enum XlConditionValueTypes
{
    xlConditionValueNone = -1,
    xlConditionValueNumber = 0,
    xlConditionValueLowestValue = 1,
    xlConditionValueHighestValue = 2,
    xlConditionValuePercent = 3,
    xlConditionValueFormula = 4,
    xlConditionValuePercentile = 5
};

enum XlFormatFilterTypes
{
    xlFilterBottom = 0,
    xlFilterTop = 1,
    xlFilterBottomPercent = 2,
    xlFilterTopPercent = 3
};

enum XlContainsOperator
{
    xlContains = 0,
    xlDoesNotContain = 1,
    xlBeginsWith = 2,
    xlEndsWith = 3
};

enum XlAboveBelow
{
    xlAboveAverage = 0,
    xlBelowAverage = 1,
    xlEqualAboveAverage = 2,
    xlEqualBelowAverage = 3,
    xlAboveStdDev = 4,
    xlBelowStdDev = 5
};

enum XlLookFor
{
    xlLookForBlanks = 0,
    xlLookForErrors = 1,
    xlLookForFormulas = 2
};

enum XlTimePeriods
{
    xlToday = 0,
    xlYesterday = 1,
    xlLast7Days = 2,
    xlThisWeek = 3,
    xlLastWeek = 4,
    xlLastMonth = 5,
    xlTomorrow = 6,
    xlNextWeek = 7,
    xlNextMonth = 8,
    xlThisMonth = 9
};

enum XlDupeUnique
{
    xlUnique = 0,
    xlDuplicate = 1
};

enum XlTopBottom
{
    xlTop10Top = 1,
    xlTop10Bottom = 0
};

enum XlIconSet
{
    xl3Arrows = 1,
    xl3ArrowsGray = 2,
    xl3Flags = 3,
    xl3TrafficLights1 = 4,
    xl3TrafficLights2 = 5,
    xl3Signs = 6,
    xl3Symbols = 7,
    xl3Symbols2 = 8,
    xl4Arrows = 9,
    xl4ArrowsGray = 10,
    xl4RedToBlack = 11,
    xl4CRV = 12,
    xl4TrafficLights = 13,
    xl5Arrows = 14,
    xl5ArrowsGray = 15,
    xl5CRV = 16,
    xl5Quarters = 17
};

enum XlThemeFont
{
    xlThemeFontNone = 0,
    xlThemeFontMajor = 1,
    xlThemeFontMinor = 2
};

enum XlPivotLineType
{
    xlPivotLineRegular = 0,
    xlPivotLineSubtotal = 1,
    xlPivotLineGrandTotal = 2,
    xlPivotLineBlank = 3
};

enum XlCheckInVersionType
{
    xlCheckInMinorVersion = 0,
    xlCheckInMajorVersion = 1,
    xlCheckInOverwriteVersion = 2
};

enum XlPropertyDisplayedIn
{
    xlDisplayPropertyInPivotTable = 1,
    xlDisplayPropertyInTooltip = 2,
    xlDisplayPropertyInPivotTableAndTooltip = 3
};

enum XlConnectionType
{
    xlConnectionTypeOLEDB = 1,
    xlConnectionTypeODBC = 2,
    xlConnectionTypeXMLMAP = 3,
    xlConnectionTypeTEXT = 4,
    xlConnectionTypeWEB = 5
};

enum XlActionType
{
    xlActionTypeUrl = 1,
    xlActionTypeRowset = 16,
    xlActionTypeReport = 128,
    xlActionTypeDrillthrough = 256
};

enum XlLayoutRowType
{
    xlCompactRow = 0,
    xlTabularRow = 1,
    xlOutlineRow = 2
};

enum XlMeasurementUnits
{
    xlInches = 0,
    xlCentimeters = 1,
    xlMillimeters = 2
};

enum XlPivotFilterType
{
    xlTopCount = 1,
    xlBottomCount = 2,
    xlTopPercent = 3,
    xlBottomPercent = 4,
    xlTopSum = 5,
    xlBottomSum = 6,
    xlValueEquals = 7,
    xlValueDoesNotEqual = 8,
    xlValueIsGreaterThan = 9,
    xlValueIsGreaterThanOrEqualTo = 10,
    xlValueIsLessThan = 11,
    xlValueIsLessThanOrEqualTo = 12,
    xlValueIsBetween = 13,
    xlValueIsNotBetween = 14,
    xlCaptionEquals = 15,
    xlCaptionDoesNotEqual = 16,
    xlCaptionBeginsWith = 17,
    xlCaptionDoesNotBeginWith = 18,
    xlCaptionEndsWith = 19,
    xlCaptionDoesNotEndWith = 20,
    xlCaptionContains = 21,
    xlCaptionDoesNotContain = 22,
    xlCaptionIsGreaterThan = 23,
    xlCaptionIsGreaterThanOrEqualTo = 24,
    xlCaptionIsLessThan = 25,
    xlCaptionIsLessThanOrEqualTo = 26,
    xlCaptionIsBetween = 27,
    xlCaptionIsNotBetween = 28,
    xlSpecificDate = 29,
    xlNotSpecificDate = 30,
    xlBefore = 31,
    xlBeforeOrEqualTo = 32,
    xlAfter = 33,
    xlAfterOrEqualTo = 34,
    xlDateBetween = 35,
    xlDateNotBetween = 36,
    xlDateTomorrow = 37,
    xlDateToday = 38,
    xlDateYesterday = 39,
    xlDateNextWeek = 40,
    xlDateThisWeek = 41,
    xlDateLastWeek = 42,
    xlDateNextMonth = 43,
    xlDateThisMonth = 44,
    xlDateLastMonth = 45,
    xlDateNextQuarter = 46,
    xlDateThisQuarter = 47,
    xlDateLastQuarter = 48,
    xlDateNextYear = 49,
    xlDateThisYear = 50,
    xlDateLastYear = 51,
    xlYearToDate = 52,
    xlAllDatesInPeriodQuarter1 = 53,
    xlAllDatesInPeriodQuarter2 = 54,
    xlAllDatesInPeriodQuarter3 = 55,
    xlAllDatesInPeriodQuarter4 = 56,
    xlAllDatesInPeriodJanuary = 57,
    xlAllDatesInPeriodFebruary = 58,
    xlAllDatesInPeriodMarch = 59,
    xlAllDatesInPeriodApril = 60,
    xlAllDatesInPeriodMay = 61,
    xlAllDatesInPeriodJune = 62,
    xlAllDatesInPeriodJuly = 63,
    xlAllDatesInPeriodAugust = 64,
    xlAllDatesInPeriodSeptember = 65,
    xlAllDatesInPeriodOctober = 66,
    xlAllDatesInPeriodNovember = 67,
    xlAllDatesInPeriodDecember = 68
};

enum XlCredentialsMethod
{
    xlCredentialsMethodIntegrated = 0,
    xlCredentialsMethodNone = 1,
    xlCredentialsMethodStored = 2
};

enum XlCubeFieldSubType
{
    xlCubeHierarchy = 1,
    xlCubeMeasure = 2,
    xlCubeSet = 3,
    xlCubeAttribute = 4,
    xlCubeCalculatedMeasure = 5,
    xlCubeKPIValue = 6,
    xlCubeKPIGoal = 7,
    xlCubeKPIStatus = 8,
    xlCubeKPITrend = 9,
    xlCubeKPIWeight = 10
};

enum XlSortOn
{
    xlSortOnValues = 0,
    xlSortOnCellColor = 1,
    xlSortOnFontColor = 2,
    xlSortOnIcon = 3
};

enum XlDynamicFilterCriteria
{
    xlFilterToday = 1,
    xlFilterYesterday = 2,
    xlFilterTomorrow = 3,
    xlFilterThisWeek = 4,
    xlFilterLastWeek = 5,
    xlFilterNextWeek = 6,
    xlFilterThisMonth = 7,
    xlFilterLastMonth = 8,
    xlFilterNextMonth = 9,
    xlFilterThisQuarter = 10,
    xlFilterLastQuarter = 11,
    xlFilterNextQuarter = 12,
    xlFilterThisYear = 13,
    xlFilterLastYear = 14,
    xlFilterNextYear = 15,
    xlFilterYearToDate = 16,
    xlFilterAllDatesInPeriodQuarter1 = 17,
    xlFilterAllDatesInPeriodQuarter2 = 18,
    xlFilterAllDatesInPeriodQuarter3 = 19,
    xlFilterAllDatesInPeriodQuarter4 = 20,
    xlFilterAllDatesInPeriodJanuary = 21,
    xlFilterAllDatesInPeriodFebruray = 22,
    xlFilterAllDatesInPeriodMarch = 23,
    xlFilterAllDatesInPeriodApril = 24,
    xlFilterAllDatesInPeriodMay = 25,
    xlFilterAllDatesInPeriodJune = 26,
    xlFilterAllDatesInPeriodJuly = 27,
    xlFilterAllDatesInPeriodAugust = 28,
    xlFilterAllDatesInPeriodSeptember = 29,
    xlFilterAllDatesInPeriodOctober = 30,
    xlFilterAllDatesInPeriodNovember = 31,
    xlFilterAllDatesInPeriodDecember = 32,
    xlFilterAboveAverage = 33,
    xlFilterBelowAverage = 34
};

enum XlFilterAllDatesInPeriod
{
    xlFilterAllDatesInPeriodYear = 0,
    xlFilterAllDatesInPeriodMonth = 1,
    xlFilterAllDatesInPeriodDay = 2,
    xlFilterAllDatesInPeriodHour = 3,
    xlFilterAllDatesInPeriodMinute = 4,
    xlFilterAllDatesInPeriodSecond = 5
};

enum XlTableStyleElementType
{
    xlWholeTable = 0,
    xlHeaderRow = 1,
    xlTotalRow = 2,
    xlGrandTotalRow = 2,
    xlFirstColumn = 3,
    xlLastColumn = 4,
    xlGrandTotalColumn = 4,
    xlRowStripe1 = 5,
    xlRowStripe2 = 6,
    xlColumnStripe1 = 7,
    xlColumnStripe2 = 8,
    xlFirstHeaderCell = 9,
    xlLastHeaderCell = 10,
    xlFirstTotalCell = 11,
    xlLastTotalCell = 12,
    xlSubtotalColumn1 = 13,
    xlSubtotalColumn2 = 14,
    xlSubtotalColumn3 = 15,
    xlSubtotalRow1 = 16,
    xlSubtotalRow2 = 17,
    xlSubtotalRow3 = 18,
    xlBlankRow = 19,
    xlColumnSubheading1 = 20,
    xlColumnSubheading2 = 21,
    xlColumnSubheading3 = 22,
    xlRowSubheading1 = 23,
    xlRowSubheading2 = 24,
    xlRowSubheading3 = 25,
    xlPageFieldLabels = 26,
    xlPageFieldValues = 27
};

enum XlPivotConditionScope
{
    xlSelectionScope = 0,
    xlFieldsScope = 1,
    xlDataFieldScope = 2
};

enum XlCalcFor
{
    xlAllValues = 0,
    xlRowGroups = 1,
    xlColGroups = 2
};

enum XlThemeColor
{
    xlThemeColorDark1 = 1,
    xlThemeColorLight1 = 2,
    xlThemeColorDark2 = 3,
    xlThemeColorLight2 = 4,
    xlThemeColorAccent1 = 5,
    xlThemeColorAccent2 = 6,
    xlThemeColorAccent3 = 7,
    xlThemeColorAccent4 = 8,
    xlThemeColorAccent5 = 9,
    xlThemeColorAccent6 = 10,
    xlThemeColorHyperlink = 11,
    xlThemeColorFollowedHyperlink = 12
};

enum XlFixedFormatType
{
    xlTypePDF = 0,
    xlTypeXPS = 1
};

enum XlFixedFormatQuality
{
    xlQualityStandard = 0,
    xlQualityMinimum = 1
};

enum XlChartElementPosition
{
    xlChartElementPositionAutomatic = -4105,
    xlChartElementPositionCustom = -4114
};

enum XlGenerateTableRefs
{
    xlGenerateTableRefA1 = 0,
    xlGenerateTableRefStruct = 1
};

enum XlGradientFillType
{
    xlGradientFillLinear = 0,
    xlGradientFillPath = 1
};

enum XlThreadMode
{
    xlThreadModeAutomatic = 0,
    xlThreadModeManual = 1
};

struct __declspec(uuid("0002440f-0001-0000-c000-000000000046"))
IChartEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Deactivate ( ) = 0;
      virtual HRESULT __stdcall Resize ( ) = 0;
      virtual HRESULT __stdcall MouseDown (
        /*[in]*/ long Button,
        /*[in]*/ long Shift,
        /*[in]*/ long x,
        /*[in]*/ long y ) = 0;
      virtual HRESULT __stdcall MouseUp (
        /*[in]*/ long Button,
        /*[in]*/ long Shift,
        /*[in]*/ long x,
        /*[in]*/ long y ) = 0;
      virtual HRESULT __stdcall MouseMove (
        /*[in]*/ long Button,
        /*[in]*/ long Shift,
        /*[in]*/ long x,
        /*[in]*/ long y ) = 0;
      virtual HRESULT __stdcall BeforeRightClick (
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DragPlot ( ) = 0;
      virtual HRESULT __stdcall DragOver ( ) = 0;
      virtual HRESULT __stdcall BeforeDoubleClick (
        /*[in]*/ long ElementID,
        /*[in]*/ long Arg1,
        /*[in]*/ long Arg2,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ long ElementID,
        /*[in]*/ long Arg1,
        /*[in]*/ long Arg2 ) = 0;
      virtual HRESULT __stdcall SeriesChange (
        /*[in]*/ long SeriesIndex,
        /*[in]*/ long PointIndex ) = 0;
      virtual HRESULT __stdcall Calculate ( ) = 0;
};

struct __declspec(uuid("00024410-0001-0000-c000-000000000046"))
IOLEObjectEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GotFocus ( ) = 0;
      virtual HRESULT __stdcall LostFocus ( ) = 0;
};

struct __declspec(uuid("0002441b-0001-0000-c000-000000000046"))
IRefreshEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall BeforeRefresh (
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall AfterRefresh (
        /*[in]*/ VARIANT_BOOL Success ) = 0;
};

struct __declspec(uuid("00024465-0001-0000-c000-000000000046"))
ISpellingOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DictLang (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DictLang (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_UserDict (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_UserDict (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_IgnoreCaps (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IgnoreCaps (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SuggestMainOnly (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SuggestMainOnly (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IgnoreMixedDigits (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IgnoreMixedDigits (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IgnoreFileNames (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IgnoreFileNames (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_GermanPostReform (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_GermanPostReform (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_KoreanCombineAux (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_KoreanCombineAux (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_KoreanUseAutoChangeList (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_KoreanUseAutoChangeList (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_KoreanProcessCompound (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_KoreanProcessCompound (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HebrewModes (
        /*[out,retval]*/ enum XlHebrewModes * RHS ) = 0;
      virtual HRESULT __stdcall put_HebrewModes (
        /*[in]*/ enum XlHebrewModes RHS ) = 0;
      virtual HRESULT __stdcall get_ArabicModes (
        /*[out,retval]*/ enum XlArabicModes * RHS ) = 0;
      virtual HRESULT __stdcall put_ArabicModes (
        /*[in]*/ enum XlArabicModes RHS ) = 0;
};

struct __declspec(uuid("00024466-0001-0000-c000-000000000046"))
ISpeech : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Speak (
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT SpeakAsync = vtMissing,
        /*[in]*/ VARIANT SpeakXML = vtMissing,
        /*[in]*/ VARIANT Purge = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum XlSpeakDirection * RHS ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ enum XlSpeakDirection RHS ) = 0;
      virtual HRESULT __stdcall get_SpeakCellOnEnter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SpeakCellOnEnter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002446d-0001-0000-c000-000000000046"))
IUserAccess : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowEdit (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AllowEdit (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("0002446e-0001-0000-c000-000000000046"))
IRTD : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ThrottleInterval (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ThrottleInterval (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall RefreshData ( ) = 0;
      virtual HRESULT __stdcall RestartServers ( ) = 0;
};

struct __declspec(uuid("00024499-0001-0000-c000-000000000046"))
IIconCriterion : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlConditionValueTypes * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum XlConditionValueTypes RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Operator (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Operator (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("0002084d-0000-0000-c000-000000000046"))
excelFont : IDispatch
{};

struct __declspec(uuid("00020893-0000-0000-c000-000000000046"))
Window : IDispatch
{};

struct __declspec(uuid("00020892-0000-0000-c000-000000000046"))
Windows : IDispatch
{};

struct __declspec(uuid("00024413-0000-0000-c000-000000000046"))
AppEvents : IDispatch
{};

struct __declspec(uuid("00020845-0000-0000-c000-000000000046"))
WorksheetFunction : IDispatch
{};

struct __declspec(uuid("00020846-0000-0000-c000-000000000046"))
Range : IDispatch
{};

struct __declspec(uuid("0002440f-0000-0000-c000-000000000046"))
ChartEvents : IDispatch
{};

struct __declspec(uuid("00024402-0000-0000-c000-000000000046"))
VPageBreak : IDispatch
{};

struct __declspec(uuid("00024401-0000-0000-c000-000000000046"))
HPageBreak : IDispatch
{};

struct __declspec(uuid("00024404-0000-0000-c000-000000000046"))
HPageBreaks : IDispatch
{};

struct __declspec(uuid("00024405-0000-0000-c000-000000000046"))
VPageBreaks : IDispatch
{};

struct __declspec(uuid("00024407-0000-0000-c000-000000000046"))
RecentFile : IDispatch
{};

struct __declspec(uuid("00024406-0000-0000-c000-000000000046"))
RecentFiles : IDispatch
{};

struct __declspec(uuid("00024411-0000-0000-c000-000000000046"))
DocEvents : IDispatch
{};

struct __declspec(uuid("00020852-0000-0000-c000-000000000046"))
Style : IDispatch
{};

struct __declspec(uuid("00020853-0000-0000-c000-000000000046"))
Styles : IDispatch
{};

struct __declspec(uuid("00020855-0000-0000-c000-000000000046"))
excelBorders : IDispatch
{};

struct __declspec(uuid("00020857-0000-0000-c000-000000000046"))
excelAddIn : IDispatch
{};

struct __declspec(uuid("00020858-0000-0000-c000-000000000046"))
excelAddIns : IDispatch
{};

struct __declspec(uuid("0002085c-0000-0000-c000-000000000046"))
Toolbar : IDispatch
{};

struct __declspec(uuid("0002085d-0000-0000-c000-000000000046"))
Toolbars : IDispatch
{};

struct __declspec(uuid("0002085e-0000-0000-c000-000000000046"))
ToolbarButton : IDispatch
{};

struct __declspec(uuid("0002085f-0000-0000-c000-000000000046"))
ToolbarButtons : IDispatch
{};

struct __declspec(uuid("00020860-0000-0000-c000-000000000046"))
Areas : IDispatch
{};

struct __declspec(uuid("00024412-0000-0000-c000-000000000046"))
WorkbookEvents : IDispatch
{};

struct __declspec(uuid("00020863-0000-0000-c000-000000000046"))
MenuBars : IDispatch
{};

struct __declspec(uuid("00020864-0000-0000-c000-000000000046"))
MenuBar : IDispatch
{};

struct __declspec(uuid("00020865-0000-0000-c000-000000000046"))
Menus : IDispatch
{};

struct __declspec(uuid("00020866-0000-0000-c000-000000000046"))
Menu : IDispatch
{};

struct __declspec(uuid("00020867-0000-0000-c000-000000000046"))
MenuItems : IDispatch
{};

struct __declspec(uuid("00020868-0000-0000-c000-000000000046"))
MenuItem : IDispatch
{};

struct __declspec(uuid("0002086d-0000-0000-c000-000000000046"))
Charts : IDispatch
{};

struct __declspec(uuid("0002086f-0000-0000-c000-000000000046"))
DrawingObjects : IDispatch
{};

struct __declspec(uuid("0002441c-0000-0000-c000-000000000046"))
PivotCache : IDispatch
{};

struct __declspec(uuid("0002441d-0000-0000-c000-000000000046"))
PivotCaches : IDispatch
{};

struct __declspec(uuid("0002441e-0000-0000-c000-000000000046"))
PivotFormula : IDispatch
{};

struct __declspec(uuid("0002441f-0000-0000-c000-000000000046"))
PivotFormulas : IDispatch
{};

struct __declspec(uuid("00020872-0000-0000-c000-000000000046"))
PivotTable : IDispatch
{};

struct __declspec(uuid("00020873-0000-0000-c000-000000000046"))
PivotTables : IDispatch
{};

struct __declspec(uuid("00020874-0000-0000-c000-000000000046"))
PivotField : IDispatch
{};

struct __declspec(uuid("00020875-0000-0000-c000-000000000046"))
PivotFields : IDispatch
{};

struct __declspec(uuid("00024420-0000-0000-c000-000000000046"))
CalculatedFields : IDispatch
{};

struct __declspec(uuid("00020876-0000-0000-c000-000000000046"))
PivotItem : IDispatch
{};

struct __declspec(uuid("00020877-0000-0000-c000-000000000046"))
PivotItems : IDispatch
{};

struct __declspec(uuid("00024421-0000-0000-c000-000000000046"))
CalculatedItems : IDispatch
{};

struct __declspec(uuid("00020878-0000-0000-c000-000000000046"))
Characters : IDispatch
{};

struct __declspec(uuid("00020879-0000-0000-c000-000000000046"))
Dialogs : IDispatch
{};

struct __declspec(uuid("0002087a-0000-0000-c000-000000000046"))
Dialog : IDispatch
{};

struct __declspec(uuid("0002087b-0000-0000-c000-000000000046"))
SoundNote : IDispatch
{};

struct __declspec(uuid("0002087d-0000-0000-c000-000000000046"))
Button : IDispatch
{};

struct __declspec(uuid("0002087e-0000-0000-c000-000000000046"))
Buttons : IDispatch
{};

struct __declspec(uuid("0002087f-0000-0000-c000-000000000046"))
CheckBox : IDispatch
{};

struct __declspec(uuid("00020880-0000-0000-c000-000000000046"))
CheckBoxes : IDispatch
{};

struct __declspec(uuid("00020881-0000-0000-c000-000000000046"))
OptionButton : IDispatch
{};

struct __declspec(uuid("00020882-0000-0000-c000-000000000046"))
OptionButtons : IDispatch
{};

struct __declspec(uuid("00020883-0000-0000-c000-000000000046"))
EditBox : IDispatch
{};

struct __declspec(uuid("00020884-0000-0000-c000-000000000046"))
EditBoxes : IDispatch
{};

struct __declspec(uuid("00020885-0000-0000-c000-000000000046"))
ScrollBar : IDispatch
{};

struct __declspec(uuid("00020886-0000-0000-c000-000000000046"))
ScrollBars : IDispatch
{};

struct __declspec(uuid("00020887-0000-0000-c000-000000000046"))
ListBox : IDispatch
{};

struct __declspec(uuid("00020888-0000-0000-c000-000000000046"))
ListBoxes : IDispatch
{};

struct __declspec(uuid("00020889-0000-0000-c000-000000000046"))
GroupBox : IDispatch
{};

struct __declspec(uuid("0002088a-0000-0000-c000-000000000046"))
GroupBoxes : IDispatch
{};

struct __declspec(uuid("0002088b-0000-0000-c000-000000000046"))
DropDown : IDispatch
{};

struct __declspec(uuid("0002088c-0000-0000-c000-000000000046"))
DropDowns : IDispatch
{};

struct __declspec(uuid("0002088d-0000-0000-c000-000000000046"))
Spinner : IDispatch
{};

struct __declspec(uuid("0002088e-0000-0000-c000-000000000046"))
Spinners : IDispatch
{};

struct __declspec(uuid("0002088f-0000-0000-c000-000000000046"))
DialogFrame : IDispatch
{};

struct __declspec(uuid("00020890-0000-0000-c000-000000000046"))
Label : IDispatch
{};

struct __declspec(uuid("00020891-0000-0000-c000-000000000046"))
Labels : IDispatch
{};

struct __declspec(uuid("00020894-0000-0000-c000-000000000046"))
excelPanes : IDispatch
{};

struct __declspec(uuid("00020895-0000-0000-c000-000000000046"))
excelPane : IDispatch
{};

struct __declspec(uuid("00020896-0000-0000-c000-000000000046"))
Scenarios : IDispatch
{};

struct __declspec(uuid("00020897-0000-0000-c000-000000000046"))
Scenario : IDispatch
{};

struct __declspec(uuid("00020898-0000-0000-c000-000000000046"))
GroupObject : IDispatch
{};

struct __declspec(uuid("00020899-0000-0000-c000-000000000046"))
GroupObjects : IDispatch
{};

struct __declspec(uuid("0002089a-0000-0000-c000-000000000046"))
Line : IDispatch
{};

struct __declspec(uuid("0002089b-0000-0000-c000-000000000046"))
Lines : IDispatch
{};

struct __declspec(uuid("0002089c-0000-0000-c000-000000000046"))
Rectangle : IDispatch
{};

struct __declspec(uuid("0002089d-0000-0000-c000-000000000046"))
Rectangles : IDispatch
{};

struct __declspec(uuid("0002089e-0000-0000-c000-000000000046"))
Oval : IDispatch
{};

struct __declspec(uuid("0002089f-0000-0000-c000-000000000046"))
Ovals : IDispatch
{};

struct __declspec(uuid("000208a0-0000-0000-c000-000000000046"))
Arc : IDispatch
{};

struct __declspec(uuid("000208a1-0000-0000-c000-000000000046"))
Arcs : IDispatch
{};

struct __declspec(uuid("00024410-0000-0000-c000-000000000046"))
OLEObjectEvents : IDispatch
{};

struct __declspec(uuid("000208a2-0000-0000-c000-000000000046"))
_OLEObject : IDispatch
{};

struct __declspec(uuid("000208a3-0000-0000-c000-000000000046"))
OLEObjects : IDispatch
{};

struct __declspec(uuid("000208a4-0000-0000-c000-000000000046"))
TextBox : IDispatch
{};

struct __declspec(uuid("000208a5-0000-0000-c000-000000000046"))
TextBoxes : IDispatch
{};

struct __declspec(uuid("000208a6-0000-0000-c000-000000000046"))
excelPicture : IDispatch
{};

struct __declspec(uuid("000208a7-0000-0000-c000-000000000046"))
Pictures : IDispatch
{};

struct __declspec(uuid("000208a8-0000-0000-c000-000000000046"))
Drawing : IDispatch
{};

struct __declspec(uuid("000208a9-0000-0000-c000-000000000046"))
Drawings : IDispatch
{};

struct __declspec(uuid("000208aa-0000-0000-c000-000000000046"))
RoutingSlip : IDispatch
{};

struct __declspec(uuid("000208ab-0000-0000-c000-000000000046"))
Outline : IDispatch
{};

struct __declspec(uuid("000208ad-0000-0000-c000-000000000046"))
Module : IDispatch
{};

struct __declspec(uuid("000208ae-0000-0000-c000-000000000046"))
Modules : IDispatch
{};

struct __declspec(uuid("000208af-0000-0000-c000-000000000046"))
DialogSheet : IDispatch
{};

struct __declspec(uuid("000208b0-0000-0000-c000-000000000046"))
DialogSheets : IDispatch
{};

struct __declspec(uuid("000208b1-0000-0000-c000-000000000046"))
Worksheets : IDispatch
{};

struct __declspec(uuid("000208b4-0000-0000-c000-000000000046"))
excelPageSetup : IDispatch
{};

struct __declspec(uuid("000208b8-0000-0000-c000-000000000046"))
Names : IDispatch
{};

struct __declspec(uuid("000208b9-0000-0000-c000-000000000046"))
Name : IDispatch
{};

struct __declspec(uuid("000208cf-0000-0000-c000-000000000046"))
ChartObject : IDispatch
{};

struct __declspec(uuid("000208d0-0000-0000-c000-000000000046"))
ChartObjects : IDispatch
{};

struct __declspec(uuid("000208d1-0000-0000-c000-000000000046"))
Mailer : IDispatch
{};

struct __declspec(uuid("00024422-0000-0000-c000-000000000046"))
CustomViews : IDispatch
{};

struct __declspec(uuid("00024423-0000-0000-c000-000000000046"))
CustomView : IDispatch
{};

struct __declspec(uuid("00024424-0000-0000-c000-000000000046"))
FormatConditions : IDispatch
{};

struct __declspec(uuid("00024425-0000-0000-c000-000000000046"))
FormatCondition : IDispatch
{};

struct __declspec(uuid("00024426-0000-0000-c000-000000000046"))
excelComments : IDispatch
{};

struct __declspec(uuid("00024427-0000-0000-c000-000000000046"))
excelComment : IDispatch
{};

struct __declspec(uuid("0002441b-0000-0000-c000-000000000046"))
RefreshEvents : IDispatch
{};

struct __declspec(uuid("00024428-0000-0000-c000-000000000046"))
_QueryTable : IDispatch
{};

struct __declspec(uuid("00024429-0000-0000-c000-000000000046"))
QueryTables : IDispatch
{};

struct __declspec(uuid("0002442a-0000-0000-c000-000000000046"))
Parameter : IDispatch
{};

struct __declspec(uuid("0002442b-0000-0000-c000-000000000046"))
Parameters : IDispatch
{};

struct __declspec(uuid("0002442c-0000-0000-c000-000000000046"))
ODBCError : IDispatch
{};

struct __declspec(uuid("0002442d-0000-0000-c000-000000000046"))
ODBCErrors : IDispatch
{};

struct __declspec(uuid("0002442f-0000-0000-c000-000000000046"))
Validation : IDispatch
{};

struct __declspec(uuid("00024430-0000-0000-c000-000000000046"))
excelHyperlinks : IDispatch
{};

struct __declspec(uuid("00024431-0000-0000-c000-000000000046"))
excelHyperlink : IDispatch
{};

struct __declspec(uuid("00024411-0001-0000-c000-000000000046"))
IDocEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SelectionChange (
        /*[in]*/ struct Range * Target ) = 0;
      virtual HRESULT __stdcall BeforeDoubleClick (
        /*[in]*/ struct Range * Target,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall BeforeRightClick (
        /*[in]*/ struct Range * Target,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Deactivate ( ) = 0;
      virtual HRESULT __stdcall Calculate ( ) = 0;
      virtual HRESULT __stdcall Change (
        /*[in]*/ struct Range * Target ) = 0;
      virtual HRESULT __stdcall FollowHyperlink (
        /*[in]*/ struct excelHyperlink * Target ) = 0;
      virtual HRESULT __stdcall PivotTableUpdate (
        /*[in]*/ struct PivotTable * Target ) = 0;
};

struct __declspec(uuid("00024432-0000-0000-c000-000000000046"))
AutoFilter : IDispatch
{};

struct __declspec(uuid("00024433-0000-0000-c000-000000000046"))
Filters : IDispatch
{};

struct __declspec(uuid("00024434-0000-0000-c000-000000000046"))
Filter : IDispatch
{};

struct __declspec(uuid("000208d4-0000-0000-c000-000000000046"))
excelAutoCorrect : IDispatch
{};

struct __declspec(uuid("00020854-0000-0000-c000-000000000046"))
Border : IDispatch
{};

struct __declspec(uuid("00020870-0000-0000-c000-000000000046"))
Interior : IDispatch
{};

struct __declspec(uuid("00024435-0000-0000-c000-000000000046"))
ChartFillFormat : IDispatch
{};

struct __declspec(uuid("00024436-0000-0000-c000-000000000046"))
ChartColorFormat : IDispatch
{};

struct __declspec(uuid("00020848-0000-0000-c000-000000000046"))
Axis : IDispatch
{};

struct __declspec(uuid("00020849-0000-0000-c000-000000000046"))
ChartTitle : IDispatch
{};

struct __declspec(uuid("0002084a-0000-0000-c000-000000000046"))
AxisTitle : IDispatch
{};

struct __declspec(uuid("00020859-0000-0000-c000-000000000046"))
ChartGroup : IDispatch
{};

struct __declspec(uuid("0002085a-0000-0000-c000-000000000046"))
ChartGroups : IDispatch
{};

struct __declspec(uuid("0002085b-0000-0000-c000-000000000046"))
Axes : IDispatch
{};

struct __declspec(uuid("00020869-0000-0000-c000-000000000046"))
Points : IDispatch
{};

struct __declspec(uuid("0002086a-0000-0000-c000-000000000046"))
Point : IDispatch
{};

struct __declspec(uuid("0002086b-0000-0000-c000-000000000046"))
Series : IDispatch
{};

struct __declspec(uuid("0002086c-0000-0000-c000-000000000046"))
SeriesCollection : IDispatch
{};

struct __declspec(uuid("000208b2-0000-0000-c000-000000000046"))
DataLabel : IDispatch
{};

struct __declspec(uuid("000208b3-0000-0000-c000-000000000046"))
DataLabels : IDispatch
{};

struct __declspec(uuid("000208ba-0000-0000-c000-000000000046"))
LegendEntry : IDispatch
{};

struct __declspec(uuid("000208bb-0000-0000-c000-000000000046"))
LegendEntries : IDispatch
{};

struct __declspec(uuid("000208bc-0000-0000-c000-000000000046"))
LegendKey : IDispatch
{};

struct __declspec(uuid("000208bd-0000-0000-c000-000000000046"))
Trendlines : IDispatch
{};

struct __declspec(uuid("000208be-0000-0000-c000-000000000046"))
Trendline : IDispatch
{};

struct __declspec(uuid("000208c0-0000-0000-c000-000000000046"))
Corners : IDispatch
{};

struct __declspec(uuid("000208c1-0000-0000-c000-000000000046"))
SeriesLines : IDispatch
{};

struct __declspec(uuid("000208c2-0000-0000-c000-000000000046"))
HiLoLines : IDispatch
{};

struct __declspec(uuid("000208c3-0000-0000-c000-000000000046"))
Gridlines : IDispatch
{};

struct __declspec(uuid("000208c4-0000-0000-c000-000000000046"))
DropLines : IDispatch
{};

struct __declspec(uuid("00024437-0000-0000-c000-000000000046"))
LeaderLines : IDispatch
{};

struct __declspec(uuid("000208c5-0000-0000-c000-000000000046"))
UpBars : IDispatch
{};

struct __declspec(uuid("000208c6-0000-0000-c000-000000000046"))
DownBars : IDispatch
{};

struct __declspec(uuid("000208c7-0000-0000-c000-000000000046"))
Floor : IDispatch
{};

struct __declspec(uuid("000208c8-0000-0000-c000-000000000046"))
Walls : IDispatch
{};

struct __declspec(uuid("000208c9-0000-0000-c000-000000000046"))
TickLabels : IDispatch
{};

struct __declspec(uuid("000208cb-0000-0000-c000-000000000046"))
PlotArea : IDispatch
{};

struct __declspec(uuid("000208cc-0000-0000-c000-000000000046"))
ChartArea : IDispatch
{};

struct __declspec(uuid("000208cd-0000-0000-c000-000000000046"))
Legend : IDispatch
{};

struct __declspec(uuid("000208ce-0000-0000-c000-000000000046"))
ErrorBars : IDispatch
{};

struct __declspec(uuid("00020843-0000-0000-c000-000000000046"))
DataTable : IDispatch
{};

struct __declspec(uuid("00024438-0000-0000-c000-000000000046"))
Phonetic : IDispatch
{};

struct __declspec(uuid("00024439-0000-0000-c000-000000000046"))
excelShape : IDispatch
{};

struct __declspec(uuid("0002443a-0000-0000-c000-000000000046"))
excelShapes : IDispatch
{};

struct __declspec(uuid("0002443b-0000-0000-c000-000000000046"))
excelShapeRange : IDispatch
{};

struct __declspec(uuid("0002443c-0000-0000-c000-000000000046"))
excelGroupShapes : IDispatch
{};

struct __declspec(uuid("0002443d-0000-0000-c000-000000000046"))
excelTextFrame : IDispatch
{};

struct __declspec(uuid("0002443e-0000-0000-c000-000000000046"))
excelConnectorFormat : IDispatch
{};

struct __declspec(uuid("0002443f-0000-0000-c000-000000000046"))
excelFreeformBuilder : IDispatch
{};

struct __declspec(uuid("00024440-0000-0000-c000-000000000046"))
ControlFormat : IDispatch
{};

struct __declspec(uuid("00024441-0000-0000-c000-000000000046"))
excelOLEFormat : IDispatch
{};

struct __declspec(uuid("00024442-0000-0000-c000-000000000046"))
excelLinkFormat : IDispatch
{};

struct __declspec(uuid("00024443-0000-0000-c000-000000000046"))
PublishObjects : IDispatch
{};

struct __declspec(uuid("00024445-0000-0000-c000-000000000046"))
OLEDBError : IDispatch
{};

struct __declspec(uuid("00024446-0000-0000-c000-000000000046"))
OLEDBErrors : IDispatch
{};

struct __declspec(uuid("00024447-0000-0000-c000-000000000046"))
Phonetics : IDispatch
{};

struct __declspec(uuid("0002444a-0000-0000-c000-000000000046"))
PivotLayout : IDispatch
{};

struct __declspec(uuid("0002084c-0000-0000-c000-000000000046"))
DisplayUnitLabel : IDispatch
{};

struct __declspec(uuid("00024450-0000-0000-c000-000000000046"))
CellFormat : IDispatch
{};

struct __declspec(uuid("00024451-0000-0000-c000-000000000046"))
UsedObjects : IDispatch
{};

struct __declspec(uuid("00024452-0000-0000-c000-000000000046"))
CustomProperties : IDispatch
{};

struct __declspec(uuid("00024453-0000-0000-c000-000000000046"))
CustomProperty : IDispatch
{};

struct __declspec(uuid("00024454-0000-0000-c000-000000000046"))
CalculatedMembers : IDispatch
{};

struct __declspec(uuid("00024455-0000-0000-c000-000000000046"))
CalculatedMember : IDispatch
{};

struct __declspec(uuid("00024456-0000-0000-c000-000000000046"))
Watches : IDispatch
{};

struct __declspec(uuid("00024457-0000-0000-c000-000000000046"))
Watch : IDispatch
{};

struct __declspec(uuid("00024458-0000-0000-c000-000000000046"))
PivotCell : IDispatch
{};

struct __declspec(uuid("00024459-0000-0000-c000-000000000046"))
Graphic : IDispatch
{};

struct __declspec(uuid("000244a1-0001-0000-c000-000000000046"))
IHeaderFooter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
};

struct __declspec(uuid("0002445a-0000-0000-c000-000000000046"))
AutoRecover : IDispatch
{};

struct __declspec(uuid("0002445b-0000-0000-c000-000000000046"))
ErrorCheckingOptions : IDispatch
{};

struct __declspec(uuid("0002445c-0000-0000-c000-000000000046"))
Errors : IDispatch
{};

struct __declspec(uuid("0002445d-0000-0000-c000-000000000046"))
Error : IDispatch
{};

struct __declspec(uuid("0002445e-0000-0000-c000-000000000046"))
SmartTagAction : IDispatch
{};

struct __declspec(uuid("0002445f-0000-0000-c000-000000000046"))
SmartTagActions : IDispatch
{};

struct __declspec(uuid("00024460-0000-0000-c000-000000000046"))
SmartTag : IDispatch
{};

struct __declspec(uuid("00024461-0000-0000-c000-000000000046"))
SmartTags : IDispatch
{};

struct __declspec(uuid("00024462-0000-0000-c000-000000000046"))
SmartTagRecognizer : IDispatch
{};

struct __declspec(uuid("00024463-0000-0000-c000-000000000046"))
SmartTagRecognizers : IDispatch
{};

struct __declspec(uuid("00024464-0000-0000-c000-000000000046"))
SmartTagOptions : IDispatch
{};

struct __declspec(uuid("00024465-0000-0000-c000-000000000046"))
SpellingOptions : IDispatch
{};

struct __declspec(uuid("00024466-0000-0000-c000-000000000046"))
Speech : IDispatch
{};

struct __declspec(uuid("00024467-0000-0000-c000-000000000046"))
Protection : IDispatch
{};

struct __declspec(uuid("00024468-0000-0000-c000-000000000046"))
PivotItemList : IDispatch
{};

struct __declspec(uuid("00024469-0000-0000-c000-000000000046"))
Tab : IDispatch
{};

struct __declspec(uuid("0002446a-0000-0000-c000-000000000046"))
AllowEditRanges : IDispatch
{};

struct __declspec(uuid("00024467-0001-0000-c000-000000000046"))
IProtection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AllowFormattingCells (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowFormattingColumns (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowFormattingRows (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowInsertingColumns (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowInsertingRows (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowInsertingHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowDeletingColumns (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowDeletingRows (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowSorting (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowFiltering (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowUsingPivotTables (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowEditRanges (
        /*[out,retval]*/ struct AllowEditRanges * * RHS ) = 0;
};

struct __declspec(uuid("0002446b-0000-0000-c000-000000000046"))
AllowEditRange : IDispatch
{};

struct __declspec(uuid("0002446a-0001-0000-c000-000000000046"))
IAllowEditRanges : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AllowEditRange * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Title,
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT Password,
        /*[out,retval]*/ struct AllowEditRange * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AllowEditRange * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002446c-0000-0000-c000-000000000046"))
UserAccessList : IDispatch
{};

struct __declspec(uuid("0002446b-0001-0000-c000-000000000046"))
IAllowEditRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall putref_Range (
        /*[in]*/ struct Range * RHS ) = 0;
      virtual HRESULT __stdcall ChangePassword (
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT Password = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Users (
        /*[out,retval]*/ struct UserAccessList * * RHS ) = 0;
};

struct __declspec(uuid("0002446d-0000-0000-c000-000000000046"))
UserAccess : IDispatch
{};

struct __declspec(uuid("0002446c-0001-0000-c000-000000000046"))
IUserAccessList : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct UserAccess * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL AllowEdit,
        /*[out,retval]*/ struct UserAccess * * RHS ) = 0;
      virtual HRESULT __stdcall DeleteAll ( ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct UserAccess * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002446e-0000-0000-c000-000000000046"))
RTD : IDispatch
{};

struct __declspec(uuid("0002446f-0000-0000-c000-000000000046"))
excelDiagram : IDispatch
{};

struct __declspec(uuid("00024470-0000-0000-c000-000000000046"))
ListObjects : IDispatch
{};

struct __declspec(uuid("00024471-0000-0000-c000-000000000046"))
ListObject : IDispatch
{};

struct __declspec(uuid("00024472-0000-0000-c000-000000000046"))
ListColumns : IDispatch
{};

struct __declspec(uuid("00024473-0000-0000-c000-000000000046"))
ListColumn : IDispatch
{};

struct __declspec(uuid("00024474-0000-0000-c000-000000000046"))
ListRows : IDispatch
{};

struct __declspec(uuid("00024475-0000-0000-c000-000000000046"))
ListRow : IDispatch
{};

struct __declspec(uuid("00024476-0000-0000-c000-000000000046"))
XmlNamespace : IDispatch
{};

struct __declspec(uuid("00024477-0000-0000-c000-000000000046"))
XmlNamespaces : IDispatch
{};

struct __declspec(uuid("00024478-0000-0000-c000-000000000046"))
XmlDataBinding : IDispatch
{};

struct __declspec(uuid("00024479-0000-0000-c000-000000000046"))
XmlSchema : IDispatch
{};

struct __declspec(uuid("0002447a-0000-0000-c000-000000000046"))
XmlSchemas : IDispatch
{};

struct __declspec(uuid("0002447b-0000-0000-c000-000000000046"))
XmlMap : IDispatch
{};

struct __declspec(uuid("00024412-0001-0000-c000-000000000046"))
IWorkbookEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Open ( ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Deactivate ( ) = 0;
      virtual HRESULT __stdcall BeforeClose (
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall BeforeSave (
        /*[in]*/ VARIANT_BOOL SaveAsUI,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall BeforePrint (
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall NewSheet (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall AddinInstall ( ) = 0;
      virtual HRESULT __stdcall AddinUninstall ( ) = 0;
      virtual HRESULT __stdcall WindowResize (
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowActivate (
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowDeactivate (
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall SheetSelectionChange (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target ) = 0;
      virtual HRESULT __stdcall SheetBeforeDoubleClick (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall SheetBeforeRightClick (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall SheetActivate (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall SheetDeactivate (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall SheetCalculate (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall SheetChange (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target ) = 0;
      virtual HRESULT __stdcall SheetFollowHyperlink (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct excelHyperlink * Target ) = 0;
      virtual HRESULT __stdcall SheetPivotTableUpdate (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct PivotTable * Target ) = 0;
      virtual HRESULT __stdcall PivotTableCloseConnection (
        /*[in]*/ struct PivotTable * Target ) = 0;
      virtual HRESULT __stdcall PivotTableOpenConnection (
        /*[in]*/ struct PivotTable * Target ) = 0;
      virtual HRESULT __stdcall Sync (
        /*[in]*/ enum Office::MsoSyncEventType SyncEventType ) = 0;
      virtual HRESULT __stdcall BeforeXmlImport (
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR Url,
        /*[in]*/ VARIANT_BOOL IsRefresh,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall AfterXmlImport (
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ VARIANT_BOOL IsRefresh,
        /*[in]*/ enum XlXmlImportResult Result ) = 0;
      virtual HRESULT __stdcall BeforeXmlExport (
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR Url,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall AfterXmlExport (
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR Url,
        /*[in]*/ enum XlXmlExportResult Result ) = 0;
      virtual HRESULT __stdcall RowsetComplete (
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Sheet,
        /*[in]*/ VARIANT_BOOL Success ) = 0;
};

struct __declspec(uuid("0002447c-0000-0000-c000-000000000046"))
XmlMaps : IDispatch
{};

struct __declspec(uuid("0002447d-0000-0000-c000-000000000046"))
ListDataFormat : IDispatch
{};

struct __declspec(uuid("0002447e-0000-0000-c000-000000000046"))
XPath : IDispatch
{};

struct __declspec(uuid("0002447f-0000-0000-c000-000000000046"))
PivotLineCells : IDispatch
{};

struct __declspec(uuid("00024480-0000-0000-c000-000000000046"))
PivotLine : IDispatch
{};

struct __declspec(uuid("00024481-0000-0000-c000-000000000046"))
PivotLines : IDispatch
{};

struct __declspec(uuid("00024482-0000-0000-c000-000000000046"))
PivotAxis : IDispatch
{};

struct __declspec(uuid("00024483-0000-0000-c000-000000000046"))
PivotFilter : IDispatch
{};

struct __declspec(uuid("00024484-0000-0000-c000-000000000046"))
PivotFilters : IDispatch
{};

struct __declspec(uuid("00024485-0000-0000-c000-000000000046"))
WorkbookConnection : IDispatch
{};

struct __declspec(uuid("00024486-0000-0000-c000-000000000046"))
Connections : IDispatch
{};

struct __declspec(uuid("00024487-0000-0000-c000-000000000046"))
WorksheetView : IDispatch
{};

struct __declspec(uuid("00024488-0000-0000-c000-000000000046"))
ChartView : IDispatch
{};

struct __declspec(uuid("00024489-0000-0000-c000-000000000046"))
ModuleView : IDispatch
{};

struct __declspec(uuid("0002448a-0000-0000-c000-000000000046"))
DialogSheetView : IDispatch
{};

struct __declspec(uuid("0002448c-0000-0000-c000-000000000046"))
SheetViews : IDispatch
{};

struct __declspec(uuid("0002448d-0000-0000-c000-000000000046"))
OLEDBConnection : IDispatch
{};

struct __declspec(uuid("0002448e-0000-0000-c000-000000000046"))
ODBCConnection : IDispatch
{};

struct __declspec(uuid("0002448f-0000-0000-c000-000000000046"))
Action : IDispatch
{};

struct __declspec(uuid("00024490-0000-0000-c000-000000000046"))
Actions : IDispatch
{};

struct __declspec(uuid("00024491-0000-0000-c000-000000000046"))
FormatColor : IDispatch
{};

struct __declspec(uuid("00024495-0001-0000-c000-000000000046"))
IColorScaleCriterion : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlConditionValueTypes * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum XlConditionValueTypes RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormatColor (
        /*[out,retval]*/ struct FormatColor * * RHS ) = 0;
};

struct __declspec(uuid("00024492-0000-0000-c000-000000000046"))
ConditionValue : IDispatch
{};

struct __declspec(uuid("00024493-0000-0000-c000-000000000046"))
ColorScale : IDispatch
{};

struct __declspec(uuid("00024494-0000-0000-c000-000000000046"))
ColorScaleCriteria : IDispatch
{};

struct __declspec(uuid("00024495-0000-0000-c000-000000000046"))
ColorScaleCriterion : IDispatch
{};

struct __declspec(uuid("00024494-0001-0000-c000-000000000046"))
IColorScaleCriteria : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ColorScaleCriterion * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ColorScaleCriterion * * RHS ) = 0;
};

struct __declspec(uuid("00024496-0000-0000-c000-000000000046"))
Databar : IDispatch
{};

struct __declspec(uuid("00024497-0000-0000-c000-000000000046"))
IconSetCondition : IDispatch
{};

struct __declspec(uuid("00024498-0000-0000-c000-000000000046"))
IconCriteria : IDispatch
{};

struct __declspec(uuid("00024499-0000-0000-c000-000000000046"))
IconCriterion : IDispatch
{};

struct __declspec(uuid("00024498-0001-0000-c000-000000000046"))
IIconCriteria : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IconCriterion * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IconCriterion * * RHS ) = 0;
};

struct __declspec(uuid("0002449a-0000-0000-c000-000000000046"))
Icon : IDispatch
{};

struct __declspec(uuid("0002449b-0000-0000-c000-000000000046"))
IconSet : IDispatch
{};

struct __declspec(uuid("0002449c-0000-0000-c000-000000000046"))
IconSets : IDispatch
{};

struct __declspec(uuid("0002449d-0000-0000-c000-000000000046"))
Top10 : IDispatch
{};

struct __declspec(uuid("0002449e-0000-0000-c000-000000000046"))
AboveAverage : IDispatch
{};

struct __declspec(uuid("0002449f-0000-0000-c000-000000000046"))
UniqueValues : IDispatch
{};

struct __declspec(uuid("000244a0-0000-0000-c000-000000000046"))
Ranges : IDispatch
{};

struct __declspec(uuid("000244a1-0000-0000-c000-000000000046"))
excelHeaderFooter : IDispatch
{};

struct __declspec(uuid("000244a2-0001-0000-c000-000000000046"))
IPage : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeftHeader (
        /*[out,retval]*/ struct excelHeaderFooter * * RHS ) = 0;
      virtual HRESULT __stdcall get_CenterHeader (
        /*[out,retval]*/ struct excelHeaderFooter * * RHS ) = 0;
      virtual HRESULT __stdcall get_RightHeader (
        /*[out,retval]*/ struct excelHeaderFooter * * RHS ) = 0;
      virtual HRESULT __stdcall get_LeftFooter (
        /*[out,retval]*/ struct excelHeaderFooter * * RHS ) = 0;
      virtual HRESULT __stdcall get_CenterFooter (
        /*[out,retval]*/ struct excelHeaderFooter * * RHS ) = 0;
      virtual HRESULT __stdcall get_RightFooter (
        /*[out,retval]*/ struct excelHeaderFooter * * RHS ) = 0;
};

struct __declspec(uuid("000244a2-0000-0000-c000-000000000046"))
Page : IDispatch
{};

struct __declspec(uuid("000244a3-0001-0000-c000-000000000046"))
IPages : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Page * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Page * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000244a3-0000-0000-c000-000000000046"))
excelPages : IDispatch
{};

struct __declspec(uuid("000244a4-0000-0000-c000-000000000046"))
ServerViewableItems : IDispatch
{};

struct __declspec(uuid("000244a5-0000-0000-c000-000000000046"))
TableStyleElement : IDispatch
{};

struct __declspec(uuid("000244a6-0000-0000-c000-000000000046"))
TableStyleElements : IDispatch
{};

struct __declspec(uuid("000244a7-0000-0000-c000-000000000046"))
excelTableStyle : IDispatch
{};

struct __declspec(uuid("000244a8-0000-0000-c000-000000000046"))
TableStyles : IDispatch
{};

struct __declspec(uuid("000244a9-0000-0000-c000-000000000046"))
SortField : IDispatch
{};

struct __declspec(uuid("000244aa-0000-0000-c000-000000000046"))
SortFields : IDispatch
{};

struct __declspec(uuid("000244ab-0000-0000-c000-000000000046"))
Sort : IDispatch
{};

struct __declspec(uuid("000244ac-0000-0000-c000-000000000046"))
excelResearch : IDispatch
{};

struct __declspec(uuid("000244ad-0000-0000-c000-000000000046"))
ColorStop : IDispatch
{};

struct __declspec(uuid("000244ae-0000-0000-c000-000000000046"))
ColorStops : IDispatch
{};

struct __declspec(uuid("000244af-0000-0000-c000-000000000046"))
LinearGradient : IDispatch
{};

struct __declspec(uuid("000244b0-0000-0000-c000-000000000046"))
RectangularGradient : IDispatch
{};

struct __declspec(uuid("000244b1-0000-0000-c000-000000000046"))
MultiThreadedCalculation : IDispatch
{};

struct __declspec(uuid("000244b2-0000-0000-c000-000000000046"))
ChartFormat : IDispatch
{};

struct __declspec(uuid("0002442e-0001-0000-c000-000000000046"))
IDummy : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall _ActiveSheetOrChart ( ) = 0;
      virtual HRESULT __stdcall excelRGB ( ) = 0;
      virtual HRESULT __stdcall ChDir ( ) = 0;
      virtual HRESULT __stdcall DoScript ( ) = 0;
      virtual HRESULT __stdcall DirectObject ( ) = 0;
      virtual HRESULT __stdcall RefreshDocument ( ) = 0;
      virtual HRESULT __stdcall AddSignatureLine (
        /*[in]*/ VARIANT SigProv,
        /*[out,retval]*/ struct Office::Signature * * RHS ) = 0;
      virtual HRESULT __stdcall AddNonVisibleSignature (
        /*[in]*/ VARIANT SigProv,
        /*[out,retval]*/ struct Office::Signature * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowSignaturesPane (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowSignaturesPane (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ThemeFontScheme ( ) = 0;
      virtual HRESULT __stdcall ThemeColorScheme ( ) = 0;
      virtual HRESULT __stdcall ThemeEffectScheme ( ) = 0;
      virtual HRESULT __stdcall Load ( ) = 0;
};

struct __declspec(uuid("0002444f-0001-0000-c000-000000000046"))
ICanvasShapes : IDispatch
{};

struct __declspec(uuid("59191da1-ea47-11ce-a51f-00aa0061507f"))
QueryTable;
    // [ default ] dispinterface _QueryTable
    // [ default, source ] dispinterface RefreshEvents

struct __declspec(uuid("00024500-0000-0000-c000-000000000046"))
excelApplication;
    // [ default ] interface _excelApplication
    // [ default, source ] dispinterface AppEvents

struct __declspec(uuid("00020892-0001-0000-c000-000000000046"))
IWindows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Arrange (
        /*[in]*/ enum XlArrangeStyle ArrangeStyle,
        /*[in]*/ VARIANT ActiveWorkbook,
        /*[in]*/ VARIANT SyncHorizontal,
        /*[in]*/ VARIANT SyncVertical,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Window * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Window * * RHS ) = 0;
      virtual HRESULT __stdcall CompareSideBySideWith (
        /*[in]*/ VARIANT WindowName,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall BreakSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_SyncScrollingSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SyncScrollingSideBySide (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ResetPositionsSideBySide ( ) = 0;
};

struct __declspec(uuid("00020845-0001-0000-c000-000000000046"))
IWorksheetFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _WSFunction (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Count (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IsNA (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall IsError (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Sum (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Average (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Min (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Max (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Npv (
        /*[in]*/ double Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall StDev (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Dollar (
        /*[in]*/ double Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Fixed (
        /*[in]*/ double Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Pi (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Ln (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Log10 (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Round (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Lookup (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Index (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Rept (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall And (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Or (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall DCount (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DSum (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DAverage (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DMin (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DMax (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DStDev (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Var (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DVar (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Text (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ BSTR Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall LinEst (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Trend (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall LogEst (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Growth (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Pv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Fv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NPer (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Pmt (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Rate (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall MIrr (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Irr (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Match (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Weekday (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Search (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ BSTR Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Transpose (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Atan2 (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Asin (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Acos (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Choose (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall HLookup (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall VLookup (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Log (
        /*[in]*/ double Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Proper (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Trim (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Replace (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ BSTR Arg4,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Substitute (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ BSTR Arg2,
        /*[in]*/ BSTR Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Find (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ BSTR Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IsErr (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall IsText (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall IsNumber (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Sln (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Syd (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Ddb (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Clean (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall MDeterm (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall MInverse (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall MMult (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Ipmt (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Ppmt (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CountA (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Product (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Fact (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DProduct (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IsNonText (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall StDevP (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall VarP (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DStDevP (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DVarP (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IsLogical (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall DCountA (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall USDollar (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall FindB (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ BSTR Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SearchB (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ BSTR Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ReplaceB (
        /*[in]*/ BSTR Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ BSTR Arg4,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall RoundUp (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall RoundDown (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Rank (
        /*[in]*/ double Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Days360 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Vdb (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[in]*/ double Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Median (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumProduct (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Sinh (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Cosh (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Tanh (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Asinh (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Acosh (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Atanh (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DGet (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Db (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Frequency (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall AveDev (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BetaDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall GammaLn (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BetaInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BinomDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT_BOOL Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ChiDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ChiInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Combin (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Confidence (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CritBinom (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Even (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ExponDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ VARIANT_BOOL Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall FDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall FInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Fisher (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall FisherInv (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Floor (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall GammaDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT_BOOL Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall GammaInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Ceiling (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall HypGeomDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall LogNormDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall LogInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NegBinomDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NormDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT_BOOL Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NormSDist (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NormInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NormSInv (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Standardize (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Odd (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Permut (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Poisson (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ VARIANT_BOOL Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TDist (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Weibull (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT_BOOL Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumXMY2 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumX2MY2 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumX2PY2 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ChiTest (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Correl (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Covar (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Forecast (
        /*[in]*/ double Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall FTest (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Intercept (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Pearson (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall RSq (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall StEyx (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Slope (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TTest (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Prob (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DevSq (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall GeoMean (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall HarMean (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumSq (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Kurt (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Skew (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ZTest (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Large (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Small (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Quartile (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Percentile (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall PercentRank (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Mode (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TrimMean (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TInv (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Power (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Radians (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Degrees (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Subtotal (
        /*[in]*/ double Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumIf (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CountIf (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CountBlank (
        /*[in]*/ struct Range * Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Ispmt (
        /*[in]*/ double Arg1,
        /*[in]*/ double Arg2,
        /*[in]*/ double Arg3,
        /*[in]*/ double Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Roman (
        /*[in]*/ double Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Asc (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Dbcs (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Phonetic (
        /*[in]*/ struct Range * Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall BahtText (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ThaiDayOfWeek (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ThaiDigit (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ThaiMonthOfYear (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ThaiNumSound (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ThaiNumString (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ThaiStringLength (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IsThaiDigit (
        /*[in]*/ BSTR Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall RoundBahtDown (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall RoundBahtUp (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ThaiYear (
        /*[in]*/ double Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall RTD (
        /*[in]*/ VARIANT progID,
        /*[in]*/ VARIANT server,
        /*[in]*/ VARIANT topic1,
        /*[in]*/ VARIANT topic2,
        /*[in]*/ VARIANT topic3,
        /*[in]*/ VARIANT topic4,
        /*[in]*/ VARIANT topic5,
        /*[in]*/ VARIANT topic6,
        /*[in]*/ VARIANT topic7,
        /*[in]*/ VARIANT topic8,
        /*[in]*/ VARIANT topic9,
        /*[in]*/ VARIANT topic10,
        /*[in]*/ VARIANT topic11,
        /*[in]*/ VARIANT topic12,
        /*[in]*/ VARIANT topic13,
        /*[in]*/ VARIANT topic14,
        /*[in]*/ VARIANT topic15,
        /*[in]*/ VARIANT topic16,
        /*[in]*/ VARIANT topic17,
        /*[in]*/ VARIANT topic18,
        /*[in]*/ VARIANT topic19,
        /*[in]*/ VARIANT topic20,
        /*[in]*/ VARIANT topic21,
        /*[in]*/ VARIANT topic22,
        /*[in]*/ VARIANT topic23,
        /*[in]*/ VARIANT topic24,
        /*[in]*/ VARIANT topic25,
        /*[in]*/ VARIANT topic26,
        /*[in]*/ VARIANT topic27,
        /*[in]*/ VARIANT topic28,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Hex2Bin (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Hex2Dec (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Hex2Oct (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Dec2Bin (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Dec2Hex (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Dec2Oct (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Oct2Bin (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Oct2Hex (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Oct2Dec (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Bin2Dec (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Bin2Oct (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Bin2Hex (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImSub (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImDiv (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImPower (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImAbs (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImSqrt (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImLn (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImLog2 (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImLog10 (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImSin (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImCos (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImExp (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImArgument (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImConjugate (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Imaginary (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ImReal (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Complex (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImSum (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ImProduct (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall SeriesSum (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall FactDouble (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SqrtPi (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Quotient (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Delta (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall GeStep (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IsEven (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall IsOdd (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall MRound (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Erf (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ErfC (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BesselJ (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BesselK (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BesselY (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall BesselI (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Xirr (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Xnpv (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall PriceMat (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall YieldMat (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IntRate (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Received (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Disc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall PriceDisc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall YieldDisc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TBillEq (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TBillPrice (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall TBillYield (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Price (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DollarDe (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall DollarFr (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Nominal (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Effect (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CumPrinc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CumIPmt (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall EDate (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall EoMonth (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall YearFrac (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CoupDayBs (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CoupDays (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CoupDaysNc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CoupNcd (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CoupNum (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CoupPcd (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Duration (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall MDuration (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall OddLPrice (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall OddLYield (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall OddFPrice (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall OddFYield (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall RandBetween (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall WeekNum (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall AmorDegrc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall AmorLinc (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Convert (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall AccrInt (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall AccrIntM (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall WorkDay (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall NetworkDays (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Gcd (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall MultiNomial (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall Lcm (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall FVSchedule (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall SumIfs (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CountIfs (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall AverageIf (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall AverageIfs (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall IfError (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("000208d7-0000-0000-c000-000000000046"))
Sheets : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT After,
        /*[in]*/ VARIANT Count,
        /*[in]*/ VARIANT Type,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall FillAcrossSheets (
        /*[in]*/ struct Range * Range,
        /*[in]*/ enum XlFillWith Type,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
};

struct __declspec(uuid("00024404-0001-0000-c000-000000000046"))
IHPageBreaks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct HPageBreak * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct HPageBreak * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ IDispatch * Before,
        /*[out,retval]*/ struct HPageBreak * * RHS ) = 0;
};

struct __declspec(uuid("00024405-0001-0000-c000-000000000046"))
IVPageBreaks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct VPageBreak * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct VPageBreak * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ IDispatch * Before,
        /*[out,retval]*/ struct VPageBreak * * RHS ) = 0;
};

struct __declspec(uuid("00024406-0001-0000-c000-000000000046"))
IRecentFiles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Maximum (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct RecentFile * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct RecentFile * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct RecentFile * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000208d8-0000-0000-c000-000000000046"))
_Worksheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelPageSetup (
        /*[out,retval]*/ struct excelPageSetup * * RHS ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ProtectContents (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectDrawingObjects (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectionMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectScenarios (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall _SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlSheetVisibility * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlSheetVisibility RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapes (
        /*[out,retval]*/ struct excelShapes * * RHS ) = 0;
      virtual HRESULT __stdcall get_TransitionExpEval (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TransitionExpEval (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Arcs (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFilterMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoFilterMode (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall SetBackgroundPicture (
        /*[in]*/ BSTR Filename ) = 0;
      virtual HRESULT __stdcall Buttons (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Calculate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_EnableCalculation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableCalculation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall ChartObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall CheckBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary = vtMissing,
        /*[in]*/ VARIANT IgnoreUppercase = vtMissing,
        /*[in]*/ VARIANT AlwaysSuggest = vtMissing,
        /*[in]*/ VARIANT SpellLang = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_CircularReference (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall ClearArrows (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_excelColumns (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ConsolidationFunction (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlConsolidationFunction * RHS ) = 0;
      virtual HRESULT __stdcall get_ConsolidationOptions (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ConsolidationSources (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayAutomaticPageBreaks (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayAutomaticPageBreaks (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Drawings (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall DrawingObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall DropDowns (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_EnableAutoFilter (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableAutoFilter (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableSelection (
        /*[out,retval]*/ enum XlEnableSelection * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableSelection (
        /*[in]*/ enum XlEnableSelection RHS ) = 0;
      virtual HRESULT __stdcall get_EnableOutlining (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableOutlining (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnablePivotTable (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnablePivotTable (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_FilterMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall ResetAllPageBreaks ( ) = 0;
      virtual HRESULT __stdcall GroupBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall GroupObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Labels (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Lines (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ListBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Names (
        /*[out,retval]*/ struct Names * * RHS ) = 0;
      virtual HRESULT __stdcall OLEObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnCalculate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnCalculate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnData (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnData (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnEntry (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnEntry (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall OptionButtons (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Outline (
        /*[out,retval]*/ struct Outline * * RHS ) = 0;
      virtual HRESULT __stdcall Ovals (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ VARIANT Destination = vtMissing,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _PasteSpecial (
        /*[in]*/ VARIANT Format = vtMissing,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing,
        /*[in]*/ VARIANT IconFileName = vtMissing,
        /*[in]*/ VARIANT IconIndex = vtMissing,
        /*[in]*/ VARIANT IconLabel = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Pictures (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall PivotTables (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall PivotTableWizard (
        /*[in]*/ VARIANT SourceType,
        /*[in]*/ VARIANT SourceData,
        /*[in]*/ VARIANT TableDestination,
        /*[in]*/ VARIANT TableName,
        /*[in]*/ VARIANT RowGrand,
        /*[in]*/ VARIANT ColumnGrand,
        /*[in]*/ VARIANT SaveData,
        /*[in]*/ VARIANT HasAutoFormat,
        /*[in]*/ VARIANT AutoPage,
        /*[in]*/ VARIANT Reserved,
        /*[in]*/ VARIANT BackgroundQuery,
        /*[in]*/ VARIANT OptimizeCache,
        /*[in]*/ VARIANT PageFieldOrder,
        /*[in]*/ VARIANT PageFieldWrapCount,
        /*[in]*/ VARIANT ReadData,
        /*[in]*/ VARIANT Connection,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[in]*/ VARIANT Cell1,
        /*[in]*/ VARIANT Cell2,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Rectangles (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelRows (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Scenarios (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ScrollArea (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ScrollArea (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall ScrollBars (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ShowAllData (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall ShowDataForm (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Spinners (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_StandardHeight (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_StandardWidth (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_StandardWidth (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall TextBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_TransitionFormEntry (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TransitionFormEntry (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlSheetType * RHS ) = 0;
      virtual HRESULT __stdcall get_UsedRange (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_QueryTables (
        /*[out,retval]*/ struct QueryTables * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayPageBreaks (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayPageBreaks (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_excelComments (
        /*[out,retval]*/ struct excelComments * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelHyperlinks (
        /*[out,retval]*/ struct excelHyperlinks * * RHS ) = 0;
      virtual HRESULT __stdcall ClearCircles ( ) = 0;
      virtual HRESULT __stdcall CircleInvalid ( ) = 0;
      virtual HRESULT __stdcall get__DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFilter (
        /*[out,retval]*/ struct AutoFilter * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary = vtMissing,
        /*[in]*/ VARIANT IgnoreUppercase = vtMissing,
        /*[in]*/ VARIANT AlwaysSuggest = vtMissing,
        /*[in]*/ VARIANT SpellLang = vtMissing,
        /*[in]*/ VARIANT IgnoreFinalYaa = vtMissing,
        /*[in]*/ VARIANT SpellScript = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Tab (
        /*[out,retval]*/ struct Tab * * RHS ) = 0;
      virtual HRESULT __stdcall get_MailEnvelope (
        /*[out,retval]*/ struct Office::IMsoEnvelopeVB * * RHS ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in]*/ VARIANT Local = vtMissing ) = 0;
      virtual HRESULT __stdcall get_CustomProperties (
        /*[out,retval]*/ struct CustomProperties * * RHS ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * RHS ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[out,retval]*/ struct Protection * * RHS ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ VARIANT Format = vtMissing,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing,
        /*[in]*/ VARIANT IconFileName = vtMissing,
        /*[in]*/ VARIANT IconIndex = vtMissing,
        /*[in]*/ VARIANT IconLabel = vtMissing,
        /*[in]*/ VARIANT NoHTMLFormatting = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing,
        /*[in]*/ VARIANT AllowFormattingCells = vtMissing,
        /*[in]*/ VARIANT AllowFormattingColumns = vtMissing,
        /*[in]*/ VARIANT AllowFormattingRows = vtMissing,
        /*[in]*/ VARIANT AllowInsertingColumns = vtMissing,
        /*[in]*/ VARIANT AllowInsertingRows = vtMissing,
        /*[in]*/ VARIANT AllowInsertingHyperlinks = vtMissing,
        /*[in]*/ VARIANT AllowDeletingColumns = vtMissing,
        /*[in]*/ VARIANT AllowDeletingRows = vtMissing,
        /*[in]*/ VARIANT AllowSorting = vtMissing,
        /*[in]*/ VARIANT AllowFiltering = vtMissing,
        /*[in]*/ VARIANT AllowUsingPivotTables = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ListObjects (
        /*[out,retval]*/ struct ListObjects * * RHS ) = 0;
      virtual HRESULT __stdcall XmlDataQuery (
        /*[in]*/ BSTR XPath,
        /*[in]*/ VARIANT SelectionNamespaces,
        /*[in]*/ VARIANT Map,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall XmlMapQuery (
        /*[in]*/ BSTR XPath,
        /*[in]*/ VARIANT SelectionNamespaces,
        /*[in]*/ VARIANT Map,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_EnableFormatConditionsCalculation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableFormatConditionsCalculation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Sort (
        /*[out,retval]*/ struct Sort * * RHS ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ enum XlFixedFormatType Type,
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Quality = vtMissing,
        /*[in]*/ VARIANT IncludeDocProperties = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT OpenAfterPublish = vtMissing,
        /*[in]*/ VARIANT FixedFormatExtClassPtr = vtMissing ) = 0;
};

struct __declspec(uuid("00020852-0001-0000-c000-000000000046"))
IStyle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaHidden (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaHidden (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ enum XlHAlign * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ enum XlHAlign RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeAlignment (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeAlignment (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeBorder (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeBorder (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeFont (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeFont (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeNumber (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeNumber (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IncludePatterns (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludePatterns (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeProtection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeProtection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IndentLevel (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_IndentLevel (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MergeCells (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_MergeCells (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum XlOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum XlOrientation RHS ) = 0;
      virtual HRESULT __stdcall get_ShrinkToFit (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShrinkToFit (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum XlVAlign * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum XlVAlign RHS ) = 0;
      virtual HRESULT __stdcall get_WrapText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WrapText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("00020853-0001-0000-c000-000000000046"))
IStyles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT BasedOn,
        /*[out,retval]*/ struct Style * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Style * * RHS ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ VARIANT Workbook,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Style * * RHS ) = 0;
};

struct __declspec(uuid("00020855-0001-0000-c000-000000000046"))
IBorders : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum XlBordersIndex Index,
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ enum XlBordersIndex Index,
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_ThemeColor (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ThemeColor (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00020857-0001-0000-c000-000000000046"))
IAddIn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_excelComments (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Installed (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Installed (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Keywords (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_progID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_CLSID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
};

struct __declspec(uuid("00020858-0001-0000-c000-000000000046"))
IAddIns : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT excelCopyFile,
        /*[out,retval]*/ struct excelAddIn * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelAddIn * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelAddIn * * RHS ) = 0;
};

struct __declspec(uuid("0002085c-0001-0000-c000-000000000046"))
IToolbar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[out,retval]*/ enum XlToolbarProtection * RHS ) = 0;
      virtual HRESULT __stdcall put_Protection (
        /*[in]*/ enum XlToolbarProtection RHS ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall get_ToolbarButtons (
        /*[out,retval]*/ struct ToolbarButtons * * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("0002085d-0001-0000-c000-000000000046"))
IToolbars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ struct Toolbar * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Toolbar * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Toolbar * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002085e-0001-0000-c000-000000000046"))
IToolbarButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_BuiltInFace (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BuiltInFace (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ struct Toolbar * Toolbar,
        /*[in]*/ long Before ) = 0;
      virtual HRESULT __stdcall CopyFace ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Edit ( ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HelpContextID (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpContextID (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_IsGap (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ struct Toolbar * Toolbar,
        /*[in]*/ long Before ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall PasteFace ( ) = 0;
      virtual HRESULT __stdcall get_Pushed (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Pushed (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall get_StatusBar (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("0002085f-0001-0000-c000-000000000046"))
IToolbarButtons : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Button,
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT OnAction,
        /*[in]*/ VARIANT Pushed,
        /*[in]*/ VARIANT Enabled,
        /*[in]*/ VARIANT StatusBar,
        /*[in]*/ VARIANT HelpFile,
        /*[in]*/ VARIANT HelpContextID,
        /*[out,retval]*/ struct ToolbarButton * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ToolbarButton * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ToolbarButton * * RHS ) = 0;
};

struct __declspec(uuid("00020860-0001-0000-c000-000000000046"))
IAreas : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
};

struct __declspec(uuid("00020863-0001-0000-c000-000000000046"))
IMenuBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ struct MenuBar * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MenuBar * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MenuBar * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020864-0001-0000-c000-000000000046"))
IMenuBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Menus (
        /*[out,retval]*/ struct Menus * * RHS ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("00020865-0001-0000-c000-000000000046"))
IMenus : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Caption,
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT Restore,
        /*[out,retval]*/ struct Menu * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Menu * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Menu * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020866-0001-0000-c000-000000000046"))
IMenu : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MenuItems (
        /*[out,retval]*/ struct MenuItems * * RHS ) = 0;
};

struct __declspec(uuid("00020867-0001-0000-c000-000000000046"))
IMenuItems : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Caption,
        /*[in]*/ VARIANT OnAction,
        /*[in]*/ VARIANT ShortcutKey,
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT Restore,
        /*[in]*/ VARIANT StatusBar,
        /*[in]*/ VARIANT HelpFile,
        /*[in]*/ VARIANT HelpContextID,
        /*[out,retval]*/ struct MenuItem * * RHS ) = 0;
      virtual HRESULT __stdcall AddMenu (
        /*[in]*/ BSTR Caption,
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT Restore,
        /*[out,retval]*/ struct Menu * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020868-0001-0000-c000-000000000046"))
IMenuItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Checked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Checked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HelpContextID (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpContextID (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_StatusBar (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("0002086f-0001-0000-c000-000000000046"))
IDrawingObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy28 ( ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall AddItem (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadLength (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadLength (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_CancelButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CancelButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DismissButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DismissButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalScrollBar (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DropDownLines (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DropDownLines (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual void __stdcall _Dummy47 ( ) = 0;
      virtual HRESULT __stdcall get_HelpButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_InputType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_InputType (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_LargeChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_LargeChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual void __stdcall _Dummy54 ( ) = 0;
      virtual HRESULT __stdcall List (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual void __stdcall _Dummy56 ( ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Max (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Max (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Min (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Min (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MultiSelect (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiSelect (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall RemoveAllItems (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall RemoveItem (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Reshape (
        /*[in]*/ long Vertex,
        /*[in]*/ VARIANT Insert,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Selected (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SmallChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Vertices (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall LinkCombo (
        /*[in]*/ VARIANT Link,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002441c-0001-0000-c000-000000000046"))
IPivotCache : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundQuery (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundQuery (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Connection (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Connection (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_EnableRefresh (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableRefresh (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MemoryUsed (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_OptimizeCache (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_OptimizeCache (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RecordCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall get_RefreshDate (
        /*[out,retval]*/ DATE * RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshOnFileOpen (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshOnFileOpen (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Sql (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Sql (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_SavePassword (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SavePassword (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SourceData (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceData (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CommandText (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandText (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CommandType (
        /*[out,retval]*/ enum XlCmdType * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandType (
        /*[in]*/ enum XlCmdType RHS ) = 0;
      virtual HRESULT __stdcall get_QueryType (
        /*[out,retval]*/ enum XlQueryType * RHS ) = 0;
      virtual HRESULT __stdcall get_MaintainConnection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MaintainConnection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshPeriod (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshPeriod (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Recordset (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall putref_Recordset (
        /*[in]*/ IDispatch * RHS ) = 0;
      virtual HRESULT __stdcall ResetTimer ( ) = 0;
      virtual HRESULT __stdcall get_LocalConnection (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_LocalConnection (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall CreatePivotTable (
        /*[in]*/ VARIANT TableDestination,
        /*[in]*/ VARIANT TableName,
        /*[in]*/ VARIANT ReadData,
        /*[in]*/ VARIANT DefaultVersion,
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_UseLocalConnection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UseLocalConnection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ADOConnection (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_IsConnected (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall MakeConnection ( ) = 0;
      virtual HRESULT __stdcall get_OLAP (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_SourceType (
        /*[out,retval]*/ enum XlPivotTableSourceType * RHS ) = 0;
      virtual HRESULT __stdcall get_MissingItemsLimit (
        /*[out,retval]*/ enum XlPivotTableMissingItems * RHS ) = 0;
      virtual HRESULT __stdcall put_MissingItemsLimit (
        /*[in]*/ enum XlPivotTableMissingItems RHS ) = 0;
      virtual HRESULT __stdcall get_SourceConnectionFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceConnectionFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SourceDataFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_RobustConnect (
        /*[out,retval]*/ enum XlRobustConnect * RHS ) = 0;
      virtual HRESULT __stdcall put_RobustConnect (
        /*[in]*/ enum XlRobustConnect RHS ) = 0;
      virtual HRESULT __stdcall SaveAsODC (
        /*[in]*/ BSTR ODCFileName,
        /*[in]*/ VARIANT Description = vtMissing,
        /*[in]*/ VARIANT Keywords = vtMissing ) = 0;
      virtual HRESULT __stdcall get_WorkbookConnection (
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ enum XlPivotTableVersionList * RHS ) = 0;
      virtual HRESULT __stdcall get_UpgradeOnRefresh (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UpgradeOnRefresh (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002441d-0001-0000-c000-000000000046"))
IPivotCaches : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotCache * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotCache * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlPivotTableSourceType SourceType,
        /*[in]*/ VARIANT SourceData,
        /*[out,retval]*/ struct PivotCache * * RHS ) = 0;
      virtual HRESULT __stdcall Create (
        /*[in]*/ enum XlPivotTableSourceType SourceType,
        /*[in]*/ VARIANT SourceData,
        /*[in]*/ VARIANT Version,
        /*[out,retval]*/ struct PivotCache * * RHS ) = 0;
};

struct __declspec(uuid("0002441e-0001-0000-c000-000000000046"))
IPivotFormula : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Index (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StandardFormula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_StandardFormula (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("0002441f-0001-0000-c000-000000000046"))
IPivotFormulas : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall _Add (
        /*[in]*/ BSTR Formula,
        /*[out,retval]*/ struct PivotFormula * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotFormula * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotFormula * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Formula,
        /*[in]*/ VARIANT UseStandardFormula,
        /*[out,retval]*/ struct PivotFormula * * RHS ) = 0;
};

struct __declspec(uuid("00020873-0001-0000-c000-000000000046"))
IPivotTables : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct PivotCache * PivotCache,
        /*[in]*/ VARIANT TableDestination,
        /*[in]*/ VARIANT TableName,
        /*[in]*/ VARIANT ReadData,
        /*[in]*/ VARIANT DefaultVersion,
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
};

struct __declspec(uuid("00020875-0001-0000-c000-000000000046"))
IPivotFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024420-0001-0000-c000-000000000046"))
ICalculatedFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall _Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Formula,
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Field,
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Formula,
        /*[in]*/ VARIANT UseStandardFormula,
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
};

struct __declspec(uuid("00020876-0001-0000-c000-000000000046"))
IPivotItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_ChildItems (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DataRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_LabelRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ParentItem (
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall get_ParentShowDetail (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ShowDetail (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowDetail (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_IsCalculated (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_RecordCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_DrilledDown (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DrilledDown (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_StandardFormula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_StandardFormula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SourceNameStandard (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall DrillTo (
        /*[in]*/ BSTR Field ) = 0;
};

struct __declspec(uuid("00020877-0001-0000-c000-000000000046"))
IPivotItems : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024421-0001-0000-c000-000000000046"))
ICalculatedItems : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall _Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Formula,
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Field,
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Formula,
        /*[in]*/ VARIANT UseStandardFormula,
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
};

struct __declspec(uuid("00020878-0001-0000-c000-000000000046"))
ICharacters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticCharacters (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticCharacters (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("00020879-0001-0000-c000-000000000046"))
IDialogs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum XlBuiltInDialog Index,
        /*[out,retval]*/ struct Dialog * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ enum XlBuiltInDialog Index,
        /*[out,retval]*/ struct Dialog * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002087a-0001-0000-c000-000000000046"))
IDialog : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Show (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("0002087b-0001-0000-c000-000000000046"))
ISoundNote : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Import (
        /*[in]*/ BSTR Filename,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Play (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Record (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("0002087d-0001-0000-c000-000000000046"))
IButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CancelButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CancelButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DismissButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DismissButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HelpButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("0002087e-0001-0000-c000-000000000046"))
IButtons : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CancelButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CancelButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DismissButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DismissButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HelpButton (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HelpButton (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct Button * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002087f-0001-0000-c000-000000000046"))
ICheckBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00020880-0001-0000-c000-000000000046"))
ICheckBoxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct CheckBox * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020881-0001-0000-c000-000000000046"))
IOptionButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_GroupBox (
        /*[out,retval]*/ struct GroupBox * * RHS ) = 0;
};

struct __declspec(uuid("00020882-0001-0000-c000-000000000046"))
IOptionButtons : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_GroupBox (
        /*[out,retval]*/ struct GroupBox * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct OptionButton * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020883-0001-0000-c000-000000000046"))
IEditBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalScrollBar (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_InputType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_InputType (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedObject (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PasswordEdit (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PasswordEdit (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00020884-0001-0000-c000-000000000046"))
IEditBoxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalScrollBar (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_InputType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_InputType (
        /*[in]*/ long RHS ) = 0;
      virtual void __stdcall _Dummy34 ( ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PasswordEdit (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PasswordEdit (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct EditBox * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020885-0001-0000-c000-000000000046"))
IScrollBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Max (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Max (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Min (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Min (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SmallChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LargeChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_LargeChange (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("00020886-0001-0000-c000-000000000046"))
IScrollBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Max (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Max (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Min (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Min (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SmallChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LargeChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_LargeChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct ScrollBar * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020887-0001-0000-c000-000000000046"))
IListBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall AddItem (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedObject (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_List (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_List (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ListCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MultiSelect (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiSelect (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall RemoveAllItems (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall RemoveItem (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Selected (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Selected (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("00020888-0001-0000-c000-000000000046"))
IListBoxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall AddItem (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual void __stdcall _Dummy31 ( ) = 0;
      virtual HRESULT __stdcall get_List (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_List (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual void __stdcall _Dummy33 ( ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MultiSelect (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiSelect (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall RemoveAllItems (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall RemoveItem (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Selected (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Selected (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct ListBox * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020889-0001-0000-c000-000000000046"))
IGroupBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("0002088a-0001-0000-c000-000000000046"))
IGroupBoxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct GroupBox * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002088b-0001-0000-c000-000000000046"))
IDropDown : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall AddItem (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedObject (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_List (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_List (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ListCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long RHS ) = 0;
      virtual void __stdcall _Dummy36 ( ) = 0;
      virtual HRESULT __stdcall RemoveAllItems (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall RemoveItem (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Selected (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Selected (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_DropDownLines (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DropDownLines (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("0002088c-0001-0000-c000-000000000046"))
IDropDowns : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall AddItem (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual void __stdcall _Dummy31 ( ) = 0;
      virtual HRESULT __stdcall get_List (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_List (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual void __stdcall _Dummy33 ( ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long RHS ) = 0;
      virtual void __stdcall _Dummy36 ( ) = 0;
      virtual HRESULT __stdcall RemoveAllItems (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall RemoveItem (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Selected (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Selected (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_DropDownLines (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DropDownLines (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[in]*/ VARIANT Editable,
        /*[out,retval]*/ struct DropDown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002088d-0001-0000-c000-000000000046"))
ISpinner : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Max (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Max (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Min (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Min (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SmallChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("0002088e-0001-0000-c000-000000000046"))
ISpinners : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Display3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Display3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Max (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Max (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Min (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Min (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SmallChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct Spinner * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002088f-0001-0000-c000-000000000046"))
IDialogFrame : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual void __stdcall _Dummy4 ( ) = 0;
      virtual void __stdcall _Dummy5 ( ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual void __stdcall _Dummy7 ( ) = 0;
      virtual void __stdcall _Dummy8 ( ) = 0;
      virtual void __stdcall _Dummy9 ( ) = 0;
      virtual void __stdcall _Dummy10 ( ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual void __stdcall _Dummy17 ( ) = 0;
      virtual void __stdcall _Dummy18 ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual void __stdcall _Dummy20 ( ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual void __stdcall _Dummy23 ( ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy25 ( ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("00020890-0001-0000-c000-000000000046"))
ILabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy33 ( ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00020891-0001-0000-c000-000000000046"))
ILabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy33 ( ) = 0;
      virtual HRESULT __stdcall get_PhoneticAccelerator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PhoneticAccelerator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct Label * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020894-0001-0000-c000-000000000046"))
IPanes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct excelPane * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct excelPane * * RHS ) = 0;
};

struct __declspec(uuid("00020895-0001-0000-c000-000000000046"))
IPane : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall LargeScroll (
        /*[in]*/ VARIANT Down,
        /*[in]*/ VARIANT Up,
        /*[in]*/ VARIANT ToRight,
        /*[in]*/ VARIANT ToLeft,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ScrollColumn (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ScrollColumn (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ScrollRow (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ScrollRow (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall SmallScroll (
        /*[in]*/ VARIANT Down,
        /*[in]*/ VARIANT Up,
        /*[in]*/ VARIANT ToRight,
        /*[in]*/ VARIANT ToLeft,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_VisibleRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall ScrollIntoView (
        /*[in]*/ long Left,
        /*[in]*/ long Top,
        /*[in]*/ long Width,
        /*[in]*/ long Height,
        /*[in]*/ VARIANT Start = vtMissing ) = 0;
      virtual HRESULT __stdcall PointsToScreenPixelsX (
        /*[in]*/ long Points,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall PointsToScreenPixelsY (
        /*[in]*/ long Points,
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00020896-0001-0000-c000-000000000046"))
IScenarios : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT ChangingCells,
        /*[in]*/ VARIANT Values,
        /*[in]*/ VARIANT excelComment,
        /*[in]*/ VARIANT Locked,
        /*[in]*/ VARIANT Hidden,
        /*[out,retval]*/ struct Scenario * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall CreateSummary (
        /*[in]*/ enum XlSummaryReportType ReportType,
        /*[in]*/ VARIANT ResultCells,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Scenario * * RHS ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ VARIANT Source,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00020897-0001-0000-c000-000000000046"))
IScenario : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ChangeScenario (
        /*[in]*/ VARIANT ChangingCells,
        /*[in]*/ VARIANT Values,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ChangingCells (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelComment (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_excelComment (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("00020898-0001-0000-c000-000000000046"))
IGroupObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual void __stdcall _Dummy27 ( ) = 0;
      virtual void __stdcall _Dummy28 ( ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy30 ( ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadLength (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadLength (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual void __stdcall _Dummy36 ( ) = 0;
      virtual void __stdcall _Dummy37 ( ) = 0;
      virtual void __stdcall _Dummy38 ( ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual void __stdcall _Dummy41 ( ) = 0;
      virtual void __stdcall _Dummy42 ( ) = 0;
      virtual void __stdcall _Dummy43 ( ) = 0;
      virtual void __stdcall _Dummy44 ( ) = 0;
      virtual void __stdcall _Dummy45 ( ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual void __stdcall _Dummy47 ( ) = 0;
      virtual void __stdcall _Dummy48 ( ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy50 ( ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual void __stdcall _Dummy52 ( ) = 0;
      virtual void __stdcall _Dummy53 ( ) = 0;
      virtual void __stdcall _Dummy54 ( ) = 0;
      virtual void __stdcall _Dummy55 ( ) = 0;
      virtual void __stdcall _Dummy56 ( ) = 0;
      virtual void __stdcall _Dummy57 ( ) = 0;
      virtual void __stdcall _Dummy58 ( ) = 0;
      virtual void __stdcall _Dummy59 ( ) = 0;
      virtual void __stdcall _Dummy60 ( ) = 0;
      virtual void __stdcall _Dummy61 ( ) = 0;
      virtual void __stdcall _Dummy62 ( ) = 0;
      virtual void __stdcall _Dummy63 ( ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy65 ( ) = 0;
      virtual void __stdcall _Dummy66 ( ) = 0;
      virtual void __stdcall _Dummy67 ( ) = 0;
      virtual void __stdcall _Dummy68 ( ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy70 ( ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy72 ( ) = 0;
      virtual void __stdcall _Dummy73 ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy75 ( ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy77 ( ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("00020899-0001-0000-c000-000000000046"))
IGroupObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual void __stdcall _Dummy27 ( ) = 0;
      virtual void __stdcall _Dummy28 ( ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy30 ( ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadLength (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadLength (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual void __stdcall _Dummy36 ( ) = 0;
      virtual void __stdcall _Dummy37 ( ) = 0;
      virtual void __stdcall _Dummy38 ( ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual void __stdcall _Dummy41 ( ) = 0;
      virtual void __stdcall _Dummy42 ( ) = 0;
      virtual void __stdcall _Dummy43 ( ) = 0;
      virtual void __stdcall _Dummy44 ( ) = 0;
      virtual void __stdcall _Dummy45 ( ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual void __stdcall _Dummy47 ( ) = 0;
      virtual void __stdcall _Dummy48 ( ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy50 ( ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual void __stdcall _Dummy52 ( ) = 0;
      virtual void __stdcall _Dummy53 ( ) = 0;
      virtual void __stdcall _Dummy54 ( ) = 0;
      virtual void __stdcall _Dummy55 ( ) = 0;
      virtual void __stdcall _Dummy56 ( ) = 0;
      virtual void __stdcall _Dummy57 ( ) = 0;
      virtual void __stdcall _Dummy58 ( ) = 0;
      virtual void __stdcall _Dummy59 ( ) = 0;
      virtual void __stdcall _Dummy60 ( ) = 0;
      virtual void __stdcall _Dummy61 ( ) = 0;
      virtual void __stdcall _Dummy62 ( ) = 0;
      virtual void __stdcall _Dummy63 ( ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy65 ( ) = 0;
      virtual void __stdcall _Dummy66 ( ) = 0;
      virtual void __stdcall _Dummy67 ( ) = 0;
      virtual void __stdcall _Dummy68 ( ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy70 ( ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy72 ( ) = 0;
      virtual void __stdcall _Dummy73 ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy75 ( ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy77 ( ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002089a-0001-0000-c000-000000000046"))
ILine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadLength (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadLength (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
};

struct __declspec(uuid("0002089b-0001-0000-c000-000000000046"))
ILines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadLength (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadLength (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ArrowHeadWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ArrowHeadWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[out,retval]*/ struct Line * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002089c-0001-0000-c000-000000000046"))
IRectangle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002089d-0001-0000-c000-000000000046"))
IRectangles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct Rectangle * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002089e-0001-0000-c000-000000000046"))
IOval : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002089f-0001-0000-c000-000000000046"))
IOvals : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct Oval * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000208a0-0001-0000-c000-000000000046"))
IArc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual void __stdcall _Dummy43 ( ) = 0;
};

struct __declspec(uuid("000208a1-0001-0000-c000-000000000046"))
IArcs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual void __stdcall _Dummy43 ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[out,retval]*/ struct Arc * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000208a2-0001-0000-c000-000000000046"))
_IOLEObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoLoad (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoLoad (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoUpdate (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoUpdate (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OLEType (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Update (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Verb (
        /*[in]*/ enum XlOLEVerb Verb,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_progID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_AltHTML (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_AltHTML (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("000208a4-0001-0000-c000-000000000046"))
ITextBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("000208a5-0001-0000-c000-000000000046"))
ITextBoxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct TextBox * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000208a7-0001-0000-c000-000000000046"))
IPictures : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct excelPicture * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Converter,
        /*[out,retval]*/ struct excelPicture * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ VARIANT Link,
        /*[out,retval]*/ struct excelPicture * * RHS ) = 0;
};

struct __declspec(uuid("000208a8-0001-0000-c000-000000000046"))
IDrawing : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall AddVertex (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Reshape (
        /*[in]*/ long Vertex,
        /*[in]*/ VARIANT_BOOL Insert,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("000208a9-0001-0000-c000-000000000046"))
IDrawings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy44 ( ) = 0;
      virtual HRESULT __stdcall Reshape (
        /*[in]*/ long Vertex,
        /*[in]*/ VARIANT_BOOL Insert,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual void __stdcall _Dummy46 ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ VARIANT_BOOL Closed,
        /*[out,retval]*/ struct Drawing * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000208aa-0001-0000-c000-000000000046"))
IRoutingSlip : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Delivery (
        /*[out,retval]*/ enum XlRoutingSlipDelivery * RHS ) = 0;
      virtual HRESULT __stdcall put_Delivery (
        /*[in]*/ enum XlRoutingSlipDelivery RHS ) = 0;
      virtual HRESULT __stdcall get_Message (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Message (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Recipients (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall Reset (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ReturnWhenDone (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ReturnWhenDone (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum XlRoutingSlipStatus * RHS ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TrackStatus (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TrackStatus (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("000208ab-0001-0000-c000-000000000046"))
IOutline : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutomaticStyles (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutomaticStyles (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ShowLevels (
        /*[in]*/ VARIANT RowLevels,
        /*[in]*/ VARIANT ColumnLevels,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_SummaryColumn (
        /*[out,retval]*/ enum XlSummaryColumn * RHS ) = 0;
      virtual HRESULT __stdcall put_SummaryColumn (
        /*[in]*/ enum XlSummaryColumn RHS ) = 0;
      virtual HRESULT __stdcall get_SummaryRow (
        /*[out,retval]*/ enum XlSummaryRow * RHS ) = 0;
      virtual HRESULT __stdcall put_SummaryRow (
        /*[in]*/ enum XlSummaryRow RHS ) = 0;
};

struct __declspec(uuid("000208ad-0001-0000-c000-000000000046"))
IModule : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelPageSetup (
        /*[out,retval]*/ struct excelPageSetup * * RHS ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual void __stdcall _Dummy18 ( ) = 0;
      virtual HRESULT __stdcall _Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ProtectContents (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual void __stdcall _Dummy21 ( ) = 0;
      virtual HRESULT __stdcall get_ProtectionMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual void __stdcall _Dummy23 ( ) = 0;
      virtual HRESULT __stdcall _SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlSheetVisibility * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlSheetVisibility RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapes (
        /*[out,retval]*/ struct excelShapes * * RHS ) = 0;
      virtual HRESULT __stdcall InsertFile (
        /*[in]*/ VARIANT Filename,
        /*[in]*/ VARIANT Merge,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing ) = 0;
      virtual HRESULT __stdcall Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing ) = 0;
};

struct __declspec(uuid("000208ae-0001-0000-c000-000000000046"))
IModules : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT After,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ struct Module * * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual void __stdcall _Dummy7 ( ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
};

struct __declspec(uuid("000208af-0001-0000-c000-000000000046"))
IDialogSheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelPageSetup (
        /*[out,retval]*/ struct excelPageSetup * * RHS ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ProtectContents (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectDrawingObjects (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectionMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectScenarios (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall _SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlSheetVisibility * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlSheetVisibility RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapes (
        /*[out,retval]*/ struct excelShapes * * RHS ) = 0;
      virtual void __stdcall _Dummy29 ( ) = 0;
      virtual HRESULT __stdcall Arcs (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy31 ( ) = 0;
      virtual void __stdcall _Dummy32 ( ) = 0;
      virtual HRESULT __stdcall Buttons (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy34 ( ) = 0;
      virtual HRESULT __stdcall get_EnableCalculation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableCalculation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy36 ( ) = 0;
      virtual HRESULT __stdcall ChartObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall CheckBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary = vtMissing,
        /*[in]*/ VARIANT IgnoreUppercase = vtMissing,
        /*[in]*/ VARIANT AlwaysSuggest = vtMissing,
        /*[in]*/ VARIANT SpellLang = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual void __stdcall _Dummy40 ( ) = 0;
      virtual void __stdcall _Dummy41 ( ) = 0;
      virtual void __stdcall _Dummy42 ( ) = 0;
      virtual void __stdcall _Dummy43 ( ) = 0;
      virtual void __stdcall _Dummy44 ( ) = 0;
      virtual void __stdcall _Dummy45 ( ) = 0;
      virtual HRESULT __stdcall get_DisplayAutomaticPageBreaks (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayAutomaticPageBreaks (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Drawings (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall DrawingObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall DropDowns (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_EnableAutoFilter (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableAutoFilter (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableSelection (
        /*[out,retval]*/ enum XlEnableSelection * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableSelection (
        /*[in]*/ enum XlEnableSelection RHS ) = 0;
      virtual HRESULT __stdcall get_EnableOutlining (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableOutlining (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnablePivotTable (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnablePivotTable (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual void __stdcall _Dummy56 ( ) = 0;
      virtual HRESULT __stdcall ResetAllPageBreaks ( ) = 0;
      virtual HRESULT __stdcall GroupBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall GroupObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Labels (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Lines (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ListBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Names (
        /*[out,retval]*/ struct Names * * RHS ) = 0;
      virtual HRESULT __stdcall OLEObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy65 ( ) = 0;
      virtual void __stdcall _Dummy66 ( ) = 0;
      virtual void __stdcall _Dummy67 ( ) = 0;
      virtual HRESULT __stdcall OptionButtons (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy69 ( ) = 0;
      virtual HRESULT __stdcall Ovals (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ VARIANT Destination = vtMissing,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _PasteSpecial (
        /*[in]*/ VARIANT Format = vtMissing,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing,
        /*[in]*/ VARIANT IconFileName = vtMissing,
        /*[in]*/ VARIANT IconIndex = vtMissing,
        /*[in]*/ VARIANT IconLabel = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Pictures (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy74 ( ) = 0;
      virtual void __stdcall _Dummy75 ( ) = 0;
      virtual void __stdcall _Dummy76 ( ) = 0;
      virtual HRESULT __stdcall Rectangles (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy78 ( ) = 0;
      virtual void __stdcall _Dummy79 ( ) = 0;
      virtual HRESULT __stdcall get_ScrollArea (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ScrollArea (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall ScrollBars (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy82 ( ) = 0;
      virtual void __stdcall _Dummy83 ( ) = 0;
      virtual HRESULT __stdcall Spinners (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy85 ( ) = 0;
      virtual void __stdcall _Dummy86 ( ) = 0;
      virtual HRESULT __stdcall TextBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy88 ( ) = 0;
      virtual void __stdcall _Dummy89 ( ) = 0;
      virtual void __stdcall _Dummy90 ( ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_QueryTables (
        /*[out,retval]*/ struct QueryTables * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayPageBreaks (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayPageBreaks (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_excelComments (
        /*[out,retval]*/ struct excelComments * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelHyperlinks (
        /*[out,retval]*/ struct excelHyperlinks * * RHS ) = 0;
      virtual HRESULT __stdcall ClearCircles ( ) = 0;
      virtual HRESULT __stdcall CircleInvalid ( ) = 0;
      virtual HRESULT __stdcall get__DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFilter (
        /*[out,retval]*/ struct AutoFilter * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayRightToLeft (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary = vtMissing,
        /*[in]*/ VARIANT IgnoreUppercase = vtMissing,
        /*[in]*/ VARIANT AlwaysSuggest = vtMissing,
        /*[in]*/ VARIANT SpellLang = vtMissing,
        /*[in]*/ VARIANT IgnoreFinalYaa = vtMissing,
        /*[in]*/ VARIANT SpellScript = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Tab (
        /*[out,retval]*/ struct Tab * * RHS ) = 0;
      virtual HRESULT __stdcall get_MailEnvelope (
        /*[out,retval]*/ struct Office::IMsoEnvelopeVB * * RHS ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in]*/ VARIANT Local = vtMissing ) = 0;
      virtual HRESULT __stdcall get_CustomProperties (
        /*[out,retval]*/ struct CustomProperties * * RHS ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * RHS ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[out,retval]*/ struct Protection * * RHS ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ VARIANT Format = vtMissing,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing,
        /*[in]*/ VARIANT IconFileName = vtMissing,
        /*[in]*/ VARIANT IconIndex = vtMissing,
        /*[in]*/ VARIANT IconLabel = vtMissing,
        /*[in]*/ VARIANT NoHTMLFormatting = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing,
        /*[in]*/ VARIANT AllowFormattingCells = vtMissing,
        /*[in]*/ VARIANT AllowFormattingColumns = vtMissing,
        /*[in]*/ VARIANT AllowFormattingRows = vtMissing,
        /*[in]*/ VARIANT AllowInsertingColumns = vtMissing,
        /*[in]*/ VARIANT AllowInsertingRows = vtMissing,
        /*[in]*/ VARIANT AllowInsertingHyperlinks = vtMissing,
        /*[in]*/ VARIANT AllowDeletingColumns = vtMissing,
        /*[in]*/ VARIANT AllowDeletingRows = vtMissing,
        /*[in]*/ VARIANT AllowSorting = vtMissing,
        /*[in]*/ VARIANT AllowFiltering = vtMissing,
        /*[in]*/ VARIANT AllowUsingPivotTables = vtMissing ) = 0;
      virtual void __stdcall _Dummy113 ( ) = 0;
      virtual void __stdcall _Dummy114 ( ) = 0;
      virtual void __stdcall _Dummy115 ( ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing ) = 0;
      virtual HRESULT __stdcall get_EnableFormatConditionsCalculation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableFormatConditionsCalculation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Sort (
        /*[out,retval]*/ struct Sort * * RHS ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ enum XlFixedFormatType Type,
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Quality = vtMissing,
        /*[in]*/ VARIANT IncludeDocProperties = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT OpenAfterPublish = vtMissing,
        /*[in]*/ VARIANT FixedFormatExtClassPtr = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DefaultButton (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultButton (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_DialogFrame (
        /*[out,retval]*/ struct DialogFrame * * RHS ) = 0;
      virtual HRESULT __stdcall EditBoxes (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Focus (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Focus (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Hide (
        /*[in]*/ VARIANT Cancel,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("000208b0-0001-0000-c000-000000000046"))
IDialogSheets : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT After,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ struct DialogSheet * * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual void __stdcall _Dummy7 ( ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing ) = 0;
};

struct __declspec(uuid("000208b1-0001-0000-c000-000000000046"))
IWorksheets : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT After,
        /*[in]*/ VARIANT Count,
        /*[in]*/ VARIANT Type,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall FillAcrossSheets (
        /*[in]*/ struct Range * Range,
        /*[in]*/ enum XlFillWith Type,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
};

struct __declspec(uuid("000208b4-0001-0000-c000-000000000046"))
IPageSetup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BlackAndWhite (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BlackAndWhite (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_BottomMargin (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_BottomMargin (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_CenterFooter (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CenterFooter (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_CenterHeader (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CenterHeader (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_CenterHorizontally (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CenterHorizontally (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CenterVertically (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CenterVertically (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ChartSize (
        /*[out,retval]*/ enum XlObjectSize * RHS ) = 0;
      virtual HRESULT __stdcall put_ChartSize (
        /*[in]*/ enum XlObjectSize RHS ) = 0;
      virtual HRESULT __stdcall get_Draft (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Draft (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FirstPageNumber (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_FirstPageNumber (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_FitToPagesTall (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FitToPagesTall (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FitToPagesWide (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FitToPagesWide (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FooterMargin (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_FooterMargin (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_HeaderMargin (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_HeaderMargin (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_LeftFooter (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LeftFooter (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_LeftHeader (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LeftHeader (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_LeftMargin (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_LeftMargin (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ enum XlOrder * RHS ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ enum XlOrder RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum XlPageOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum XlPageOrientation RHS ) = 0;
      virtual HRESULT __stdcall get_PaperSize (
        /*[out,retval]*/ enum XlPaperSize * RHS ) = 0;
      virtual HRESULT __stdcall put_PaperSize (
        /*[in]*/ enum XlPaperSize RHS ) = 0;
      virtual HRESULT __stdcall get_PrintArea (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintArea (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PrintGridlines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintGridlines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PrintHeadings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintHeadings (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PrintNotes (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintNotes (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PrintQuality (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintQuality (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_PrintTitleColumns (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintTitleColumns (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PrintTitleRows (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintTitleRows (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RightFooter (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_RightFooter (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RightHeader (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_RightHeader (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RightMargin (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_RightMargin (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Zoom (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintComments (
        /*[out,retval]*/ enum XlPrintLocation * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintComments (
        /*[in]*/ enum XlPrintLocation RHS ) = 0;
      virtual HRESULT __stdcall get_PrintErrors (
        /*[out,retval]*/ enum XlPrintErrors * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintErrors (
        /*[in]*/ enum XlPrintErrors RHS ) = 0;
      virtual HRESULT __stdcall get_CenterHeaderPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
      virtual HRESULT __stdcall get_CenterFooterPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
      virtual HRESULT __stdcall get_LeftHeaderPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
      virtual HRESULT __stdcall get_LeftFooterPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
      virtual HRESULT __stdcall get_RightHeaderPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
      virtual HRESULT __stdcall get_RightFooterPicture (
        /*[out,retval]*/ struct Graphic * * RHS ) = 0;
      virtual HRESULT __stdcall get_OddAndEvenPagesHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_OddAndEvenPagesHeaderFooter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DifferentFirstPageHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DifferentFirstPageHeaderFooter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ScaleWithDocHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ScaleWithDocHeaderFooter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AlignMarginsHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AlignMarginsHeaderFooter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_excelPages (
        /*[out,retval]*/ struct excelPages * * RHS ) = 0;
      virtual HRESULT __stdcall get_EvenPage (
        /*[out,retval]*/ struct Page * * RHS ) = 0;
      virtual HRESULT __stdcall get_FirstPage (
        /*[out,retval]*/ struct Page * * RHS ) = 0;
};

struct __declspec(uuid("000208b8-0001-0000-c000-000000000046"))
INames : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Name,
        /*[in]*/ VARIANT RefersTo,
        /*[in]*/ VARIANT Visible,
        /*[in]*/ VARIANT MacroType,
        /*[in]*/ VARIANT ShortcutKey,
        /*[in]*/ VARIANT Category,
        /*[in]*/ VARIANT NameLocal,
        /*[in]*/ VARIANT RefersToLocal,
        /*[in]*/ VARIANT CategoryLocal,
        /*[in]*/ VARIANT RefersToR1C1,
        /*[in]*/ VARIANT RefersToR1C1Local,
        /*[out,retval]*/ struct Name * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT IndexLocal,
        /*[in]*/ VARIANT RefersTo,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Name * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT IndexLocal,
        /*[in]*/ VARIANT RefersTo,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Name * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000208b9-0001-0000-c000-000000000046"))
IName : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[in,lcid]*/ long lcidIn,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in,lcid]*/ long lcidIn,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_CategoryLocal (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CategoryLocal (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_MacroType (
        /*[out,retval]*/ enum XlXLMMacroType * RHS ) = 0;
      virtual HRESULT __stdcall put_MacroType (
        /*[in]*/ enum XlXLMMacroType RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in,lcid]*/ long lcidIn,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in,lcid]*/ long lcidIn,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RefersTo (
        /*[in,lcid]*/ long lcidIn,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_RefersTo (
        /*[in,lcid]*/ long lcidIn,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ShortcutKey (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ShortcutKey (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NameLocal (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RefersToLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_RefersToLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_RefersToR1C1 (
        /*[in,lcid]*/ long lcidIn,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_RefersToR1C1 (
        /*[in,lcid]*/ long lcidIn,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_RefersToR1C1Local (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_RefersToR1C1Local (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_RefersToRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelComment (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_excelComment (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_WorkbookParameter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WorkbookParameter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ValidWorkbookParameter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("000208d0-0001-0000-c000-000000000046"))
IChartObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy25 ( ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual void __stdcall _Dummy27 ( ) = 0;
      virtual void __stdcall _Dummy28 ( ) = 0;
      virtual HRESULT __stdcall get_ProtectChartObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ProtectChartObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Left,
        /*[in]*/ double Top,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct ChartObject * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("000208d1-0001-0000-c000-000000000046"))
IMailer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BCCRecipients (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_BCCRecipients (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CCRecipients (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CCRecipients (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Enclosures (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Enclosures (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Received (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_SendDateTime (
        /*[out,retval]*/ DATE * RHS ) = 0;
      virtual HRESULT __stdcall get_Sender (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ToRecipients (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ToRecipients (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_WhichAddress (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_WhichAddress (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00024422-0001-0000-c000-000000000046"))
ICustomViews : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT ViewName,
        /*[out,retval]*/ struct CustomView * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR ViewName,
        /*[in]*/ VARIANT PrintSettings,
        /*[in]*/ VARIANT RowColSettings,
        /*[out,retval]*/ struct CustomView * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT ViewName,
        /*[out,retval]*/ struct CustomView * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024423-0001-0000-c000-000000000046"))
ICustomView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_PrintSettings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_RowColSettings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Show ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00024424-0001-0000-c000-000000000046"))
IFormatConditions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlFormatConditionType Type,
        /*[in]*/ VARIANT Operator,
        /*[in]*/ VARIANT Formula1,
        /*[in]*/ VARIANT Formula2,
        /*[in]*/ VARIANT String,
        /*[in]*/ VARIANT TextOperator,
        /*[in]*/ VARIANT DateOperator,
        /*[in]*/ VARIANT ScopeType,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall AddColorScale (
        /*[in]*/ long ColorScaleType,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddDatabar (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddIconSetCondition (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddTop10 (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddAboveAverage (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddUniqueValues (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("00024425-0001-0000-c000-000000000046"))
IFormatCondition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _Modify (
        /*[in]*/ enum XlFormatConditionType Type,
        /*[in]*/ VARIANT Operator = vtMissing,
        /*[in]*/ VARIANT Formula1 = vtMissing,
        /*[in]*/ VARIANT Formula2 = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Operator (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula1 (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula2 (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Modify (
        /*[in]*/ enum XlFormatConditionType Type,
        /*[in]*/ VARIANT Operator = vtMissing,
        /*[in]*/ VARIANT Formula1 = vtMissing,
        /*[in]*/ VARIANT Formula2 = vtMissing,
        /*[in]*/ VARIANT String = vtMissing,
        /*[in]*/ VARIANT Operator2 = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_TextOperator (
        /*[out,retval]*/ enum XlContainsOperator * RHS ) = 0;
      virtual HRESULT __stdcall put_TextOperator (
        /*[in]*/ enum XlContainsOperator RHS ) = 0;
      virtual HRESULT __stdcall get_DateOperator (
        /*[out,retval]*/ enum XlTimePeriods * RHS ) = 0;
      virtual HRESULT __stdcall put_DateOperator (
        /*[in]*/ enum XlTimePeriods RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_StopIfTrue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
};

struct __declspec(uuid("00024426-0001-0000-c000-000000000046"))
IComments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct excelComment * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct excelComment * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024427-0001-0000-c000-000000000046"))
IComment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShape (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Text (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Overwrite,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ struct excelComment * * RHS ) = 0;
      virtual HRESULT __stdcall Previous (
        /*[out,retval]*/ struct excelComment * * RHS ) = 0;
};

struct __declspec(uuid("00024428-0001-0000-c000-000000000046"))
_IQueryTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_FieldNames (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_FieldNames (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RowNumbers (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RowNumbers (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FillAdjacentFormulas (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_FillAdjacentFormulas (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasAutoFormat (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasAutoFormat (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshOnFileOpen (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshOnFileOpen (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Refreshing (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_FetchedRowOverflow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundQuery (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundQuery (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall CancelRefresh ( ) = 0;
      virtual HRESULT __stdcall get_RefreshStyle (
        /*[out,retval]*/ enum XlCellInsertionMode * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshStyle (
        /*[in]*/ enum XlCellInsertionMode RHS ) = 0;
      virtual HRESULT __stdcall get_EnableRefresh (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableRefresh (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SavePassword (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SavePassword (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Destination (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Connection (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Connection (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Sql (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Sql (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PostText (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PostText (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ResultRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Refresh (
        /*[in]*/ VARIANT BackgroundQuery,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct Parameters * * RHS ) = 0;
      virtual HRESULT __stdcall get_Recordset (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall putref_Recordset (
        /*[in]*/ IDispatch * RHS ) = 0;
      virtual HRESULT __stdcall get_SaveData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SaveData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TablesOnlyFromHTML (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TablesOnlyFromHTML (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableEditing (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableEditing (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFilePlatform (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFilePlatform (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileStartRow (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileStartRow (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileParseType (
        /*[out,retval]*/ enum XlTextParsingType * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileParseType (
        /*[in]*/ enum XlTextParsingType RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileTextQualifier (
        /*[out,retval]*/ enum XlTextQualifier * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileTextQualifier (
        /*[in]*/ enum XlTextQualifier RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileConsecutiveDelimiter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileConsecutiveDelimiter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileTabDelimiter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileTabDelimiter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileSemicolonDelimiter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileSemicolonDelimiter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileCommaDelimiter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileCommaDelimiter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileSpaceDelimiter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileSpaceDelimiter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileOtherDelimiter (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileOtherDelimiter (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileColumnDataTypes (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileColumnDataTypes (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileFixedColumnWidths (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileFixedColumnWidths (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PreserveColumnInfo (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PreserveColumnInfo (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PreserveFormatting (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PreserveFormatting (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AdjustColumnWidth (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AdjustColumnWidth (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CommandText (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandText (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CommandType (
        /*[out,retval]*/ enum XlCmdType * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandType (
        /*[in]*/ enum XlCmdType RHS ) = 0;
      virtual HRESULT __stdcall get_TextFilePromptOnRefresh (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFilePromptOnRefresh (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_QueryType (
        /*[out,retval]*/ enum XlQueryType * RHS ) = 0;
      virtual HRESULT __stdcall get_MaintainConnection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MaintainConnection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileDecimalSeparator (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileDecimalSeparator (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileThousandsSeparator (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileThousandsSeparator (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshPeriod (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshPeriod (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall ResetTimer ( ) = 0;
      virtual HRESULT __stdcall get_WebSelectionType (
        /*[out,retval]*/ enum XlWebSelectionType * RHS ) = 0;
      virtual HRESULT __stdcall put_WebSelectionType (
        /*[in]*/ enum XlWebSelectionType RHS ) = 0;
      virtual HRESULT __stdcall get_WebFormatting (
        /*[out,retval]*/ enum XlWebFormatting * RHS ) = 0;
      virtual HRESULT __stdcall put_WebFormatting (
        /*[in]*/ enum XlWebFormatting RHS ) = 0;
      virtual HRESULT __stdcall get_WebTables (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_WebTables (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_WebPreFormattedTextToColumns (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WebPreFormattedTextToColumns (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_WebSingleBlockTextImport (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WebSingleBlockTextImport (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_WebDisableDateRecognition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WebDisableDateRecognition (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_WebConsecutiveDelimitersAsOne (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WebConsecutiveDelimitersAsOne (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_WebDisableRedirections (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WebDisableRedirections (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EditWebPage (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_EditWebPage (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_SourceConnectionFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceConnectionFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SourceDataFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceDataFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_RobustConnect (
        /*[out,retval]*/ enum XlRobustConnect * RHS ) = 0;
      virtual HRESULT __stdcall put_RobustConnect (
        /*[in]*/ enum XlRobustConnect RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileTrailingMinusNumbers (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileTrailingMinusNumbers (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall SaveAsODC (
        /*[in]*/ BSTR ODCFileName,
        /*[in]*/ VARIANT Description = vtMissing,
        /*[in]*/ VARIANT Keywords = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ListObject (
        /*[out,retval]*/ struct ListObject * * RHS ) = 0;
      virtual HRESULT __stdcall get_TextFileVisualLayout (
        /*[out,retval]*/ enum XlTextVisualLayoutType * RHS ) = 0;
      virtual HRESULT __stdcall put_TextFileVisualLayout (
        /*[in]*/ enum XlTextVisualLayoutType RHS ) = 0;
      virtual HRESULT __stdcall get_WorkbookConnection (
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
      virtual HRESULT __stdcall get_Sort (
        /*[out,retval]*/ struct Sort * * RHS ) = 0;
};

struct __declspec(uuid("00024429-0001-0000-c000-000000000046"))
IQueryTables : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Connection,
        /*[in]*/ struct Range * Destination,
        /*[in]*/ VARIANT Sql,
        /*[out,retval]*/ struct _QueryTable * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _QueryTable * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _QueryTable * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002442a-0001-0000-c000-000000000046"))
IParameter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataType (
        /*[out,retval]*/ enum XlParameterDataType * RHS ) = 0;
      virtual HRESULT __stdcall put_DataType (
        /*[in]*/ enum XlParameterDataType RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlParameterType * RHS ) = 0;
      virtual HRESULT __stdcall get_PromptString (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_SourceRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall SetParam (
        /*[in]*/ enum XlParameterType Type,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_RefreshOnChange (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshOnChange (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002442b-0001-0000-c000-000000000046"))
IParameters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT iDataType,
        /*[out,retval]*/ struct Parameter * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Parameter * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Parameter * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002442c-0001-0000-c000-000000000046"))
IODBCError : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SqlState (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ErrorString (
        /*[out,retval]*/ BSTR * RHS ) = 0;
};

struct __declspec(uuid("0002442d-0001-0000-c000-000000000046"))
IODBCErrors : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ODBCError * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ODBCError * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002442f-0001-0000-c000-000000000046"))
IValidation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlDVType Type,
        /*[in]*/ VARIANT AlertStyle = vtMissing,
        /*[in]*/ VARIANT Operator = vtMissing,
        /*[in]*/ VARIANT Formula1 = vtMissing,
        /*[in]*/ VARIANT Formula2 = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AlertStyle (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_IgnoreBlank (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IgnoreBlank (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IMEMode (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_IMEMode (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_InCellDropdown (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InCellDropdown (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_ErrorMessage (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ErrorMessage (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ErrorTitle (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ErrorTitle (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_InputMessage (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_InputMessage (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_InputTitle (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_InputTitle (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Formula1 (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula2 (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Modify (
        /*[in]*/ VARIANT Type = vtMissing,
        /*[in]*/ VARIANT AlertStyle = vtMissing,
        /*[in]*/ VARIANT Operator = vtMissing,
        /*[in]*/ VARIANT Formula1 = vtMissing,
        /*[in]*/ VARIANT Formula2 = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Operator (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowError (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowError (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowInput (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowInput (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("00024430-0001-0000-c000-000000000046"))
IHyperlinks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ IDispatch * Anchor,
        /*[in]*/ BSTR Address,
        /*[in]*/ VARIANT SubAddress,
        /*[in]*/ VARIANT ScreenTip,
        /*[in]*/ VARIANT TextToDisplay,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelHyperlink * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelHyperlink * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00024431-0001-0000-c000-000000000046"))
IHyperlink : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShape (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get_SubAddress (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SubAddress (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Follow (
        /*[in]*/ VARIANT NewWindow = vtMissing,
        /*[in]*/ VARIANT AddHistory = vtMissing,
        /*[in]*/ VARIANT ExtraInfo = vtMissing,
        /*[in]*/ VARIANT Method = vtMissing,
        /*[in]*/ VARIANT HeaderInfo = vtMissing ) = 0;
      virtual HRESULT __stdcall get_EmailSubject (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_EmailSubject (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ScreenTip (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ScreenTip (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_TextToDisplay (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_TextToDisplay (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall CreateNewDocument (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT_BOOL EditNow,
        /*[in]*/ VARIANT_BOOL Overwrite ) = 0;
};

struct __declspec(uuid("00024432-0001-0000-c000-000000000046"))
IAutoFilter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Filters (
        /*[out,retval]*/ struct Filters * * RHS ) = 0;
      virtual HRESULT __stdcall get_FilterMode (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Sort (
        /*[out,retval]*/ struct Sort * * RHS ) = 0;
      virtual HRESULT __stdcall ApplyFilter ( ) = 0;
      virtual HRESULT __stdcall ShowAllData ( ) = 0;
};

struct __declspec(uuid("00024433-0001-0000-c000-000000000046"))
IFilters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Filter * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Filter * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024434-0001-0000-c000-000000000046"))
IFilter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_On (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Criteria1 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__Operator (
        /*[out,retval]*/ enum XlAutoFilterOperator * RHS ) = 0;
      virtual HRESULT __stdcall get_Criteria2 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Operator (
        /*[out,retval]*/ enum XlAutoFilterOperator * RHS ) = 0;
      virtual HRESULT __stdcall put_Operator (
        /*[in]*/ enum XlAutoFilterOperator RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("000208d4-0001-0000-c000-000000000046"))
IAutoCorrect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddReplacement (
        /*[in]*/ BSTR What,
        /*[in]*/ BSTR Replacement,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_CapitalizeNamesOfDays (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CapitalizeNamesOfDays (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall DeleteReplacement (
        /*[in]*/ BSTR What,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ReplacementList (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ReplacementList (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_excelReplaceText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_excelReplaceText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TwoInitialCapitals (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TwoInitialCapitals (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CorrectSentenceCap (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CorrectSentenceCap (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CorrectCapsLock (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CorrectCapsLock (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayAutoCorrectOptions (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoCorrectOptions (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoExpandListRange (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoExpandListRange (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFillFormulasInLists (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoFillFormulasInLists (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00020854-0001-0000-c000-000000000046"))
IBorder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ThemeColor (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ThemeColor (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00020870-0001-0000-c000-000000000046"))
IInterior : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PatternColor (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PatternColor (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PatternColorIndex (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PatternColorIndex (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ThemeColor (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ThemeColor (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PatternThemeColor (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PatternThemeColor (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PatternTintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PatternTintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Gradient (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("00024435-0001-0000-c000-000000000046"))
IChartFillFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall OneColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall TwoColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant ) = 0;
      virtual HRESULT __stdcall PresetTextured (
        /*[in]*/ enum Office::MsoPresetTexture PresetTexture ) = 0;
      virtual HRESULT __stdcall Solid ( ) = 0;
      virtual HRESULT __stdcall Patterned (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall UserPicture (
        /*[in]*/ VARIANT PictureFile = vtMissing,
        /*[in]*/ VARIANT excelPictureFormat = vtMissing,
        /*[in]*/ VARIANT PictureStackUnit = vtMissing,
        /*[in]*/ VARIANT PicturePlacement = vtMissing ) = 0;
      virtual HRESULT __stdcall UserTextured (
        /*[in]*/ BSTR TextureFile ) = 0;
      virtual HRESULT __stdcall PresetGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ enum Office::MsoPresetGradientType PresetGradientType ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct ChartColorFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct ChartColorFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_GradientColorType (
        /*[out,retval]*/ enum Office::MsoGradientColorType * RHS ) = 0;
      virtual HRESULT __stdcall get_GradientDegree (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall get_GradientStyle (
        /*[out,retval]*/ enum Office::MsoGradientStyle * RHS ) = 0;
      virtual HRESULT __stdcall get_GradientVariant (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * RHS ) = 0;
      virtual HRESULT __stdcall get_PresetGradientType (
        /*[out,retval]*/ enum Office::MsoPresetGradientType * RHS ) = 0;
      virtual HRESULT __stdcall get_PresetTexture (
        /*[out,retval]*/ enum Office::MsoPresetTexture * RHS ) = 0;
      virtual HRESULT __stdcall get_TextureName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_TextureType (
        /*[out,retval]*/ enum Office::MsoTextureType * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoFillType * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
};

struct __declspec(uuid("00024436-0001-0000-c000-000000000046"))
IChartColorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SchemeColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SchemeColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_excelRGB (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00020848-0001-0000-c000-000000000046"))
IAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AxisBetweenCategories (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AxisBetweenCategories (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AxisGroup (
        /*[out,retval]*/ enum XlAxisGroup * RHS ) = 0;
      virtual HRESULT __stdcall get_AxisTitle (
        /*[out,retval]*/ struct AxisTitle * * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_CategoryNames (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CategoryNames (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Crosses (
        /*[out,retval]*/ enum XlAxisCrosses * RHS ) = 0;
      virtual HRESULT __stdcall put_Crosses (
        /*[in]*/ enum XlAxisCrosses RHS ) = 0;
      virtual HRESULT __stdcall get_CrossesAt (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_CrossesAt (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_HasMajorGridlines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasMajorGridlines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasMinorGridlines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasMinorGridlines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasTitle (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasTitle (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MajorGridlines (
        /*[out,retval]*/ struct Gridlines * * RHS ) = 0;
      virtual HRESULT __stdcall get_MajorTickMark (
        /*[out,retval]*/ enum XlTickMark * RHS ) = 0;
      virtual HRESULT __stdcall put_MajorTickMark (
        /*[in]*/ enum XlTickMark RHS ) = 0;
      virtual HRESULT __stdcall get_MajorUnit (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_MajorUnit (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_MajorUnitIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MajorUnitIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MaximumScale (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_MaximumScale (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_MaximumScaleIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MaximumScaleIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MinimumScale (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_MinimumScale (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_MinimumScaleIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MinimumScaleIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MinorGridlines (
        /*[out,retval]*/ struct Gridlines * * RHS ) = 0;
      virtual HRESULT __stdcall get_MinorTickMark (
        /*[out,retval]*/ enum XlTickMark * RHS ) = 0;
      virtual HRESULT __stdcall put_MinorTickMark (
        /*[in]*/ enum XlTickMark RHS ) = 0;
      virtual HRESULT __stdcall get_MinorUnit (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_MinorUnit (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_MinorUnitIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MinorUnitIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ReversePlotOrder (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ReversePlotOrder (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ScaleType (
        /*[out,retval]*/ enum XlScaleType * RHS ) = 0;
      virtual HRESULT __stdcall put_ScaleType (
        /*[in]*/ enum XlScaleType RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_TickLabelPosition (
        /*[out,retval]*/ enum XlTickLabelPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_TickLabelPosition (
        /*[in]*/ enum XlTickLabelPosition RHS ) = 0;
      virtual HRESULT __stdcall get_TickLabels (
        /*[out,retval]*/ struct TickLabels * * RHS ) = 0;
      virtual HRESULT __stdcall get_TickLabelSpacing (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_TickLabelSpacing (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_TickMarkSpacing (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_TickMarkSpacing (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlAxisType * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum XlAxisType RHS ) = 0;
      virtual HRESULT __stdcall get_BaseUnit (
        /*[out,retval]*/ enum XlTimeUnit * RHS ) = 0;
      virtual HRESULT __stdcall put_BaseUnit (
        /*[in]*/ enum XlTimeUnit RHS ) = 0;
      virtual HRESULT __stdcall get_BaseUnitIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BaseUnitIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MajorUnitScale (
        /*[out,retval]*/ enum XlTimeUnit * RHS ) = 0;
      virtual HRESULT __stdcall put_MajorUnitScale (
        /*[in]*/ enum XlTimeUnit RHS ) = 0;
      virtual HRESULT __stdcall get_MinorUnitScale (
        /*[out,retval]*/ enum XlTimeUnit * RHS ) = 0;
      virtual HRESULT __stdcall put_MinorUnitScale (
        /*[in]*/ enum XlTimeUnit RHS ) = 0;
      virtual HRESULT __stdcall get_CategoryType (
        /*[out,retval]*/ enum XlCategoryType * RHS ) = 0;
      virtual HRESULT __stdcall put_CategoryType (
        /*[in]*/ enum XlCategoryType RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayUnit (
        /*[out,retval]*/ enum XlDisplayUnit * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayUnit (
        /*[in]*/ enum XlDisplayUnit RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayUnitCustom (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayUnitCustom (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_HasDisplayUnitLabel (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasDisplayUnitLabel (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayUnitLabel (
        /*[out,retval]*/ struct DisplayUnitLabel * * RHS ) = 0;
      virtual HRESULT __stdcall get_LogBase (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_LogBase (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TickLabelSpacingIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TickLabelSpacingIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("00020849-0001-0000-c000-000000000046"))
IChartTitle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlChartElementPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlChartElementPosition RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("0002084a-0001-0000-c000-000000000046"))
IAxisTitle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlChartElementPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlChartElementPosition RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("00020859-0001-0000-c000-000000000046"))
IChartGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AxisGroup (
        /*[out,retval]*/ enum XlAxisGroup * RHS ) = 0;
      virtual HRESULT __stdcall put_AxisGroup (
        /*[in]*/ enum XlAxisGroup RHS ) = 0;
      virtual HRESULT __stdcall get_DoughnutHoleSize (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DoughnutHoleSize (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_DownBars (
        /*[out,retval]*/ struct DownBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_DropLines (
        /*[out,retval]*/ struct DropLines * * RHS ) = 0;
      virtual HRESULT __stdcall get_FirstSliceAngle (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_FirstSliceAngle (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_GapWidth (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_GapWidth (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_HasDropLines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasDropLines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasHiLoLines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasHiLoLines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasRadarAxisLabels (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasRadarAxisLabels (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasSeriesLines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasSeriesLines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasUpDownBars (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasUpDownBars (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HiLoLines (
        /*[out,retval]*/ struct HiLoLines * * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Overlap (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Overlap (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_RadarAxisLabels (
        /*[out,retval]*/ struct TickLabels * * RHS ) = 0;
      virtual HRESULT __stdcall SeriesCollection (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SeriesLines (
        /*[out,retval]*/ struct SeriesLines * * RHS ) = 0;
      virtual HRESULT __stdcall get_SubType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SubType (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_UpBars (
        /*[out,retval]*/ struct UpBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_VaryByCategories (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_VaryByCategories (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SizeRepresents (
        /*[out,retval]*/ enum XlSizeRepresents * RHS ) = 0;
      virtual HRESULT __stdcall put_SizeRepresents (
        /*[in]*/ enum XlSizeRepresents RHS ) = 0;
      virtual HRESULT __stdcall get_BubbleScale (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_BubbleScale (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ShowNegativeBubbles (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowNegativeBubbles (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SplitType (
        /*[out,retval]*/ enum XlChartSplitType * RHS ) = 0;
      virtual HRESULT __stdcall put_SplitType (
        /*[in]*/ enum XlChartSplitType RHS ) = 0;
      virtual HRESULT __stdcall get_SplitValue (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_SplitValue (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_SecondPlotSize (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SecondPlotSize (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Has3DShading (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Has3DShading (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002085a-0001-0000-c000-000000000046"))
IChartGroups : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002085b-0001-0000-c000-000000000046"))
IAxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum XlAxisType Type,
        /*[in]*/ enum XlAxisGroup AxisGroup,
        /*[out,retval]*/ struct Axis * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ enum XlAxisType Type,
        /*[in]*/ enum XlAxisGroup AxisGroup,
        /*[out,retval]*/ struct Axis * * RHS ) = 0;
};

struct __declspec(uuid("00020869-0001-0000-c000-000000000046"))
IPoints : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Point * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Point * * RHS ) = 0;
};

struct __declspec(uuid("0002086a-0001-0000-c000-000000000046"))
IPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _ApplyDataLabels (
        /*[in]*/ enum XlDataLabelsType Type,
        /*[in]*/ VARIANT LegendKey,
        /*[in]*/ VARIANT AutoText,
        /*[in]*/ VARIANT HasLeaderLines,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DataLabel (
        /*[out,retval]*/ struct DataLabel * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Explosion (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Explosion (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_HasDataLabel (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasDataLabel (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerSize (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerSize (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerStyle (
        /*[out,retval]*/ enum XlMarkerStyle * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerStyle (
        /*[in]*/ enum XlMarkerStyle RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ enum XlChartPictureType * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ enum XlChartPictureType RHS ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToSides (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToSides (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToFront (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToFront (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToEnd (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToEnd (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SecondaryPlot (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SecondaryPlot (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall ApplyDataLabels (
        /*[in]*/ enum XlDataLabelsType Type,
        /*[in]*/ VARIANT LegendKey,
        /*[in]*/ VARIANT AutoText,
        /*[in]*/ VARIANT HasLeaderLines,
        /*[in]*/ VARIANT ShowSeriesName,
        /*[in]*/ VARIANT ShowCategoryName,
        /*[in]*/ VARIANT ShowValue,
        /*[in]*/ VARIANT ShowPercentage,
        /*[in]*/ VARIANT ShowBubbleSize,
        /*[in]*/ VARIANT Separator,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Has3DEffect (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Has3DEffect (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PictureUnit2 (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit2 (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("0002086b-0001-0000-c000-000000000046"))
ISeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _ApplyDataLabels (
        /*[in]*/ enum XlDataLabelsType Type,
        /*[in]*/ VARIANT LegendKey,
        /*[in]*/ VARIANT AutoText,
        /*[in]*/ VARIANT HasLeaderLines,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_AxisGroup (
        /*[out,retval]*/ enum XlAxisGroup * RHS ) = 0;
      virtual HRESULT __stdcall put_AxisGroup (
        /*[in]*/ enum XlAxisGroup RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall DataLabels (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ErrorBar (
        /*[in]*/ enum XlErrorBarDirection Direction,
        /*[in]*/ enum XlErrorBarInclude Include,
        /*[in]*/ enum XlErrorBarType Type,
        /*[in]*/ VARIANT Amount,
        /*[in]*/ VARIANT MinusValues,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ErrorBars (
        /*[out,retval]*/ struct ErrorBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_Explosion (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Explosion (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HasDataLabels (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasDataLabels (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasErrorBars (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasErrorBars (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerSize (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerSize (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerStyle (
        /*[out,retval]*/ enum XlMarkerStyle * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerStyle (
        /*[in]*/ enum XlMarkerStyle RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ enum XlChartPictureType * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ enum XlChartPictureType RHS ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_PlotOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PlotOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Points (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Smooth (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Smooth (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Trendlines (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ChartType (
        /*[out,retval]*/ enum excelXlChartType * RHS ) = 0;
      virtual HRESULT __stdcall put_ChartType (
        /*[in]*/ enum excelXlChartType RHS ) = 0;
      virtual HRESULT __stdcall ApplyCustomType (
        /*[in]*/ enum excelXlChartType ChartType ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Values (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_XValues (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_XValues (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_BubbleSizes (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_BubbleSizes (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_BarShape (
        /*[out,retval]*/ enum XlBarShape * RHS ) = 0;
      virtual HRESULT __stdcall put_BarShape (
        /*[in]*/ enum XlBarShape RHS ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToSides (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToSides (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToFront (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToFront (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToEnd (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToEnd (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Has3DEffect (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Has3DEffect (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasLeaderLines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasLeaderLines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LeaderLines (
        /*[out,retval]*/ struct LeaderLines * * RHS ) = 0;
      virtual HRESULT __stdcall ApplyDataLabels (
        /*[in]*/ enum XlDataLabelsType Type,
        /*[in]*/ VARIANT LegendKey,
        /*[in]*/ VARIANT AutoText,
        /*[in]*/ VARIANT HasLeaderLines,
        /*[in]*/ VARIANT ShowSeriesName,
        /*[in]*/ VARIANT ShowCategoryName,
        /*[in]*/ VARIANT ShowValue,
        /*[in]*/ VARIANT ShowPercentage,
        /*[in]*/ VARIANT ShowBubbleSize,
        /*[in]*/ VARIANT Separator,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_PictureUnit2 (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit2 (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("0002086c-0001-0000-c000-000000000046"))
ISeriesCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Source,
        /*[in]*/ enum XlRowCol Rowcol,
        /*[in]*/ VARIANT SeriesLabels,
        /*[in]*/ VARIANT CategoryLabels,
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ struct Series * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Extend (
        /*[in]*/ VARIANT Source,
        /*[in]*/ VARIANT Rowcol,
        /*[in]*/ VARIANT CategoryLabels,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Series * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ enum XlRowCol Rowcol,
        /*[in]*/ VARIANT SeriesLabels,
        /*[in]*/ VARIANT CategoryLabels,
        /*[in]*/ VARIANT Replace,
        /*[in]*/ VARIANT NewSeries,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall NewSeries (
        /*[out,retval]*/ struct Series * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Series * * RHS ) = 0;
};

struct __declspec(uuid("000208b2-0001-0000-c000-000000000046"))
IDataLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLinked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLinked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ShowLegendKey (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowLegendKey (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlDataLabelPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlDataLabelPosition RHS ) = 0;
      virtual HRESULT __stdcall get_ShowSeriesName (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowSeriesName (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowCategoryName (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowCategoryName (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowValue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowValue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowPercentage (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowPercentage (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowBubbleSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowBubbleSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208b3-0001-0000-c000-000000000046"))
IDataLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual void __stdcall _Dummy9 ( ) = 0;
      virtual void __stdcall _Dummy10 ( ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy13 ( ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy16 ( ) = 0;
      virtual void __stdcall _Dummy17 ( ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AutoText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLinked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLinked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ShowLegendKey (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowLegendKey (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlDataLabelPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlDataLabelPosition RHS ) = 0;
      virtual HRESULT __stdcall get_ShowSeriesName (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowSeriesName (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowCategoryName (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowCategoryName (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowValue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowValue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowPercentage (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowPercentage (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowBubbleSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowBubbleSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DataLabel * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DataLabel * * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208ba-0001-0000-c000-000000000046"))
ILegendEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_LegendKey (
        /*[out,retval]*/ struct LegendKey * * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208bb-0001-0000-c000-000000000046"))
ILegendEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct LegendEntry * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct LegendEntry * * RHS ) = 0;
};

struct __declspec(uuid("000208bc-0001-0000-c000-000000000046"))
ILegendKey : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerSize (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerSize (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MarkerStyle (
        /*[out,retval]*/ enum XlMarkerStyle * RHS ) = 0;
      virtual HRESULT __stdcall put_MarkerStyle (
        /*[in]*/ enum XlMarkerStyle RHS ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Smooth (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Smooth (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PictureUnit2 (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit2 (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208bd-0001-0000-c000-000000000046"))
ITrendlines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlTrendlineType Type,
        /*[in]*/ VARIANT Order,
        /*[in]*/ VARIANT Period,
        /*[in]*/ VARIANT Forward,
        /*[in]*/ VARIANT Backward,
        /*[in]*/ VARIANT Intercept,
        /*[in]*/ VARIANT DisplayEquation,
        /*[in]*/ VARIANT DisplayRSquared,
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ struct Trendline * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Trendline * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Trendline * * RHS ) = 0;
};

struct __declspec(uuid("000208be-0001-0000-c000-000000000046"))
ITrendline : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Backward (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Backward (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DataLabel (
        /*[out,retval]*/ struct DataLabel * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayEquation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayEquation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRSquared (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayRSquared (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Forward (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Forward (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Intercept (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Intercept (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_InterceptIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InterceptIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_NameIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_NameIsAuto (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Period (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Period (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlTrendlineType * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum XlTrendlineType RHS ) = 0;
      virtual HRESULT __stdcall get_Backward2 (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Backward2 (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Forward2 (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Forward2 (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c0-0001-0000-c000-000000000046"))
ICorners : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("000208c1-0001-0000-c000-000000000046"))
ISeriesLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c2-0001-0000-c000-000000000046"))
IHiLoLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c3-0001-0000-c000-000000000046"))
IGridlines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c4-0001-0000-c000-000000000046"))
IDropLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("00024437-0001-0000-c000-000000000046"))
ILeaderLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c5-0001-0000-c000-000000000046"))
IUpBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c6-0001-0000-c000-000000000046"))
IDownBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c7-0001-0000-c000-000000000046"))
IFloor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c8-0001-0000-c000-000000000046"))
IWalls : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208c9-0001-0000-c000-000000000046"))
ITickLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLinked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLinked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum XlTickLabelOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum XlTickLabelOrientation RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Offset (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MultiLevel (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiLevel (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208cb-0001-0000-c000-000000000046"))
IPlotArea : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get__InsideLeft (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get__InsideTop (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get__InsideWidth (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get__InsideHeight (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_InsideLeft (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_InsideLeft (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_InsideTop (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_InsideTop (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_InsideWidth (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_InsideWidth (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_InsideHeight (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_InsideHeight (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlChartElementPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlChartElementPosition RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208cc-0001-0000-c000-000000000046"))
IChartArea : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Clear (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ClearContents (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208cd-0001-0000-c000-000000000046"))
ILegend : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall LegendEntries (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlLegendPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlLegendPosition RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Clear (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("000208ce-0001-0000-c000-000000000046"))
IErrorBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_EndStyle (
        /*[out,retval]*/ enum XlEndStyleCap * RHS ) = 0;
      virtual HRESULT __stdcall put_EndStyle (
        /*[in]*/ enum XlEndStyleCap RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("00020843-0001-0000-c000-000000000046"))
IDataTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowLegendKey (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowLegendKey (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasBorderHorizontal (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasBorderHorizontal (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasBorderVertical (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasBorderVertical (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasBorderOutline (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasBorderOutline (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("00024438-0001-0000-c000-000000000046"))
IPhonetic : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CharacterType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_CharacterType (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("0002443a-0001-0000-c000-000000000046"))
IShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddCurve (
        /*[in]*/ VARIANT SafeArrayOfPoints,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddPicture (
        /*[in]*/ BSTR Filename,
        /*[in]*/ enum Office::MsoTriState LinkToFile,
        /*[in]*/ enum Office::MsoTriState SaveWithDocument,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddPolyline (
        /*[in]*/ VARIANT SafeArrayOfPoints,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddShape (
        /*[in]*/ enum Office::MsoAutoShapeType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct excelFreeformBuilder * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall AddFormControl (
        /*[in]*/ enum XlFormControl Type,
        /*[in]*/ long Left,
        /*[in]*/ long Top,
        /*[in]*/ long Width,
        /*[in]*/ long Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddOLEObject (
        /*[in]*/ VARIANT ClassType,
        /*[in]*/ VARIANT Filename,
        /*[in]*/ VARIANT Link,
        /*[in]*/ VARIANT DisplayAsIcon,
        /*[in]*/ VARIANT IconFileName,
        /*[in]*/ VARIANT IconIndex,
        /*[in]*/ VARIANT IconLabel,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[in]*/ VARIANT Width,
        /*[in]*/ VARIANT Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddDiagram (
        /*[in]*/ enum Office::MsoDiagramType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddCanvas (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall AddChart (
        /*[in]*/ VARIANT excelXlChartType,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[in]*/ VARIANT Width,
        /*[in]*/ VARIANT Height,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
};

struct __declspec(uuid("0002443c-0001-0000-c000-000000000046"))
IGroupShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
};

struct __declspec(uuid("0002443d-0001-0000-c000-000000000046"))
ITextFrame : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_MarginBottom (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_MarginBottom (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_MarginLeft (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_MarginLeft (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_MarginRight (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_MarginRight (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_MarginTop (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_MarginTop (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum Office::MsoTextOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum Office::MsoTextOrientation RHS ) = 0;
      virtual HRESULT __stdcall Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ enum XlHAlign * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ enum XlHAlign RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum XlVAlign * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum XlVAlign RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoMargins (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoMargins (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002443e-0001-0000-c000-000000000046"))
IConnectorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall BeginConnect (
        /*[in]*/ struct excelShape * ConnectedShape,
        /*[in]*/ long ConnectionSite ) = 0;
      virtual HRESULT __stdcall BeginDisconnect ( ) = 0;
      virtual HRESULT __stdcall EndConnect (
        /*[in]*/ struct excelShape * ConnectedShape,
        /*[in]*/ long ConnectionSite ) = 0;
      virtual HRESULT __stdcall EndDisconnect ( ) = 0;
      virtual HRESULT __stdcall get_BeginConnected (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_BeginConnectedShape (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get_BeginConnectionSite (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_EndConnected (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_EndConnectedShape (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get_EndConnectionSite (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoConnectorType * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoConnectorType RHS ) = 0;
};

struct __declspec(uuid("0002443f-0001-0000-c000-000000000046"))
IFreeformBuilder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddNodes (
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ VARIANT X2 = vtMissing,
        /*[in]*/ VARIANT Y2 = vtMissing,
        /*[in]*/ VARIANT X3 = vtMissing,
        /*[in]*/ VARIANT Y3 = vtMissing ) = 0;
      virtual HRESULT __stdcall ConvertToShape (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
};

struct __declspec(uuid("00024440-0001-0000-c000-000000000046"))
IControlFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddItem (
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT Index = vtMissing ) = 0;
      virtual HRESULT __stdcall RemoveAllItems ( ) = 0;
      virtual HRESULT __stdcall RemoveItem (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT Count = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DropDownLines (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DropDownLines (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LargeChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_LargeChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LinkedCell (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LinkedCell (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall List (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ListCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListCount (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ListFillRange (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ListFillRange (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LockedText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LockedText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Max (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Max (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Min (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Min (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MultiSelect (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MultiSelect (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SmallChange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallChange (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("00024441-0001-0000-c000-000000000046"))
IOLEFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_progID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Verb (
        /*[in]*/ VARIANT Verb = vtMissing ) = 0;
};

struct __declspec(uuid("00024442-0001-0000-c000-000000000046"))
ILinkFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoUpdate (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoUpdate (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
};

struct __declspec(uuid("00024444-0000-0000-c000-000000000046"))
excelPublishObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Publish (
        /*[in]*/ VARIANT Create = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DivID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_SourceType (
        /*[out,retval]*/ enum XlSourceType * RHS ) = 0;
      virtual HRESULT __stdcall get_Source (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_HtmlType (
        /*[out,retval]*/ enum XlHtmlType * RHS ) = 0;
      virtual HRESULT __stdcall put_HtmlType (
        /*[in]*/ enum XlHtmlType RHS ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_AutoRepublish (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoRepublish (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00024443-0001-0000-c000-000000000046"))
IPublishObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlSourceType SourceType,
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Sheet,
        /*[in]*/ VARIANT Source,
        /*[in]*/ VARIANT HtmlType,
        /*[in]*/ VARIANT DivID,
        /*[in]*/ VARIANT Title,
        /*[out,retval]*/ struct excelPublishObject * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelPublishObject * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelPublishObject * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Publish ( ) = 0;
};

struct __declspec(uuid("00024445-0001-0000-c000-000000000046"))
IOLEDBError : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SqlState (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ErrorString (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Native (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Number (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Stage (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00024446-0001-0000-c000-000000000046"))
IOLEDBErrors : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OLEDBError * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OLEDBError * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024447-0001-0000-c000-000000000046"))
IPhonetics : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CharacterType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_CharacterType (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ long Start,
        /*[in]*/ long Length,
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024448-0000-0000-c000-000000000046"))
excelDefaultWebOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SaveHiddenData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SaveHiddenData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LoadPictures (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LoadPictures (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksOnSave (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksOnSave (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CheckIfOfficeIsHTMLEditor (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CheckIfOfficeIsHTMLEditor (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DownloadComponents (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DownloadComponents (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * RHS ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize RHS ) = 0;
      virtual HRESULT __stdcall get_PixelsPerInch (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PixelsPerInch (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LocationOfComponents (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LocationOfComponents (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * RHS ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding RHS ) = 0;
      virtual HRESULT __stdcall get_AlwaysSaveInDefaultEncoding (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AlwaysSaveInDefaultEncoding (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Fonts (
        /*[out,retval]*/ struct Office::WebPageFonts * * RHS ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * RHS ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser RHS ) = 0;
      virtual HRESULT __stdcall get_SaveNewWebPagesAsWebArchives (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SaveNewWebPagesAsWebArchives (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00024449-0000-0000-c000-000000000046"))
excelWebOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DownloadComponents (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DownloadComponents (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * RHS ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize RHS ) = 0;
      virtual HRESULT __stdcall get_PixelsPerInch (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PixelsPerInch (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LocationOfComponents (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_LocationOfComponents (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * RHS ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding RHS ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall UseDefaultFolderSuffix ( ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * RHS ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser RHS ) = 0;
};

struct __declspec(uuid("0002444b-0000-0000-c000-000000000046"))
TreeviewControl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Drilled (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Drilled (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("0002444c-0000-0000-c000-000000000046"))
CubeField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_CubeFieldType (
        /*[out,retval]*/ enum XlCubeFieldType * RHS ) = 0;
      virtual HRESULT __stdcall get__Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum XlPivotFieldOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum XlPivotFieldOrientation RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_TreeviewControl (
        /*[out,retval]*/ struct TreeviewControl * * RHS ) = 0;
      virtual HRESULT __stdcall get_DragToColumn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToColumn (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToHide (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToHide (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToPage (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToPage (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToRow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToRow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HiddenLevels (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_HiddenLevels (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_HasMemberProperties (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutForm (
        /*[out,retval]*/ enum XlLayoutFormType * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutForm (
        /*[in]*/ enum XlLayoutFormType RHS ) = 0;
      virtual HRESULT __stdcall get_PivotFields (
        /*[out,retval]*/ struct PivotFields * * RHS ) = 0;
      virtual HRESULT __stdcall _AddMemberPropertyField (
        /*[in]*/ BSTR Property,
        /*[in]*/ VARIANT PropertyOrder = vtMissing ) = 0;
      virtual HRESULT __stdcall get_EnableMultiplePageItems (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableMultiplePageItems (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutSubtotalLocation (
        /*[out,retval]*/ enum XlSubtototalLocationType * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutSubtotalLocation (
        /*[in]*/ enum XlSubtototalLocationType RHS ) = 0;
      virtual HRESULT __stdcall get_ShowInFieldList (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowInFieldList (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall AddMemberPropertyField (
        /*[in]*/ BSTR Property,
        /*[in]*/ VARIANT PropertyOrder = vtMissing,
        /*[in]*/ VARIANT PropertyDisplayedIn = vtMissing ) = 0;
      virtual HRESULT __stdcall get_IncludeNewItemsInFilter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeNewItemsInFilter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CubeFieldSubType (
        /*[out,retval]*/ enum XlCubeFieldSubType * RHS ) = 0;
      virtual HRESULT __stdcall get_AllItemsVisible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall ClearManualFilter ( ) = 0;
      virtual HRESULT __stdcall CreatePivotFields ( ) = 0;
      virtual HRESULT __stdcall get_CurrentPageName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CurrentPageName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_IsDate (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("00020874-0001-0000-c000-000000000046"))
IPivotField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Calculation (
        /*[out,retval]*/ enum XlPivotFieldCalculation * RHS ) = 0;
      virtual HRESULT __stdcall put_Calculation (
        /*[in]*/ enum XlPivotFieldCalculation RHS ) = 0;
      virtual HRESULT __stdcall get_ChildField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_ChildItems (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_CurrentPage (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CurrentPage (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_DataRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataType (
        /*[out,retval]*/ enum XlPivotFieldDataType * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Function (
        /*[out,retval]*/ enum XlConsolidationFunction * RHS ) = 0;
      virtual HRESULT __stdcall put_Function (
        /*[in]*/ enum XlConsolidationFunction RHS ) = 0;
      virtual HRESULT __stdcall get_GroupLevel (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_HiddenItems (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LabelRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum XlPivotFieldOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum XlPivotFieldOrientation RHS ) = 0;
      virtual HRESULT __stdcall get_ShowAllItems (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowAllItems (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ParentField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_ParentItems (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall PivotItems (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Subtotals (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Subtotals (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_BaseField (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_BaseField (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_BaseItem (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_BaseItem (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TotalLevels (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VisibleItems (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CalculatedItems (
        /*[out,retval]*/ struct CalculatedItems * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_DragToColumn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToColumn (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToHide (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToHide (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToPage (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToPage (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToRow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToRow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DragToData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DragToData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_IsCalculated (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_MemoryUsed (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ServerBased (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerBased (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall _AutoSort (
        /*[in]*/ long Order,
        /*[in]*/ BSTR Field ) = 0;
      virtual HRESULT __stdcall AutoShow (
        /*[in]*/ long Type,
        /*[in]*/ long Range,
        /*[in]*/ long Count,
        /*[in]*/ BSTR Field ) = 0;
      virtual HRESULT __stdcall get_AutoSortOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSortField (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoShowType (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoShowRange (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoShowCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoShowField (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutBlankLine (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutBlankLine (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutSubtotalLocation (
        /*[out,retval]*/ enum XlSubtototalLocationType * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutSubtotalLocation (
        /*[in]*/ enum XlSubtototalLocationType RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutPageBreak (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutPageBreak (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutForm (
        /*[out,retval]*/ enum XlLayoutFormType * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutForm (
        /*[in]*/ enum XlLayoutFormType RHS ) = 0;
      virtual HRESULT __stdcall get_SubtotalName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SubtotalName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_DrilledDown (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DrilledDown (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CubeField (
        /*[out,retval]*/ struct CubeField * * RHS ) = 0;
      virtual HRESULT __stdcall get_CurrentPageName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CurrentPageName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_StandardFormula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_StandardFormula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HiddenItemsList (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HiddenItemsList (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_DatabaseSort (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DatabaseSort (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IsMemberProperty (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_PropertyParentField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_PropertyOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PropertyOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_EnableItemSelection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableItemSelection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CurrentPageList (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CurrentPageList (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall AddPageItem (
        /*[in]*/ BSTR Item,
        /*[in]*/ VARIANT ClearList = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall DrillTo (
        /*[in]*/ BSTR Field ) = 0;
      virtual HRESULT __stdcall get_UseMemberPropertyAsCaption (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UseMemberPropertyAsCaption (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MemberPropertyCaption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_MemberPropertyCaption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayAsTooltip (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayAsTooltip (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayInReport (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayInReport (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayAsCaption (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutCompactRow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutCompactRow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IncludeNewItemsInFilter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IncludeNewItemsInFilter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_VisibleItemsList (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VisibleItemsList (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PivotFilters (
        /*[out,retval]*/ struct PivotFilters * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSortPivotLine (
        /*[out,retval]*/ struct PivotLine * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoSortCustomSubtotal (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowingInAxis (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_EnableMultiplePageItems (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableMultiplePageItems (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AllItemsVisible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall ClearManualFilter ( ) = 0;
      virtual HRESULT __stdcall ClearAllFilters ( ) = 0;
      virtual HRESULT __stdcall ClearValueFilters ( ) = 0;
      virtual HRESULT __stdcall ClearLabelFilters ( ) = 0;
      virtual HRESULT __stdcall AutoSort (
        /*[in]*/ long Order,
        /*[in]*/ BSTR Field,
        /*[in]*/ VARIANT PivotLine = vtMissing,
        /*[in]*/ VARIANT CustomSubtotal = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SourceCaption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowDetail (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowDetail (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002444d-0000-0000-c000-000000000046"))
CubeFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CubeField * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CubeField * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall AddSet (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Caption,
        /*[out,retval]*/ struct CubeField * * RHS ) = 0;
};

struct __declspec(uuid("00020872-0001-0000-c000-000000000046"))
IPivotTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AddFields (
        /*[in]*/ VARIANT RowFields,
        /*[in]*/ VARIANT ColumnFields,
        /*[in]*/ VARIANT PageFields,
        /*[in]*/ VARIANT AddToTable,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ColumnFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ColumnGrand (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ColumnGrand (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ColumnRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall ShowPages (
        /*[in]*/ VARIANT PageField,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DataBodyRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataLabelRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_HasAutoFormat (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasAutoFormat (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HiddenFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_InnerDetail (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_InnerDetail (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PageFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_PageRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_PageRangeCells (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall PivotFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshDate (
        /*[out,retval]*/ DATE * RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall RefreshTable (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_RowFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_RowGrand (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RowGrand (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RowRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_SaveData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SaveData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SourceData (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceData (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TableRange1 (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_TableRange2 (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_VisibleFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_CacheIndex (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_CacheIndex (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall CalculatedFields (
        /*[out,retval]*/ struct CalculatedFields * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayErrorString (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayErrorString (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayNullString (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayNullString (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableDrilldown (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableDrilldown (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableFieldDialog (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableFieldDialog (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableWizard (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableWizard (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ErrorString (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ErrorString (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall GetData (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall ListFormulas ( ) = 0;
      virtual HRESULT __stdcall get_ManualUpdate (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ManualUpdate (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MergeLabels (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MergeLabels (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NullString (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_NullString (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall PivotCache (
        /*[out,retval]*/ struct PivotCache * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotFormulas (
        /*[out,retval]*/ struct PivotFormulas * * RHS ) = 0;
      virtual HRESULT __stdcall PivotTableWizard (
        /*[in]*/ VARIANT SourceType = vtMissing,
        /*[in]*/ VARIANT SourceData = vtMissing,
        /*[in]*/ VARIANT TableDestination = vtMissing,
        /*[in]*/ VARIANT TableName = vtMissing,
        /*[in]*/ VARIANT RowGrand = vtMissing,
        /*[in]*/ VARIANT ColumnGrand = vtMissing,
        /*[in]*/ VARIANT SaveData = vtMissing,
        /*[in]*/ VARIANT HasAutoFormat = vtMissing,
        /*[in]*/ VARIANT AutoPage = vtMissing,
        /*[in]*/ VARIANT Reserved = vtMissing,
        /*[in]*/ VARIANT BackgroundQuery = vtMissing,
        /*[in]*/ VARIANT OptimizeCache = vtMissing,
        /*[in]*/ VARIANT PageFieldOrder = vtMissing,
        /*[in]*/ VARIANT PageFieldWrapCount = vtMissing,
        /*[in]*/ VARIANT ReadData = vtMissing,
        /*[in]*/ VARIANT Connection = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SubtotalHiddenPageItems (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SubtotalHiddenPageItems (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PageFieldOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PageFieldOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_PageFieldStyle (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PageFieldStyle (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PageFieldWrapCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PageFieldWrapCount (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_PreserveFormatting (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PreserveFormatting (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall _PivotSelect (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum XlPTSelectionMode Mode ) = 0;
      virtual HRESULT __stdcall get_PivotSelection (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PivotSelection (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SelectionMode (
        /*[out,retval]*/ enum XlPTSelectionMode * RHS ) = 0;
      virtual HRESULT __stdcall put_SelectionMode (
        /*[in]*/ enum XlPTSelectionMode RHS ) = 0;
      virtual HRESULT __stdcall get_excelTableStyle (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_excelTableStyle (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall get_VacatedStyle (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_VacatedStyle (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Format (
        /*[in]*/ enum XlPivotFormatType Format ) = 0;
      virtual HRESULT __stdcall get_PrintTitles (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintTitles (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CubeFields (
        /*[out,retval]*/ struct CubeFields * * RHS ) = 0;
      virtual HRESULT __stdcall get_GrandTotalName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_GrandTotalName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SmallGrid (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SmallGrid (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RepeatItemsOnEachPrintedPage (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RepeatItemsOnEachPrintedPage (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TotalsAnnotation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TotalsAnnotation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall PivotSelect (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum XlPTSelectionMode Mode,
        /*[in]*/ VARIANT UseStandardName = vtMissing ) = 0;
      virtual HRESULT __stdcall get_PivotSelectionStandard (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_PivotSelectionStandard (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall GetPivotData (
        /*[in]*/ VARIANT DataField,
        /*[in]*/ VARIANT Field1,
        /*[in]*/ VARIANT Item1,
        /*[in]*/ VARIANT Field2,
        /*[in]*/ VARIANT Item2,
        /*[in]*/ VARIANT Field3,
        /*[in]*/ VARIANT Item3,
        /*[in]*/ VARIANT Field4,
        /*[in]*/ VARIANT Item4,
        /*[in]*/ VARIANT Field5,
        /*[in]*/ VARIANT Item5,
        /*[in]*/ VARIANT Field6,
        /*[in]*/ VARIANT Item6,
        /*[in]*/ VARIANT Field7,
        /*[in]*/ VARIANT Item7,
        /*[in]*/ VARIANT Field8,
        /*[in]*/ VARIANT Item8,
        /*[in]*/ VARIANT Field9,
        /*[in]*/ VARIANT Item9,
        /*[in]*/ VARIANT Field10,
        /*[in]*/ VARIANT Item10,
        /*[in]*/ VARIANT Field11,
        /*[in]*/ VARIANT Item11,
        /*[in]*/ VARIANT Field12,
        /*[in]*/ VARIANT Item12,
        /*[in]*/ VARIANT Field13,
        /*[in]*/ VARIANT Item13,
        /*[in]*/ VARIANT Field14,
        /*[in]*/ VARIANT Item14,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataPivotField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_EnableDataValueEditing (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableDataValueEditing (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall AddDataField (
        /*[in]*/ IDispatch * Field,
        /*[in]*/ VARIANT Caption,
        /*[in]*/ VARIANT Function,
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_MDX (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ViewCalculatedMembers (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ViewCalculatedMembers (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CalculatedMembers (
        /*[out,retval]*/ struct CalculatedMembers * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayImmediateItems (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayImmediateItems (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Dummy15 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_EnableFieldList (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableFieldList (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_VisualTotals (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_VisualTotals (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowPageMultipleItemLabel (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowPageMultipleItemLabel (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ enum XlPivotTableVersionList * RHS ) = 0;
      virtual HRESULT __stdcall CreateCubeFile (
        /*[in]*/ BSTR File,
        /*[in]*/ VARIANT Measures,
        /*[in]*/ VARIANT Levels,
        /*[in]*/ VARIANT Members,
        /*[in]*/ VARIANT Properties,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayEmptyRow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayEmptyRow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayEmptyColumn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayEmptyColumn (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowCellBackgroundFromOLAP (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowCellBackgroundFromOLAP (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PivotColumnAxis (
        /*[out,retval]*/ struct PivotAxis * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotRowAxis (
        /*[out,retval]*/ struct PivotAxis * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowDrillIndicators (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowDrillIndicators (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PrintDrillIndicators (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintDrillIndicators (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayMemberPropertyTooltips (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayMemberPropertyTooltips (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayContextTooltips (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayContextTooltips (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ClearTable ( ) = 0;
      virtual HRESULT __stdcall get_CompactRowIndent (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_CompactRowIndent (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_LayoutRowDefault (
        /*[out,retval]*/ enum XlLayoutRowType * RHS ) = 0;
      virtual HRESULT __stdcall put_LayoutRowDefault (
        /*[in]*/ enum XlLayoutRowType RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFieldCaptions (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFieldCaptions (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall RowAxisLayout (
        /*[in]*/ enum XlLayoutRowType RowLayout ) = 0;
      virtual HRESULT __stdcall SubtotalLocation (
        /*[in]*/ enum XlSubtototalLocationType Location ) = 0;
      virtual HRESULT __stdcall get_ActiveFilters (
        /*[out,retval]*/ struct PivotFilters * * RHS ) = 0;
      virtual HRESULT __stdcall get_InGridDropZones (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InGridDropZones (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ClearAllFilters ( ) = 0;
      virtual HRESULT __stdcall get_TableStyle2 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TableStyle2 (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleLastColumn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleLastColumn (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleRowStripes (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleRowStripes (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleColumnStripes (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleColumnStripes (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleRowHeaders (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleRowHeaders (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleColumnHeaders (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleColumnHeaders (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ConvertToFormulas (
        /*[in]*/ VARIANT_BOOL ConvertFilters ) = 0;
      virtual HRESULT __stdcall get_AllowMultipleFilters (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AllowMultipleFilters (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CompactLayoutRowHeader (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CompactLayoutRowHeader (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_CompactLayoutColumnHeader (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_CompactLayoutColumnHeader (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_FieldListSortAscending (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_FieldListSortAscending (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SortUsingCustomLists (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SortUsingCustomLists (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ChangeConnection (
        /*[in]*/ struct WorkbookConnection * conn ) = 0;
      virtual HRESULT __stdcall ChangePivotCache (
        /*[in]*/ VARIANT PivotCache ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("0002444a-0001-0000-c000-000000000046"))
IPivotLayout : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ColumnFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_PageFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_RowFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_HiddenFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_VisibleFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotFields (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_CubeFields (
        /*[out,retval]*/ struct CubeFields * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotCache (
        /*[out,retval]*/ struct PivotCache * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotTable (
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_InnerDetail (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_InnerDetail (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall AddFields (
        /*[in]*/ VARIANT RowFields = vtMissing,
        /*[in]*/ VARIANT ColumnFields = vtMissing,
        /*[in]*/ VARIANT PageFields = vtMissing,
        /*[in]*/ VARIANT AppendField = vtMissing ) = 0;
};

struct __declspec(uuid("0002084c-0001-0000-c000-000000000046"))
IDisplayUnitLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ChartFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual void __stdcall _Dummy21 ( ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum XlChartElementPosition * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum XlChartElementPosition RHS ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct ChartFormat * * RHS ) = 0;
};

struct __declspec(uuid("00024450-0001-0000-c000-000000000046"))
ICellFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall putref_excelBorders (
        /*[in]*/ struct excelBorders * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall putref_excelFont (
        /*[in]*/ struct excelFont * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall putref_Interior (
        /*[in]*/ struct Interior * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_IndentLevel (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_IndentLevel (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ShrinkToFit (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ShrinkToFit (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_WrapText (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_WrapText (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaHidden (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaHidden (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_MergeCells (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_MergeCells (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("00024451-0001-0000-c000-000000000046"))
IUsedObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("00024452-0001-0000-c000-000000000046"))
ICustomProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Value,
        /*[out,retval]*/ struct CustomProperty * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CustomProperty * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CustomProperty * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024453-0001-0000-c000-000000000046"))
ICustomProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00024454-0001-0000-c000-000000000046"))
ICalculatedMembers : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CalculatedMember * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CalculatedMember * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Formula,
        /*[in]*/ VARIANT SolveOrder,
        /*[in]*/ VARIANT Type,
        /*[out,retval]*/ struct CalculatedMember * * RHS ) = 0;
};

struct __declspec(uuid("00024455-0001-0000-c000-000000000046"))
ICalculatedMember : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_SolveOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_IsValid (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlCalculatedMemberType * RHS ) = 0;
};

struct __declspec(uuid("00024456-0001-0000-c000-000000000046"))
IWatches : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Source,
        /*[out,retval]*/ struct Watch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Watch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Watch * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00024457-0001-0000-c000-000000000046"))
IWatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Source (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("00024458-0001-0000-c000-000000000046"))
IPivotCell : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotCellType (
        /*[out,retval]*/ enum XlPivotCellType * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotTable (
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotItem (
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall get_RowItems (
        /*[out,retval]*/ struct PivotItemList * * RHS ) = 0;
      virtual HRESULT __stdcall get_ColumnItems (
        /*[out,retval]*/ struct PivotItemList * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Dummy18 (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_CustomSubtotalFunction (
        /*[out,retval]*/ enum XlConsolidationFunction * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotRowLine (
        /*[out,retval]*/ struct PivotLine * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotColumnLine (
        /*[out,retval]*/ struct PivotLine * * RHS ) = 0;
};

struct __declspec(uuid("00024459-0001-0000-c000-000000000046"))
IGraphic : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_ColorType (
        /*[out,retval]*/ enum Office::MsoPictureColorType * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorType (
        /*[in]*/ enum Office::MsoPictureColorType RHS ) = 0;
      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_CropBottom (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_CropBottom (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_CropLeft (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_CropLeft (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_CropRight (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_CropRight (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_CropTop (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_CropTop (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_Filename (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Filename (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float RHS ) = 0;
};

struct __declspec(uuid("0002445a-0001-0000-c000-000000000046"))
IAutoRecover : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Time (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Path (
        /*[in]*/ BSTR RHS ) = 0;
};

struct __declspec(uuid("0002445b-0001-0000-c000-000000000046"))
IErrorCheckingOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundChecking (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundChecking (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IndicatorColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_IndicatorColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_EvaluateToError (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EvaluateToError (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextDate (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TextDate (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_NumberAsText (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberAsText (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_InconsistentFormula (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InconsistentFormula (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_OmittedCells (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_OmittedCells (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UnlockedFormulaCells (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UnlockedFormulaCells (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EmptyCellReferences (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EmptyCellReferences (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ListDataValidation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ListDataValidation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_InconsistentTableFormula (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InconsistentTableFormula (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002445c-0001-0000-c000-000000000046"))
IErrors : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Error * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Error * * RHS ) = 0;
};

struct __declspec(uuid("0002445d-0001-0000-c000-000000000046"))
IError : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Ignore (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Ignore (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002445e-0001-0000-c000-000000000046"))
ISmartTagAction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Execute ( ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlSmartTagControlType * RHS ) = 0;
      virtual HRESULT __stdcall get_PresentInPane (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ExpandHelp (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ExpandHelp (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CheckboxState (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CheckboxState (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TextboxText (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_TextboxText (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ListSelection (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ListSelection (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_RadioGroupSelection (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_RadioGroupSelection (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveXControl (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("0002445f-0001-0000-c000-000000000046"))
ISmartTagActions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SmartTagAction * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SmartTagAction * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024460-0001-0000-c000-000000000046"))
ISmartTag : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_DownloadURL (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_SmartTagActions (
        /*[out,retval]*/ struct SmartTagActions * * RHS ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct CustomProperties * * RHS ) = 0;
};

struct __declspec(uuid("00024461-0001-0000-c000-000000000046"))
ISmartTags : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR SmartTagType,
        /*[out,retval]*/ struct SmartTag * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SmartTag * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024462-0001-0000-c000-000000000046"))
ISmartTagRecognizer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_progID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
};

struct __declspec(uuid("00024463-0001-0000-c000-000000000046"))
ISmartTagRecognizers : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SmartTagRecognizer * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SmartTagRecognizer * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Recognize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Recognize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00024464-0001-0000-c000-000000000046"))
ISmartTagOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplaySmartTags (
        /*[out,retval]*/ enum XlSmartTagDisplayMode * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplaySmartTags (
        /*[in]*/ enum XlSmartTagDisplayMode RHS ) = 0;
      virtual HRESULT __stdcall get_EmbedSmartTags (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EmbedSmartTags (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00024468-0001-0000-c000-000000000046"))
IPivotItemList : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Field,
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024469-0001-0000-c000-000000000046"))
ITab : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_ThemeColor (
        /*[out,retval]*/ enum XlThemeColor * RHS ) = 0;
      virtual HRESULT __stdcall put_ThemeColor (
        /*[in]*/ enum XlThemeColor RHS ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00024470-0001-0000-c000-000000000046"))
IListObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _Add (
        /*[in]*/ enum XlListObjectSourceType SourceType,
        /*[in]*/ VARIANT Source,
        /*[in]*/ VARIANT LinkSource,
        /*[in]*/ enum XlYesNoGuess XlListObjectHasHeaders,
        /*[in]*/ VARIANT Destination,
        /*[out,retval]*/ struct ListObject * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ListObject * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ListObject * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlListObjectSourceType SourceType,
        /*[in]*/ VARIANT Source,
        /*[in]*/ VARIANT LinkSource,
        /*[in]*/ enum XlYesNoGuess XlListObjectHasHeaders,
        /*[in]*/ VARIANT Destination,
        /*[in]*/ VARIANT TableStyleName,
        /*[out,retval]*/ struct ListObject * * RHS ) = 0;
};

struct __declspec(uuid("00024471-0001-0000-c000-000000000046"))
IListObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Publish (
        /*[in]*/ VARIANT Target,
        /*[in]*/ VARIANT_BOOL LinkSource,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall Unlink ( ) = 0;
      virtual HRESULT __stdcall Unlist ( ) = 0;
      virtual HRESULT __stdcall UpdateChanges (
        /*[in]*/ enum XlListConflict iConflictType ) = 0;
      virtual HRESULT __stdcall Resize (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_DataBodyRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRightToLeft (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_HeaderRowRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_InsertRowRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ListColumns (
        /*[out,retval]*/ struct ListColumns * * RHS ) = 0;
      virtual HRESULT __stdcall get_ListRows (
        /*[out,retval]*/ struct ListRows * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_QueryTable (
        /*[out,retval]*/ struct _QueryTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowAutoFilter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowAutoFilter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTotals (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTotals (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SourceType (
        /*[out,retval]*/ enum XlListObjectSourceType * RHS ) = 0;
      virtual HRESULT __stdcall get_TotalsRowRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_SharePointURL (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_XmlMap (
        /*[out,retval]*/ struct XmlMap * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ShowHeaders (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowHeaders (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFilter (
        /*[out,retval]*/ struct AutoFilter * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelTableStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_excelTableStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleFirstColumn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleFirstColumn (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleLastColumn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleLastColumn (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleRowStripes (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleRowStripes (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowTableStyleColumnStripes (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowTableStyleColumnStripes (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Sort (
        /*[out,retval]*/ struct Sort * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelComment (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_excelComment (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall ExportToVisio ( ) = 0;
};

struct __declspec(uuid("00024472-0001-0000-c000-000000000046"))
IListColumns : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Position,
        /*[out,retval]*/ struct ListColumn * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ListColumn * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ListColumn * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00024473-0001-0000-c000-000000000046"))
IListColumn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ListDataFormat (
        /*[out,retval]*/ struct ListDataFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_TotalsCalculation (
        /*[out,retval]*/ enum XlTotalsCalculation * RHS ) = 0;
      virtual HRESULT __stdcall put_TotalsCalculation (
        /*[in]*/ enum XlTotalsCalculation RHS ) = 0;
      virtual HRESULT __stdcall get_XPath (
        /*[out,retval]*/ struct XPath * * RHS ) = 0;
      virtual HRESULT __stdcall get_SharePointFormula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_DataBodyRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Total (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
};

struct __declspec(uuid("00024474-0001-0000-c000-000000000046"))
IListRows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _Add (
        /*[in]*/ VARIANT Position,
        /*[out,retval]*/ struct ListRow * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ListRow * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ListRow * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Position,
        /*[in]*/ VARIANT AlwaysInsert,
        /*[out,retval]*/ struct ListRow * * RHS ) = 0;
};

struct __declspec(uuid("00024475-0001-0000-c000-000000000046"))
IListRow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_InvalidData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
};

struct __declspec(uuid("00024476-0001-0000-c000-000000000046"))
IXmlNamespace : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Uri (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Prefix (
        /*[out,retval]*/ BSTR * RHS ) = 0;
};

struct __declspec(uuid("00024477-0001-0000-c000-000000000046"))
IXmlNamespaces : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct XmlNamespace * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct XmlNamespace * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall InstallManifest (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT InstallForAllUsers = vtMissing ) = 0;
};

struct __declspec(uuid("00024478-0001-0000-c000-000000000046"))
IXmlDataBinding : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Refresh (
        /*[out,retval]*/ enum XlXmlImportResult * RHS ) = 0;
      virtual HRESULT __stdcall LoadSettings (
        /*[in]*/ BSTR Url ) = 0;
      virtual HRESULT __stdcall ClearSettings ( ) = 0;
      virtual HRESULT __stdcall get_SourceUrl (
        /*[out,retval]*/ BSTR * RHS ) = 0;
};

struct __declspec(uuid("00024479-0001-0000-c000-000000000046"))
IXmlSchema : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Namespace (
        /*[out,retval]*/ struct XmlNamespace * * RHS ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
};

struct __declspec(uuid("0002447a-0001-0000-c000-000000000046"))
IXmlSchemas : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct XmlSchema * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct XmlSchema * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002447b-0001-0000-c000-000000000046"))
IXmlMap : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_IsExportable (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowImportExportValidationErrors (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowImportExportValidationErrors (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SaveDataSourceDefinition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SaveDataSourceDefinition (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AdjustColumnWidth (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AdjustColumnWidth (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PreserveColumnFilter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PreserveColumnFilter (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PreserveNumberFormatting (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PreserveNumberFormatting (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AppendOnImport (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AppendOnImport (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RootElementName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_RootElementNamespace (
        /*[out,retval]*/ struct XmlNamespace * * RHS ) = 0;
      virtual HRESULT __stdcall get_Schemas (
        /*[out,retval]*/ struct XmlSchemas * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataBinding (
        /*[out,retval]*/ struct XmlDataBinding * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Import (
        /*[in]*/ BSTR Url,
        /*[in]*/ VARIANT Overwrite,
        /*[out,retval]*/ enum XlXmlImportResult * RHS ) = 0;
      virtual HRESULT __stdcall ImportXml (
        /*[in]*/ BSTR XmlData,
        /*[in]*/ VARIANT Overwrite,
        /*[out,retval]*/ enum XlXmlImportResult * RHS ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR Url,
        /*[in]*/ VARIANT Overwrite,
        /*[out,retval]*/ enum XlXmlExportResult * RHS ) = 0;
      virtual HRESULT __stdcall ExportXml (
        /*[out]*/ BSTR * Data,
        /*[out,retval]*/ enum XlXmlExportResult * RHS ) = 0;
      virtual HRESULT __stdcall get_WorkbookConnection (
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
};

struct __declspec(uuid("0002447c-0001-0000-c000-000000000046"))
IXmlMaps : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Schema,
        /*[in]*/ VARIANT RootElementName,
        /*[out,retval]*/ struct XmlMap * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct XmlMap * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct XmlMap * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("0002447d-0001-0000-c000-000000000046"))
IListDataFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ enum XlListDataType * RHS ) = 0;
      virtual HRESULT __stdcall get_Choices (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DecimalPlaces (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultValue (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_IsPercent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_lcid (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MaxCharacters (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MaxNumber (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_MinNumber (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Required (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlListDataType * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowFillIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("0002447e-0001-0000-c000-000000000046"))
IXPath : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Map (
        /*[out,retval]*/ struct XmlMap * * RHS ) = 0;
      virtual HRESULT __stdcall SetValue (
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR XPath,
        /*[in]*/ VARIANT SelectionNamespace = vtMissing,
        /*[in]*/ VARIANT Repeating = vtMissing ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall get_Repeating (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("0002447f-0001-0000-c000-000000000046"))
IPivotLineCells : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotCell * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotCell * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00024480-0001-0000-c000-000000000046"))
IPivotLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_LineType (
        /*[out,retval]*/ enum XlPivotLineType * RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotLineCells (
        /*[out,retval]*/ struct PivotLineCells * * RHS ) = 0;
};

struct __declspec(uuid("00024481-0001-0000-c000-000000000046"))
IPivotLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotLine * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotLine * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00024482-0001-0000-c000-000000000046"))
IPivotAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotLines (
        /*[out,retval]*/ struct PivotLines * * RHS ) = 0;
};

struct __declspec(uuid("00024483-0001-0000-c000-000000000046"))
IPivotFilter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_FilterType (
        /*[out,retval]*/ enum XlPivotFilterType * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_DataCubeField (
        /*[out,retval]*/ struct CubeField * * RHS ) = 0;
      virtual HRESULT __stdcall get_Value1 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Value2 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_MemberPropertyField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_IsMemberPropertyFilter (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
};

struct __declspec(uuid("00024484-0001-0000-c000-000000000046"))
IPivotFilters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotFilter * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PivotFilter * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum XlPivotFilterType Type,
        /*[in]*/ VARIANT DataField,
        /*[in]*/ VARIANT Value1,
        /*[in]*/ VARIANT Value2,
        /*[in]*/ VARIANT Order,
        /*[in]*/ VARIANT Name,
        /*[in]*/ VARIANT Description,
        /*[in]*/ VARIANT MemberPropertyField,
        /*[out,retval]*/ struct PivotFilter * * RHS ) = 0;
};

struct __declspec(uuid("00024485-0001-0000-c000-000000000046"))
IWorkbookConnection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlConnectionType * RHS ) = 0;
      virtual HRESULT __stdcall get_OLEDBConnection (
        /*[out,retval]*/ struct OLEDBConnection * * RHS ) = 0;
      virtual HRESULT __stdcall get_ODBCConnection (
        /*[out,retval]*/ struct ODBCConnection * * RHS ) = 0;
      virtual HRESULT __stdcall get_Ranges (
        /*[out,retval]*/ struct Ranges * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
};

struct __declspec(uuid("00024486-0001-0000-c000-000000000046"))
IConnections : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall AddFromFile (
        /*[in]*/ BSTR Filename,
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Description,
        /*[in]*/ VARIANT ConnectionString,
        /*[in]*/ VARIANT CommandText,
        /*[in]*/ VARIANT lCmdtype,
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WorkbookConnection * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("00024487-0001-0000-c000-000000000046"))
IWorksheetView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayGridlines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayGridlines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFormulas (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFormulas (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayHeadings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayHeadings (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayOutline (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayOutline (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayZeros (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayZeros (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("00024488-0001-0000-c000-000000000046"))
IChartView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("00024489-0001-0000-c000-000000000046"))
IModuleView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("0002448a-0001-0000-c000-000000000046"))
IDialogSheetView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("0002448c-0001-0000-c000-000000000046"))
ISheetViews : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("0002448d-0001-0000-c000-000000000046"))
IOLEDBConnection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ADOConnection (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundQuery (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundQuery (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall CancelRefresh ( ) = 0;
      virtual HRESULT __stdcall get_CommandText (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandText (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CommandType (
        /*[out,retval]*/ enum XlCmdType * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandType (
        /*[in]*/ enum XlCmdType RHS ) = 0;
      virtual HRESULT __stdcall get_Connection (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Connection (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_EnableRefresh (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableRefresh (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LocalConnection (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_LocalConnection (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_MaintainConnection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MaintainConnection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall MakeConnection ( ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall get_RefreshDate (
        /*[out,retval]*/ DATE * RHS ) = 0;
      virtual HRESULT __stdcall get_Refreshing (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshOnFileOpen (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshOnFileOpen (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshPeriod (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshPeriod (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_RobustConnect (
        /*[out,retval]*/ enum XlRobustConnect * RHS ) = 0;
      virtual HRESULT __stdcall put_RobustConnect (
        /*[in]*/ enum XlRobustConnect RHS ) = 0;
      virtual HRESULT __stdcall SaveAsODC (
        /*[in]*/ BSTR ODCFileName,
        /*[in]*/ VARIANT Description = vtMissing,
        /*[in]*/ VARIANT Keywords = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SavePassword (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SavePassword (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SourceConnectionFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceConnectionFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SourceDataFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceDataFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OLAP (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_UseLocalConnection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UseLocalConnection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MaxDrillthroughRecords (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MaxDrillthroughRecords (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_IsConnected (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ServerCredentialsMethod (
        /*[out,retval]*/ enum XlCredentialsMethod * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerCredentialsMethod (
        /*[in]*/ enum XlCredentialsMethod RHS ) = 0;
      virtual HRESULT __stdcall get_ServerSSOApplicationID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerSSOApplicationID (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_AlwaysUseConnectionFile (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AlwaysUseConnectionFile (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ServerFillColor (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerFillColor (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ServerFontStyle (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerFontStyle (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ServerNumberFormat (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerNumberFormat (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ServerTextColor (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerTextColor (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RetrieveInOfficeUILang (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RetrieveInOfficeUILang (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002448e-0001-0000-c000-000000000046"))
IODBCConnection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundQuery (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundQuery (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall CancelRefresh ( ) = 0;
      virtual HRESULT __stdcall get_CommandText (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandText (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CommandType (
        /*[out,retval]*/ enum XlCmdType * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandType (
        /*[in]*/ enum XlCmdType RHS ) = 0;
      virtual HRESULT __stdcall get_Connection (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Connection (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_EnableRefresh (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableRefresh (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall get_RefreshDate (
        /*[out,retval]*/ DATE * RHS ) = 0;
      virtual HRESULT __stdcall get_Refreshing (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshOnFileOpen (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshOnFileOpen (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RefreshPeriod (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_RefreshPeriod (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_RobustConnect (
        /*[out,retval]*/ enum XlRobustConnect * RHS ) = 0;
      virtual HRESULT __stdcall put_RobustConnect (
        /*[in]*/ enum XlRobustConnect RHS ) = 0;
      virtual HRESULT __stdcall SaveAsODC (
        /*[in]*/ BSTR ODCFileName,
        /*[in]*/ VARIANT Description = vtMissing,
        /*[in]*/ VARIANT Keywords = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SavePassword (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SavePassword (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SourceConnectionFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceConnectionFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_SourceData (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceData (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_SourceDataFile (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceDataFile (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ServerCredentialsMethod (
        /*[out,retval]*/ enum XlCredentialsMethod * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerCredentialsMethod (
        /*[in]*/ enum XlCredentialsMethod RHS ) = 0;
      virtual HRESULT __stdcall get_ServerSSOApplicationID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ServerSSOApplicationID (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_AlwaysUseConnectionFile (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AlwaysUseConnectionFile (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("0002448f-0001-0000-c000-000000000046"))
IAction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlActionType * RHS ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Content (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall Execute ( ) = 0;
};

struct __declspec(uuid("00024490-0001-0000-c000-000000000046"))
IActions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Action * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Action * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("00024491-0001-0000-c000-000000000046"))
IFormatColor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_ThemeColor (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ThemeColor (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
};

struct __declspec(uuid("00024492-0001-0000-c000-000000000046"))
IConditionValue : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Modify (
        /*[in]*/ enum XlConditionValueTypes newtype,
        /*[in]*/ VARIANT newvalue = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlConditionValueTypes * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("00024493-0001-0000-c000-000000000046"))
IColorScale : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
      virtual HRESULT __stdcall get_ColorScaleCriteria (
        /*[out,retval]*/ struct ColorScaleCriteria * * RHS ) = 0;
};

struct __declspec(uuid("00024496-0001-0000-c000-000000000046"))
IDatabar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_MinPoint (
        /*[out,retval]*/ struct ConditionValue * * RHS ) = 0;
      virtual HRESULT __stdcall get_MaxPoint (
        /*[out,retval]*/ struct ConditionValue * * RHS ) = 0;
      virtual HRESULT __stdcall get_PercentMin (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PercentMin (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_PercentMax (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PercentMax (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_BarColor (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowValue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowValue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
};

struct __declspec(uuid("00024497-0001-0000-c000-000000000046"))
IIconSetCondition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_ReverseOrder (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ReverseOrder (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PercentileValues (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PercentileValues (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowIconOnly (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowIconOnly (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_IconSet (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_IconSet (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_IconCriteria (
        /*[out,retval]*/ struct IconCriteria * * RHS ) = 0;
};

struct __declspec(uuid("0002449a-0001-0000-c000-000000000046"))
IIcon : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IconSet * * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("0002449b-0001-0000-c000-000000000046"))
IIconSet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ enum XlIconSet * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Icon * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Icon * * RHS ) = 0;
};

struct __declspec(uuid("0002449c-0001-0000-c000-000000000046"))
IIconSets : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
};

struct __declspec(uuid("0002449d-0001-0000-c000-000000000046"))
ITop10 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_StopIfTrue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_TopBottom (
        /*[out,retval]*/ enum XlTopBottom * RHS ) = 0;
      virtual HRESULT __stdcall put_TopBottom (
        /*[in]*/ enum XlTopBottom RHS ) = 0;
      virtual HRESULT __stdcall get_Rank (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Rank (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_Percent (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Percent (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
      virtual HRESULT __stdcall get_CalcFor (
        /*[out,retval]*/ enum XlCalcFor * RHS ) = 0;
      virtual HRESULT __stdcall put_CalcFor (
        /*[in]*/ enum XlCalcFor RHS ) = 0;
};

struct __declspec(uuid("0002449e-0001-0000-c000-000000000046"))
IAboveAverage : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_StopIfTrue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_AboveBelow (
        /*[out,retval]*/ enum XlAboveBelow * RHS ) = 0;
      virtual HRESULT __stdcall put_AboveBelow (
        /*[in]*/ enum XlAboveBelow RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
      virtual HRESULT __stdcall get_CalcFor (
        /*[out,retval]*/ enum XlCalcFor * RHS ) = 0;
      virtual HRESULT __stdcall put_CalcFor (
        /*[in]*/ enum XlCalcFor RHS ) = 0;
      virtual HRESULT __stdcall get_NumStdDev (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_NumStdDev (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("0002449f-0001-0000-c000-000000000046"))
IUniqueValues : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_StopIfTrue (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_StopIfTrue (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AppliesTo (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_DupeUnique (
        /*[out,retval]*/ enum XlDupeUnique * RHS ) = 0;
      virtual HRESULT __stdcall put_DupeUnique (
        /*[in]*/ enum XlDupeUnique RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall SetFirstPriority ( ) = 0;
      virtual HRESULT __stdcall SetLastPriority ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall ModifyAppliesToRange (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall get_PTCondition (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ScopeType (
        /*[out,retval]*/ enum XlPivotConditionScope * RHS ) = 0;
      virtual HRESULT __stdcall put_ScopeType (
        /*[in]*/ enum XlPivotConditionScope RHS ) = 0;
};

struct __declspec(uuid("000244a0-0001-0000-c000-000000000046"))
IRanges : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
};

struct __declspec(uuid("000244a4-0001-0000-c000-000000000046"))
IServerViewableItems : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Obj,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall DeleteAll ( ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000244a5-0001-0000-c000-000000000046"))
ITableStyleElement : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasFormat (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_StripeSize (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_StripeSize (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("000244a6-0001-0000-c000-000000000046"))
ITableStyleElements : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum XlTableStyleElementType Index,
        /*[out,retval]*/ struct TableStyleElement * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ enum XlTableStyleElementType Index,
        /*[out,retval]*/ struct TableStyleElement * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000244a7-0001-0000-c000-000000000046"))
ITableStyle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_TableStyleElements (
        /*[out,retval]*/ struct TableStyleElements * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowAsAvailableTableStyle (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowAsAvailableTableStyle (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowAsAvailablePivotTableStyle (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowAsAvailablePivotTableStyle (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[in]*/ VARIANT NewTableStyleName,
        /*[out,retval]*/ struct excelTableStyle * * RHS ) = 0;
};

struct __declspec(uuid("000244a8-0001-0000-c000-000000000046"))
ITableStyles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR TableStyleName,
        /*[out,retval]*/ struct excelTableStyle * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelTableStyle * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelTableStyle * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000244a9-0001-0000-c000-000000000046"))
ISortField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SortOn (
        /*[out,retval]*/ enum XlSortOn * RHS ) = 0;
      virtual HRESULT __stdcall put_SortOn (
        /*[in]*/ enum XlSortOn RHS ) = 0;
      virtual HRESULT __stdcall get_SortOnValue (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ enum XlSortOrder * RHS ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ enum XlSortOrder RHS ) = 0;
      virtual HRESULT __stdcall get_CustomOrder (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_CustomOrder (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_DataOption (
        /*[out,retval]*/ enum XlSortDataOption * RHS ) = 0;
      virtual HRESULT __stdcall put_DataOption (
        /*[in]*/ enum XlSortDataOption RHS ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall ModifyKey (
        /*[in]*/ struct Range * Key ) = 0;
      virtual HRESULT __stdcall SetIcon (
        /*[in]*/ struct Icon * Icon ) = 0;
};

struct __declspec(uuid("000244aa-0001-0000-c000-000000000046"))
ISortFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Key,
        /*[in]*/ VARIANT SortOn,
        /*[in]*/ VARIANT Order,
        /*[in]*/ VARIANT CustomOrder,
        /*[in]*/ VARIANT DataOption,
        /*[out,retval]*/ struct SortField * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SortField * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SortField * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000244ab-0001-0000-c000-000000000046"))
ISort : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Rng (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Header (
        /*[out,retval]*/ enum XlYesNoGuess * RHS ) = 0;
      virtual HRESULT __stdcall put_Header (
        /*[in]*/ enum XlYesNoGuess RHS ) = 0;
      virtual HRESULT __stdcall get_MatchCase (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MatchCase (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum XlSortOrientation * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum XlSortOrientation RHS ) = 0;
      virtual HRESULT __stdcall get_SortMethod (
        /*[out,retval]*/ enum XlSortMethod * RHS ) = 0;
      virtual HRESULT __stdcall put_SortMethod (
        /*[in]*/ enum XlSortMethod RHS ) = 0;
      virtual HRESULT __stdcall get_SortFields (
        /*[out,retval]*/ struct SortFields * * RHS ) = 0;
      virtual HRESULT __stdcall SetRange (
        /*[in]*/ struct Range * Rng ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
};

struct __declspec(uuid("000244ac-0001-0000-c000-000000000046"))
IResearch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Query (
        /*[in]*/ BSTR ServiceID,
        /*[in]*/ VARIANT QueryString,
        /*[in]*/ VARIANT QueryLanguage,
        /*[in]*/ VARIANT UseSelection,
        /*[in]*/ VARIANT LaunchQuery,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall IsResearchService (
        /*[in]*/ BSTR ServiceID,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall SetLanguagePair (
        /*[in]*/ long LanguageFrom,
        /*[in]*/ long LanguageTo,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("000244ad-0001-0000-c000-000000000046"))
IColorStop : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_ThemeColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ThemeColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ double RHS ) = 0;
};

struct __declspec(uuid("000244ae-0001-0000-c000-000000000046"))
IColorStops : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Position,
        /*[out,retval]*/ struct ColorStop * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ColorStop * * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ColorStop * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("000244af-0001-0000-c000-000000000046"))
ILinearGradient : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ColorStops (
        /*[out,retval]*/ struct ColorStops * * RHS ) = 0;
      virtual HRESULT __stdcall get_Degree (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Degree (
        /*[in]*/ double RHS ) = 0;
};

struct __declspec(uuid("000244b0-0001-0000-c000-000000000046"))
IRectangularGradient : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ColorStops (
        /*[out,retval]*/ struct ColorStops * * RHS ) = 0;
      virtual HRESULT __stdcall get_RectangleTop (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_RectangleTop (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_RectangleBottom (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_RectangleBottom (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_RectangleLeft (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_RectangleLeft (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_RectangleRight (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_RectangleRight (
        /*[in]*/ double RHS ) = 0;
};

struct __declspec(uuid("000244b1-0001-0000-c000-000000000046"))
IMultiThreadedCalculation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ThreadMode (
        /*[out,retval]*/ enum XlThreadMode * RHS ) = 0;
      virtual HRESULT __stdcall put_ThreadMode (
        /*[in]*/ enum XlThreadMode RHS ) = 0;
      virtual HRESULT __stdcall get_ThreadCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ThreadCount (
        /*[in]*/ long RHS ) = 0;
};

struct __declspec(uuid("000244b2-0001-0000-c000-000000000046"))
IChartFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct excelFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct Office::GlowFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct excelLineFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelPictureFormat (
        /*[out,retval]*/ struct excelPictureFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct excelShadowFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct Office::SoftEdgeFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelTextFrame2 (
        /*[out,retval]*/ struct excelTextFrame2 * * RHS ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct excelThreeDFormat * * RHS ) = 0;
};

struct __declspec(uuid("00020821-0000-0000-c000-000000000046"))
Chart;
    // [ default ] interface _Chart
    // [ default, source ] dispinterface ChartEvents

struct __declspec(uuid("00020893-0001-0000-c000-000000000046"))
IWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ActivateNext (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ActivatePrevious (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveChart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActivePane (
        /*[out,retval]*/ struct excelPane * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveSheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT SaveChanges,
        /*[in]*/ VARIANT Filename,
        /*[in]*/ VARIANT RouteWorkbook,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFormulas (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFormulas (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayGridlines (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayGridlines (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayHeadings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayHeadings (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayHorizontalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayHorizontalScrollBar (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayOutline (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayOutline (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get__DisplayRightToLeft (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put__DisplayRightToLeft (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalScrollBar (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayWorkbookTabs (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayWorkbookTabs (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayZeros (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayZeros (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableResize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableResize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FreezePanes (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_FreezePanes (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_GridlineColor (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_GridlineColor (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_GridlineColorIndex (
        /*[out,retval]*/ enum XlColorIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_GridlineColorIndex (
        /*[in]*/ enum XlColorIndex RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall LargeScroll (
        /*[in]*/ VARIANT Down,
        /*[in]*/ VARIANT Up,
        /*[in]*/ VARIANT ToRight,
        /*[in]*/ VARIANT ToLeft,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[out,retval]*/ struct Window * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnWindow (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnWindow (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelPanes (
        /*[out,retval]*/ struct excelPanes * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From,
        /*[in]*/ VARIANT To,
        /*[in]*/ VARIANT Copies,
        /*[in]*/ VARIANT Preview,
        /*[in]*/ VARIANT ActivePrinter,
        /*[in]*/ VARIANT PrintToFile,
        /*[in]*/ VARIANT Collate,
        /*[in]*/ VARIANT PrToFileName,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_RangeSelection (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ScrollColumn (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ScrollColumn (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ScrollRow (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ScrollRow (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall ScrollWorkbookTabs (
        /*[in]*/ VARIANT Sheets,
        /*[in]*/ VARIANT Position,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_SelectedSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelSelection (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall SmallScroll (
        /*[in]*/ VARIANT Down,
        /*[in]*/ VARIANT Up,
        /*[in]*/ VARIANT ToRight,
        /*[in]*/ VARIANT ToLeft,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Split (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Split (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SplitColumn (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SplitColumn (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SplitHorizontal (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_SplitHorizontal (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_SplitRow (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SplitRow (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SplitVertical (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_SplitVertical (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TabRatio (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_TabRatio (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlWindowType * RHS ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_VisibleRange (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_WindowNumber (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum XlWindowState * RHS ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum XlWindowState RHS ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Zoom (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_excelView (
        /*[out,retval]*/ enum XlWindowView * RHS ) = 0;
      virtual HRESULT __stdcall put_excelView (
        /*[in]*/ enum XlWindowView RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRightToLeft (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayRightToLeft (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall PointsToScreenPixelsX (
        /*[in]*/ long Points,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall PointsToScreenPixelsY (
        /*[in]*/ long Points,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall RangeFromPoint (
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ScrollIntoView (
        /*[in]*/ long Left,
        /*[in]*/ long Top,
        /*[in]*/ long Width,
        /*[in]*/ long Height,
        /*[in]*/ VARIANT Start = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SheetViews (
        /*[out,retval]*/ struct SheetViews * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveSheetView (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From,
        /*[in]*/ VARIANT To,
        /*[in]*/ VARIANT Copies,
        /*[in]*/ VARIANT Preview,
        /*[in]*/ VARIANT ActivePrinter,
        /*[in]*/ VARIANT PrintToFile,
        /*[in]*/ VARIANT Collate,
        /*[in]*/ VARIANT PrToFileName,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRuler (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayRuler (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFilterDateGrouping (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoFilterDateGrouping (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayWhitespace (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayWhitespace (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("000208d6-0000-0000-c000-000000000046"))
_Chart : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelPageSetup (
        /*[out,retval]*/ struct excelPageSetup * * RHS ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ProtectContents (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectDrawingObjects (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectionMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual void __stdcall _Dummy23 ( ) = 0;
      virtual HRESULT __stdcall _SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlSheetVisibility * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlSheetVisibility RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapes (
        /*[out,retval]*/ struct excelShapes * * RHS ) = 0;
      virtual HRESULT __stdcall _ApplyDataLabels (
        /*[in]*/ enum XlDataLabelsType Type,
        /*[in]*/ VARIANT LegendKey = vtMissing,
        /*[in]*/ VARIANT AutoText = vtMissing,
        /*[in]*/ VARIANT HasLeaderLines = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Arcs (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Area3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall AreaGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall AutoFormat (
        /*[in]*/ long Gallery,
        /*[in]*/ VARIANT Format = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AutoScaling (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoScaling (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Axes (
        /*[in]*/ VARIANT Type,
        /*[in]*/ enum XlAxisGroup AxisGroup,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall SetBackgroundPicture (
        /*[in]*/ BSTR Filename ) = 0;
      virtual HRESULT __stdcall get_Bar3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall BarGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Buttons (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ChartArea (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartArea * * RHS ) = 0;
      virtual HRESULT __stdcall ChartGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ChartObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ChartTitle (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartTitle * * RHS ) = 0;
      virtual HRESULT __stdcall ChartWizard (
        /*[in]*/ VARIANT Source = vtMissing,
        /*[in]*/ VARIANT Gallery = vtMissing,
        /*[in]*/ VARIANT Format = vtMissing,
        /*[in]*/ VARIANT PlotBy = vtMissing,
        /*[in]*/ VARIANT CategoryLabels = vtMissing,
        /*[in]*/ VARIANT SeriesLabels = vtMissing,
        /*[in]*/ VARIANT HasLegend = vtMissing,
        /*[in]*/ VARIANT Title = vtMissing,
        /*[in]*/ VARIANT CategoryTitle = vtMissing,
        /*[in]*/ VARIANT ValueTitle = vtMissing,
        /*[in]*/ VARIANT ExtraTitle = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall CheckBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary = vtMissing,
        /*[in]*/ VARIANT IgnoreUppercase = vtMissing,
        /*[in]*/ VARIANT AlwaysSuggest = vtMissing,
        /*[in]*/ VARIANT SpellLang = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Column3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall ColumnGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[in]*/ enum XlPictureAppearance Size,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Corners (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Corners * * RHS ) = 0;
      virtual HRESULT __stdcall CreatePublisher (
        /*[in]*/ VARIANT Edition,
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlPictureAppearance Size,
        /*[in]*/ VARIANT ContainsPICT = vtMissing,
        /*[in]*/ VARIANT ContainsBIFF = vtMissing,
        /*[in]*/ VARIANT ContainsRTF = vtMissing,
        /*[in]*/ VARIANT ContainsVALU = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_DataTable (
        /*[out,retval]*/ struct DataTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_DepthPercent (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DepthPercent (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Deselect (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_DisplayBlanksAs (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlDisplayBlanksAs * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayBlanksAs (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlDisplayBlanksAs RHS ) = 0;
      virtual HRESULT __stdcall DoughnutGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Drawings (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall DrawingObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall DropDowns (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Floor (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Floor * * RHS ) = 0;
      virtual HRESULT __stdcall get_GapDepth (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_GapDepth (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall GroupBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall GroupObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasAxis (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HasAxis (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2 = vtMissing,
        /*[in,lcid]*/ long lcid = 0,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_HasDataTable (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasDataTable (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasLegend (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasLegend (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasTitle (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasTitle (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HeightPercent (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_HeightPercent (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_excelHyperlinks (
        /*[out,retval]*/ struct excelHyperlinks * * RHS ) = 0;
      virtual HRESULT __stdcall Labels (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Legend (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Legend * * RHS ) = 0;
      virtual HRESULT __stdcall get_Line3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall LineGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Lines (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ListBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Location (
        /*[in]*/ enum XlChartLocation Where,
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall OLEObjects (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall OptionButtons (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Ovals (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ VARIANT Type = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Pictures (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Pie3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall PieGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_PlotArea (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct PlotArea * * RHS ) = 0;
      virtual HRESULT __stdcall get_PlotVisibleOnly (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PlotVisibleOnly (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall RadarGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Rectangles (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_RightAngleAxes (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_RightAngleAxes (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall ScrollBars (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall SeriesCollection (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SizeWithWindow (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SizeWithWindow (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowWindow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowWindow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Spinners (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_SubType (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SubType (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_SurfaceGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct ChartGroup * * RHS ) = 0;
      virtual HRESULT __stdcall TextBoxes (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ChartType (
        /*[out,retval]*/ enum excelXlChartType * RHS ) = 0;
      virtual HRESULT __stdcall put_ChartType (
        /*[in]*/ enum excelXlChartType RHS ) = 0;
      virtual HRESULT __stdcall ApplyCustomType (
        /*[in]*/ enum excelXlChartType ChartType,
        /*[in]*/ VARIANT TypeName = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Walls (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Walls * * RHS ) = 0;
      virtual HRESULT __stdcall get_WallsAndGridlines2D (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WallsAndGridlines2D (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall XYGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BarShape (
        /*[out,retval]*/ enum XlBarShape * RHS ) = 0;
      virtual HRESULT __stdcall put_BarShape (
        /*[in]*/ enum XlBarShape RHS ) = 0;
      virtual HRESULT __stdcall get_PlotBy (
        /*[out,retval]*/ enum XlRowCol * RHS ) = 0;
      virtual HRESULT __stdcall put_PlotBy (
        /*[in]*/ enum XlRowCol RHS ) = 0;
      virtual HRESULT __stdcall CopyChartBuild ( ) = 0;
      virtual HRESULT __stdcall get_ProtectFormatting (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ProtectFormatting (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ProtectData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectGoalSeek (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ProtectGoalSeek (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectSelection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ProtectSelection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall GetChartElement (
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[in]*/ long * ElementID,
        /*[in]*/ long * Arg1,
        /*[in]*/ long * Arg2 ) = 0;
      virtual HRESULT __stdcall SetSourceData (
        /*[in]*/ struct Range * Source,
        /*[in]*/ VARIANT PlotBy = vtMissing ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FilterName,
        /*[in]*/ VARIANT Interactive,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall get_PivotLayout (
        /*[out,retval]*/ struct PivotLayout * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasPivotFields (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasPivotFields (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Tab (
        /*[out,retval]*/ struct Tab * * RHS ) = 0;
      virtual HRESULT __stdcall get_MailEnvelope (
        /*[out,retval]*/ struct Office::IMsoEnvelopeVB * * RHS ) = 0;
      virtual HRESULT __stdcall ApplyDataLabels (
        /*[in]*/ enum XlDataLabelsType Type,
        /*[in]*/ VARIANT LegendKey = vtMissing,
        /*[in]*/ VARIANT AutoText = vtMissing,
        /*[in]*/ VARIANT HasLeaderLines = vtMissing,
        /*[in]*/ VARIANT ShowSeriesName = vtMissing,
        /*[in]*/ VARIANT ShowCategoryName = vtMissing,
        /*[in]*/ VARIANT ShowValue = vtMissing,
        /*[in]*/ VARIANT ShowPercentage = vtMissing,
        /*[in]*/ VARIANT ShowBubbleSize = vtMissing,
        /*[in]*/ VARIANT Separator = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in]*/ VARIANT Local = vtMissing ) = 0;
      virtual HRESULT __stdcall Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DrawingObjects = vtMissing,
        /*[in]*/ VARIANT Contents = vtMissing,
        /*[in]*/ VARIANT Scenarios = vtMissing,
        /*[in]*/ VARIANT UserInterfaceOnly = vtMissing ) = 0;
      virtual HRESULT __stdcall ApplyLayout (
        /*[in]*/ long Layout,
        /*[in]*/ VARIANT ChartType = vtMissing ) = 0;
      virtual HRESULT __stdcall SetElement (
        /*[in]*/ enum Office::MsoChartElementType Element ) = 0;
      virtual HRESULT __stdcall get_ShowDataLabelsOverMaximum (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowDataLabelsOverMaximum (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SideWall (
        /*[out,retval]*/ struct Walls * * RHS ) = 0;
      virtual HRESULT __stdcall get_BackWall (
        /*[out,retval]*/ struct Walls * * RHS ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall ApplyChartTemplate (
        /*[in]*/ BSTR Filename ) = 0;
      virtual HRESULT __stdcall SaveChartTemplate (
        /*[in]*/ BSTR Filename ) = 0;
      virtual HRESULT __stdcall SetDefaultChart (
        /*[in]*/ VARIANT Name ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ enum XlFixedFormatType Type,
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Quality = vtMissing,
        /*[in]*/ VARIANT IncludeDocProperties = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT OpenAfterPublish = vtMissing,
        /*[in]*/ VARIANT FixedFormatExtClassPtr = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ChartStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ChartStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall ClearToMatchStyle ( ) = 0;
};

struct __declspec(uuid("000208da-0000-0000-c000-000000000046"))
_Workbook : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_AcceptLabelsInFormulas (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AcceptLabelsInFormulas (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ActiveChart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveSheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Author (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_AutoUpdateFrequency (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoUpdateFrequency (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_AutoUpdateSaveChanges (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoUpdateSaveChanges (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ChangeHistoryDuration (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ChangeHistoryDuration (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_BuiltinDocumentProperties (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall ChangeFileAccess (
        /*[in]*/ enum XlFileAccess Mode,
        /*[in]*/ VARIANT WritePassword = vtMissing,
        /*[in]*/ VARIANT Notify = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall ChangeLink (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ enum XlLinkType Type,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Charts (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT RouteWorkbook = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Colors (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Colors (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid = 0,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelComments (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_excelComments (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ConflictResolution (
        /*[out,retval]*/ enum XlSaveConflictResolution * RHS ) = 0;
      virtual HRESULT __stdcall put_ConflictResolution (
        /*[in]*/ enum XlSaveConflictResolution RHS ) = 0;
      virtual HRESULT __stdcall get_Container (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_CreateBackup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_CustomDocumentProperties (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Date1904 (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Date1904 (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall DeleteNumberFormat (
        /*[in]*/ BSTR NumberFormat,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_DialogSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayDrawingObjects (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlDisplayDrawingObjects * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayDrawingObjects (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlDisplayDrawingObjects RHS ) = 0;
      virtual HRESULT __stdcall ExclusiveAccess (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_FileFormat (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlFileFormat * RHS ) = 0;
      virtual HRESULT __stdcall ForwardMailer (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_HasMailer (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasMailer (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasPassword (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_HasRoutingSlip (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HasRoutingSlip (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_IsAddin (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IsAddin (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Keywords (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Keywords (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall LinkInfo (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum XlLinkInfo LinkInfo,
        /*[in]*/ VARIANT Type,
        /*[in]*/ VARIANT EditionRef,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall LinkSources (
        /*[in]*/ VARIANT Type,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Mailer (
        /*[out,retval]*/ struct Mailer * * RHS ) = 0;
      virtual HRESULT __stdcall MergeWorkbook (
        /*[in]*/ VARIANT Filename ) = 0;
      virtual HRESULT __stdcall get_Modules (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_MultiUserEditing (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Names (
        /*[out,retval]*/ struct Names * * RHS ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Window * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnSave (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSave (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall OpenLinks (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT ReadOnly = vtMissing,
        /*[in]*/ VARIANT Type = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_PersonalViewListSettings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PersonalViewListSettings (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PersonalViewPrintSettings (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PersonalViewPrintSettings (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall PivotCaches (
        /*[out,retval]*/ struct PivotCaches * * RHS ) = 0;
      virtual HRESULT __stdcall Post (
        /*[in]*/ VARIANT DestName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_PrecisionAsDisplayed (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrecisionAsDisplayed (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT Structure = vtMissing,
        /*[in]*/ VARIANT Windows = vtMissing ) = 0;
      virtual HRESULT __stdcall _ProtectSharing (
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT SharingPassword = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ProtectStructure (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectWindows (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get__ReadOnlyRecommended (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall RefreshAll ( ) = 0;
      virtual HRESULT __stdcall Reply (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall ReplyAll (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall RemoveUser (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall get_RevisionNumber (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Route (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Routed (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_RoutingSlip (
        /*[out,retval]*/ struct RoutingSlip * * RHS ) = 0;
      virtual HRESULT __stdcall RunAutoMacros (
        /*[in]*/ enum XlRunAutoMacro Which,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _SaveAs (
        /*[in]*/ VARIANT Filename,
        /*[in]*/ VARIANT FileFormat,
        /*[in]*/ VARIANT Password,
        /*[in]*/ VARIANT WriteResPassword,
        /*[in]*/ VARIANT ReadOnlyRecommended,
        /*[in]*/ VARIANT CreateBackup,
        /*[in]*/ enum XlSaveAsAccessMode AccessMode,
        /*[in]*/ VARIANT ConflictResolution = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall SaveCopyAs (
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SaveLinkValues (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_SaveLinkValues (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall SendMail (
        /*[in]*/ VARIANT Recipients,
        /*[in]*/ VARIANT Subject = vtMissing,
        /*[in]*/ VARIANT ReturnReceipt = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall SendMailer (
        /*[in]*/ VARIANT FileFormat,
        /*[in]*/ enum XlPriority Priority,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall SetLinkOnData (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Procedure = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Sheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowConflictHistory (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowConflictHistory (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Styles (
        /*[out,retval]*/ struct Styles * * RHS ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall UnprotectSharing (
        /*[in]*/ VARIANT SharingPassword = vtMissing ) = 0;
      virtual HRESULT __stdcall UpdateFromFile (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall UpdateLink (
        /*[in]*/ VARIANT Name = vtMissing,
        /*[in]*/ VARIANT Type = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_UpdateRemoteReferences (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UpdateRemoteReferences (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UserControl (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UserStatus (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_CustomViews (
        /*[out,retval]*/ struct CustomViews * * RHS ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * RHS ) = 0;
      virtual HRESULT __stdcall get_Worksheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_WriteReserved (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_WriteReservedBy (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Excel4IntlMacroSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_Excel4MacroSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_TemplateRemoveExtData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TemplateRemoveExtData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall HighlightChangesOptions (
        /*[in]*/ VARIANT When = vtMissing,
        /*[in]*/ VARIANT Who = vtMissing,
        /*[in]*/ VARIANT Where = vtMissing ) = 0;
      virtual HRESULT __stdcall get_HighlightChangesOnScreen (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HighlightChangesOnScreen (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_KeepChangeHistory (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_KeepChangeHistory (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ListChangesOnNewSheet (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ListChangesOnNewSheet (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall PurgeChangeHistoryNow (
        /*[in]*/ long Days,
        /*[in]*/ VARIANT SharingPassword = vtMissing ) = 0;
      virtual HRESULT __stdcall AcceptAllChanges (
        /*[in]*/ VARIANT When = vtMissing,
        /*[in]*/ VARIANT Who = vtMissing,
        /*[in]*/ VARIANT Where = vtMissing ) = 0;
      virtual HRESULT __stdcall RejectAllChanges (
        /*[in]*/ VARIANT When = vtMissing,
        /*[in]*/ VARIANT Who = vtMissing,
        /*[in]*/ VARIANT Where = vtMissing ) = 0;
      virtual HRESULT __stdcall PivotTableWizard (
        /*[in]*/ VARIANT SourceType = vtMissing,
        /*[in]*/ VARIANT SourceData = vtMissing,
        /*[in]*/ VARIANT TableDestination = vtMissing,
        /*[in]*/ VARIANT TableName = vtMissing,
        /*[in]*/ VARIANT RowGrand = vtMissing,
        /*[in]*/ VARIANT ColumnGrand = vtMissing,
        /*[in]*/ VARIANT SaveData = vtMissing,
        /*[in]*/ VARIANT HasAutoFormat = vtMissing,
        /*[in]*/ VARIANT AutoPage = vtMissing,
        /*[in]*/ VARIANT Reserved = vtMissing,
        /*[in]*/ VARIANT BackgroundQuery = vtMissing,
        /*[in]*/ VARIANT OptimizeCache = vtMissing,
        /*[in]*/ VARIANT PageFieldOrder = vtMissing,
        /*[in]*/ VARIANT PageFieldWrapCount = vtMissing,
        /*[in]*/ VARIANT ReadData = vtMissing,
        /*[in]*/ VARIANT Connection = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall ResetColors ( ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ struct VBE6::_VBProject * * RHS ) = 0;
      virtual HRESULT __stdcall FollowHyperlink (
        /*[in]*/ BSTR Address,
        /*[in]*/ VARIANT SubAddress = vtMissing,
        /*[in]*/ VARIANT NewWindow = vtMissing,
        /*[in]*/ VARIANT AddHistory = vtMissing,
        /*[in]*/ VARIANT ExtraInfo = vtMissing,
        /*[in]*/ VARIANT Method = vtMissing,
        /*[in]*/ VARIANT HeaderInfo = vtMissing ) = 0;
      virtual HRESULT __stdcall AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall get_IsInplace (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall WebPagePreview ( ) = 0;
      virtual HRESULT __stdcall get_PublishObjects (
        /*[out,retval]*/ struct PublishObjects * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelWebOptions (
        /*[out,retval]*/ struct excelWebOptions * * RHS ) = 0;
      virtual HRESULT __stdcall ReloadAs (
        /*[in]*/ enum Office::MsoEncoding Encoding ) = 0;
      virtual HRESULT __stdcall get_HTMLProject (
        /*[out,retval]*/ struct Office::HTMLProject * * RHS ) = 0;
      virtual HRESULT __stdcall get_EnvelopeVisible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnvelopeVisible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CalculationVersion (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Dummy17 (
        /*[in]*/ long calcid ) = 0;
      virtual HRESULT __stdcall sblt (
        /*[in]*/ BSTR s ) = 0;
      virtual HRESULT __stdcall get_VBASigned (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowPivotTableFieldList (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowPivotTableFieldList (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UpdateLinks (
        /*[out,retval]*/ enum XlUpdateLinks * RHS ) = 0;
      virtual HRESULT __stdcall put_UpdateLinks (
        /*[in]*/ enum XlUpdateLinks RHS ) = 0;
      virtual HRESULT __stdcall BreakLink (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum XlLinkType Type ) = 0;
      virtual HRESULT __stdcall Dummy16 ( ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ VARIANT Filename,
        /*[in]*/ VARIANT FileFormat,
        /*[in]*/ VARIANT Password,
        /*[in]*/ VARIANT WriteResPassword,
        /*[in]*/ VARIANT ReadOnlyRecommended,
        /*[in]*/ VARIANT CreateBackup,
        /*[in]*/ enum XlSaveAsAccessMode AccessMode,
        /*[in]*/ VARIANT ConflictResolution = vtMissing,
        /*[in]*/ VARIANT AddToMru = vtMissing,
        /*[in]*/ VARIANT TextCodepage = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in]*/ VARIANT Local = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_EnableAutoRecover (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableAutoRecover (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RemovePersonalInformation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RemovePersonalInformation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FullNameURLEncoded (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall CheckIn (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT excelComments = vtMissing,
        /*[in]*/ VARIANT MakePublic = vtMissing ) = 0;
      virtual HRESULT __stdcall CanCheckIn (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall SendForReview (
        /*[in]*/ VARIANT Recipients = vtMissing,
        /*[in]*/ VARIANT Subject = vtMissing,
        /*[in]*/ VARIANT ShowMessage = vtMissing,
        /*[in]*/ VARIANT IncludeAttachment = vtMissing ) = 0;
      virtual HRESULT __stdcall ReplyWithChanges (
        /*[in]*/ VARIANT ShowMessage = vtMissing ) = 0;
      virtual HRESULT __stdcall EndReview ( ) = 0;
      virtual HRESULT __stdcall get_Password (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_WritePassword (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_WritePassword (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionProvider (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionAlgorithm (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionKeyLength (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall SetPasswordEncryptionOptions (
        /*[in]*/ VARIANT PasswordEncryptionProvider = vtMissing,
        /*[in]*/ VARIANT PasswordEncryptionAlgorithm = vtMissing,
        /*[in]*/ VARIANT PasswordEncryptionKeyLength = vtMissing,
        /*[in]*/ VARIANT PasswordEncryptionFileProperties = vtMissing ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionFileProperties (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadOnlyRecommended (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadOnlyRecommended (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Protect (
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT Structure = vtMissing,
        /*[in]*/ VARIANT Windows = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SmartTagOptions (
        /*[out,retval]*/ struct SmartTagOptions * * RHS ) = 0;
      virtual HRESULT __stdcall RecheckSmartTags ( ) = 0;
      virtual HRESULT __stdcall get_Permission (
        /*[out,retval]*/ struct Office::Permission * * RHS ) = 0;
      virtual HRESULT __stdcall get_SharedWorkspace (
        /*[out,retval]*/ struct Office::SharedWorkspace * * RHS ) = 0;
      virtual HRESULT __stdcall get_Sync (
        /*[out,retval]*/ struct Office::Sync * * RHS ) = 0;
      virtual HRESULT __stdcall SendFaxOverInternet (
        /*[in]*/ VARIANT Recipients = vtMissing,
        /*[in]*/ VARIANT Subject = vtMissing,
        /*[in]*/ VARIANT ShowMessage = vtMissing ) = 0;
      virtual HRESULT __stdcall get_XmlNamespaces (
        /*[out,retval]*/ struct XmlNamespaces * * RHS ) = 0;
      virtual HRESULT __stdcall get_XmlMaps (
        /*[out,retval]*/ struct XmlMaps * * RHS ) = 0;
      virtual HRESULT __stdcall XmlImport (
        /*[in]*/ BSTR Url,
        /*[out]*/ struct XmlMap * * ImportMap,
        /*[in]*/ VARIANT Overwrite,
        /*[in]*/ VARIANT Destination,
        /*[out,retval]*/ enum XlXmlImportResult * RHS ) = 0;
      virtual HRESULT __stdcall get_SmartDocument (
        /*[out,retval]*/ struct Office::SmartDocument * * RHS ) = 0;
      virtual HRESULT __stdcall get_DocumentLibraryVersions (
        /*[out,retval]*/ struct Office::DocumentLibraryVersions * * RHS ) = 0;
      virtual HRESULT __stdcall get_InactiveListBorderVisible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_InactiveListBorderVisible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayInkComments (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayInkComments (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall XmlImportXml (
        /*[in]*/ BSTR Data,
        /*[out]*/ struct XmlMap * * ImportMap,
        /*[in]*/ VARIANT Overwrite,
        /*[in]*/ VARIANT Destination,
        /*[out,retval]*/ enum XlXmlImportResult * RHS ) = 0;
      virtual HRESULT __stdcall SaveAsXMLData (
        /*[in]*/ BSTR Filename,
        /*[in]*/ struct XmlMap * Map ) = 0;
      virtual HRESULT __stdcall ToggleFormsDesign ( ) = 0;
      virtual HRESULT __stdcall get_ContentTypeProperties (
        /*[out,retval]*/ struct Office::MetaProperties * * RHS ) = 0;
      virtual HRESULT __stdcall get_Connections (
        /*[out,retval]*/ struct Connections * * RHS ) = 0;
      virtual HRESULT __stdcall RemoveDocumentInformation (
        /*[in]*/ enum XlRemoveDocInfoType RemoveDocInfoType ) = 0;
      virtual HRESULT __stdcall get_Signatures (
        /*[out,retval]*/ struct Office::SignatureSet * * RHS ) = 0;
      virtual HRESULT __stdcall CheckInWithVersion (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT excelComments = vtMissing,
        /*[in]*/ VARIANT MakePublic = vtMissing,
        /*[in]*/ VARIANT VersionType = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ServerPolicy (
        /*[out,retval]*/ struct Office::ServerPolicy * * RHS ) = 0;
      virtual HRESULT __stdcall LockServerFile ( ) = 0;
      virtual HRESULT __stdcall get_DocumentInspectors (
        /*[out,retval]*/ struct Office::DocumentInspectors * * RHS ) = 0;
      virtual HRESULT __stdcall GetWorkflowTasks (
        /*[out,retval]*/ struct Office::WorkflowTasks * * RHS ) = 0;
      virtual HRESULT __stdcall GetWorkflowTemplates (
        /*[out,retval]*/ struct Office::WorkflowTemplates * * RHS ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ServerViewableItems (
        /*[out,retval]*/ struct ServerViewableItems * * RHS ) = 0;
      virtual HRESULT __stdcall get_TableStyles (
        /*[out,retval]*/ struct TableStyles * * RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultTableStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultTableStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultPivotTableStyle (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultPivotTableStyle (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_CheckCompatibility (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CheckCompatibility (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_HasVBProject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_CustomXMLParts (
        /*[out,retval]*/ struct Office::_CustomXMLParts * * RHS ) = 0;
      virtual HRESULT __stdcall get_Final (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Final (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_excelResearch (
        /*[out,retval]*/ struct excelResearch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Theme (
        /*[out,retval]*/ struct Office::OfficeTheme * * RHS ) = 0;
      virtual HRESULT __stdcall ApplyTheme (
        /*[in]*/ BSTR Filename ) = 0;
      virtual HRESULT __stdcall get_Excel8CompatibilityMode (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ConnectionsDisabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall EnableConnections ( ) = 0;
      virtual HRESULT __stdcall get_ShowPivotChartActiveFields (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowPivotChartActiveFields (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ enum XlFixedFormatType Type,
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Quality = vtMissing,
        /*[in]*/ VARIANT IncludeDocProperties = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT OpenAfterPublish = vtMissing,
        /*[in]*/ VARIANT FixedFormatExtClassPtr = vtMissing ) = 0;
      virtual HRESULT __stdcall get_IconSets (
        /*[out,retval]*/ struct IconSets * * RHS ) = 0;
      virtual HRESULT __stdcall get_EncryptionProvider (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_EncryptionProvider (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_DoNotPromptForConvert (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DoNotPromptForConvert (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ForceFullCalculation (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ForceFullCalculation (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ProtectSharing (
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT WriteResPassword = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT SharingPassword = vtMissing,
        /*[in]*/ VARIANT FileFormat = vtMissing ) = 0;
};

struct __declspec(uuid("0002086d-0001-0000-c000-000000000046"))
ICharts : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Before,
        /*[in]*/ VARIANT After,
        /*[in]*/ VARIANT Count,
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual void __stdcall _Dummy7 ( ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_HPageBreaks (
        /*[out,retval]*/ struct HPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_VPageBreaks (
        /*[out,retval]*/ struct VPageBreaks * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT Copies = vtMissing,
        /*[in]*/ VARIANT Preview = vtMissing,
        /*[in]*/ VARIANT ActivePrinter = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT PrToFileName = vtMissing ) = 0;
};

struct __declspec(uuid("000208cf-0001-0000-c000-000000000046"))
IChartObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Chart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_ProtectChartObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ProtectChartObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_RoundedCorners (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RoundedCorners (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("00020820-0000-0000-c000-000000000046"))
Worksheet;
    // [ default ] interface _Worksheet
    // [ default, source ] dispinterface DocEvents

struct __declspec(uuid("00020846-0001-0000-c000-000000000046"))
IRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_AddIndent (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_AddIndent (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[in]*/ VARIANT RowAbsolute,
        /*[in]*/ VARIANT ColumnAbsolute,
        /*[in]*/ enum XlReferenceStyle ReferenceStyle,
        /*[in]*/ VARIANT External,
        /*[in]*/ VARIANT RelativeTo,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_AddressLocal (
        /*[in]*/ VARIANT RowAbsolute,
        /*[in]*/ VARIANT ColumnAbsolute,
        /*[in]*/ enum XlReferenceStyle ReferenceStyle,
        /*[in]*/ VARIANT External,
        /*[in]*/ VARIANT RelativeTo,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall AdvancedFilter (
        /*[in]*/ enum XlFilterAction Action,
        /*[in]*/ VARIANT CriteriaRange,
        /*[in]*/ VARIANT CopyToRange,
        /*[in]*/ VARIANT Unique,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ApplyNames (
        /*[in]*/ VARIANT Names,
        /*[in]*/ VARIANT IgnoreRelativeAbsolute,
        /*[in]*/ VARIANT UseRowColumnNames,
        /*[in]*/ VARIANT OmitColumn,
        /*[in]*/ VARIANT OmitRow,
        /*[in]*/ enum XlApplyNamesOrder Order,
        /*[in]*/ VARIANT AppendLast,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ApplyOutlineStyles (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Areas (
        /*[out,retval]*/ struct Areas * * RHS ) = 0;
      virtual HRESULT __stdcall AutoComplete (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall AutoFill (
        /*[in]*/ struct Range * Destination,
        /*[in]*/ enum XlAutoFillType Type,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall AutoFilter (
        /*[in]*/ VARIANT Field,
        /*[in]*/ VARIANT Criteria1,
        /*[in]*/ enum XlAutoFilterOperator Operator,
        /*[in]*/ VARIANT Criteria2,
        /*[in]*/ VARIANT VisibleDropDown,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall AutoFit (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall AutoFormat (
        /*[in]*/ enum XlRangeAutoFormat Format,
        /*[in]*/ VARIANT Number,
        /*[in]*/ VARIANT excelFont,
        /*[in]*/ VARIANT Alignment,
        /*[in]*/ VARIANT Border,
        /*[in]*/ VARIANT Pattern,
        /*[in]*/ VARIANT Width,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall AutoOutline (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall BorderAround (
        /*[in]*/ VARIANT LineStyle,
        /*[in]*/ enum XlBorderWeight Weight,
        /*[in]*/ enum XlColorIndex ColorIndex,
        /*[in]*/ VARIANT Color,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelBorders (
        /*[out,retval]*/ struct excelBorders * * RHS ) = 0;
      virtual HRESULT __stdcall Calculate (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct Characters * * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in]*/ VARIANT AlwaysSuggest,
        /*[in]*/ VARIANT SpellLang,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Clear (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ClearContents (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ClearNotes (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ClearOutline (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelColumn (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall ColumnDifferences (
        /*[in]*/ VARIANT Comparison,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelColumns (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ColumnWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ColumnWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Consolidate (
        /*[in]*/ VARIANT Sources,
        /*[in]*/ VARIANT Function,
        /*[in]*/ VARIANT TopRow,
        /*[in]*/ VARIANT LeftColumn,
        /*[in]*/ VARIANT CreateLinks,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Destination,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyFromRecordset (
        /*[in]*/ IUnknown * Data,
        /*[in]*/ VARIANT MaxRows,
        /*[in]*/ VARIANT MaxColumns,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall CreateNames (
        /*[in]*/ VARIANT Top,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Bottom,
        /*[in]*/ VARIANT Right,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CreatePublisher (
        /*[in]*/ VARIANT Edition,
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ VARIANT ContainsPICT,
        /*[in]*/ VARIANT ContainsBIFF,
        /*[in]*/ VARIANT ContainsRTF,
        /*[in]*/ VARIANT ContainsVALU,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_CurrentArray (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_CurrentRegion (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[in]*/ VARIANT Destination,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall DataSeries (
        /*[in]*/ VARIANT Rowcol,
        /*[in]*/ enum XlDataSeriesType Type,
        /*[in]*/ enum XlDataSeriesDate Date,
        /*[in]*/ VARIANT Step,
        /*[in]*/ VARIANT Stop,
        /*[in]*/ VARIANT Trend,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put__Default (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex = vtMissing,
        /*[in,lcid]*/ long lcid = 0,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT Shift,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Dependents (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall excelDialogBox (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DirectDependents (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_DirectPrecedents (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall EditionOptions (
        /*[in]*/ enum XlEditionType Type,
        /*[in]*/ enum XlEditionOptionsOption Option,
        /*[in]*/ VARIANT Name,
        /*[in]*/ VARIANT Reference,
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlPictureAppearance ChartSize,
        /*[in]*/ VARIANT Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[in]*/ enum XlDirection Direction,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_EntireColumn (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_EntireRow (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall FillDown (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall FillLeft (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall FillRight (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall FillUp (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Find (
        /*[in]*/ VARIANT What,
        /*[in]*/ VARIANT After,
        /*[in]*/ VARIANT LookIn,
        /*[in]*/ VARIANT LookAt,
        /*[in]*/ VARIANT SearchOrder,
        /*[in]*/ enum XlSearchDirection SearchDirection,
        /*[in]*/ VARIANT MatchCase,
        /*[in]*/ VARIANT MatchByte,
        /*[in]*/ VARIANT SearchFormat,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall FindNext (
        /*[in]*/ VARIANT After,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall FindPrevious (
        /*[in]*/ VARIANT After,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelFont (
        /*[out,retval]*/ struct excelFont * * RHS ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaArray (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaArray (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaLabel (
        /*[out,retval]*/ enum XlFormulaLabel * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaLabel (
        /*[in]*/ enum XlFormulaLabel RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaHidden (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaHidden (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall FunctionWizard (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall GoalSeek (
        /*[in]*/ VARIANT Goal,
        /*[in]*/ struct Range * ChangingCell,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT End,
        /*[in]*/ VARIANT By,
        /*[in]*/ VARIANT Periods,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_HasArray (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_HasFormula (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_IndentLevel (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_IndentLevel (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall InsertIndent (
        /*[in]*/ long InsertAmount ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ VARIANT Shift,
        /*[in]*/ VARIANT CopyOrigin,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Item (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[in,lcid]*/ long lcid = 0,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall Justify (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ListHeaderRows (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall ListNames (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_LocationInTable (
        /*[out,retval]*/ enum XlLocationInTable * RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ VARIANT Across = vtMissing ) = 0;
      virtual HRESULT __stdcall UnMerge ( ) = 0;
      virtual HRESULT __stdcall get_MergeArea (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_MergeCells (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_MergeCells (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall NavigateArrow (
        /*[in]*/ VARIANT TowardPrecedent,
        /*[in]*/ VARIANT ArrowNumber,
        /*[in]*/ VARIANT LinkNumber,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall NoteText (
        /*[in]*/ VARIANT Text,
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[in]*/ VARIANT RowOffset,
        /*[in]*/ VARIANT ColumnOffset,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PageBreak (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_PageBreak (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Parse (
        /*[in]*/ VARIANT ParseLine,
        /*[in]*/ VARIANT Destination,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _PasteSpecial (
        /*[in]*/ enum XlPasteType Paste,
        /*[in]*/ enum XlPasteSpecialOperation Operation,
        /*[in]*/ VARIANT SkipBlanks,
        /*[in]*/ VARIANT Transpose,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotField (
        /*[out,retval]*/ struct PivotField * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotItem (
        /*[out,retval]*/ struct PivotItem * * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotTable (
        /*[out,retval]*/ struct PivotTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_Precedents (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_PrefixCharacter (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall __PrintOut (
        /*[in]*/ VARIANT From,
        /*[in]*/ VARIANT To,
        /*[in]*/ VARIANT Copies,
        /*[in]*/ VARIANT Preview,
        /*[in]*/ VARIANT ActivePrinter,
        /*[in]*/ VARIANT PrintToFile,
        /*[in]*/ VARIANT Collate,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall PrintPreview (
        /*[in]*/ VARIANT EnableChanges,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_QueryTable (
        /*[out,retval]*/ struct _QueryTable * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[in]*/ VARIANT Cell1,
        /*[in]*/ VARIANT Cell2,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall RemoveSubtotal (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Replace (
        /*[in]*/ VARIANT What,
        /*[in]*/ VARIANT Replacement,
        /*[in]*/ VARIANT LookAt,
        /*[in]*/ VARIANT SearchOrder,
        /*[in]*/ VARIANT MatchCase,
        /*[in]*/ VARIANT MatchByte,
        /*[in]*/ VARIANT SearchFormat,
        /*[in]*/ VARIANT ReplaceFormat,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Resize (
        /*[in]*/ VARIANT RowSize,
        /*[in]*/ VARIANT ColumnSize,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelRow (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall RowDifferences (
        /*[in]*/ VARIANT Comparison,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_RowHeight (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_RowHeight (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_excelRows (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Run (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ShowDependents (
        /*[in]*/ VARIANT Remove,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowDetail (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowDetail (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall ShowErrors (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ShowPrecedents (
        /*[in]*/ VARIANT Remove,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_ShrinkToFit (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_ShrinkToFit (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall Sort (
        /*[in]*/ VARIANT Key1,
        /*[in]*/ enum XlSortOrder Order1,
        /*[in]*/ VARIANT Key2,
        /*[in]*/ VARIANT Type,
        /*[in]*/ enum XlSortOrder Order2,
        /*[in]*/ VARIANT Key3,
        /*[in]*/ enum XlSortOrder Order3,
        /*[in]*/ enum XlYesNoGuess Header,
        /*[in]*/ VARIANT OrderCustom,
        /*[in]*/ VARIANT MatchCase,
        /*[in]*/ enum XlSortOrientation Orientation,
        /*[in]*/ enum XlSortMethod SortMethod,
        /*[in]*/ enum XlSortDataOption DataOption1,
        /*[in]*/ enum XlSortDataOption DataOption2,
        /*[in]*/ enum XlSortDataOption DataOption3,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SortSpecial (
        /*[in]*/ enum XlSortMethod SortMethod,
        /*[in]*/ VARIANT Key1,
        /*[in]*/ enum XlSortOrder Order1,
        /*[in]*/ VARIANT Type,
        /*[in]*/ VARIANT Key2,
        /*[in]*/ enum XlSortOrder Order2,
        /*[in]*/ VARIANT Key3,
        /*[in]*/ enum XlSortOrder Order3,
        /*[in]*/ enum XlYesNoGuess Header,
        /*[in]*/ VARIANT OrderCustom,
        /*[in]*/ VARIANT MatchCase,
        /*[in]*/ enum XlSortOrientation Orientation,
        /*[in]*/ enum XlSortDataOption DataOption1,
        /*[in]*/ enum XlSortDataOption DataOption2,
        /*[in]*/ enum XlSortDataOption DataOption3,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_SoundNote (
        /*[out,retval]*/ struct SoundNote * * RHS ) = 0;
      virtual HRESULT __stdcall SpecialCells (
        /*[in]*/ enum XlCellType Type,
        /*[in]*/ VARIANT Value,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall SubscribeTo (
        /*[in]*/ BSTR Edition,
        /*[in]*/ enum XlSubscribeToFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Subtotal (
        /*[in]*/ long GroupBy,
        /*[in]*/ enum XlConsolidationFunction Function,
        /*[in]*/ VARIANT TotalList,
        /*[in]*/ VARIANT Replace,
        /*[in]*/ VARIANT PageBreaks,
        /*[in]*/ enum XlSummaryRow SummaryBelowData,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Summary (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall excelTable (
        /*[in]*/ VARIANT RowInput,
        /*[in]*/ VARIANT ColumnInput,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall TextToColumns (
        /*[in]*/ VARIANT Destination,
        /*[in]*/ enum XlTextParsingType DataType,
        /*[in]*/ enum XlTextQualifier TextQualifier,
        /*[in]*/ VARIANT ConsecutiveDelimiter,
        /*[in]*/ VARIANT Tab,
        /*[in]*/ VARIANT Semicolon,
        /*[in]*/ VARIANT Comma,
        /*[in]*/ VARIANT Space,
        /*[in]*/ VARIANT Other,
        /*[in]*/ VARIANT OtherChar,
        /*[in]*/ VARIANT FieldInfo,
        /*[in]*/ VARIANT DecimalSeparator,
        /*[in]*/ VARIANT ThousandsSeparator,
        /*[in]*/ VARIANT TrailingMinusNumbers,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_UseStandardHeight (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_UseStandardHeight (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_UseStandardWidth (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_UseStandardWidth (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Validation (
        /*[out,retval]*/ struct Validation * * RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[in]*/ VARIANT RangeValueDataType,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT RangeValueDataType,
        /*[in,lcid]*/ long lcid = 0,
        /*[in]*/ VARIANT RHS = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Value2 (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Value2 (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Worksheet (
        /*[out,retval]*/ struct _Worksheet * * RHS ) = 0;
      virtual HRESULT __stdcall get_WrapText (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_WrapText (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall AddComment (
        /*[in]*/ VARIANT Text,
        /*[out,retval]*/ struct excelComment * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelComment (
        /*[out,retval]*/ struct excelComment * * RHS ) = 0;
      virtual HRESULT __stdcall ClearComments ( ) = 0;
      virtual HRESULT __stdcall get_Phonetic (
        /*[out,retval]*/ struct Phonetic * * RHS ) = 0;
      virtual HRESULT __stdcall get_FormatConditions (
        /*[out,retval]*/ struct FormatConditions * * RHS ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_excelHyperlinks (
        /*[out,retval]*/ struct excelHyperlinks * * RHS ) = 0;
      virtual HRESULT __stdcall get_Phonetics (
        /*[out,retval]*/ struct Phonetics * * RHS ) = 0;
      virtual HRESULT __stdcall SetPhonetic ( ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall _PrintOut (
        /*[in]*/ VARIANT From,
        /*[in]*/ VARIANT To,
        /*[in]*/ VARIANT Copies,
        /*[in]*/ VARIANT Preview,
        /*[in]*/ VARIANT ActivePrinter,
        /*[in]*/ VARIANT PrintToFile,
        /*[in]*/ VARIANT Collate,
        /*[in]*/ VARIANT PrToFileName,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotCell (
        /*[out,retval]*/ struct PivotCell * * RHS ) = 0;
      virtual HRESULT __stdcall Dirty ( ) = 0;
      virtual HRESULT __stdcall get_Errors (
        /*[out,retval]*/ struct Errors * * RHS ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * RHS ) = 0;
      virtual HRESULT __stdcall Speak (
        /*[in]*/ VARIANT SpeakDirection = vtMissing,
        /*[in]*/ VARIANT SpeakFormulas = vtMissing ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ enum XlPasteType Paste,
        /*[in]*/ enum XlPasteSpecialOperation Operation,
        /*[in]*/ VARIANT SkipBlanks,
        /*[in]*/ VARIANT Transpose,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_AllowEdit (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ListObject (
        /*[out,retval]*/ struct ListObject * * RHS ) = 0;
      virtual HRESULT __stdcall get_XPath (
        /*[out,retval]*/ struct XPath * * RHS ) = 0;
      virtual HRESULT __stdcall get_ServerActions (
        /*[out,retval]*/ struct Actions * * RHS ) = 0;
      virtual HRESULT __stdcall RemoveDuplicates (
        /*[in]*/ VARIANT excelColumns,
        /*[in]*/ enum XlYesNoGuess Header ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT From,
        /*[in]*/ VARIANT To,
        /*[in]*/ VARIANT Copies,
        /*[in]*/ VARIANT Preview,
        /*[in]*/ VARIANT ActivePrinter,
        /*[in]*/ VARIANT PrintToFile,
        /*[in]*/ VARIANT Collate,
        /*[in]*/ VARIANT PrToFileName,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_MDX (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ enum XlFixedFormatType Type,
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in]*/ VARIANT Quality = vtMissing,
        /*[in]*/ VARIANT IncludeDocProperties = vtMissing,
        /*[in]*/ VARIANT IgnorePrintAreas = vtMissing,
        /*[in]*/ VARIANT From = vtMissing,
        /*[in]*/ VARIANT To = vtMissing,
        /*[in]*/ VARIANT OpenAfterPublish = vtMissing,
        /*[in]*/ VARIANT FixedFormatExtClassPtr = vtMissing ) = 0;
      virtual HRESULT __stdcall get_CountLarge (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CalculateRowMajorOrder (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
};

struct __declspec(uuid("00024402-0001-0000-c000-000000000046"))
IVPageBreak : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _Worksheet * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall DragOff (
        /*[in]*/ enum XlDirection Direction,
        /*[in]*/ long RegionIndex ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlPageBreak * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum XlPageBreak RHS ) = 0;
      virtual HRESULT __stdcall get_Extent (
        /*[out,retval]*/ enum XlPageBreakExtent * RHS ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall putref_Location (
        /*[in]*/ struct Range * RHS ) = 0;
};

struct __declspec(uuid("00024401-0001-0000-c000-000000000046"))
IHPageBreak : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _Worksheet * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall DragOff (
        /*[in]*/ enum XlDirection Direction,
        /*[in]*/ long RegionIndex ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum XlPageBreak * RHS ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum XlPageBreak RHS ) = 0;
      virtual HRESULT __stdcall get_Extent (
        /*[out,retval]*/ enum XlPageBreakExtent * RHS ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall putref_Location (
        /*[in]*/ struct Range * RHS ) = 0;
};

struct __declspec(uuid("00020812-0000-0000-c000-000000000046"))
excelGlobal;
    // [ default ] interface _excelGlobal

struct __declspec(uuid("00020819-0000-0000-c000-000000000046"))
Workbook;
    // [ default ] interface _Workbook
    // [ default, source ] dispinterface WorkbookEvents

struct __declspec(uuid("00024413-0001-0000-c000-000000000046"))
IAppEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall NewWorkbook (
        /*[in]*/ struct _Workbook * Wb ) = 0;
      virtual HRESULT __stdcall SheetSelectionChange (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target ) = 0;
      virtual HRESULT __stdcall SheetBeforeDoubleClick (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall SheetBeforeRightClick (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall SheetActivate (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall SheetDeactivate (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall SheetCalculate (
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall SheetChange (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct Range * Target ) = 0;
      virtual HRESULT __stdcall WorkbookOpen (
        /*[in]*/ struct _Workbook * Wb ) = 0;
      virtual HRESULT __stdcall WorkbookActivate (
        /*[in]*/ struct _Workbook * Wb ) = 0;
      virtual HRESULT __stdcall WorkbookDeactivate (
        /*[in]*/ struct _Workbook * Wb ) = 0;
      virtual HRESULT __stdcall WorkbookBeforeClose (
        /*[in]*/ struct _Workbook * Wb,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WorkbookBeforeSave (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ VARIANT_BOOL SaveAsUI,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WorkbookBeforePrint (
        /*[in]*/ struct _Workbook * Wb,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WorkbookNewSheet (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ IDispatch * Sh ) = 0;
      virtual HRESULT __stdcall WorkbookAddinInstall (
        /*[in]*/ struct _Workbook * Wb ) = 0;
      virtual HRESULT __stdcall WorkbookAddinUninstall (
        /*[in]*/ struct _Workbook * Wb ) = 0;
      virtual HRESULT __stdcall WindowResize (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowActivate (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowDeactivate (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall SheetFollowHyperlink (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct excelHyperlink * Target ) = 0;
      virtual HRESULT __stdcall SheetPivotTableUpdate (
        /*[in]*/ IDispatch * Sh,
        /*[in]*/ struct PivotTable * Target ) = 0;
      virtual HRESULT __stdcall WorkbookPivotTableCloseConnection (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct PivotTable * Target ) = 0;
      virtual HRESULT __stdcall WorkbookPivotTableOpenConnection (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct PivotTable * Target ) = 0;
      virtual HRESULT __stdcall WorkbookSync (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ enum Office::MsoSyncEventType SyncEventType ) = 0;
      virtual HRESULT __stdcall WorkbookBeforeXmlImport (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR Url,
        /*[in]*/ VARIANT_BOOL IsRefresh,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WorkbookAfterXmlImport (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ VARIANT_BOOL IsRefresh,
        /*[in]*/ enum XlXmlImportResult Result ) = 0;
      virtual HRESULT __stdcall WorkbookBeforeXmlExport (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR Url,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WorkbookAfterXmlExport (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ struct XmlMap * Map,
        /*[in]*/ BSTR Url,
        /*[in]*/ enum XlXmlExportResult Result ) = 0;
      virtual HRESULT __stdcall WorkbookRowsetComplete (
        /*[in]*/ struct _Workbook * Wb,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Sheet,
        /*[in]*/ VARIANT_BOOL Success ) = 0;
      virtual HRESULT __stdcall AfterCalculate ( ) = 0;
};

struct __declspec(uuid("00024407-0001-0000-c000-000000000046"))
IRecentFile : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Open (
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("000208db-0000-0000-c000-000000000046"))
Workbooks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Template,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall _Open (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT UpdateLinks,
        /*[in]*/ VARIANT ReadOnly,
        /*[in]*/ VARIANT Format,
        /*[in]*/ VARIANT Password,
        /*[in]*/ VARIANT WriteResPassword,
        /*[in]*/ VARIANT IgnoreReadOnlyRecommended,
        /*[in]*/ VARIANT Origin,
        /*[in]*/ VARIANT Delimiter,
        /*[in]*/ VARIANT Editable,
        /*[in]*/ VARIANT Notify,
        /*[in]*/ VARIANT Converter,
        /*[in]*/ VARIANT AddToMru,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall __OpenText (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Origin,
        /*[in]*/ VARIANT StartRow,
        /*[in]*/ VARIANT DataType,
        /*[in]*/ enum XlTextQualifier TextQualifier,
        /*[in]*/ VARIANT ConsecutiveDelimiter = vtMissing,
        /*[in]*/ VARIANT Tab = vtMissing,
        /*[in]*/ VARIANT Semicolon = vtMissing,
        /*[in]*/ VARIANT Comma = vtMissing,
        /*[in]*/ VARIANT Space = vtMissing,
        /*[in]*/ VARIANT Other = vtMissing,
        /*[in]*/ VARIANT OtherChar = vtMissing,
        /*[in]*/ VARIANT FieldInfo = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall _OpenText (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Origin,
        /*[in]*/ VARIANT StartRow,
        /*[in]*/ VARIANT DataType,
        /*[in]*/ enum XlTextQualifier TextQualifier,
        /*[in]*/ VARIANT ConsecutiveDelimiter = vtMissing,
        /*[in]*/ VARIANT Tab = vtMissing,
        /*[in]*/ VARIANT Semicolon = vtMissing,
        /*[in]*/ VARIANT Comma = vtMissing,
        /*[in]*/ VARIANT Space = vtMissing,
        /*[in]*/ VARIANT Other = vtMissing,
        /*[in]*/ VARIANT OtherChar = vtMissing,
        /*[in]*/ VARIANT FieldInfo = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in]*/ VARIANT DecimalSeparator = vtMissing,
        /*[in]*/ VARIANT ThousandsSeparator = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT UpdateLinks,
        /*[in]*/ VARIANT ReadOnly,
        /*[in]*/ VARIANT Format,
        /*[in]*/ VARIANT Password,
        /*[in]*/ VARIANT WriteResPassword,
        /*[in]*/ VARIANT IgnoreReadOnlyRecommended,
        /*[in]*/ VARIANT Origin,
        /*[in]*/ VARIANT Delimiter,
        /*[in]*/ VARIANT Editable,
        /*[in]*/ VARIANT Notify,
        /*[in]*/ VARIANT Converter,
        /*[in]*/ VARIANT AddToMru,
        /*[in]*/ VARIANT Local,
        /*[in]*/ VARIANT CorruptLoad,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall OpenText (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Origin,
        /*[in]*/ VARIANT StartRow,
        /*[in]*/ VARIANT DataType,
        /*[in]*/ enum XlTextQualifier TextQualifier,
        /*[in]*/ VARIANT ConsecutiveDelimiter = vtMissing,
        /*[in]*/ VARIANT Tab = vtMissing,
        /*[in]*/ VARIANT Semicolon = vtMissing,
        /*[in]*/ VARIANT Comma = vtMissing,
        /*[in]*/ VARIANT Space = vtMissing,
        /*[in]*/ VARIANT Other = vtMissing,
        /*[in]*/ VARIANT OtherChar = vtMissing,
        /*[in]*/ VARIANT FieldInfo = vtMissing,
        /*[in]*/ VARIANT TextVisualLayout = vtMissing,
        /*[in]*/ VARIANT DecimalSeparator = vtMissing,
        /*[in]*/ VARIANT ThousandsSeparator = vtMissing,
        /*[in]*/ VARIANT TrailingMinusNumbers = vtMissing,
        /*[in]*/ VARIANT Local = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall OpenDatabase (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT CommandText,
        /*[in]*/ VARIANT CommandType,
        /*[in]*/ VARIANT BackgroundQuery,
        /*[in]*/ VARIANT ImportDataAs,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall CheckOut (
        /*[in]*/ BSTR Filename ) = 0;
      virtual HRESULT __stdcall CanCheckOut (
        /*[in]*/ BSTR Filename,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall _OpenXML (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Stylesheets,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall OpenXML (
        /*[in]*/ BSTR Filename,
        /*[in]*/ VARIANT Stylesheets,
        /*[in]*/ VARIANT LoadOption,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
};

struct __declspec(uuid("000208d5-0000-0000-c000-000000000046"))
_excelApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveChart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveDialog (
        /*[out,retval]*/ struct DialogSheet * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveMenuBar (
        /*[out,retval]*/ struct MenuBar * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveSheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveWorkbook (
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelAddIns (
        /*[out,retval]*/ struct excelAddIns * * RHS ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * RHS ) = 0;
      virtual HRESULT __stdcall Calculate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Charts (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelColumns (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_DDEAppReturnCode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall DDEExecute (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR String,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall DDEInitiate (
        /*[in]*/ BSTR App,
        /*[in]*/ BSTR Topic,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall DDEPoke (
        /*[in]*/ long Channel,
        /*[in]*/ VARIANT Item,
        /*[in]*/ VARIANT Data,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall DDERequest (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall DDETerminate (
        /*[in]*/ long Channel,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_DialogSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ExecuteExcel4Macro (
        /*[in]*/ BSTR String,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Intersect (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_MenuBars (
        /*[out,retval]*/ struct MenuBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_Modules (
        /*[out,retval]*/ struct Modules * * RHS ) = 0;
      virtual HRESULT __stdcall get_Names (
        /*[out,retval]*/ struct Names * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[in]*/ VARIANT Cell1,
        /*[in]*/ VARIANT Cell2,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelRows (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Run (
        /*[in]*/ VARIANT Macro,
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Run2 (
        /*[in]*/ VARIANT Macro,
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelSelection (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall SendKeys (
        /*[in]*/ VARIANT Keys,
        /*[in]*/ VARIANT Wait = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Sheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShortcutMenus (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Menu * * RHS ) = 0;
      virtual HRESULT __stdcall get_ThisWorkbook (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall get_Toolbars (
        /*[out,retval]*/ struct Toolbars * * RHS ) = 0;
      virtual HRESULT __stdcall Union (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * RHS ) = 0;
      virtual HRESULT __stdcall get_Workbooks (
        /*[out,retval]*/ struct Workbooks * * RHS ) = 0;
      virtual HRESULT __stdcall get_WorksheetFunction (
        /*[out,retval]*/ struct WorksheetFunction * * RHS ) = 0;
      virtual HRESULT __stdcall get_Worksheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_Excel4IntlMacroSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_Excel4MacroSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall ActivateMicrosoftApp (
        /*[in]*/ enum XlMSApplication Index,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall AddChartAutoFormat (
        /*[in]*/ VARIANT Chart,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Description = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall AddCustomList (
        /*[in]*/ VARIANT ListArray,
        /*[in]*/ VARIANT ByRow = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_AlertBeforeOverwriting (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AlertBeforeOverwriting (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AltStartupPath (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_AltStartupPath (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_AskToUpdateLinks (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AskToUpdateLinks (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableAnimations (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableAnimations (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_excelAutoCorrect (
        /*[out,retval]*/ struct excelAutoCorrect * * RHS ) = 0;
      virtual HRESULT __stdcall get_Build (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_CalculateBeforeSave (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CalculateBeforeSave (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Calculation (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlCalculation * RHS ) = 0;
      virtual HRESULT __stdcall put_Calculation (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlCalculation RHS ) = 0;
      virtual HRESULT __stdcall get_Caller (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_CanPlaySounds (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_CanRecordSounds (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_CellDragAndDrop (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CellDragAndDrop (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall CentimetersToPoints (
        /*[in]*/ double Centimeters,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT CustomDictionary,
        /*[in]*/ VARIANT IgnoreUppercase,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ClipboardFormats (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayClipboardWindow (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayClipboardWindow (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ColorButtons (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ColorButtons (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_CommandUnderlines (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlCommandUnderlines * RHS ) = 0;
      virtual HRESULT __stdcall put_CommandUnderlines (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlCommandUnderlines RHS ) = 0;
      virtual HRESULT __stdcall get_ConstrainNumeric (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ConstrainNumeric (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall ConvertFormula (
        /*[in]*/ VARIANT Formula,
        /*[in]*/ enum XlReferenceStyle FromReferenceStyle,
        /*[in]*/ VARIANT ToReferenceStyle,
        /*[in]*/ VARIANT ToAbsolute,
        /*[in]*/ VARIANT RelativeTo,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_CopyObjectsWithCells (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_CopyObjectsWithCells (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Cursor (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlMousePointer * RHS ) = 0;
      virtual HRESULT __stdcall put_Cursor (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlMousePointer RHS ) = 0;
      virtual HRESULT __stdcall get_CustomListCount (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_CutCopyMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlCutCopyMode * RHS ) = 0;
      virtual HRESULT __stdcall put_CutCopyMode (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlCutCopyMode RHS ) = 0;
      virtual HRESULT __stdcall get_DataEntryMode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DataEntryMode (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall Dummy1 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy2 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy3 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy4 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy5 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy6 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy7 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy8 (
        /*[in]*/ VARIANT Arg1,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy9 (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy10 (
        /*[in]*/ VARIANT arg,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Dummy11 ( ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultFilePath (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultFilePath (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall DeleteChartAutoFormat (
        /*[in]*/ BSTR Name,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall DeleteCustomList (
        /*[in]*/ long ListNum,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ struct Dialogs * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayAlerts (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayAlerts (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFormulaBar (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFormulaBar (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFullScreen (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFullScreen (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayNoteIndicator (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayNoteIndicator (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayCommentIndicator (
        /*[out,retval]*/ enum XlCommentDisplayMode * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayCommentIndicator (
        /*[in]*/ enum XlCommentDisplayMode RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayExcel4Menus (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayExcel4Menus (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayRecentFiles (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayRecentFiles (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayScrollBars (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayScrollBars (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayStatusBar (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayStatusBar (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall DoubleClick (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_EditDirectlyInCell (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EditDirectlyInCell (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableAutoComplete (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableAutoComplete (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableCancelKey (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlEnableCancelKey * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableCancelKey (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlEnableCancelKey RHS ) = 0;
      virtual HRESULT __stdcall get_EnableSound (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableSound (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableTipWizard (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableTipWizard (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FileConverters (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_FileSearch (
        /*[out,retval]*/ struct Office::FileSearch * * RHS ) = 0;
      virtual HRESULT __stdcall get_FileFind (
        /*[out,retval]*/ struct Office::IFind * * RHS ) = 0;
      virtual HRESULT __stdcall _FindFile (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_FixedDecimal (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_FixedDecimal (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FixedDecimalPlaces (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_FixedDecimalPlaces (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall GetCustomListContents (
        /*[in]*/ long ListNum,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall GetCustomListNum (
        /*[in]*/ VARIANT ListArray,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall GetOpenFilename (
        /*[in]*/ VARIANT FileFilter,
        /*[in]*/ VARIANT FilterIndex,
        /*[in]*/ VARIANT Title,
        /*[in]*/ VARIANT ButtonText,
        /*[in]*/ VARIANT MultiSelect,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall GetSaveAsFilename (
        /*[in]*/ VARIANT InitialFilename,
        /*[in]*/ VARIANT FileFilter,
        /*[in]*/ VARIANT FilterIndex,
        /*[in]*/ VARIANT Title,
        /*[in]*/ VARIANT ButtonText,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Goto (
        /*[in]*/ VARIANT Reference = vtMissing,
        /*[in]*/ VARIANT Scroll = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall Help (
        /*[in]*/ VARIANT HelpFile = vtMissing,
        /*[in]*/ VARIANT HelpContextID = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_IgnoreRemoteRequests (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_IgnoreRemoteRequests (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall InchesToPoints (
        /*[in]*/ double Inches,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall InputBox (
        /*[in]*/ BSTR Prompt,
        /*[in]*/ VARIANT Title,
        /*[in]*/ VARIANT Default,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[in]*/ VARIANT HelpFile,
        /*[in]*/ VARIANT HelpContextID,
        /*[in]*/ VARIANT Type,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Interactive (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Interactive (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_International (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Iteration (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Iteration (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LargeButtons (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_LargeButtons (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_LibraryPath (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall MacroOptions (
        /*[in]*/ VARIANT Macro = vtMissing,
        /*[in]*/ VARIANT Description = vtMissing,
        /*[in]*/ VARIANT HasMenu = vtMissing,
        /*[in]*/ VARIANT MenuText = vtMissing,
        /*[in]*/ VARIANT HasShortcutKey = vtMissing,
        /*[in]*/ VARIANT ShortcutKey = vtMissing,
        /*[in]*/ VARIANT Category = vtMissing,
        /*[in]*/ VARIANT StatusBar = vtMissing,
        /*[in]*/ VARIANT HelpContextID = vtMissing,
        /*[in]*/ VARIANT HelpFile = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall MailLogoff (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall MailLogon (
        /*[in]*/ VARIANT Name = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT DownloadNewMail = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_MailSession (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_MailSystem (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlMailSystem * RHS ) = 0;
      virtual HRESULT __stdcall get_MathCoprocessorAvailable (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_MaxChange (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_MaxChange (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_MaxIterations (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MaxIterations (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_MemoryFree (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MemoryTotal (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MemoryUsed (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_MouseAvailable (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_MoveAfterReturn (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MoveAfterReturn (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MoveAfterReturnDirection (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlDirection * RHS ) = 0;
      virtual HRESULT __stdcall put_MoveAfterReturnDirection (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlDirection RHS ) = 0;
      virtual HRESULT __stdcall get_RecentFiles (
        /*[out,retval]*/ struct RecentFiles * * RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall NextLetter (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall get_NetworkTemplatesPath (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ODBCErrors (
        /*[out,retval]*/ struct ODBCErrors * * RHS ) = 0;
      virtual HRESULT __stdcall get_ODBCTimeout (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_ODBCTimeout (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_OnCalculate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnCalculate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnData (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnData (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnDoubleClick (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnEntry (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnEntry (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall OnKey (
        /*[in]*/ BSTR Key,
        /*[in]*/ VARIANT Procedure = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall OnRepeat (
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR Procedure,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetActivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnSheetDeactivate (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall OnTime (
        /*[in]*/ VARIANT EarliestTime,
        /*[in]*/ BSTR Procedure,
        /*[in]*/ VARIANT LatestTime = vtMissing,
        /*[in]*/ VARIANT Schedule = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall OnUndo (
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR Procedure,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_OnWindow (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnWindow (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_OperatingSystem (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_OrganizationName (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_PathSeparator (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_PreviousSelections (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_PivotTableSelection (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PivotTableSelection (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_PromptForSummaryInfo (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PromptForSummaryInfo (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall RecordMacro (
        /*[in]*/ VARIANT BasicCode = vtMissing,
        /*[in]*/ VARIANT XlmCode = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_RecordRelative (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ReferenceStyle (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlReferenceStyle * RHS ) = 0;
      virtual HRESULT __stdcall put_ReferenceStyle (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlReferenceStyle RHS ) = 0;
      virtual HRESULT __stdcall get_RegisteredFunctions (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall RegisterXLL (
        /*[in]*/ BSTR Filename,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Repeat (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall ResetTipWizard (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_RollZoom (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_RollZoom (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall SaveWorkspace (
        /*[in]*/ VARIANT Filename = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ScreenUpdating (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ScreenUpdating (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall SetDefaultChart (
        /*[in]*/ VARIANT FormatName = vtMissing,
        /*[in]*/ VARIANT Gallery = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SheetsInNewWorkbook (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_SheetsInNewWorkbook (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ShowChartTipNames (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowChartTipNames (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowChartTipValues (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowChartTipValues (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_StandardFont (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_StandardFont (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_StandardFontSize (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_StandardFontSize (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_StartupPath (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_StatusBar (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_TemplatesPath (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowToolTips (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowToolTips (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultSaveFormat (
        /*[out,retval]*/ enum XlFileFormat * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultSaveFormat (
        /*[in]*/ enum XlFileFormat RHS ) = 0;
      virtual HRESULT __stdcall get_TransitionMenuKey (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_TransitionMenuKey (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_TransitionMenuKeyAction (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_TransitionMenuKeyAction (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_TransitionNavigKeys (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_TransitionNavigKeys (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Undo (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UserControl (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ struct VBE6::VBE * * RHS ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Volatile (
        /*[in]*/ VARIANT Volatile = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall _Wait (
        /*[in]*/ VARIANT Time,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_WindowsForPens (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlWindowState * RHS ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlWindowState RHS ) = 0;
      virtual HRESULT __stdcall get_UILanguage (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_UILanguage (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_DefaultSheetDirection (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_DefaultSheetDirection (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_CursorMovement (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_CursorMovement (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ControlCharacters (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ControlCharacters (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall _WSFunction (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_EnableEvents (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableEvents (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayInfoWindow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayInfoWindow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Wait (
        /*[in]*/ VARIANT Time,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_ExtendList (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ExtendList (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_OLEDBErrors (
        /*[out,retval]*/ struct OLEDBErrors * * RHS ) = 0;
      virtual HRESULT __stdcall GetPhonetic (
        /*[in]*/ VARIANT Text,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ struct Office::COMAddIns * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelDefaultWebOptions (
        /*[out,retval]*/ struct excelDefaultWebOptions * * RHS ) = 0;
      virtual HRESULT __stdcall get_ProductCode (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_UserLibraryPath (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoPercentEntry (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoPercentEntry (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * RHS ) = 0;
      virtual HRESULT __stdcall get_Dummy101 (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Dummy12 (
        /*[in]*/ struct PivotTable * p1,
        /*[in]*/ struct PivotTable * p2 ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * RHS ) = 0;
      virtual HRESULT __stdcall CalculateFull ( ) = 0;
      virtual HRESULT __stdcall FindFile (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall get_CalculationVersion (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ShowWindowsInTaskbar (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowWindowsInTaskbar (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FeatureInstall (
        /*[out,retval]*/ enum Office::MsoFeatureInstall * RHS ) = 0;
      virtual HRESULT __stdcall put_FeatureInstall (
        /*[in]*/ enum Office::MsoFeatureInstall RHS ) = 0;
      virtual HRESULT __stdcall get_Ready (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Dummy13 (
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_FindFormat (
        /*[out,retval]*/ struct CellFormat * * RHS ) = 0;
      virtual HRESULT __stdcall putref_FindFormat (
        /*[in]*/ struct CellFormat * RHS ) = 0;
      virtual HRESULT __stdcall get_ReplaceFormat (
        /*[out,retval]*/ struct CellFormat * * RHS ) = 0;
      virtual HRESULT __stdcall putref_ReplaceFormat (
        /*[in]*/ struct CellFormat * RHS ) = 0;
      virtual HRESULT __stdcall get_UsedObjects (
        /*[out,retval]*/ struct UsedObjects * * RHS ) = 0;
      virtual HRESULT __stdcall get_CalculationState (
        /*[out,retval]*/ enum XlCalculationState * RHS ) = 0;
      virtual HRESULT __stdcall get_CalculationInterruptKey (
        /*[out,retval]*/ enum XlCalculationInterruptKey * RHS ) = 0;
      virtual HRESULT __stdcall put_CalculationInterruptKey (
        /*[in]*/ enum XlCalculationInterruptKey RHS ) = 0;
      virtual HRESULT __stdcall get_Watches (
        /*[out,retval]*/ struct Watches * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFunctionToolTips (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFunctionToolTips (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutomationSecurity (
        /*[out,retval]*/ enum Office::MsoAutomationSecurity * RHS ) = 0;
      virtual HRESULT __stdcall put_AutomationSecurity (
        /*[in]*/ enum Office::MsoAutomationSecurity RHS ) = 0;
      virtual HRESULT __stdcall get_FileDialog (
        /*[in]*/ enum Office::MsoFileDialogType fileDialogType,
        /*[out,retval]*/ struct Office::FileDialog * * RHS ) = 0;
      virtual HRESULT __stdcall Dummy14 ( ) = 0;
      virtual HRESULT __stdcall CalculateFullRebuild ( ) = 0;
      virtual HRESULT __stdcall get_DisplayPasteOptions (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayPasteOptions (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayInsertOptions (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayInsertOptions (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_GenerateGetPivotData (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_GenerateGetPivotData (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AutoRecover (
        /*[out,retval]*/ struct AutoRecover * * RHS ) = 0;
      virtual HRESULT __stdcall get_Hwnd (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Hinstance (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall CheckAbort (
        /*[in]*/ VARIANT KeepAbort = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ErrorCheckingOptions (
        /*[out,retval]*/ struct ErrorCheckingOptions * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_SmartTagRecognizers (
        /*[out,retval]*/ struct SmartTagRecognizers * * RHS ) = 0;
      virtual HRESULT __stdcall get_NewWorkbook (
        /*[out,retval]*/ struct Office::NewFile * * RHS ) = 0;
      virtual HRESULT __stdcall get_SpellingOptions (
        /*[out,retval]*/ struct SpellingOptions * * RHS ) = 0;
      virtual HRESULT __stdcall get_Speech (
        /*[out,retval]*/ struct Speech * * RHS ) = 0;
      virtual HRESULT __stdcall get_MapPaperSize (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_MapPaperSize (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowStartupDialog (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowStartupDialog (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DecimalSeparator (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_DecimalSeparator (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ThousandsSeparator (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ThousandsSeparator (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_UseSystemSeparators (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_UseSystemSeparators (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ThisCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_RTD (
        /*[out,retval]*/ struct RTD * * RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayDocumentActionTaskPane (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayDocumentActionTaskPane (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall DisplayXMLSourcePane (
        /*[in]*/ VARIANT XmlMap = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ArbitraryXMLSupportAvailable (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall Support (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ long ID,
        /*[in]*/ VARIANT arg,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Dummy20 (
        /*[in]*/ long grfCompareFunctions,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_MeasurementUnit (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_MeasurementUnit (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_ShowSelectionFloaties (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowSelectionFloaties (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowMenuFloaties (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowMenuFloaties (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_ShowDevTools (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_ShowDevTools (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_EnableLivePreview (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableLivePreview (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayDocumentInformationPanel (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayDocumentInformationPanel (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_AlwaysUseClearType (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AlwaysUseClearType (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_WarnOnFunctionNameConflict (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_WarnOnFunctionNameConflict (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_FormulaBarHeight (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_FormulaBarHeight (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_DisplayFormulaAutoComplete (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DisplayFormulaAutoComplete (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_GenerateTableRefs (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum XlGenerateTableRefs * RHS ) = 0;
      virtual HRESULT __stdcall put_GenerateTableRefs (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum XlGenerateTableRefs RHS ) = 0;
      virtual HRESULT __stdcall get_Assistance (
        /*[out,retval]*/ struct Office::IAssistance * * RHS ) = 0;
      virtual HRESULT __stdcall CalculateUntilAsyncQueriesDone ( ) = 0;
      virtual HRESULT __stdcall get_EnableLargeOperationAlert (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_EnableLargeOperationAlert (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_LargeOperationCellThousandCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall put_LargeOperationCellThousandCount (
        /*[in]*/ long RHS ) = 0;
      virtual HRESULT __stdcall get_DeferAsyncQueries (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_DeferAsyncQueries (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_MultiThreadedCalculation (
        /*[out,retval]*/ struct MultiThreadedCalculation * * RHS ) = 0;
      virtual HRESULT __stdcall SharePointVersion (
        /*[in]*/ BSTR bstrUrl,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveEncryptionSession (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_HighQualityModeForGraphics (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_HighQualityModeForGraphics (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
};

struct __declspec(uuid("000208d9-0000-0000-c000-000000000046"))
_excelGlobal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveChart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveDialog (
        /*[out,retval]*/ struct DialogSheet * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveMenuBar (
        /*[out,retval]*/ struct MenuBar * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveSheet (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * RHS ) = 0;
      virtual HRESULT __stdcall get_ActiveWorkbook (
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelAddIns (
        /*[out,retval]*/ struct excelAddIns * * RHS ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * RHS ) = 0;
      virtual HRESULT __stdcall Calculate (
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Charts (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelColumns (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_DDEAppReturnCode (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall DDEExecute (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR String,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall DDEInitiate (
        /*[in]*/ BSTR App,
        /*[in]*/ BSTR Topic,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall DDEPoke (
        /*[in]*/ long Channel,
        /*[in]*/ VARIANT Item,
        /*[in]*/ VARIANT Data,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall DDERequest (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall DDETerminate (
        /*[in]*/ long Channel,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_DialogSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Evaluate (
        /*[in]*/ VARIANT Name,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall ExecuteExcel4Macro (
        /*[in]*/ BSTR String,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Intersect (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_MenuBars (
        /*[out,retval]*/ struct MenuBars * * RHS ) = 0;
      virtual HRESULT __stdcall get_Modules (
        /*[out,retval]*/ struct Modules * * RHS ) = 0;
      virtual HRESULT __stdcall get_Names (
        /*[out,retval]*/ struct Names * * RHS ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[in]*/ VARIANT Cell1,
        /*[in]*/ VARIANT Cell2,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelRows (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall Run (
        /*[in]*/ VARIANT Macro,
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall _Run2 (
        /*[in]*/ VARIANT Macro,
        /*[in]*/ VARIANT Arg1,
        /*[in]*/ VARIANT Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_excelSelection (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall SendKeys (
        /*[in]*/ VARIANT Keys,
        /*[in]*/ VARIANT Wait = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_Sheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShortcutMenus (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Menu * * RHS ) = 0;
      virtual HRESULT __stdcall get_ThisWorkbook (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct _Workbook * * RHS ) = 0;
      virtual HRESULT __stdcall get_Toolbars (
        /*[out,retval]*/ struct Toolbars * * RHS ) = 0;
      virtual HRESULT __stdcall Union (
        /*[in]*/ struct Range * Arg1,
        /*[in]*/ struct Range * Arg2,
        /*[in]*/ VARIANT Arg3,
        /*[in]*/ VARIANT Arg4,
        /*[in]*/ VARIANT Arg5,
        /*[in]*/ VARIANT Arg6,
        /*[in]*/ VARIANT Arg7,
        /*[in]*/ VARIANT Arg8,
        /*[in]*/ VARIANT Arg9,
        /*[in]*/ VARIANT Arg10,
        /*[in]*/ VARIANT Arg11,
        /*[in]*/ VARIANT Arg12,
        /*[in]*/ VARIANT Arg13,
        /*[in]*/ VARIANT Arg14,
        /*[in]*/ VARIANT Arg15,
        /*[in]*/ VARIANT Arg16,
        /*[in]*/ VARIANT Arg17,
        /*[in]*/ VARIANT Arg18,
        /*[in]*/ VARIANT Arg19,
        /*[in]*/ VARIANT Arg20,
        /*[in]*/ VARIANT Arg21,
        /*[in]*/ VARIANT Arg22,
        /*[in]*/ VARIANT Arg23,
        /*[in]*/ VARIANT Arg24,
        /*[in]*/ VARIANT Arg25,
        /*[in]*/ VARIANT Arg26,
        /*[in]*/ VARIANT Arg27,
        /*[in]*/ VARIANT Arg28,
        /*[in]*/ VARIANT Arg29,
        /*[in]*/ VARIANT Arg30,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * RHS ) = 0;
      virtual HRESULT __stdcall get_Workbooks (
        /*[out,retval]*/ struct Workbooks * * RHS ) = 0;
      virtual HRESULT __stdcall get_WorksheetFunction (
        /*[out,retval]*/ struct WorksheetFunction * * RHS ) = 0;
      virtual HRESULT __stdcall get_Worksheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_Excel4IntlMacroSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
      virtual HRESULT __stdcall get_Excel4MacroSheets (
        /*[out,retval]*/ struct Sheets * * RHS ) = 0;
};

struct __declspec(uuid("00020818-0000-0000-c000-000000000046"))
OLEObject;
    // [ default ] dispinterface _OLEObject
    // [ default, source ] dispinterface OLEObjectEvents

struct __declspec(uuid("000208a3-0001-0000-c000-000000000046"))
IOLEObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual void __stdcall _Dummy3 ( ) = 0;
      virtual HRESULT __stdcall BringToFront (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum XlPictureAppearance Appearance,
        /*[in]*/ enum XlCopyPictureFormat Format,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Cut (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy12 ( ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy15 ( ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ VARIANT RHS ) = 0;
      virtual HRESULT __stdcall get_PrintObject (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_PrintObject (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall SendToBack (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double RHS ) = 0;
      virtual void __stdcall _Dummy22 ( ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelShapeRange (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct Border * * RHS ) = 0;
      virtual HRESULT __stdcall get_Interior (
        /*[out,retval]*/ struct Interior * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy30 ( ) = 0;
      virtual HRESULT __stdcall get_AutoLoad (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoLoad (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual void __stdcall _Dummy32 ( ) = 0;
      virtual void __stdcall _Dummy33 ( ) = 0;
      virtual void __stdcall _Dummy34 ( ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_SourceName (
        /*[in]*/ BSTR RHS ) = 0;
      virtual void __stdcall _Dummy36 ( ) = 0;
      virtual void __stdcall _Dummy37 ( ) = 0;
      virtual void __stdcall _Dummy38 ( ) = 0;
      virtual void __stdcall _Dummy39 ( ) = 0;
      virtual void __stdcall _Dummy40 ( ) = 0;
      virtual void __stdcall _Dummy41 ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT ClassType,
        /*[in]*/ VARIANT Filename,
        /*[in]*/ VARIANT Link,
        /*[in]*/ VARIANT DisplayAsIcon,
        /*[in]*/ VARIANT IconFileName,
        /*[in]*/ VARIANT IconIndex,
        /*[in]*/ VARIANT IconLabel,
        /*[in]*/ VARIANT Left,
        /*[in]*/ VARIANT Top,
        /*[in]*/ VARIANT Width,
        /*[in]*/ VARIANT Height,
        /*[out,retval]*/ struct _OLEObject * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct GroupObject * * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
};

struct __declspec(uuid("000c036e-0000-0000-c000-000000000046"))
excelDiagramNodes : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppunkEnum ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelDiagramNode * * ppdn ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * pcDiagramNodes ) = 0;
};

struct __declspec(uuid("0002446f-0001-0000-c000-000000000046"))
IDiagram : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct excelDiagramNodes * * RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoDiagramType * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoLayout (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoLayout (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_Reverse (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_Reverse (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_AutoFormat (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoFormat (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall Convert (
        /*[in]*/ enum Office::MsoDiagramType Type ) = 0;
      virtual HRESULT __stdcall FitText ( ) = 0;
};

struct __declspec(uuid("000c036f-0000-0000-c000-000000000046"))
excelDiagramNodeChildren : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppunkEnum ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelDiagramNode * * ppNode ) = 0;
      virtual HRESULT __stdcall AddNode (
        /*[in]*/ VARIANT Index,
        /*[in]*/ enum Office::MsoDiagramNodeType nodeType,
        /*[out,retval]*/ struct excelDiagramNode * * ppNewNode ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * pcDiagramNodes ) = 0;
      virtual HRESULT __stdcall get_FirstChild (
        /*[out,retval]*/ struct excelDiagramNode * * pFirst ) = 0;
      virtual HRESULT __stdcall get_LastChild (
        /*[out,retval]*/ struct excelDiagramNode * * pLast ) = 0;
};

struct __declspec(uuid("000c0370-0000-0000-c000-000000000046"))
excelDiagramNode : Office::_IMsoDispObj
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddNode (
        /*[in]*/ enum Office::MsoRelativeNodePosition pos,
        /*[in]*/ enum Office::MsoDiagramNodeType nodeType,
        /*[out,retval]*/ struct excelDiagramNode * * NewNode ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall MoveNode (
        /*[in]*/ struct excelDiagramNode * pTargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition pos ) = 0;
      virtual HRESULT __stdcall ReplaceNode (
        /*[in]*/ struct excelDiagramNode * pTargetNode ) = 0;
      virtual HRESULT __stdcall SwapNode (
        /*[in]*/ struct excelDiagramNode * pTargetNode,
        /*[in]*/ VARIANT_BOOL swapChildren ) = 0;
      virtual HRESULT __stdcall CloneNode (
        /*[in]*/ VARIANT_BOOL copyChildren,
        /*[in]*/ struct excelDiagramNode * pTargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition pos,
        /*[out,retval]*/ struct excelDiagramNode * * ppNode ) = 0;
      virtual HRESULT __stdcall TransferChildren (
        /*[in]*/ struct excelDiagramNode * pReceivingNode ) = 0;
      virtual HRESULT __stdcall NextNode (
        /*[out,retval]*/ struct excelDiagramNode * * ppNextNode ) = 0;
      virtual HRESULT __stdcall PrevNode (
        /*[out,retval]*/ struct excelDiagramNode * * ppPrevNode ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ struct excelDiagramNodeChildren * * ppChildren ) = 0;
      virtual HRESULT __stdcall get_excelShape (
        /*[out,retval]*/ struct excelShape * * ppShape ) = 0;
      virtual HRESULT __stdcall get_Root (
        /*[out,retval]*/ struct excelDiagramNode * * ppRoot ) = 0;
      virtual HRESULT __stdcall get_excelDiagram (
        /*[out,retval]*/ struct Office::IMsoDiagram * * ppDiagram ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ enum Office::MsoOrgChartLayoutType * pdgmType ) = 0;
      virtual HRESULT __stdcall put_Layout (
        /*[in]*/ enum Office::MsoOrgChartLayoutType pdgmType ) = 0;
      virtual HRESULT __stdcall get_TextShape (
        /*[out,retval]*/ struct excelShape * * excelShape ) = 0;
};

struct __declspec(uuid("00024439-0001-0000-c000-000000000046"))
IShape : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall PickUp ( ) = 0;
      virtual HRESULT __stdcall RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ VARIANT Scale = vtMissing ) = 0;
      virtual HRESULT __stdcall ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ VARIANT Scale = vtMissing ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing ) = 0;
      virtual HRESULT __stdcall SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall get_excelAdjustments (
        /*[out,retval]*/ struct excelAdjustments * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelTextFrame (
        /*[out,retval]*/ struct excelTextFrame * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType RHS ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct excelCalloutFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_excelConnectorFormat (
        /*[out,retval]*/ struct excelConnectorFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct excelFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct excelGroupShapes * * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct excelLineFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct excelShapeNodes * * RHS ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_excelPictureFormat (
        /*[out,retval]*/ struct excelPictureFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct excelShadowFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct excelTextEffectFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct excelThreeDFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_excelHyperlink (
        /*[out,retval]*/ struct excelHyperlink * * RHS ) = 0;
      virtual HRESULT __stdcall get_BlackWhiteMode (
        /*[out,retval]*/ enum Office::MsoBlackWhiteMode * RHS ) = 0;
      virtual HRESULT __stdcall put_BlackWhiteMode (
        /*[in]*/ enum Office::MsoBlackWhiteMode RHS ) = 0;
      virtual HRESULT __stdcall get_DrawingObject (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_OnAction (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_OnAction (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * RHS ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL RHS ) = 0;
      virtual HRESULT __stdcall get_TopLeftCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_BottomRightCell (
        /*[out,retval]*/ struct Range * * RHS ) = 0;
      virtual HRESULT __stdcall get_Placement (
        /*[out,retval]*/ enum XlPlacement * RHS ) = 0;
      virtual HRESULT __stdcall put_Placement (
        /*[in]*/ enum XlPlacement RHS ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ VARIANT Appearance = vtMissing,
        /*[in]*/ VARIANT Format = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ControlFormat (
        /*[out,retval]*/ struct ControlFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelLinkFormat (
        /*[out,retval]*/ struct excelLinkFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelOLEFormat (
        /*[out,retval]*/ struct excelOLEFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_FormControlType (
        /*[out,retval]*/ enum XlFormControl * RHS ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelDiagramNode (
        /*[out,retval]*/ struct excelDiagramNode * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_excelDiagram (
        /*[out,retval]*/ struct excelDiagram * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct Office::CanvasShapes * * RHS ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Chart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasChart (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_excelTextFrame2 (
        /*[out,retval]*/ struct excelTextFrame2 * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShapeStyle (
        /*[out,retval]*/ enum Office::MsoShapeStyleIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_ShapeStyle (
        /*[in]*/ enum Office::MsoShapeStyleIndex RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundStyle (
        /*[out,retval]*/ enum Office::MsoBackgroundStyleIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundStyle (
        /*[in]*/ enum Office::MsoBackgroundStyleIndex RHS ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct Office::SoftEdgeFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct Office::GlowFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct Office::ReflectionFormat * * RHS ) = 0;
};

struct __declspec(uuid("0002443b-0001-0000-c000-000000000046"))
IShapeRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_excelApplication (
        /*[out,retval]*/ struct _excelApplication * * RHS ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ enum XlCreator * RHS ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * RHS ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * RHS ) = 0;
      virtual HRESULT __stdcall Align (
        /*[in]*/ enum Office::MsoAlignCmd AlignCmd,
        /*[in]*/ enum Office::MsoTriState RelativeTo ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Distribute (
        /*[in]*/ enum Office::MsoDistributeCmd DistributeCmd,
        /*[in]*/ enum Office::MsoTriState RelativeTo ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall PickUp ( ) = 0;
      virtual HRESULT __stdcall RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall Regroup (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ VARIANT Scale = vtMissing ) = 0;
      virtual HRESULT __stdcall ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ VARIANT Scale = vtMissing ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace = vtMissing ) = 0;
      virtual HRESULT __stdcall SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ struct excelShapeRange * * RHS ) = 0;
      virtual HRESULT __stdcall ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall get_excelAdjustments (
        /*[out,retval]*/ struct excelAdjustments * * RHS ) = 0;
      virtual HRESULT __stdcall get_excelTextFrame (
        /*[out,retval]*/ struct excelTextFrame * * RHS ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * RHS ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType RHS ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct excelCalloutFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_excelConnectorFormat (
        /*[out,retval]*/ struct excelConnectorFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct excelFillFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct excelGroupShapes * * RHS ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct excelLineFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct excelShapeNodes * * RHS ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_excelPictureFormat (
        /*[out,retval]*/ struct excelPictureFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct excelShadowFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct excelTextEffectFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct excelThreeDFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * RHS ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * RHS ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState RHS ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * RHS ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float RHS ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall get_BlackWhiteMode (
        /*[out,retval]*/ enum Office::MsoBlackWhiteMode * RHS ) = 0;
      virtual HRESULT __stdcall put_BlackWhiteMode (
        /*[in]*/ enum Office::MsoBlackWhiteMode RHS ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * RHS ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR RHS ) = 0;
      virtual HRESULT __stdcall get_excelDiagramNode (
        /*[out,retval]*/ struct excelDiagramNode * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_excelDiagram (
        /*[out,retval]*/ struct excelDiagram * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct excelShape * * RHS ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct Office::CanvasShapes * * RHS ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * RHS ) = 0;
      virtual HRESULT __stdcall CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Chart (
        /*[out,retval]*/ struct _Chart * * RHS ) = 0;
      virtual HRESULT __stdcall get_HasChart (
        /*[out,retval]*/ enum Office::MsoTriState * RHS ) = 0;
      virtual HRESULT __stdcall get_excelTextFrame2 (
        /*[out,retval]*/ struct excelTextFrame2 * * RHS ) = 0;
      virtual HRESULT __stdcall get_ShapeStyle (
        /*[out,retval]*/ enum Office::MsoShapeStyleIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_ShapeStyle (
        /*[in]*/ enum Office::MsoShapeStyleIndex RHS ) = 0;
      virtual HRESULT __stdcall get_BackgroundStyle (
        /*[out,retval]*/ enum Office::MsoBackgroundStyleIndex * RHS ) = 0;
      virtual HRESULT __stdcall put_BackgroundStyle (
        /*[in]*/ enum Office::MsoBackgroundStyleIndex RHS ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct Office::SoftEdgeFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct Office::GlowFormat * * RHS ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct Office::ReflectionFormat * * RHS ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_Excel =
    {0x00020813,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelAdjustments =
    {0x000c0310,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelCalloutFormat =
    {0x000c0311,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelColorFormat =
    {0x000c0312,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelLineFormat =
    {0x000c0317,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelShapeNode =
    {0x000c0318,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelShapeNodes =
    {0x000c0319,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelPictureFormat =
    {0x000c031a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelShadowFormat =
    {0x000c031b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelTextEffectFormat =
    {0x000c031f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelThreeDFormat =
    {0x000c0321,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelFillFormat =
    {0x000c0314,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRTDUpdateEvent =
    {0xa43788c1,0xd91b,0x11d3,{0x8f,0x39,0x00,0xc0,0x4f,0x36,0x51,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IRtdServer =
    {0xec0e6191,0xdb51,0x11d3,{0x8f,0x3e,0x00,0xc0,0x4f,0x36,0x51,0xb8}};
extern "C" const GUID __declspec(selectany) IID_excelTextFrame2 =
    {0x000c0398,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartEvents =
    {0x0002440f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOLEObjectEvents =
    {0x00024410,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRefreshEvents =
    {0x0002441b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISpellingOptions =
    {0x00024465,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISpeech =
    {0x00024466,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IUserAccess =
    {0x0002446d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRTD =
    {0x0002446e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IIconCriterion =
    {0x00024499,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelFont =
    {0x0002084d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Window =
    {0x00020893,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Windows =
    {0x00020892,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AppEvents =
    {0x00024413,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_WorksheetFunction =
    {0x00020845,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Range =
    {0x00020846,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartEvents =
    {0x0002440f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_VPageBreak =
    {0x00024402,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_HPageBreak =
    {0x00024401,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_HPageBreaks =
    {0x00024404,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_VPageBreaks =
    {0x00024405,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_RecentFile =
    {0x00024407,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_RecentFiles =
    {0x00024406,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DocEvents =
    {0x00024411,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Style =
    {0x00020852,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Styles =
    {0x00020853,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelBorders =
    {0x00020855,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelAddIn =
    {0x00020857,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelAddIns =
    {0x00020858,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Toolbar =
    {0x0002085c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Toolbars =
    {0x0002085d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ToolbarButton =
    {0x0002085e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ToolbarButtons =
    {0x0002085f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Areas =
    {0x00020860,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_WorkbookEvents =
    {0x00024412,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_MenuBars =
    {0x00020863,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_MenuBar =
    {0x00020864,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Menus =
    {0x00020865,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Menu =
    {0x00020866,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_MenuItems =
    {0x00020867,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_MenuItem =
    {0x00020868,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Charts =
    {0x0002086d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DrawingObjects =
    {0x0002086f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotCache =
    {0x0002441c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotCaches =
    {0x0002441d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotFormula =
    {0x0002441e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotFormulas =
    {0x0002441f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotTable =
    {0x00020872,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotTables =
    {0x00020873,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotField =
    {0x00020874,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotFields =
    {0x00020875,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CalculatedFields =
    {0x00024420,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotItem =
    {0x00020876,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotItems =
    {0x00020877,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CalculatedItems =
    {0x00024421,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Characters =
    {0x00020878,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Dialogs =
    {0x00020879,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Dialog =
    {0x0002087a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SoundNote =
    {0x0002087b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Button =
    {0x0002087d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Buttons =
    {0x0002087e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CheckBox =
    {0x0002087f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CheckBoxes =
    {0x00020880,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OptionButton =
    {0x00020881,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OptionButtons =
    {0x00020882,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_EditBox =
    {0x00020883,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_EditBoxes =
    {0x00020884,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ScrollBar =
    {0x00020885,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ScrollBars =
    {0x00020886,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListBox =
    {0x00020887,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListBoxes =
    {0x00020888,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_GroupBox =
    {0x00020889,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_GroupBoxes =
    {0x0002088a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DropDown =
    {0x0002088b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DropDowns =
    {0x0002088c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Spinner =
    {0x0002088d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Spinners =
    {0x0002088e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DialogFrame =
    {0x0002088f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Label =
    {0x00020890,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Labels =
    {0x00020891,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelPanes =
    {0x00020894,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelPane =
    {0x00020895,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Scenarios =
    {0x00020896,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Scenario =
    {0x00020897,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_GroupObject =
    {0x00020898,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_GroupObjects =
    {0x00020899,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Line =
    {0x0002089a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Lines =
    {0x0002089b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Rectangle =
    {0x0002089c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Rectangles =
    {0x0002089d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Oval =
    {0x0002089e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Ovals =
    {0x0002089f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Arc =
    {0x000208a0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Arcs =
    {0x000208a1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OLEObjectEvents =
    {0x00024410,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID__OLEObject =
    {0x000208a2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OLEObjects =
    {0x000208a3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_TextBox =
    {0x000208a4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_TextBoxes =
    {0x000208a5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelPicture =
    {0x000208a6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Pictures =
    {0x000208a7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Drawing =
    {0x000208a8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Drawings =
    {0x000208a9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_RoutingSlip =
    {0x000208aa,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Outline =
    {0x000208ab,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Module =
    {0x000208ad,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Modules =
    {0x000208ae,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DialogSheet =
    {0x000208af,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DialogSheets =
    {0x000208b0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Worksheets =
    {0x000208b1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelPageSetup =
    {0x000208b4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Names =
    {0x000208b8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Name =
    {0x000208b9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartObject =
    {0x000208cf,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartObjects =
    {0x000208d0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Mailer =
    {0x000208d1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CustomViews =
    {0x00024422,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CustomView =
    {0x00024423,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_FormatConditions =
    {0x00024424,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_FormatCondition =
    {0x00024425,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelComments =
    {0x00024426,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelComment =
    {0x00024427,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_RefreshEvents =
    {0x0002441b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID__QueryTable =
    {0x00024428,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_QueryTables =
    {0x00024429,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Parameter =
    {0x0002442a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Parameters =
    {0x0002442b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ODBCError =
    {0x0002442c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ODBCErrors =
    {0x0002442d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Validation =
    {0x0002442f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelHyperlinks =
    {0x00024430,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelHyperlink =
    {0x00024431,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDocEvents =
    {0x00024411,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AutoFilter =
    {0x00024432,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Filters =
    {0x00024433,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Filter =
    {0x00024434,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelAutoCorrect =
    {0x000208d4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Border =
    {0x00020854,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Interior =
    {0x00020870,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartFillFormat =
    {0x00024435,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartColorFormat =
    {0x00024436,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Axis =
    {0x00020848,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartTitle =
    {0x00020849,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AxisTitle =
    {0x0002084a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartGroup =
    {0x00020859,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartGroups =
    {0x0002085a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Axes =
    {0x0002085b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Points =
    {0x00020869,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Point =
    {0x0002086a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Series =
    {0x0002086b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SeriesCollection =
    {0x0002086c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DataLabel =
    {0x000208b2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DataLabels =
    {0x000208b3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_LegendEntry =
    {0x000208ba,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_LegendEntries =
    {0x000208bb,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_LegendKey =
    {0x000208bc,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Trendlines =
    {0x000208bd,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Trendline =
    {0x000208be,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Corners =
    {0x000208c0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SeriesLines =
    {0x000208c1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_HiLoLines =
    {0x000208c2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Gridlines =
    {0x000208c3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DropLines =
    {0x000208c4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_LeaderLines =
    {0x00024437,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_UpBars =
    {0x000208c5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DownBars =
    {0x000208c6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Floor =
    {0x000208c7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Walls =
    {0x000208c8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_TickLabels =
    {0x000208c9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PlotArea =
    {0x000208cb,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartArea =
    {0x000208cc,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Legend =
    {0x000208cd,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ErrorBars =
    {0x000208ce,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DataTable =
    {0x00020843,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Phonetic =
    {0x00024438,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelShape =
    {0x00024439,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelShapes =
    {0x0002443a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelShapeRange =
    {0x0002443b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelGroupShapes =
    {0x0002443c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelTextFrame =
    {0x0002443d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelConnectorFormat =
    {0x0002443e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelFreeformBuilder =
    {0x0002443f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ControlFormat =
    {0x00024440,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelOLEFormat =
    {0x00024441,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelLinkFormat =
    {0x00024442,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PublishObjects =
    {0x00024443,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OLEDBError =
    {0x00024445,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OLEDBErrors =
    {0x00024446,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Phonetics =
    {0x00024447,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotLayout =
    {0x0002444a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DisplayUnitLabel =
    {0x0002084c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CellFormat =
    {0x00024450,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_UsedObjects =
    {0x00024451,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CustomProperties =
    {0x00024452,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CustomProperty =
    {0x00024453,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CalculatedMembers =
    {0x00024454,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_CalculatedMember =
    {0x00024455,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Watches =
    {0x00024456,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Watch =
    {0x00024457,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotCell =
    {0x00024458,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Graphic =
    {0x00024459,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IHeaderFooter =
    {0x000244a1,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AutoRecover =
    {0x0002445a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ErrorCheckingOptions =
    {0x0002445b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Errors =
    {0x0002445c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Error =
    {0x0002445d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTagAction =
    {0x0002445e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTagActions =
    {0x0002445f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTag =
    {0x00024460,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTags =
    {0x00024461,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTagRecognizer =
    {0x00024462,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTagRecognizers =
    {0x00024463,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SmartTagOptions =
    {0x00024464,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SpellingOptions =
    {0x00024465,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Speech =
    {0x00024466,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Protection =
    {0x00024467,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotItemList =
    {0x00024468,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Tab =
    {0x00024469,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AllowEditRanges =
    {0x0002446a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IProtection =
    {0x00024467,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AllowEditRange =
    {0x0002446b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAllowEditRanges =
    {0x0002446a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_UserAccessList =
    {0x0002446c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAllowEditRange =
    {0x0002446b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_UserAccess =
    {0x0002446d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IUserAccessList =
    {0x0002446c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_RTD =
    {0x0002446e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelDiagram =
    {0x0002446f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListObjects =
    {0x00024470,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListObject =
    {0x00024471,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListColumns =
    {0x00024472,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListColumn =
    {0x00024473,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListRows =
    {0x00024474,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListRow =
    {0x00024475,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlNamespace =
    {0x00024476,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlNamespaces =
    {0x00024477,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlDataBinding =
    {0x00024478,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlSchema =
    {0x00024479,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlSchemas =
    {0x0002447a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlMap =
    {0x0002447b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWorkbookEvents =
    {0x00024412,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XmlMaps =
    {0x0002447c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ListDataFormat =
    {0x0002447d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_XPath =
    {0x0002447e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotLineCells =
    {0x0002447f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotLine =
    {0x00024480,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotLines =
    {0x00024481,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotAxis =
    {0x00024482,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotFilter =
    {0x00024483,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_PivotFilters =
    {0x00024484,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_WorkbookConnection =
    {0x00024485,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Connections =
    {0x00024486,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_WorksheetView =
    {0x00024487,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartView =
    {0x00024488,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ModuleView =
    {0x00024489,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DialogSheetView =
    {0x0002448a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SheetViews =
    {0x0002448c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OLEDBConnection =
    {0x0002448d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ODBCConnection =
    {0x0002448e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Action =
    {0x0002448f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Actions =
    {0x00024490,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_FormatColor =
    {0x00024491,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IColorScaleCriterion =
    {0x00024495,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ConditionValue =
    {0x00024492,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ColorScale =
    {0x00024493,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ColorScaleCriteria =
    {0x00024494,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ColorScaleCriterion =
    {0x00024495,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IColorScaleCriteria =
    {0x00024494,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Databar =
    {0x00024496,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_IconSetCondition =
    {0x00024497,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_IconCriteria =
    {0x00024498,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_IconCriterion =
    {0x00024499,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IIconCriteria =
    {0x00024498,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Icon =
    {0x0002449a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_IconSet =
    {0x0002449b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_IconSets =
    {0x0002449c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Top10 =
    {0x0002449d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_AboveAverage =
    {0x0002449e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_UniqueValues =
    {0x0002449f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Ranges =
    {0x000244a0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelHeaderFooter =
    {0x000244a1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPage =
    {0x000244a2,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Page =
    {0x000244a2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPages =
    {0x000244a3,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelPages =
    {0x000244a3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ServerViewableItems =
    {0x000244a4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_TableStyleElement =
    {0x000244a5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_TableStyleElements =
    {0x000244a6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelTableStyle =
    {0x000244a7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_TableStyles =
    {0x000244a8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SortField =
    {0x000244a9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_SortFields =
    {0x000244aa,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_Sort =
    {0x000244ab,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_excelResearch =
    {0x000244ac,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ColorStop =
    {0x000244ad,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ColorStops =
    {0x000244ae,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_LinearGradient =
    {0x000244af,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_RectangularGradient =
    {0x000244b0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_MultiThreadedCalculation =
    {0x000244b1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ChartFormat =
    {0x000244b2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDummy =
    {0x0002442e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICanvasShapes =
    {0x0002444f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_QueryTable =
    {0x59191da1,0xea47,0x11ce,{0xa5,0x1f,0x00,0xaa,0x00,0x61,0x50,0x7f}};
extern "C" const GUID __declspec(selectany) CLSID_excelApplication =
    {0x00024500,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWindows =
    {0x00020892,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWorksheetFunction =
    {0x00020845,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Sheets =
    {0x000208d7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IHPageBreaks =
    {0x00024404,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IVPageBreaks =
    {0x00024405,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRecentFiles =
    {0x00024406,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__Worksheet =
    {0x000208d8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IStyle =
    {0x00020852,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IStyles =
    {0x00020853,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IBorders =
    {0x00020855,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAddIn =
    {0x00020857,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAddIns =
    {0x00020858,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IToolbar =
    {0x0002085c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IToolbars =
    {0x0002085d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IToolbarButton =
    {0x0002085e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IToolbarButtons =
    {0x0002085f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAreas =
    {0x00020860,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMenuBars =
    {0x00020863,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMenuBar =
    {0x00020864,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMenus =
    {0x00020865,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMenu =
    {0x00020866,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMenuItems =
    {0x00020867,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMenuItem =
    {0x00020868,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDrawingObjects =
    {0x0002086f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotCache =
    {0x0002441c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotCaches =
    {0x0002441d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotFormula =
    {0x0002441e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotFormulas =
    {0x0002441f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotTables =
    {0x00020873,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotFields =
    {0x00020875,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICalculatedFields =
    {0x00024420,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotItem =
    {0x00020876,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotItems =
    {0x00020877,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICalculatedItems =
    {0x00024421,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICharacters =
    {0x00020878,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDialogs =
    {0x00020879,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDialog =
    {0x0002087a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISoundNote =
    {0x0002087b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IButton =
    {0x0002087d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IButtons =
    {0x0002087e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICheckBox =
    {0x0002087f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICheckBoxes =
    {0x00020880,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOptionButton =
    {0x00020881,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOptionButtons =
    {0x00020882,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IEditBox =
    {0x00020883,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IEditBoxes =
    {0x00020884,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IScrollBar =
    {0x00020885,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IScrollBars =
    {0x00020886,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListBox =
    {0x00020887,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListBoxes =
    {0x00020888,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGroupBox =
    {0x00020889,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGroupBoxes =
    {0x0002088a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDropDown =
    {0x0002088b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDropDowns =
    {0x0002088c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISpinner =
    {0x0002088d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISpinners =
    {0x0002088e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDialogFrame =
    {0x0002088f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILabel =
    {0x00020890,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILabels =
    {0x00020891,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPanes =
    {0x00020894,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPane =
    {0x00020895,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IScenarios =
    {0x00020896,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IScenario =
    {0x00020897,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGroupObject =
    {0x00020898,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGroupObjects =
    {0x00020899,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILine =
    {0x0002089a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILines =
    {0x0002089b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRectangle =
    {0x0002089c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRectangles =
    {0x0002089d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOval =
    {0x0002089e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOvals =
    {0x0002089f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IArc =
    {0x000208a0,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IArcs =
    {0x000208a1,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__IOLEObject =
    {0x000208a2,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITextBox =
    {0x000208a4,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITextBoxes =
    {0x000208a5,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPictures =
    {0x000208a7,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDrawing =
    {0x000208a8,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDrawings =
    {0x000208a9,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRoutingSlip =
    {0x000208aa,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOutline =
    {0x000208ab,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IModule =
    {0x000208ad,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IModules =
    {0x000208ae,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDialogSheet =
    {0x000208af,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDialogSheets =
    {0x000208b0,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWorksheets =
    {0x000208b1,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPageSetup =
    {0x000208b4,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_INames =
    {0x000208b8,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IName =
    {0x000208b9,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartObjects =
    {0x000208d0,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMailer =
    {0x000208d1,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICustomViews =
    {0x00024422,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICustomView =
    {0x00024423,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFormatConditions =
    {0x00024424,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFormatCondition =
    {0x00024425,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IComments =
    {0x00024426,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IComment =
    {0x00024427,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__IQueryTable =
    {0x00024428,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IQueryTables =
    {0x00024429,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IParameter =
    {0x0002442a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IParameters =
    {0x0002442b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IODBCError =
    {0x0002442c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IODBCErrors =
    {0x0002442d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IValidation =
    {0x0002442f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IHyperlinks =
    {0x00024430,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IHyperlink =
    {0x00024431,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAutoFilter =
    {0x00024432,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFilters =
    {0x00024433,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFilter =
    {0x00024434,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAutoCorrect =
    {0x000208d4,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IBorder =
    {0x00020854,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IInterior =
    {0x00020870,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartFillFormat =
    {0x00024435,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartColorFormat =
    {0x00024436,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAxis =
    {0x00020848,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartTitle =
    {0x00020849,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAxisTitle =
    {0x0002084a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartGroup =
    {0x00020859,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartGroups =
    {0x0002085a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAxes =
    {0x0002085b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPoints =
    {0x00020869,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPoint =
    {0x0002086a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISeries =
    {0x0002086b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISeriesCollection =
    {0x0002086c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDataLabel =
    {0x000208b2,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDataLabels =
    {0x000208b3,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILegendEntry =
    {0x000208ba,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILegendEntries =
    {0x000208bb,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILegendKey =
    {0x000208bc,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITrendlines =
    {0x000208bd,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITrendline =
    {0x000208be,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICorners =
    {0x000208c0,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISeriesLines =
    {0x000208c1,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IHiLoLines =
    {0x000208c2,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGridlines =
    {0x000208c3,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDropLines =
    {0x000208c4,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILeaderLines =
    {0x00024437,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IUpBars =
    {0x000208c5,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDownBars =
    {0x000208c6,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFloor =
    {0x000208c7,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWalls =
    {0x000208c8,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITickLabels =
    {0x000208c9,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPlotArea =
    {0x000208cb,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartArea =
    {0x000208cc,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILegend =
    {0x000208cd,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IErrorBars =
    {0x000208ce,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDataTable =
    {0x00020843,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPhonetic =
    {0x00024438,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IShapes =
    {0x0002443a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGroupShapes =
    {0x0002443c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITextFrame =
    {0x0002443d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IConnectorFormat =
    {0x0002443e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFreeformBuilder =
    {0x0002443f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IControlFormat =
    {0x00024440,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOLEFormat =
    {0x00024441,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILinkFormat =
    {0x00024442,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelPublishObject =
    {0x00024444,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPublishObjects =
    {0x00024443,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOLEDBError =
    {0x00024445,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOLEDBErrors =
    {0x00024446,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPhonetics =
    {0x00024447,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelDefaultWebOptions =
    {0x00024448,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelWebOptions =
    {0x00024449,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TreeviewControl =
    {0x0002444b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CubeField =
    {0x0002444c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotField =
    {0x00020874,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CubeFields =
    {0x0002444d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotTable =
    {0x00020872,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotLayout =
    {0x0002444a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDisplayUnitLabel =
    {0x0002084c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICellFormat =
    {0x00024450,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IUsedObjects =
    {0x00024451,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICustomProperties =
    {0x00024452,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICustomProperty =
    {0x00024453,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICalculatedMembers =
    {0x00024454,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICalculatedMember =
    {0x00024455,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWatches =
    {0x00024456,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWatch =
    {0x00024457,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotCell =
    {0x00024458,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IGraphic =
    {0x00024459,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAutoRecover =
    {0x0002445a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IErrorCheckingOptions =
    {0x0002445b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IErrors =
    {0x0002445c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IError =
    {0x0002445d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTagAction =
    {0x0002445e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTagActions =
    {0x0002445f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTag =
    {0x00024460,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTags =
    {0x00024461,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTagRecognizer =
    {0x00024462,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTagRecognizers =
    {0x00024463,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISmartTagOptions =
    {0x00024464,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotItemList =
    {0x00024468,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITab =
    {0x00024469,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListObjects =
    {0x00024470,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListObject =
    {0x00024471,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListColumns =
    {0x00024472,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListColumn =
    {0x00024473,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListRows =
    {0x00024474,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListRow =
    {0x00024475,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlNamespace =
    {0x00024476,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlNamespaces =
    {0x00024477,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlDataBinding =
    {0x00024478,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlSchema =
    {0x00024479,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlSchemas =
    {0x0002447a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlMap =
    {0x0002447b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXmlMaps =
    {0x0002447c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IListDataFormat =
    {0x0002447d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IXPath =
    {0x0002447e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotLineCells =
    {0x0002447f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotLine =
    {0x00024480,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotLines =
    {0x00024481,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotAxis =
    {0x00024482,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotFilter =
    {0x00024483,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IPivotFilters =
    {0x00024484,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWorkbookConnection =
    {0x00024485,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IConnections =
    {0x00024486,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWorksheetView =
    {0x00024487,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartView =
    {0x00024488,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IModuleView =
    {0x00024489,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDialogSheetView =
    {0x0002448a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISheetViews =
    {0x0002448c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOLEDBConnection =
    {0x0002448d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IODBCConnection =
    {0x0002448e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAction =
    {0x0002448f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IActions =
    {0x00024490,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IFormatColor =
    {0x00024491,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IConditionValue =
    {0x00024492,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IColorScale =
    {0x00024493,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDatabar =
    {0x00024496,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IIconSetCondition =
    {0x00024497,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IIcon =
    {0x0002449a,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IIconSet =
    {0x0002449b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IIconSets =
    {0x0002449c,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITop10 =
    {0x0002449d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAboveAverage =
    {0x0002449e,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IUniqueValues =
    {0x0002449f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRanges =
    {0x000244a0,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IServerViewableItems =
    {0x000244a4,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITableStyleElement =
    {0x000244a5,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITableStyleElements =
    {0x000244a6,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITableStyle =
    {0x000244a7,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ITableStyles =
    {0x000244a8,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISortField =
    {0x000244a9,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISortFields =
    {0x000244aa,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ISort =
    {0x000244ab,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IResearch =
    {0x000244ac,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IColorStop =
    {0x000244ad,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IColorStops =
    {0x000244ae,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ILinearGradient =
    {0x000244af,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRectangularGradient =
    {0x000244b0,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMultiThreadedCalculation =
    {0x000244b1,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartFormat =
    {0x000244b2,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_Chart =
    {0x00020821,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IWindow =
    {0x00020893,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__Chart =
    {0x000208d6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__Workbook =
    {0x000208da,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICharts =
    {0x0002086d,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IChartObject =
    {0x000208cf,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_Worksheet =
    {0x00020820,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRange =
    {0x00020846,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IVPageBreak =
    {0x00024402,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IHPageBreak =
    {0x00024401,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_excelGlobal =
    {0x00020812,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_Workbook =
    {0x00020819,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAppEvents =
    {0x00024413,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IRecentFile =
    {0x00024407,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Workbooks =
    {0x000208db,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__excelApplication =
    {0x000208d5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__excelGlobal =
    {0x000208d9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_OLEObject =
    {0x00020818,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IOLEObjects =
    {0x000208a3,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelDiagramNodes =
    {0x000c036e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IDiagram =
    {0x0002446f,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelDiagramNodeChildren =
    {0x000c036f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_excelDiagramNode =
    {0x000c0370,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IShape =
    {0x00024439,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IShapeRange =
    {0x0002443b,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};

} // namespace Excel

#pragma pack(pop)
