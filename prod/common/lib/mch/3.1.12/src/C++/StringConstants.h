// ***************************************************************
//  StringConstants.h         version: 1.0.1  ·  date: 2011-03-26
//  -------------------------------------------------------------
//  encrypted string constants
//  -------------------------------------------------------------
//  Copyright (C) 1999 - 2011 www.madshi.net, All Rights Reserved
// ***************************************************************

// 2011-03-26 1.0.1 (1) added CRtlNtStatusToDosError
//                  (2) added CRtlEnter/LeaveCriticalSection
//                  (3) added CWineGetVersion
// 2010-01-10 1.0.0 initial version

#ifndef _STRINGCONSTANTS_H
#define _STRINGCONSTANTS_H

// ntdll.dll
const char CNtQueryInformationToken[]      = /* NtQueryInformationToken        */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x01, 0x3A, 0x3E, 0x30, 0x3B, 0x55};
const char CNtSetSystemInformation[]       = /* NtSetSystemInformation         */ {0x1B, 0x21, 0x06, 0x30, 0x21, 0x06, 0x2C, 0x26, 0x21, 0x30, 0x38, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CLdrInitializeThunk[]           = /* LdrInitializeThunk             */ {0x19, 0x31, 0x27, 0x1C, 0x3B, 0x3C, 0x21, 0x3C, 0x34, 0x39, 0x3C, 0x2F, 0x30, 0x01, 0x3D, 0x20, 0x3B, 0x3E, 0x55};
const char CLdrLoadDll[]                   = /* LdrLoadDll                     */ {0x19, 0x31, 0x27, 0x19, 0x3A, 0x34, 0x31, 0x11, 0x39, 0x39, 0x55};
const char CLdrUnloadDll[]                 = /* LdrUnloadDll                   */ {0x19, 0x31, 0x27, 0x00, 0x3B, 0x39, 0x3A, 0x34, 0x31, 0x11, 0x39, 0x39, 0x55};
const char CLdrGetDllHandle[]              = /* LdrGetDllHandle                */ {0x19, 0x31, 0x27, 0x12, 0x30, 0x21, 0x11, 0x39, 0x39, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x55};
const char CLdrRegisterDllNotification[]   = /* LdrRegisterDllNotification     */ {0x19, 0x31, 0x27, 0x07, 0x30, 0x32, 0x3C, 0x26, 0x21, 0x30, 0x27, 0x11, 0x39, 0x39, 0x1B, 0x3A, 0x21, 0x3C, 0x33, 0x3C, 0x36, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CLdrUnregisterDllNotification[] = /* LdrUnregisterDllNotification   */ {0x19, 0x31, 0x27, 0x00, 0x3B, 0x27, 0x30, 0x32, 0x3C, 0x26, 0x21, 0x30, 0x27, 0x11, 0x39, 0x39, 0x1B, 0x3A, 0x21, 0x3C, 0x33, 0x3C, 0x36, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CLdrResolveDelayLoadedAPI[]     = /* LdrResolveDelayLoadedAPI       */ {0x19, 0x31, 0x27, 0x07, 0x30, 0x26, 0x3A, 0x39, 0x23, 0x30, 0x11, 0x30, 0x39, 0x34, 0x2C, 0x19, 0x3A, 0x34, 0x31, 0x30, 0x31, 0x14, 0x05, 0x1C, 0x55};
const char CNtLoadDriver[]                 = /* NtLoadDriver                   */ {0x1B, 0x21, 0x19, 0x3A, 0x34, 0x31, 0x11, 0x27, 0x3C, 0x23, 0x30, 0x27, 0x55};
const char CNtUnloadDriver[]               = /* NtUnloadDriver                 */ {0x1B, 0x21, 0x00, 0x3B, 0x39, 0x3A, 0x34, 0x31, 0x11, 0x27, 0x3C, 0x23, 0x30, 0x27, 0x55};
const char CNtClose[]                      = /* NtClose                        */ {0x1B, 0x21, 0x16, 0x39, 0x3A, 0x26, 0x30, 0x55};
const char CNtCreateProcess[]              = /* NtCreateProcess                */ {0x1B, 0x21, 0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x55};
const char CNtCreateProcessEx[]            = /* NtCreateProcessEx              */ {0x1B, 0x21, 0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x10, 0x2D, 0x55};
const char CNtTestAlert[]                  = /* NtTestAlert                    */ {0x1B, 0x21, 0x01, 0x30, 0x26, 0x21, 0x14, 0x39, 0x30, 0x27, 0x21, 0x55};
const char CRtlCreateUserProcess[]         = /* RtlCreateUserProcess           */ {0x07, 0x21, 0x39, 0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x00, 0x26, 0x30, 0x27, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x55};
const char CNtAllocateVirtualMemory[]      = /* NtAllocateVirtualMemory        */ {0x1B, 0x21, 0x14, 0x39, 0x39, 0x3A, 0x36, 0x34, 0x21, 0x30, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CNtFreeVirtualMemory[]          = /* NtFreeVirtualMemory            */ {0x1B, 0x21, 0x13, 0x27, 0x30, 0x30, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CNtQueryVirtualMemory[]         = /* NtQueryVirtualMemory           */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CNtProtectVirtualMemory[]       = /* NtProtectVirtualMemory         */ {0x1B, 0x21, 0x05, 0x27, 0x3A, 0x21, 0x30, 0x36, 0x21, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CNtReadVirtualMemory[]          = /* NtReadVirtualMemory            */ {0x1B, 0x21, 0x07, 0x30, 0x34, 0x31, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CNtWriteVirtualMemory[]         = /* NtWriteVirtualMemory           */ {0x1B, 0x21, 0x02, 0x27, 0x3C, 0x21, 0x30, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CNtDelayExecution[]             = /* NtDelayExecution               */ {0x1B, 0x21, 0x11, 0x30, 0x39, 0x34, 0x2C, 0x10, 0x2D, 0x30, 0x36, 0x20, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CNtOpenProcessToken[]           = /* NtOpenProcessToken             */ {0x1B, 0x21, 0x1A, 0x25, 0x30, 0x3B, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x01, 0x3A, 0x3E, 0x30, 0x3B, 0x55};
const char CNtQueryInformationProcess[]    = /* NtQueryInformationProcess      */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x55};
const char CNtQueryInformationThread[]     = /* NtQueryInformationThread       */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CNtOpenSection[]                = /* NtOpenSection                  */ {0x1B, 0x21, 0x1A, 0x25, 0x30, 0x3B, 0x06, 0x30, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CNtMapViewOfSection[]           = /* NtMapViewOfSection             */ {0x1B, 0x21, 0x18, 0x34, 0x25, 0x03, 0x3C, 0x30, 0x22, 0x1A, 0x33, 0x06, 0x30, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CNtUnmapViewOfSection[]         = /* NtUnmapViewOfSection           */ {0x1B, 0x21, 0x00, 0x3B, 0x38, 0x34, 0x25, 0x03, 0x3C, 0x30, 0x22, 0x1A, 0x33, 0x06, 0x30, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CRtlValidSid[]                  = /* RtlValidSid                    */ {0x07, 0x21, 0x39, 0x03, 0x34, 0x39, 0x3C, 0x31, 0x06, 0x3C, 0x31, 0x55};
const char CRtlEqualSid[]                  = /* RtlEqualSid                    */ {0x07, 0x21, 0x39, 0x10, 0x24, 0x20, 0x34, 0x39, 0x06, 0x3C, 0x31, 0x55};
const char CRtlCreateUserThread[]          = /* RtlCreateUserThread            */ {0x07, 0x21, 0x39, 0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x00, 0x26, 0x30, 0x27, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CKiUserExceptionDispatcher[]    = /* KiUserExceptionDispatcher      */ {0x1E, 0x3C, 0x00, 0x26, 0x30, 0x27, 0x10, 0x2D, 0x36, 0x30, 0x25, 0x21, 0x3C, 0x3A, 0x3B, 0x11, 0x3C, 0x26, 0x25, 0x34, 0x21, 0x36, 0x3D, 0x30, 0x27, 0x55};
const char CNtOpenThread[]                 = /* NtOpenThread                   */ {0x1B, 0x21, 0x1A, 0x25, 0x30, 0x3B, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CNtCreatePort[]                 = /* NtCreatePort                   */ {0x1B, 0x21, 0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x05, 0x3A, 0x27, 0x21, 0x55};
const char CNtConnectPort[]                = /* NtConnectPort                  */ {0x1B, 0x21, 0x16, 0x3A, 0x3B, 0x3B, 0x30, 0x36, 0x21, 0x05, 0x3A, 0x27, 0x21, 0x55};
const char CNtReplyWaitReceivePort[]       = /* NtReplyWaitReceivePort         */ {0x1B, 0x21, 0x07, 0x30, 0x25, 0x39, 0x2C, 0x02, 0x34, 0x3C, 0x21, 0x07, 0x30, 0x36, 0x30, 0x3C, 0x23, 0x30, 0x05, 0x3A, 0x27, 0x21, 0x55};
const char CNtAcceptConnectPort[]          = /* NtAcceptConnectPort            */ {0x1B, 0x21, 0x14, 0x36, 0x36, 0x30, 0x25, 0x21, 0x16, 0x3A, 0x3B, 0x3B, 0x30, 0x36, 0x21, 0x05, 0x3A, 0x27, 0x21, 0x55};
const char CNtCompleteConnectPort[]        = /* NtCompleteConnectPort          */ {0x1B, 0x21, 0x16, 0x3A, 0x38, 0x25, 0x39, 0x30, 0x21, 0x30, 0x16, 0x3A, 0x3B, 0x3B, 0x30, 0x36, 0x21, 0x05, 0x3A, 0x27, 0x21, 0x55};
const char CNtQuerySystemInformation[]     = /* NtQuerySystemInformation       */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x06, 0x2C, 0x26, 0x21, 0x30, 0x38, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CCsrClientCallServer[]          = /* CsrClientCallServer            */ {0x16, 0x26, 0x27, 0x16, 0x39, 0x3C, 0x30, 0x3B, 0x21, 0x16, 0x34, 0x39, 0x39, 0x06, 0x30, 0x27, 0x23, 0x30, 0x27, 0x55};
const char CRtlExitUserThread[]            = /* RtlExitUserThread              */ {0x07, 0x21, 0x39, 0x10, 0x2D, 0x3C, 0x21, 0x00, 0x26, 0x30, 0x27, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CNtWow64QueryInfoProcess64[]    = /* NtWow64QueryInformationProcess64 */ {0x1B, 0x21, 0x02, 0x3A, 0x22, 0x63, 0x61, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x63, 0x61, 0x55};
const char CNtWow64ReadVirtualMemory64[]   = /* NtWow64ReadVirtualMemory64     */ {0x1B, 0x21, 0x02, 0x3A, 0x22, 0x63, 0x61, 0x07, 0x30, 0x34, 0x31, 0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x63, 0x61, 0x55};
const char CRtlNtStatusToDosError[]        = /* RtlNtStatusToDosError          */ {0x07, 0x21, 0x39, 0x1B, 0x21, 0x06, 0x21, 0x34, 0x21, 0x20, 0x26, 0x01, 0x3A, 0x11, 0x3A, 0x26, 0x10, 0x27, 0x27, 0x3A, 0x27, 0x55};
const char CRtlEnterCriticalSection[]      = /* RtlEnterCriticalSection        */ {0x07, 0x21, 0x39, 0x10, 0x3B, 0x21, 0x30, 0x27, 0x16, 0x27, 0x3C, 0x21, 0x3C, 0x36, 0x34, 0x39, 0x06, 0x30, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CRtlLeaveCriticalSection[]      = /* RtlLeaveCriticalSection        */ {0x07, 0x21, 0x39, 0x19, 0x30, 0x34, 0x23, 0x30, 0x16, 0x27, 0x3C, 0x21, 0x3C, 0x36, 0x34, 0x39, 0x06, 0x30, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CWineGetVersion[]               = /* wine_get_version               */ {0x22, 0x3C, 0x3B, 0x30, 0x0A, 0x32, 0x30, 0x21, 0x0A, 0x23, 0x30, 0x27, 0x26, 0x3C, 0x3A, 0x3B, 0x55};
const char CNtQueryObject[]                = /* NtQueryObject                  */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x1A, 0x37, 0x3F, 0x30, 0x36, 0x21, 0x55};

// kernel32.dll
const char CGetModuleHandleA[]             = /* GetModuleHandleA               */ {0x12, 0x30, 0x21, 0x18, 0x3A, 0x31, 0x20, 0x39, 0x30, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x14, 0x55};
const char CLoadLibraryA[]                 = /* LoadLibraryA                   */ {0x19, 0x3A, 0x34, 0x31, 0x19, 0x3C, 0x37, 0x27, 0x34, 0x27, 0x2C, 0x14, 0x55};
const char CLoadLibraryExA[]               = /* LoadLibraryExA                 */ {0x19, 0x3A, 0x34, 0x31, 0x19, 0x3C, 0x37, 0x27, 0x34, 0x27, 0x2C, 0x10, 0x2D, 0x14, 0x55};
const char CLoadLibraryExW[]               = /* LoadLibraryExW                 */ {0x19, 0x3A, 0x34, 0x31, 0x19, 0x3C, 0x37, 0x27, 0x34, 0x27, 0x2C, 0x10, 0x2D, 0x02, 0x55};
const char CFreeLibrary[]                  = /* FreeLibrary                    */ {0x13, 0x27, 0x30, 0x30, 0x19, 0x3C, 0x37, 0x27, 0x34, 0x27, 0x2C, 0x55};
const char CGetLastError[]                 = /* GetLastError                   */ {0x12, 0x30, 0x21, 0x19, 0x34, 0x26, 0x21, 0x10, 0x27, 0x27, 0x3A, 0x27, 0x55};
const char CVirtualFree[]                  = /* VirtualFree                    */ {0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x13, 0x27, 0x30, 0x30, 0x55};
const char CCreateMutexA[]                 = /* CreateMutexA                   */ {0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x18, 0x20, 0x21, 0x30, 0x2D, 0x14, 0x55};
const char CGetModuleFileNameA[]           = /* GetModuleFileNameA             */ {0x12, 0x30, 0x21, 0x18, 0x3A, 0x31, 0x20, 0x39, 0x30, 0x13, 0x3C, 0x39, 0x30, 0x1B, 0x34, 0x38, 0x30, 0x14, 0x55};
const char COpenFileMappingA[]             = /* OpenFileMappingA               */ {0x1A, 0x25, 0x30, 0x3B, 0x13, 0x3C, 0x39, 0x30, 0x18, 0x34, 0x25, 0x25, 0x3C, 0x3B, 0x32, 0x14, 0x55};
const char COpenFileMappingW[]             = /* OpenFileMappingW               */ {0x1A, 0x25, 0x30, 0x3B, 0x13, 0x3C, 0x39, 0x30, 0x18, 0x34, 0x25, 0x25, 0x3C, 0x3B, 0x32, 0x02, 0x55};
const char CMapViewOfFile[]                = /* MapViewOfFile                  */ {0x18, 0x34, 0x25, 0x03, 0x3C, 0x30, 0x22, 0x1A, 0x33, 0x13, 0x3C, 0x39, 0x30, 0x55};
const char CCompareStringA[]               = /* CompareStringA                 */ {0x16, 0x3A, 0x38, 0x25, 0x34, 0x27, 0x30, 0x06, 0x21, 0x27, 0x3C, 0x3B, 0x32, 0x14, 0x55};
const char CUnmapViewOfFile[]              = /* UnmapViewOfFile                */ {0x00, 0x3B, 0x38, 0x34, 0x25, 0x03, 0x3C, 0x30, 0x22, 0x1A, 0x33, 0x13, 0x3C, 0x39, 0x30, 0x55};
const char CCreateProcessInternalW[]       = /* CreateProcessInternalW         */ {0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x1C, 0x3B, 0x21, 0x30, 0x27, 0x3B, 0x34, 0x39, 0x02, 0x55};
const char CCreateProcessW[]               = /* CreateProcessW                 */ {0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x02, 0x55};
const char CLoadLibraryW[]                 = /* LoadLibraryW                   */ {0x19, 0x3A, 0x34, 0x31, 0x19, 0x3C, 0x37, 0x27, 0x34, 0x27, 0x2C, 0x02, 0x55};
const char CGetModuleHandleW[]             = /* GetModuleHandleW               */ {0x12, 0x30, 0x21, 0x18, 0x3A, 0x31, 0x20, 0x39, 0x30, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x02, 0x55};
const char CGetInputSessionId[]            = /* WTSGetActiveConsoleSessionId   */ {0x02, 0x01, 0x06, 0x12, 0x30, 0x21, 0x14, 0x36, 0x21, 0x3C, 0x23, 0x30, 0x16, 0x3A, 0x3B, 0x26, 0x3A, 0x39, 0x30, 0x06, 0x30, 0x26, 0x26, 0x3C, 0x3A, 0x3B, 0x1C, 0x31, 0x55};
const char CFlushInstructionCache[]        = /* FlushInstructionCache          */ {0x13, 0x39, 0x20, 0x26, 0x3D, 0x1C, 0x3B, 0x26, 0x21, 0x27, 0x20, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x16, 0x34, 0x36, 0x3D, 0x30, 0x55};
const char CAddVecExceptHandler[]          = /* AddVectoredExceptionHandler    */ {0x14, 0x31, 0x31, 0x03, 0x30, 0x36, 0x21, 0x3A, 0x27, 0x30, 0x31, 0x10, 0x2D, 0x36, 0x30, 0x25, 0x21, 0x3C, 0x3A, 0x3B, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x27, 0x55};
const char CRemoveVecExceptHandler[]       = /* RemoveVectoredExceptionHandler */ {0x07, 0x30, 0x38, 0x3A, 0x23, 0x30, 0x03, 0x30, 0x36, 0x21, 0x3A, 0x27, 0x30, 0x31, 0x10, 0x2D, 0x36, 0x30, 0x25, 0x21, 0x3C, 0x3A, 0x3B, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x27, 0x55};
const char CReadProcessMemory[]            = /* ReadProcessMemory              */ {0x07, 0x30, 0x34, 0x31, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CWriteProcessMemory[]           = /* WriteProcessMemory             */ {0x02, 0x27, 0x3C, 0x21, 0x30, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x18, 0x30, 0x38, 0x3A, 0x27, 0x2C, 0x55};
const char CSetErrorMode[]                 = /* SetErrorMode                   */ {0x06, 0x30, 0x21, 0x10, 0x27, 0x27, 0x3A, 0x27, 0x18, 0x3A, 0x31, 0x30, 0x55};
const char CGetVersion[]                   = /* GetVersion                     */ {0x12, 0x30, 0x21, 0x03, 0x30, 0x27, 0x26, 0x3C, 0x3A, 0x3B, 0x55};
const char CCloseHandle[]                  = /* CloseHandle                    */ {0x16, 0x39, 0x3A, 0x26, 0x30, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x55};
const char CProcessIdToSessionId[]         = /* ProcessIdToSessionId           */ {0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x1C, 0x31, 0x01, 0x3A, 0x06, 0x30, 0x26, 0x26, 0x3C, 0x3A, 0x3B, 0x1C, 0x31, 0x55};
const char CGetCurrentProcess[]            = /* GetCurrentProcess              */ {0x12, 0x30, 0x21, 0x16, 0x20, 0x27, 0x27, 0x30, 0x3B, 0x21, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x55};
const char CGetCurrentProcessId[]          = /* GetCurrentProcessId            */ {0x12, 0x30, 0x21, 0x16, 0x20, 0x27, 0x27, 0x30, 0x3B, 0x21, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x1C, 0x31, 0x55};
const char CVirtualProtect[]               = /* VirtualProtect                 */ {0x03, 0x3C, 0x27, 0x21, 0x20, 0x34, 0x39, 0x05, 0x27, 0x3A, 0x21, 0x30, 0x36, 0x21, 0x55};
const char CProcess32Next[]                = /* Process32Next                  */ {0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x66, 0x67, 0x1B, 0x30, 0x2D, 0x21, 0x55};
const char CCreateRemoteThread[]           = /* CreateRemoteThread             */ {0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x07, 0x30, 0x38, 0x3A, 0x21, 0x30, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CCreateRemoteThreadEx[]         = /* CreateRemoteThreadEx           */ {0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x07, 0x30, 0x38, 0x3A, 0x21, 0x30, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x10, 0x2D, 0x55};
const char CExitThread[]                   = /* ExitThread                     */ {0x10, 0x2D, 0x3C, 0x21, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CIsWow64Process[]               = /* IsWow64Process                 */ {0x1C, 0x26, 0x02, 0x3A, 0x22, 0x63, 0x61, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x55};
const char CGetNativeSystemInfo[]          = /* GetNativeSystemInfo            */ {0x12, 0x30, 0x21, 0x1B, 0x34, 0x21, 0x3C, 0x23, 0x30, 0x06, 0x2C, 0x26, 0x21, 0x30, 0x38, 0x1C, 0x3B, 0x33, 0x3A, 0x55};
const char CBaseThreadStart[]              = /* BaseThreadStart                */ {0x17, 0x34, 0x26, 0x30, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x06, 0x21, 0x34, 0x27, 0x21, 0x55};
const char CQueryFullProcessImageName[]    = /* QueryFullProcessImageName      */ {0x04, 0x20, 0x30, 0x27, 0x2C, 0x13, 0x20, 0x39, 0x39, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x1C, 0x38, 0x34, 0x32, 0x30, 0x1B, 0x34, 0x38, 0x30, 0x02, 0x55};
const char CWow64GetThreadContext[]        = /* Wow64GetThreadContext          */ {0x02, 0x3A, 0x22, 0x63, 0x61, 0x12, 0x30, 0x21, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x16, 0x3A, 0x3B, 0x21, 0x30, 0x2D, 0x21, 0x55};
const char CWow64GetThreadSelectorEntry[]    = /* Wow64GetThreadSelectorEntry  */ {0x02, 0x3A, 0x22, 0x63, 0x61, 0x12, 0x30, 0x21, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x06, 0x30, 0x39, 0x30, 0x36, 0x21, 0x3A, 0x27, 0x10, 0x3B, 0x21, 0x27, 0x2C, 0x55};
const char CGetSystemWow64DirectoryW[]     = /* GetSystemWow64DirectoryW       */ {0x12, 0x30, 0x21, 0x06, 0x2C, 0x26, 0x21, 0x30, 0x38, 0x02, 0x3A, 0x22, 0x63, 0x61, 0x11, 0x3C, 0x27, 0x30, 0x36, 0x21, 0x3A, 0x27, 0x2C, 0x02, 0x55};
const char CQueueUserAPC[]                 = /* QueueUserAPC                   */ {0x04, 0x20, 0x30, 0x20, 0x30, 0x00, 0x26, 0x30, 0x27, 0x14, 0x05, 0x16, 0x55};
const char CGetThreadId[]                  = /* GetThreadId                    */ {0x12, 0x30, 0x21, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x1C, 0x31, 0x55};
const char CGetProcessId[]                 = /* GetProcessId                   */ {0x12, 0x30, 0x21, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x1C, 0x31, 0x55};
const char CGetProcessIdOfThread[]         = /* GetProcessIdOfThread           */ {0x12, 0x30, 0x21, 0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x1C, 0x31, 0x1A, 0x33, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};

// advapi32.dll
const char CAdvApi32[]                     = /* advapi32.dll                   */ {0x34, 0x31, 0x23, 0x34, 0x25, 0x3C, 0x66, 0x67, 0x7B, 0x31, 0x39, 0x39, 0x55};
const char CGetSecurityInfo[]              = /* GetSecurityInfo                */ {0x12, 0x30, 0x21, 0x06, 0x30, 0x36, 0x20, 0x27, 0x3C, 0x21, 0x2C, 0x1C, 0x3B, 0x33, 0x3A, 0x55};
const char CSetSecurityInfo[]              = /* SetSecurityInfo                */ {0x06, 0x30, 0x21, 0x06, 0x30, 0x36, 0x20, 0x27, 0x3C, 0x21, 0x2C, 0x1C, 0x3B, 0x33, 0x3A, 0x55};
const char CSetEntriesInAclA[]             = /* SetEntriesInAclA               */ {0x06, 0x30, 0x21, 0x10, 0x3B, 0x21, 0x27, 0x3C, 0x30, 0x26, 0x1C, 0x3B, 0x14, 0x36, 0x39, 0x14, 0x55};
const char CCloseServiceHandle[]           = /* CloseServiceHandle             */ {0x16, 0x39, 0x3A, 0x26, 0x30, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x1D, 0x34, 0x3B, 0x31, 0x39, 0x30, 0x55};
const char CControlService[]               = /* ControlService                 */ {0x16, 0x3A, 0x3B, 0x21, 0x27, 0x3A, 0x39, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x55};
const char CDeleteService[]                = /* DeleteService                  */ {0x11, 0x30, 0x39, 0x30, 0x21, 0x30, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x55};
const char COpenSCManagerW[]               = /* OpenSCManagerW                 */ {0x1A, 0x25, 0x30, 0x3B, 0x06, 0x16, 0x18, 0x34, 0x3B, 0x34, 0x32, 0x30, 0x27, 0x02, 0x55};
const char COpenServiceW[]                 = /* OpenServiceW                   */ {0x1A, 0x25, 0x30, 0x3B, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x02, 0x55};
const char CStartServiceW[]                = /* StartServiceW                  */ {0x06, 0x21, 0x34, 0x27, 0x21, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x02, 0x55};
const char CCreateServiceW[]               = /* CreateServiceW                 */ {0x16, 0x27, 0x30, 0x34, 0x21, 0x30, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x02, 0x55};
const char CChangeServiceConfigW[]         = /* ChangeServiceConfigW           */ {0x16, 0x3D, 0x34, 0x3B, 0x32, 0x30, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x16, 0x3A, 0x3B, 0x33, 0x3C, 0x32, 0x02, 0x55};
const char CQueryServiceConfigW[]          = /* QueryServiceConfigW            */ {0x04, 0x20, 0x30, 0x27, 0x2C, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x16, 0x3A, 0x3B, 0x33, 0x3C, 0x32, 0x02, 0x55};

// unicows.dll
const char CUnicows[]                      = /* unicows.dll                    */ {0x20, 0x3B, 0x3C, 0x36, 0x3A, 0x22, 0x26, 0x7B, 0x31, 0x39, 0x39, 0x55};

// dll names
const char CKernel32[]                     = /* kernel32.dll                   */ {0x3E, 0x30, 0x27, 0x3B, 0x30, 0x39, 0x66, 0x67, 0x7B, 0x31, 0x39, 0x39, 0x55};
const char CKernelbase[]                   = /* kernelbase.dll                 */ {0x3E, 0x30, 0x27, 0x3B, 0x30, 0x39, 0x37, 0x34, 0x26, 0x30, 0x7B, 0x31, 0x39, 0x39, 0x55};
const char CGdi32[]                        = /* gdi32.dll                      */ {0x32, 0x31, 0x3C, 0x66, 0x67, 0x7B, 0x31, 0x39, 0x39, 0x55};
const char CUser32[]                       = /* user32.dll                     */ {0x20, 0x26, 0x30, 0x27, 0x66, 0x67, 0x7B, 0x31, 0x39, 0x39, 0x55};
const char CTapi32[]                       = /* tapi32.dll                     */ {0x21, 0x34, 0x25, 0x3C, 0x66, 0x67, 0x7B, 0x31, 0x39, 0x39, 0x55};
const char CWs2_32[]                       = /* ws2_32.dll                     */ {0x22, 0x26, 0x67, 0x0A, 0x66, 0x67, 0x7B, 0x31, 0x39, 0x39, 0x55};

// other strings
const char CSeBackupPrivilege[]            = /* SeBackupPrivilege              */ {0x06, 0x30, 0x17, 0x34, 0x36, 0x3E, 0x20, 0x25, 0x05, 0x27, 0x3C, 0x23, 0x3C, 0x39, 0x30, 0x32, 0x30, 0x55};
const char CSeRestorePrivilege[]           = /* SeRestorePrivilege             */ {0x06, 0x30, 0x07, 0x30, 0x26, 0x21, 0x3A, 0x27, 0x30, 0x05, 0x27, 0x3C, 0x23, 0x3C, 0x39, 0x30, 0x32, 0x30, 0x55};
const char CGlobal[]                       = /* Global\                        */ {0x12, 0x39, 0x3A, 0x37, 0x34, 0x39, 0x09, 0x55};
const char CSession[]                      = /* Session\                       */ {0x06, 0x30, 0x26, 0x26, 0x3C, 0x3A, 0x3B, 0x09, 0x55};
const char CBaseNamedObjects[]             = /* \BaseNamedObjects\             */ {0x09, 0x17, 0x34, 0x26, 0x30, 0x1B, 0x34, 0x38, 0x30, 0x31, 0x1A, 0x37, 0x3F, 0x30, 0x36, 0x21, 0x26, 0x09, 0x55};
const char CMutex[]                        = /* Mutex                          */ {0x18, 0x20, 0x21, 0x30, 0x2D, 0x55};
const char CEvent[]                        = /* Event                          */ {0x10, 0x23, 0x30, 0x3B, 0x21, 0x55};
const char CMap[]                          = /* Map                            */ {0x18, 0x34, 0x25, 0x55};
const char CShared[]                       = /* Shared                         */ {0x06, 0x3D, 0x34, 0x27, 0x30, 0x31, 0x55};
const char CProcess[]                      = /* Process                        */ {0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x55};
const char CApi[]                          = /* API                            */ {0x14, 0x05, 0x1C, 0x55};
const char CNamedBuffer[]                  = /* NamedBuffer                    */ {0x1B, 0x34, 0x38, 0x30, 0x31, 0x17, 0x20, 0x33, 0x33, 0x30, 0x27, 0x55};
const char CMixPrefix[]                    = /* mix                            */ {0x38, 0x3C, 0x2D, 0x55};
const char CMAHPrefix[]                    = /* mAH                            */ {0x38, 0x14, 0x1D, 0x55};
const char CMAHWatcherThread[]             = /* mAHWatcherThread               */ {0x38, 0x14, 0x1D, 0x02, 0x34, 0x21, 0x36, 0x3D, 0x30, 0x27, 0x01, 0x3D, 0x27, 0x30, 0x34, 0x31, 0x55};
const char CMAHStubs[]                     = /* mAHStubs                       */ {0x38, 0x14, 0x1D, 0x06, 0x21, 0x20, 0x37, 0x26, 0x55};
const char CMchPIT9x[]                     = /* mchPIT9x                       */ {0x38, 0x36, 0x3D, 0x05, 0x1C, 0x01, 0x6C, 0x2D, 0x55};
const char CMchMixCache[]                  = /* mchMixCache                    */ {0x38, 0x36, 0x3D, 0x18, 0x3C, 0x2D, 0x16, 0x34, 0x36, 0x3D, 0x30, 0x55};
const char CMchPitRT[]                     = /* mchPitRT                       */ {0x38, 0x36, 0x3D, 0x05, 0x3C, 0x21, 0x07, 0x01, 0x55};
const char CMchLLEW2[]                     = /* mchLLEW2                       */ {0x38, 0x36, 0x3D, 0x19, 0x19, 0x10, 0x02, 0x67, 0x55};
const char CMchI9xMA[]                     = /* mchI9xMA                       */ {0x38, 0x36, 0x3D, 0x1C, 0x6C, 0x2D, 0x18, 0x14, 0x55};
const char CMchIInjT[]                     = /* mc4IInjT                       */ {0x38, 0x36, 0x61, 0x1C, 0x1C, 0x3B, 0x3F, 0x01, 0x55};
#ifdef _WIN64
  const char CMchInjDrvMap[]                 = /* mchInjDrv64Map                 */ {0x38, 0x36, 0x3D, 0x1C, 0x3B, 0x3F, 0x11, 0x27, 0x23, 0x63, 0x61, 0x18, 0x34, 0x25, 0x55};
  const char CDllInjectName[]                = /* mc3SWDIJ                       */ {0x38, 0x36, 0x66, 0x06, 0x02, 0x11, 0x1C, 0x1F, 0x55};
#else
  const char CMchInjDrvMap[]                 = /* mchInjDrvMap                   */ {0x38, 0x36, 0x3D, 0x1C, 0x3B, 0x3F, 0x11, 0x27, 0x23, 0x18, 0x34, 0x25, 0x55};
  const char CDllInjectName[]                = /* mc2SWDIJ                       */ {0x38, 0x36, 0x67, 0x06, 0x02, 0x11, 0x1C, 0x1F, 0x55};
#endif
const char CAutoUnhookMap[]                = /* AutoUnhookMap                  */ {0x14, 0x20, 0x21, 0x3A, 0x00, 0x3B, 0x3D, 0x3A, 0x3A, 0x3E, 0x18, 0x34, 0x25, 0x55};
const char CInjDrvName[]                   = /* mchInjDrv                      */ {0x38, 0x36, 0x3D, 0x1C, 0x3B, 0x3F, 0x11, 0x27, 0x23, 0x55};
const char CInjDrvDescr[]                  = /* madCodeHook DLL injection driver */ {0x38, 0x34, 0x31, 0x16, 0x3A, 0x31, 0x30, 0x1D, 0x3A, 0x3A, 0x3E, 0x75, 0x11, 0x19, 0x19, 0x75, 0x3C, 0x3B, 0x3F, 0x30, 0x36, 0x21, 0x3C, 0x3A, 0x3B, 0x75, 0x31, 0x27, 0x3C, 0x23, 0x30, 0x27, 0x55};
const char CDrivers[]                      = /* Drivers                        */ {0x11, 0x27, 0x3C, 0x23, 0x30, 0x27, 0x26, 0x55};
const char CSys[]                          = /* sys                            */ {0x26, 0x2C, 0x26, 0x55};
const char CVersion[]                      = /* Version                        */ {0x03, 0x30, 0x27, 0x26, 0x3C, 0x3A, 0x3B, 0x55};
const char CChecksum[]                     = /* Checksum                       */ {0x16, 0x3D, 0x30, 0x36, 0x3E, 0x26, 0x20, 0x38, 0x55};
const char CInstallCount[]                 = /* InstallCount                   */ {0x1C, 0x3B, 0x26, 0x21, 0x34, 0x39, 0x39, 0x16, 0x3A, 0x20, 0x3B, 0x21, 0x55};
const char CType[]                         = /* Type                           */ {0x01, 0x2C, 0x25, 0x30, 0x55};
const char CErrorControl[]                 = /* ErrorControl                   */ {0x10, 0x27, 0x27, 0x3A, 0x27, 0x16, 0x3A, 0x3B, 0x21, 0x27, 0x3A, 0x39, 0x55};
const char CStart[]                        = /* Start                          */ {0x06, 0x21, 0x34, 0x27, 0x21, 0x55};
const char CImagePath[]                    = /* ImagePath                      */ {0x1C, 0x38, 0x34, 0x32, 0x30, 0x05, 0x34, 0x21, 0x3D, 0x55};
const char CDeleteFlag[]                   = /* DeleteFlag                     */ {0x11, 0x30, 0x39, 0x30, 0x21, 0x30, 0x13, 0x39, 0x34, 0x32, 0x55};
const char CSystemCcsServices[]            = /* SYSTEM\CurrentControlSet\Services */ {0x06, 0x0C, 0x06, 0x01, 0x10, 0x18, 0x09, 0x16, 0x20, 0x27, 0x27, 0x30, 0x3B, 0x21, 0x16, 0x3A, 0x3B, 0x21, 0x27, 0x3A, 0x39, 0x06, 0x30, 0x21, 0x09, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x26, 0x55};
const char CRegistryMachine[]              = /* registry\machine               */ {0x27, 0x30, 0x32, 0x3C, 0x26, 0x21, 0x27, 0x2C, 0x09, 0x38, 0x34, 0x36, 0x3D, 0x3C, 0x3B, 0x30, 0x55};
const char CIpc[]                          = /* Ipc2                           */ {0x1C, 0x25, 0x36, 0x67, 0x55};
const char CAnswerBuf[]                    = /* AnswerBuf2                     */ {0x14, 0x3B, 0x26, 0x22, 0x30, 0x27, 0x17, 0x20, 0x33, 0x67, 0x55};
const char CCounter[]                      = /* Cnt                            */ {0x16, 0x3B, 0x21, 0x55};
const char CRpcControlIpc[]                = /* \RPC Control\mchIpc            */ {0x09, 0x07, 0x05, 0x16, 0x75, 0x16, 0x3A, 0x3B, 0x21, 0x27, 0x3A, 0x39, 0x09, 0x38, 0x36, 0x3D, 0x1C, 0x25, 0x36, 0x55};
const char CEnumServicesStatusA[]          = /* EnumServicesStatusA            */ {0x10, 0x3B, 0x20, 0x38, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x26, 0x06, 0x21, 0x34, 0x21, 0x20, 0x26, 0x14, 0x55};
const char CEnumServicesStatusW[]          = /* EnumServicesStatusW            */ {0x10, 0x3B, 0x20, 0x38, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x26, 0x06, 0x21, 0x34, 0x21, 0x20, 0x26, 0x02, 0x55};
const char CNtQuerySystemInfo2[]           = /* NtQuerySystemInformation       */ {0x1B, 0x21, 0x04, 0x20, 0x30, 0x27, 0x2C, 0x06, 0x2C, 0x26, 0x21, 0x30, 0x38, 0x1C, 0x3B, 0x33, 0x3A, 0x27, 0x38, 0x34, 0x21, 0x3C, 0x3A, 0x3B, 0x55};
const char CProcess32Next2[]               = /* Process32Next                  */ {0x05, 0x27, 0x3A, 0x36, 0x30, 0x26, 0x26, 0x66, 0x67, 0x1B, 0x30, 0x2D, 0x21, 0x55};
const char CEnumServicesStatusA2[]         = /* EnumServicesStatusA            */ {0x10, 0x3B, 0x20, 0x38, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x26, 0x06, 0x21, 0x34, 0x21, 0x20, 0x26, 0x14, 0x55};
const char CEnumServicesStatusW2[]         = /* EnumServicesStatusW            */ {0x10, 0x3B, 0x20, 0x38, 0x06, 0x30, 0x27, 0x23, 0x3C, 0x36, 0x30, 0x26, 0x06, 0x21, 0x34, 0x21, 0x20, 0x26, 0x02, 0x55};
const char CSmss[]                         = /* smss.exe                       */ {0x26, 0x38, 0x26, 0x26, 0x7B, 0x30, 0x2D, 0x30, 0x55};
const char CSLSvc[]                        = /* slsvc.exe                      */ {0x26, 0x39, 0x26, 0x23, 0x36, 0x7B, 0x30, 0x2D, 0x30, 0x55};

#endif