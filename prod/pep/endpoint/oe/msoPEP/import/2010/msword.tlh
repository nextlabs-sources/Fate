// Created by Microsoft (R) C/C++ Compiler Version 15.00.21022.08 (e134bcff).
//
// c:\users\abraham.lincoln\documents\visual studio 2008\projects\mytest\mytest\debug\msword.tlh
//
// C++ source equivalent of Win32 type library C:\Program Files (x86)\Microsoft Office\OFFICE14\MSWORD.OLB
// compiler-generated file created 08/11/11 at 14:17:25 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace Word {

//
// Forward references and typedefs
//

struct __declspec(uuid("00020905-0000-0000-c000-000000000046"))
/* LIBID */ __Word;
enum WdMailSystem;
enum WdTemplateType;
enum WdContinue;
enum WdIMEMode;
enum WdBaselineAlignment;
enum WdIndexFilter;
enum WdIndexSortBy;
enum WdJustificationMode;
enum WdFarEastLineBreakLevel;
enum WdMultipleWordConversionsMode;
enum WdColorIndex;
enum WdTextureIndex;
enum WdUnderline;
enum WdEmphasisMark;
enum WdInternationalIndex;
enum WdAutoMacros;
enum WdCaptionPosition;
enum WdCountry;
enum WdHeadingSeparator;
enum WdSeparatorType;
enum WdPageNumberAlignment;
enum WdBorderType;
enum WdBorderTypeHID;
enum WdFramePosition;
enum WdAnimation;
enum WdCharacterCase;
enum WdCharacterCaseHID;
enum WdSummaryMode;
enum WdSummaryLength;
enum WdStyleType;
enum WdUnits;
enum WdGoToItem;
enum WdGoToDirection;
enum WdCollapseDirection;
enum WdRowHeightRule;
enum WdFrameSizeRule;
enum WdInsertCells;
enum WdDeleteCells;
enum WdListApplyTo;
enum WdAlertLevel;
enum WdCursorType;
enum WdEnableCancelKey;
enum WdRulerStyle;
enum WdParagraphAlignment;
enum WdParagraphAlignmentHID;
enum WdListLevelAlignment;
enum WdRowAlignment;
enum WdTabAlignment;
enum WdVerticalAlignment;
enum WdCellVerticalAlignment;
enum WdTrailingCharacter;
enum WdListGalleryType;
enum WdListNumberStyle;
enum WdListNumberStyleHID;
enum WdNoteNumberStyle;
enum WdNoteNumberStyleHID;
enum WdCaptionNumberStyle;
enum WdCaptionNumberStyleHID;
enum WdPageNumberStyle;
enum WdPageNumberStyleHID;
enum WdStatistic;
enum WdStatisticHID;
enum WdBuiltInProperty;
enum WdLineSpacing;
enum WdNumberType;
enum WdListType;
enum WdStoryType;
enum WdSaveFormat;
enum WdOpenFormat;
enum WdHeaderFooterIndex;
enum WdTocFormat;
enum WdTofFormat;
enum WdToaFormat;
enum WdLineStyle;
enum WdLineWidth;
enum WdBreakType;
enum WdTabLeader;
enum WdTabLeaderHID;
enum WdMeasurementUnits;
enum WdMeasurementUnitsHID;
enum WdDropPosition;
enum WdNumberingRule;
enum WdFootnoteLocation;
enum WdEndnoteLocation;
enum WdSortSeparator;
enum WdTableFieldSeparator;
enum WdSortFieldType;
enum WdSortFieldTypeHID;
enum WdSortOrder;
enum WdTableFormat;
enum WdTableFormatApply;
enum WdLanguageID;
enum WdFieldType;
enum WdBuiltinStyle;
enum WdWordDialogTab;
enum WdWordDialogTabHID;
enum WdWordDialog;
enum WdWordDialogHID;
enum WdFieldKind;
enum WdTextFormFieldType;
enum WdChevronConvertRule;
enum WdMailMergeMainDocType;
enum WdMailMergeState;
enum WdMailMergeDestination;
enum WdMailMergeActiveRecord;
enum WdMailMergeDefaultRecord;
enum WdMailMergeDataSource;
enum WdMailMergeComparison;
enum WdBookmarkSortBy;
enum WdWindowState;
enum WdPictureLinkType;
enum WdLinkType;
enum WdWindowType;
enum WdViewType;
enum WdSeekView;
enum WdSpecialPane;
enum WdPageFit;
enum WdBrowseTarget;
enum WdPaperTray;
enum WdOrientation;
enum WdSelectionType;
enum WdCaptionLabelID;
enum WdReferenceType;
enum WdReferenceKind;
enum WdIndexFormat;
enum WdIndexType;
enum WdRevisionsWrap;
enum WdRevisionType;
enum WdRoutingSlipDelivery;
enum WdRoutingSlipStatus;
enum WdSectionStart;
enum WdSaveOptions;
enum WdDocumentKind;
enum WdDocumentType;
enum WdOriginalFormat;
enum WdRelocate;
enum WdInsertedTextMark;
enum WdRevisedLinesMark;
enum WdDeletedTextMark;
enum WdRevisedPropertiesMark;
enum WdFieldShading;
enum WdDefaultFilePath;
enum WdCompatibility;
enum WdPaperSize;
enum WdCustomLabelPageSize;
enum WdProtectionType;
enum WdPartOfSpeech;
enum WdSubscriberFormats;
enum WdEditionType;
enum WdEditionOption;
enum WdRelativeHorizontalPosition;
enum WdRelativeVerticalPosition;
enum WdHelpType;
enum WdHelpTypeHID;
enum WdKeyCategory;
enum WdKey;
enum WdOLEType;
enum WdOLEVerb;
enum WdOLEPlacement;
enum WdEnvelopeOrientation;
enum WdLetterStyle;
enum WdLetterheadLocation;
enum WdSalutationType;
enum WdSalutationGender;
enum WdMovementType;
enum WdConstants;
enum WdPasteDataType;
enum WdPrintOutItem;
enum WdPrintOutPages;
enum WdPrintOutRange;
enum WdDictionaryType;
enum WdDictionaryTypeHID;
enum WdSpellingWordType;
enum WdSpellingErrorType;
enum WdProofreadingErrorType;
enum WdInlineShapeType;
enum WdArrangeStyle;
enum WdSelectionFlags;
enum WdAutoVersions;
enum WdOrganizerObject;
enum WdFindMatch;
enum WdFindWrap;
enum WdInformation;
enum WdWrapType;
enum WdWrapSideType;
enum WdOutlineLevel;
enum WdTextOrientation;
enum WdTextOrientationHID;
enum WdPageBorderArt;
enum WdBorderDistanceFrom;
enum WdReplace;
enum WdFontBias;
struct __declspec(uuid("00020970-0000-0000-c000-000000000046"))
/* dual interface */ _wordApplication;
struct __declspec(uuid("000209b9-0000-0000-c000-000000000046"))
/* dual interface */ _wordGlobal;
struct __declspec(uuid("0002096f-0000-0000-c000-000000000046"))
/* dual interface */ wordFontNames;
struct __declspec(uuid("0002096e-0000-0000-c000-000000000046"))
/* dual interface */ Languages;
struct __declspec(uuid("0002096d-0000-0000-c000-000000000046"))
/* dual interface */ Language;
struct __declspec(uuid("0002096c-0000-0000-c000-000000000046"))
/* dual interface */ Documents;
struct __declspec(uuid("0002096b-0000-0000-c000-000000000046"))
/* dual interface */ _Document;
struct __declspec(uuid("0002096a-0000-0000-c000-000000000046"))
/* dual interface */ Template;
struct __declspec(uuid("000209a2-0000-0000-c000-000000000046"))
/* dual interface */ Templates;
struct __declspec(uuid("00020969-0000-0000-c000-000000000046"))
/* dual interface */ RoutingSlip;
struct __declspec(uuid("00020968-0000-0000-c000-000000000046"))
/* dual interface */ Bookmark;
struct __declspec(uuid("00020967-0000-0000-c000-000000000046"))
/* dual interface */ Bookmarks;
struct __declspec(uuid("00020966-0000-0000-c000-000000000046"))
/* dual interface */ Variable;
struct __declspec(uuid("00020965-0000-0000-c000-000000000046"))
/* dual interface */ Variables;
struct __declspec(uuid("00020964-0000-0000-c000-000000000046"))
/* dual interface */ RecentFile;
struct __declspec(uuid("00020963-0000-0000-c000-000000000046"))
/* dual interface */ RecentFiles;
struct __declspec(uuid("00020962-0000-0000-c000-000000000046"))
/* dual interface */ Window;
struct __declspec(uuid("00020961-0000-0000-c000-000000000046"))
/* dual interface */ Windows;
struct __declspec(uuid("00020960-0000-0000-c000-000000000046"))
/* dual interface */ wordPane;
struct __declspec(uuid("0002095f-0000-0000-c000-000000000046"))
/* dual interface */ wordPanes;
struct __declspec(uuid("0002095e-0000-0000-c000-000000000046"))
/* dual interface */ Range;
struct __declspec(uuid("000209c0-0000-0000-c000-000000000046"))
/* dual interface */ ListFormat;
struct __declspec(uuid("000209b0-0000-0000-c000-000000000046"))
/* dual interface */ Find;
struct __declspec(uuid("000209b1-0000-0000-c000-000000000046"))
/* dual interface */ Replacement;
struct __declspec(uuid("0002095d-0000-0000-c000-000000000046"))
/* dual interface */ Characters;
struct __declspec(uuid("0002095c-0000-0000-c000-000000000046"))
/* dual interface */ Words;
struct __declspec(uuid("0002095b-0000-0000-c000-000000000046"))
/* dual interface */ Sentences;
struct __declspec(uuid("0002095a-0000-0000-c000-000000000046"))
/* dual interface */ Sections;
struct __declspec(uuid("00020959-0000-0000-c000-000000000046"))
/* dual interface */ Section;
struct __declspec(uuid("00020958-0000-0000-c000-000000000046"))
/* dual interface */ Paragraphs;
struct __declspec(uuid("00020957-0000-0000-c000-000000000046"))
/* dual interface */ Paragraph;
struct __declspec(uuid("00020956-0000-0000-c000-000000000046"))
/* dual interface */ DropCap;
struct __declspec(uuid("00020955-0000-0000-c000-000000000046"))
/* dual interface */ wordTabStops;
struct __declspec(uuid("00020954-0000-0000-c000-000000000046"))
/* dual interface */ wordTabStop;
struct __declspec(uuid("00020953-0000-0000-c000-000000000046"))
/* dual interface */ _ParagraphFormat;
struct __declspec(uuid("00020952-0000-0000-c000-000000000046"))
/* dual interface */ _Font;
struct __declspec(uuid("00020951-0000-0000-c000-000000000046"))
/* dual interface */ wordTable;
struct __declspec(uuid("00020950-0000-0000-c000-000000000046"))
/* dual interface */ wordRow;
struct __declspec(uuid("0002094f-0000-0000-c000-000000000046"))
/* dual interface */ wordColumn;
struct __declspec(uuid("0002094e-0000-0000-c000-000000000046"))
/* dual interface */ wordCell;
struct __declspec(uuid("0002094d-0000-0000-c000-000000000046"))
/* dual interface */ Tables;
struct __declspec(uuid("0002094c-0000-0000-c000-000000000046"))
/* dual interface */ wordRows;
struct __declspec(uuid("0002094b-0000-0000-c000-000000000046"))
/* dual interface */ wordColumns;
struct __declspec(uuid("0002094a-0000-0000-c000-000000000046"))
/* dual interface */ Cells;
struct __declspec(uuid("00020949-0000-0000-c000-000000000046"))
/* dual interface */ wordAutoCorrect;
struct __declspec(uuid("00020948-0000-0000-c000-000000000046"))
/* dual interface */ AutoCorrectEntries;
struct __declspec(uuid("00020947-0000-0000-c000-000000000046"))
/* dual interface */ AutoCorrectEntry;
struct __declspec(uuid("00020946-0000-0000-c000-000000000046"))
/* dual interface */ FirstLetterExceptions;
struct __declspec(uuid("00020945-0000-0000-c000-000000000046"))
/* dual interface */ FirstLetterException;
struct __declspec(uuid("00020944-0000-0000-c000-000000000046"))
/* dual interface */ TwoInitialCapsExceptions;
struct __declspec(uuid("00020943-0000-0000-c000-000000000046"))
/* dual interface */ TwoInitialCapsException;
struct __declspec(uuid("00020942-0000-0000-c000-000000000046"))
/* dual interface */ Footnotes;
struct __declspec(uuid("00020941-0000-0000-c000-000000000046"))
/* dual interface */ Endnotes;
struct __declspec(uuid("00020940-0000-0000-c000-000000000046"))
/* dual interface */ wordComments;
struct __declspec(uuid("0002093f-0000-0000-c000-000000000046"))
/* dual interface */ Footnote;
struct __declspec(uuid("0002093e-0000-0000-c000-000000000046"))
/* dual interface */ Endnote;
struct __declspec(uuid("0002093d-0000-0000-c000-000000000046"))
/* dual interface */ wordComment;
struct __declspec(uuid("0002093c-0000-0000-c000-000000000046"))
/* dual interface */ wordBorders;
struct __declspec(uuid("0002093b-0000-0000-c000-000000000046"))
/* dual interface */ Border;
struct __declspec(uuid("0002093a-0000-0000-c000-000000000046"))
/* dual interface */ Shading;
struct __declspec(uuid("00020939-0000-0000-c000-000000000046"))
/* dual interface */ TextRetrievalMode;
struct __declspec(uuid("00020937-0000-0000-c000-000000000046"))
/* dual interface */ AutoTextEntries;
struct __declspec(uuid("00020936-0000-0000-c000-000000000046"))
/* dual interface */ AutoTextEntry;
struct __declspec(uuid("00020935-0000-0000-c000-000000000046"))
/* dual interface */ System;
struct __declspec(uuid("00020933-0000-0000-c000-000000000046"))
/* dual interface */ wordOLEFormat;
struct __declspec(uuid("00020931-0000-0000-c000-000000000046"))
/* dual interface */ wordLinkFormat;
struct __declspec(uuid("000209a4-0000-0000-c000-000000000046"))
/* dual interface */ _OLEControl;
struct __declspec(uuid("00020930-0000-0000-c000-000000000046"))
/* dual interface */ Fields;
struct __declspec(uuid("0002092f-0000-0000-c000-000000000046"))
/* dual interface */ Field;
struct __declspec(uuid("0002092e-0000-0000-c000-000000000046"))
/* dual interface */ Browser;
struct __declspec(uuid("0002092d-0000-0000-c000-000000000046"))
/* dual interface */ Styles;
struct __declspec(uuid("0002092c-0000-0000-c000-000000000046"))
/* dual interface */ Style;
struct __declspec(uuid("0002092b-0000-0000-c000-000000000046"))
/* dual interface */ Frames;
struct __declspec(uuid("0002092a-0000-0000-c000-000000000046"))
/* dual interface */ Frame;
struct __declspec(uuid("00020929-0000-0000-c000-000000000046"))
/* dual interface */ FormFields;
struct __declspec(uuid("00020928-0000-0000-c000-000000000046"))
/* dual interface */ FormField;
struct __declspec(uuid("00020927-0000-0000-c000-000000000046"))
/* dual interface */ TextInput;
struct __declspec(uuid("00020926-0000-0000-c000-000000000046"))
/* dual interface */ CheckBox;
struct __declspec(uuid("00020925-0000-0000-c000-000000000046"))
/* dual interface */ DropDown;
struct __declspec(uuid("00020924-0000-0000-c000-000000000046"))
/* dual interface */ ListEntries;
struct __declspec(uuid("00020923-0000-0000-c000-000000000046"))
/* dual interface */ ListEntry;
struct __declspec(uuid("00020922-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfFigures;
struct __declspec(uuid("00020921-0000-0000-c000-000000000046"))
/* dual interface */ TableOfFigures;
struct __declspec(uuid("00020920-0000-0000-c000-000000000046"))
/* dual interface */ MailMerge;
struct __declspec(uuid("0002091f-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeFields;
struct __declspec(uuid("0002091e-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeField;
struct __declspec(uuid("0002091d-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeDataSource;
struct __declspec(uuid("0002091c-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeFieldNames;
struct __declspec(uuid("0002091b-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeFieldName;
struct __declspec(uuid("0002091a-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeDataFields;
struct __declspec(uuid("00020919-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeDataField;
struct __declspec(uuid("00020918-0000-0000-c000-000000000046"))
/* dual interface */ Envelope;
struct __declspec(uuid("00020917-0000-0000-c000-000000000046"))
/* dual interface */ MailingLabel;
struct __declspec(uuid("00020916-0000-0000-c000-000000000046"))
/* dual interface */ CustomLabels;
struct __declspec(uuid("00020915-0000-0000-c000-000000000046"))
/* dual interface */ CustomLabel;
struct __declspec(uuid("00020914-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfContents;
struct __declspec(uuid("00020913-0000-0000-c000-000000000046"))
/* dual interface */ TableOfContents;
struct __declspec(uuid("00020912-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfAuthorities;
struct __declspec(uuid("00020911-0000-0000-c000-000000000046"))
/* dual interface */ TableOfAuthorities;
struct __declspec(uuid("00020910-0000-0000-c000-000000000046"))
/* dual interface */ Dialogs;
struct __declspec(uuid("000209b8-0000-0000-c000-000000000046"))
/* dual interface */ Dialog;
struct __declspec(uuid("00020971-0000-0000-c000-000000000046"))
/* dual interface */ wordPageSetup;
struct __declspec(uuid("00020972-0000-0000-c000-000000000046"))
/* dual interface */ LineNumbering;
struct __declspec(uuid("00020973-0000-0000-c000-000000000046"))
/* dual interface */ TextColumns;
struct __declspec(uuid("00020974-0000-0000-c000-000000000046"))
/* dual interface */ TextColumn;
struct __declspec(uuid("00020975-0000-0000-c000-000000000046"))
/* dual interface */ wordSelection;
struct __declspec(uuid("00020976-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfAuthoritiesCategories;
struct __declspec(uuid("00020977-0000-0000-c000-000000000046"))
/* dual interface */ TableOfAuthoritiesCategory;
struct __declspec(uuid("00020978-0000-0000-c000-000000000046"))
/* dual interface */ CaptionLabels;
struct __declspec(uuid("00020979-0000-0000-c000-000000000046"))
/* dual interface */ CaptionLabel;
struct __declspec(uuid("0002097a-0000-0000-c000-000000000046"))
/* dual interface */ AutoCaptions;
struct __declspec(uuid("0002097b-0000-0000-c000-000000000046"))
/* dual interface */ AutoCaption;
struct __declspec(uuid("0002097c-0000-0000-c000-000000000046"))
/* dual interface */ Indexes;
struct __declspec(uuid("0002097d-0000-0000-c000-000000000046"))
/* dual interface */ Index;
struct __declspec(uuid("0002097e-0000-0000-c000-000000000046"))
/* dual interface */ wordAddIn;
struct __declspec(uuid("0002097f-0000-0000-c000-000000000046"))
/* dual interface */ wordAddIns;
struct __declspec(uuid("00020980-0000-0000-c000-000000000046"))
/* dual interface */ Revisions;
struct __declspec(uuid("00020981-0000-0000-c000-000000000046"))
/* dual interface */ Revision;
struct __declspec(uuid("00020982-0000-0000-c000-000000000046"))
/* dual interface */ Task;
struct __declspec(uuid("00020983-0000-0000-c000-000000000046"))
/* dual interface */ Tasks;
struct __declspec(uuid("00020984-0000-0000-c000-000000000046"))
/* dual interface */ wordHeadersFooters;
struct __declspec(uuid("00020985-0000-0000-c000-000000000046"))
/* dual interface */ wordHeaderFooter;
struct __declspec(uuid("00020986-0000-0000-c000-000000000046"))
/* dual interface */ PageNumbers;
struct __declspec(uuid("00020987-0000-0000-c000-000000000046"))
/* dual interface */ PageNumber;
struct __declspec(uuid("00020988-0000-0000-c000-000000000046"))
/* dual interface */ Subdocuments;
struct __declspec(uuid("00020989-0000-0000-c000-000000000046"))
/* dual interface */ Subdocument;
struct __declspec(uuid("0002098a-0000-0000-c000-000000000046"))
/* dual interface */ HeadingStyles;
struct __declspec(uuid("0002098b-0000-0000-c000-000000000046"))
/* dual interface */ HeadingStyle;
struct __declspec(uuid("0002098c-0000-0000-c000-000000000046"))
/* dual interface */ StoryRanges;
struct __declspec(uuid("0002098d-0000-0000-c000-000000000046"))
/* dual interface */ ListLevel;
struct __declspec(uuid("0002098e-0000-0000-c000-000000000046"))
/* dual interface */ ListLevels;
struct __declspec(uuid("0002098f-0000-0000-c000-000000000046"))
/* dual interface */ ListTemplate;
struct __declspec(uuid("00020990-0000-0000-c000-000000000046"))
/* dual interface */ ListTemplates;
struct __declspec(uuid("00020991-0000-0000-c000-000000000046"))
/* dual interface */ ListParagraphs;
struct __declspec(uuid("00020992-0000-0000-c000-000000000046"))
/* dual interface */ List;
struct __declspec(uuid("00020993-0000-0000-c000-000000000046"))
/* dual interface */ Lists;
struct __declspec(uuid("00020994-0000-0000-c000-000000000046"))
/* dual interface */ ListGallery;
struct __declspec(uuid("00020995-0000-0000-c000-000000000046"))
/* dual interface */ ListGalleries;
struct __declspec(uuid("00020996-0000-0000-c000-000000000046"))
/* dual interface */ KeyBindings;
struct __declspec(uuid("00020997-0000-0000-c000-000000000046"))
/* dual interface */ KeysBoundTo;
struct __declspec(uuid("00020998-0000-0000-c000-000000000046"))
/* dual interface */ KeyBinding;
struct __declspec(uuid("0002099a-0000-0000-c000-000000000046"))
/* dual interface */ wordFileConverters;
struct __declspec(uuid("0002099b-0000-0000-c000-000000000046"))
/* dual interface */ SynonymInfo;
struct __declspec(uuid("0002099c-0000-0000-c000-000000000046"))
/* dual interface */ wordHyperlinks;
struct __declspec(uuid("0002099d-0000-0000-c000-000000000046"))
/* dual interface */ wordHyperlink;
struct __declspec(uuid("0002099f-0000-0000-c000-000000000046"))
/* dual interface */ wordShapes;
struct __declspec(uuid("000209b5-0000-0000-c000-000000000046"))
/* dual interface */ wordShapeRange;
struct __declspec(uuid("000209b6-0000-0000-c000-000000000046"))
/* dual interface */ wordGroupShapes;
struct __declspec(uuid("000209a0-0000-0000-c000-000000000046"))
/* dual interface */ wordShape;
struct __declspec(uuid("000209b2-0000-0000-c000-000000000046"))
/* dual interface */ wordTextFrame;
struct __declspec(uuid("000209a1-0000-0000-c000-000000000046"))
/* dual interface */ _LetterContent;
struct __declspec(uuid("000209a5-0000-0000-c000-000000000046"))
/* dual interface */ wordView;
struct __declspec(uuid("000209a6-0000-0000-c000-000000000046"))
/* dual interface */ Zoom;
struct __declspec(uuid("000209a7-0000-0000-c000-000000000046"))
/* dual interface */ Zooms;
struct __declspec(uuid("000209a8-0000-0000-c000-000000000046"))
/* dual interface */ InlineShape;
struct __declspec(uuid("000209a9-0000-0000-c000-000000000046"))
/* dual interface */ InlineShapes;
struct __declspec(uuid("000209aa-0000-0000-c000-000000000046"))
/* dual interface */ SpellingSuggestions;
struct __declspec(uuid("000209ab-0000-0000-c000-000000000046"))
/* dual interface */ SpellingSuggestion;
struct __declspec(uuid("000209ac-0000-0000-c000-000000000046"))
/* dual interface */ Dictionaries;
struct __declspec(uuid("000209e0-0000-0000-c000-000000000046"))
/* dual interface */ HangulHanjaConversionDictionaries;
struct __declspec(uuid("000209ad-0000-0000-c000-000000000046"))
/* dual interface */ Dictionary;
struct __declspec(uuid("000209ae-0000-0000-c000-000000000046"))
/* dual interface */ ReadabilityStatistics;
struct __declspec(uuid("000209af-0000-0000-c000-000000000046"))
/* dual interface */ ReadabilityStatistic;
struct __declspec(uuid("000209b3-0000-0000-c000-000000000046"))
/* dual interface */ Versions;
struct __declspec(uuid("000209b4-0000-0000-c000-000000000046"))
/* dual interface */ Version;
struct __declspec(uuid("000209b7-0000-0000-c000-000000000046"))
/* dual interface */ wordOptions;
struct __declspec(uuid("000209ba-0000-0000-c000-000000000046"))
/* dual interface */ MailMessage;
struct __declspec(uuid("000209bb-0000-0000-c000-000000000046"))
/* dual interface */ ProofreadingErrors;
struct __declspec(uuid("000209bd-0000-0000-c000-000000000046"))
/* dual interface */ Mailer;
struct __declspec(uuid("000209c3-0000-0000-c000-000000000046"))
/* dual interface */ WrapFormat;
struct __declspec(uuid("000209d1-0000-0000-c000-000000000046"))
/* dual interface */ HangulAndAlphabetExceptions;
struct __declspec(uuid("000209d2-0000-0000-c000-000000000046"))
/* dual interface */ HangulAndAlphabetException;
struct __declspec(uuid("000209c4-0000-0000-c000-000000000046"))
/* dual interface */ wordAdjustments;
struct __declspec(uuid("000209c5-0000-0000-c000-000000000046"))
/* dual interface */ wordCalloutFormat;
struct __declspec(uuid("000209c6-0000-0000-c000-000000000046"))
/* dual interface */ wordColorFormat;
struct __declspec(uuid("000209c7-0000-0000-c000-000000000046"))
/* dual interface */ wordConnectorFormat;
struct __declspec(uuid("000209c8-0000-0000-c000-000000000046"))
/* dual interface */ wordFillFormat;
struct __declspec(uuid("000209c9-0000-0000-c000-000000000046"))
/* dual interface */ wordFreeformBuilder;
struct __declspec(uuid("000209ca-0000-0000-c000-000000000046"))
/* dual interface */ wordLineFormat;
struct __declspec(uuid("000209cb-0000-0000-c000-000000000046"))
/* dual interface */ wordPictureFormat;
struct __declspec(uuid("000209cc-0000-0000-c000-000000000046"))
/* dual interface */ wordShadowFormat;
struct __declspec(uuid("000209cd-0000-0000-c000-000000000046"))
/* dual interface */ wordShapeNode;
struct __declspec(uuid("000209ce-0000-0000-c000-000000000046"))
/* dual interface */ wordShapeNodes;
struct __declspec(uuid("000209cf-0000-0000-c000-000000000046"))
/* dual interface */ wordTextEffectFormat;
struct __declspec(uuid("000209d0-0000-0000-c000-000000000046"))
/* dual interface */ wordThreeDFormat;
struct __declspec(uuid("000209f7-0000-0000-c000-000000000046"))
/* dispinterface */ wordApplicationEvents;
struct /* coclass */ wordGlobal;
struct /* coclass */ wordApplication;
struct __declspec(uuid("000209f6-0000-0000-c000-000000000046"))
/* dispinterface */ DocumentEvents;
struct /* coclass */ Document;
struct /* coclass */ wordFont;
struct /* coclass */ ParagraphFormat;
struct __declspec(uuid("000209f3-0000-0000-c000-000000000046"))
/* dispinterface */ OCXEvents;
struct /* coclass */ wordOLEControl;
struct /* coclass */ LetterContent;
struct __declspec(uuid("000209f7-0001-0000-c000-000000000046"))
/* dual interface */ IApplicationEvents;
struct __declspec(uuid("000209fe-0001-0000-c000-000000000046"))
/* dual interface */ IApplicationEvents2;
struct __declspec(uuid("000209fe-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents2;
enum WdBrowserLevel;
enum WdEnclosureType;
enum WdEncloseStyle;
enum WdHighAnsiText;
enum WdLayoutMode;
enum WdDocumentMedium;
enum WdMailerPriority;
enum WdDocumentViewDirection;
enum WdArabicNumeral;
enum WdMonthNames;
enum WdCursorMovement;
enum WdVisualSelection;
enum WdTableDirection;
enum WdFlowDirection;
enum WdDiacriticColor;
enum WdGutterStyle;
enum WdGutterStyleOld;
enum WdSectionDirection;
enum WdDateLanguage;
enum WdCalendarTypeBi;
enum WdCalendarType;
enum WdReadingOrder;
enum WdHebSpellStart;
enum WdAraSpeller;
enum WdColor;
enum WdShapePosition;
enum WdTablePosition;
enum WdDefaultListBehavior;
enum WdDefaultTableBehavior;
enum WdAutoFitBehavior;
enum WdPreferredWidthType;
enum WdFarEastLineBreakLanguageID;
enum WdViewTypeOld;
enum WdFramesetType;
enum WdFramesetSizeType;
enum WdFramesetNewFrameLocation;
enum WdScrollbarType;
enum WdTwoLinesInOneType;
enum WdHorizontalInVerticalType;
enum WdHorizontalLineAlignment;
enum WdHorizontalLineWidthType;
enum WdPhoneticGuideAlignmentType;
enum WdNewDocumentType;
enum WdKana;
enum WdCharacterWidth;
enum WdNumberStyleWordBasicBiDi;
enum WdTCSCConverterDirection;
struct __declspec(uuid("000209d7-0000-0000-c000-000000000046"))
/* dual interface */ EmailAuthor;
struct __declspec(uuid("000209db-0000-0000-c000-000000000046"))
/* dual interface */ EmailOptions;
struct __declspec(uuid("000209dc-0000-0000-c000-000000000046"))
/* dual interface */ EmailSignature;
struct __declspec(uuid("000209dd-0000-0000-c000-000000000046"))
/* dual interface */ Email;
struct __declspec(uuid("000209de-0000-0000-c000-000000000046"))
/* dual interface */ HorizontalLineFormat;
struct __declspec(uuid("000209e2-0000-0000-c000-000000000046"))
/* dual interface */ Frameset;
struct __declspec(uuid("000209e3-0000-0000-c000-000000000046"))
/* dual interface */ wordDefaultWebOptions;
struct __declspec(uuid("000209e4-0000-0000-c000-000000000046"))
/* dual interface */ wordWebOptions;
struct __declspec(uuid("000209df-0000-0000-c000-000000000046"))
/* dual interface */ OtherCorrectionsExceptions;
struct __declspec(uuid("000209e1-0000-0000-c000-000000000046"))
/* dual interface */ OtherCorrectionsException;
struct __declspec(uuid("000209e5-0000-0000-c000-000000000046"))
/* dual interface */ EmailSignatureEntries;
struct __declspec(uuid("000209e6-0000-0000-c000-000000000046"))
/* dual interface */ EmailSignatureEntry;
struct __declspec(uuid("000209e7-0000-0000-c000-000000000046"))
/* dual interface */ HTMLDivision;
struct __declspec(uuid("000209e8-0000-0000-c000-000000000046"))
/* dual interface */ HTMLDivisions;
struct __declspec(uuid("000209e9-0000-0000-c000-000000000046"))
/* dual interface */ wordDiagramNode;
struct __declspec(uuid("000209ea-0000-0000-c000-000000000046"))
/* dual interface */ wordDiagramNodeChildren;
struct __declspec(uuid("000209eb-0000-0000-c000-000000000046"))
/* dual interface */ wordDiagramNodes;
struct __declspec(uuid("000209ec-0000-0000-c000-000000000046"))
/* dual interface */ wordDiagram;
struct __declspec(uuid("b923fde0-f08c-11d3-91b0-00105a0a19fd"))
/* dual interface */ CustomProperty;
struct __declspec(uuid("b923fde1-f08c-11d3-91b0-00105a0a19fd"))
/* dual interface */ CustomProperties;
struct __declspec(uuid("000209ed-0000-0000-c000-000000000046"))
/* dual interface */ SmartTag;
struct __declspec(uuid("000209ee-0000-0000-c000-000000000046"))
/* dual interface */ SmartTags;
struct __declspec(uuid("000209ef-0000-0000-c000-000000000046"))
/* dual interface */ StyleSheet;
struct __declspec(uuid("07b7cc7e-e66c-11d3-9454-00105aa31a08"))
/* dual interface */ StyleSheets;
struct __declspec(uuid("5d311669-ea51-11d3-87cc-00105aa31a34"))
/* dual interface */ MappedDataField;
struct __declspec(uuid("799a6814-ea41-11d3-87cc-00105aa31a34"))
/* dual interface */ MappedDataFields;
struct __declspec(uuid("396f9073-f9fd-11d3-8ea0-0050049a1a01"))
/* dual interface */ wordCanvasShapes;
struct __declspec(uuid("b7564e97-0519-4c68-b400-3803e7c63242"))
/* dual interface */ wordTableStyle;
struct __declspec(uuid("1498f56d-ed33-41f9-b37b-ef30e50b08ac"))
/* dual interface */ ConditionalStyle;
struct __declspec(uuid("bea85a24-d7da-4f3d-b58c-ed90fb01d615"))
/* dual interface */ FootnoteOptions;
struct __declspec(uuid("bf043168-f4de-4e7c-b206-741a8b3ef71a"))
/* dual interface */ EndnoteOptions;
struct __declspec(uuid("12dcdc9a-5418-48a3-bbe6-eb57bae275e8"))
/* dual interface */ Reviewers;
struct __declspec(uuid("47cef4ae-dc32-4220-8aa5-19ccc0e6633a"))
/* dual interface */ Reviewer;
struct __declspec(uuid("b9f1a4e2-0d0a-43b7-8495-139e7acbd840"))
/* dual interface */ TaskPane;
struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f5c"))
/* dual interface */ TaskPanes;
struct __declspec(uuid("00020a00-0001-0000-c000-000000000046"))
/* dual interface */ IApplicationEvents3;
struct __declspec(uuid("00020a00-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents3;
enum WdDisableFeaturesIntroducedAfter;
enum WdWrapTypeMerged;
enum WdRecoveryType;
enum WdLineEndingType;
enum WdStyleSheetLinkType;
enum WdStyleSheetPrecedence;
enum WdEmailHTMLFidelity;
enum WdMailMergeMailFormat;
enum WdMappedDataFields;
enum WdConditionCode;
enum WdCompareTarget;
enum WdMergeTarget;
enum WdUseFormattingFrom;
enum WdRevisionsView;
enum WdRevisionsMode;
enum WdRevisionsBalloonWidthType;
enum WdRevisionsBalloonPrintOrientation;
enum WdRevisionsBalloonMargin;
enum WdTaskPanes;
enum WdShowFilter;
enum WdMergeSubType;
enum WdDocumentDirection;
enum WdLanguageID2000;
struct __declspec(uuid("dfb6aa6c-1068-420f-969d-01280fcc1630"))
/* dual interface */ SmartTagAction;
struct __declspec(uuid("cde12cd8-767b-4757-8a31-13029a086305"))
/* dual interface */ SmartTagActions;
struct __declspec(uuid("15ebe471-0182-4cce-98d0-b6614d1c32a1"))
/* dual interface */ SmartTagRecognizer;
struct __declspec(uuid("f2b60a10-ded5-46fb-a914-3c6f4ebb6451"))
/* dual interface */ SmartTagRecognizers;
struct __declspec(uuid("5e9a888c-e5dc-4dcb-8308-3c91fb61e6f4"))
/* dual interface */ SmartTagType;
struct __declspec(uuid("db8e3072-e106-4453-8e7c-53056f1d30dc"))
/* dual interface */ SmartTagTypes;
struct __declspec(uuid("ae6ce2f5-b9d3-407d-85a8-0f10c63289a4"))
/* dual interface */ Line;
struct __declspec(uuid("e2e8a400-0615-427d-adcc-cad39ffebd42"))
/* dual interface */ Lines;
struct __declspec(uuid("add4edf3-2f33-4734-9ce6-d476097c5ada"))
/* dual interface */ Rectangle;
struct __declspec(uuid("7d0f7985-68d9-4d93-91cb-8109280e76cc"))
/* dual interface */ Rectangles;
struct __declspec(uuid("79635bf1-bd1d-4b3f-a520-c1106f1aaad8"))
/* dual interface */ Break;
struct __declspec(uuid("16be9309-d708-4322-bb1a-b056f58d17ea"))
/* dual interface */ Breaks;
struct __declspec(uuid("352840a9-af7d-4ca4-87fc-21c68fdab3e4"))
/* dual interface */ Page;
struct __declspec(uuid("91807402-6c6f-47cd-b8fa-c42fee8ee924"))
/* dual interface */ wordPages;
struct __declspec(uuid("09760240-0b89-49f7-a79d-479f24723f56"))
/* dual interface */ XMLNode;
struct __declspec(uuid("d36c1f42-7044-4b9e-9ca3-85919454db04"))
/* dual interface */ XMLNodes;
struct __declspec(uuid("fe0971f0-5e60-4985-bcda-95cb0b8e0308"))
/* dual interface */ XMLSchemaReference;
struct __declspec(uuid("356b06ec-4908-42a4-81fc-4b5a51f3483b"))
/* dual interface */ XMLSchemaReferences;
struct __declspec(uuid("a87e00e9-3ac3-4b53-abe3-7379653d0e82"))
/* dual interface */ XMLChildNodeSuggestion;
struct __declspec(uuid("de63b5ac-ca4f-46fe-9184-a5719ab9ed5b"))
/* dual interface */ XMLChildNodeSuggestions;
struct __declspec(uuid("b140a023-4850-4da6-bc5f-cc459c4507bc"))
/* dual interface */ XMLNamespace;
struct __declspec(uuid("656bbed7-e82d-4b0a-8f97-ec742ba11ffa"))
/* dual interface */ XMLNamespaces;
struct __declspec(uuid("e3124493-7d6a-410f-9a48-cc822c033cec"))
/* dual interface */ XSLTransform;
struct __declspec(uuid("c774f5ea-a539-4284-a1be-30aec052d899"))
/* dual interface */ XSLTransforms;
struct __declspec(uuid("aed7e08c-14f0-4f33-921d-4c5353137bf6"))
/* dual interface */ Editors;
struct __declspec(uuid("dd947d72-f33c-4198-9bdf-f86181d05e41"))
/* dual interface */ Editor;
struct __declspec(uuid("00020a01-0001-0000-c000-000000000046"))
/* interface */ IApplicationEvents4;
struct __declspec(uuid("00020a01-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents4;
struct __declspec(uuid("00020a02-0000-0000-c000-000000000046"))
/* dispinterface */ DocumentEvents2;
enum WdRectangleType;
enum WdLineType;
enum WdXMLNodeType;
enum WdXMLSelectionChangeReason;
enum WdXMLNodeLevel;
enum WdSmartTagControlType;
enum WdEditorType;
enum WdXMLValidationStatus;
struct __declspec(uuid("4a6ae865-199d-4ea3-9f6b-125bd9c40edf"))
/* dual interface */ Source;
struct __declspec(uuid("fa02a26b-6550-45c5-b6f0-80e757cd3482"))
/* dual interface */ Sources;
struct __declspec(uuid("3834f60f-ee8c-455d-a441-d766675d6d3b"))
/* dual interface */ Bibliography;
struct __declspec(uuid("873e774b-926a-4cb1-878d-635a45187595"))
/* dual interface */ OMaths;
struct __declspec(uuid("e4442a83-f623-459c-8e95-8bfb44dcf23a"))
/* dual interface */ OMath;
struct __declspec(uuid("497142a4-16fd-42c6-bc58-15d89345fc21"))
/* dual interface */ OMathFunctions;
struct __declspec(uuid("8245795b-9aed-4943-a16d-e586ed8180d1"))
/* dual interface */ OMathArgs;
struct __declspec(uuid("f1f37152-1db1-4901-ad9a-c740f99464b4"))
/* dual interface */ OMathFunction;
struct __declspec(uuid("f258de05-c41b-4c33-a778-f0d3f98ceeb3"))
/* dual interface */ OMathAcc;
struct __declspec(uuid("f08b45f1-8f23-4156-9d63-1820c0ed229a"))
/* dual interface */ OMathBar;
struct __declspec(uuid("842c37fe-c76f-4b2b-9b60-c408cb5e838e"))
/* dual interface */ OMathBox;
struct __declspec(uuid("2503b6ee-0889-44df-b920-6d6f9659dea3"))
/* dual interface */ OMathBorderBox;
struct __declspec(uuid("c94688a6-a2a7-4133-a26d-726cd569d5f3"))
/* dual interface */ OMathDelim;
struct __declspec(uuid("1f998a61-71c6-44c2-a0f2-1d66169b47cb"))
/* dual interface */ OMathEqArray;
struct __declspec(uuid("50209974-ba32-4a03-8fa6-bac56cc056fd"))
/* dual interface */ OMathFrac;
struct __declspec(uuid("0d951adf-10a6-4c9b-bcd9-0fb8cbad9a87"))
/* dual interface */ OMathFunc;
struct __declspec(uuid("02b17cb4-7d55-4b34-b38b-10381433441f"))
/* dual interface */ OMathGroupChar;
struct __declspec(uuid("74de9576-8e99-4e28-912b-cb30747c60ce"))
/* dual interface */ OMathLimLow;
struct __declspec(uuid("fc9086c6-0287-4997-b2e1-816c334a22f8"))
/* dual interface */ OMathLimUpp;
struct __declspec(uuid("3e061a7e-67ad-4eaa-bc1e-55057d5e596f"))
/* dual interface */ OMathMat;
struct __declspec(uuid("1b426348-607d-433c-9216-c5d2bf0ef31f"))
/* dual interface */ OMathMatRows;
struct __declspec(uuid("efc71f9c-7f42-4cd4-a7a7-970d7a48cd27"))
/* dual interface */ OMathMatCols;
struct __declspec(uuid("5daa8bb6-054e-48f6-beac-eaad02be0cc7"))
/* dual interface */ OMathMatRow;
struct __declspec(uuid("cae36175-3818-4c60-bcbf-0645d51eb33b"))
/* dual interface */ OMathMatCol;
struct __declspec(uuid("cebd4184-4e6d-4fc6-a42d-2142b1b76af5"))
/* dual interface */ OMathNary;
struct __declspec(uuid("db77d541-85c3-42e8-8649-afbd7cf87866"))
/* dual interface */ OMathPhantom;
struct __declspec(uuid("afaf0c0e-8603-40f6-8fd1-42726cac21e3"))
/* dual interface */ OMathScrPre;
struct __declspec(uuid("67a7eec5-285d-4024-b071-bd6b33b88547"))
/* dual interface */ OMathRad;
struct __declspec(uuid("98dfbd12-96cb-4f07-90ea-749ff1d6b89d"))
/* dual interface */ OMathScrSub;
struct __declspec(uuid("dc489ad4-23c4-4f4b-990f-45a51c7c0c4f"))
/* dual interface */ OMathScrSubSup;
struct __declspec(uuid("d0a95726-678a-4b9d-8103-1e2b86735ae7"))
/* dual interface */ OMathScrSup;
struct __declspec(uuid("6f9d1f68-06f7-49ef-8902-185e54eb5e87"))
/* dual interface */ OMathAutoCorrect;
struct __declspec(uuid("18cd5ec8-8b7b-42c8-992a-2a407468642c"))
/* dual interface */ OMathAutoCorrectEntries;
struct __declspec(uuid("d8779f01-4869-4403-b334-d60c5f9c9175"))
/* dual interface */ OMathAutoCorrectEntry;
struct __declspec(uuid("44fee887-6600-41ab-95a5-de33c605116c"))
/* dual interface */ OMathRecognizedFunctions;
struct __declspec(uuid("5c04bd93-2f3f-4668-918d-9738ec901039"))
/* dual interface */ OMathRecognizedFunction;
struct __declspec(uuid("804cd967-f83b-432d-9446-c61a45cfeff0"))
/* dual interface */ ContentControls;
struct __declspec(uuid("ee95afe3-3026-4172-b078-0e79dab5cc3d"))
/* dual interface */ ContentControl;
struct __declspec(uuid("0c1fabe7-f737-406f-9ca3-b07661f9d1a2"))
/* dual interface */ XMLMapping;
struct __declspec(uuid("54f46dc4-f6a6-48cc-bd66-46c1ddeadd22"))
/* dual interface */ ContentControlListEntries;
struct __declspec(uuid("0c6fa8ca-e65f-4fc7-ab8f-20729eecbb14"))
/* dual interface */ ContentControlListEntry;
struct __declspec(uuid("b5828b50-0e3d-448a-962d-a40702a5868d"))
/* dual interface */ BuildingBlockTypes;
struct __declspec(uuid("817f99fa-ccc4-4971-8e9d-1238f735aaff"))
/* dual interface */ BuildingBlockType;
struct __declspec(uuid("6e47678b-a879-4e56-8698-3b7cf169fad4"))
/* dual interface */ Categories;
struct __declspec(uuid("ecfbdb5e-acd2-4530-ad79-4560b7ff055c"))
/* dual interface */ Category;
struct __declspec(uuid("c6d50987-25d7-408a-bff2-90bf86a24e93"))
/* dual interface */ BuildingBlocks;
struct __declspec(uuid("bfd3fc23-f763-4ff8-826e-1afbf598a4e7"))
/* dual interface */ BuildingBlock;
struct __declspec(uuid("39709229-56a0-4e29-9112-b31dd067ebfd"))
/* dual interface */ BuildingBlockEntries;
struct __declspec(uuid("e2e0f3a7-204c-40c5-baa5-290f374fdf5a"))
/* dual interface */ OMathBreaks;
struct __declspec(uuid("65e515d5-f50b-4951-8f38-fa6ac8707387"))
/* dual interface */ OMathBreak;
struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f51"))
/* dual interface */ wordResearch;
struct __declspec(uuid("d040daf9-6ce4-4be8-839d-f4538a4301cf"))
/* dual interface */ wordSoftEdgeFormat;
struct __declspec(uuid("f1b14f40-5c32-4c8c-b5b2-de537bb6b89d"))
/* dual interface */ wordGlowFormat;
struct __declspec(uuid("f01943ff-1985-445e-8602-8fb8f39cca75"))
/* dual interface */ wordReflectionFormat;
enum WdStyleSort;
enum WdRemoveDocInfoType;
enum WdCheckInVersionType;
enum WdMoveToTextMark;
enum WdMoveFromTextMark;
enum WdOMathFunctionType;
enum WdOMathHorizAlignType;
enum WdOMathVertAlignType;
enum WdOMathFracType;
enum WdOMathSpacingRule;
enum WdOMathType;
enum WdOMathShapeType;
enum WdOMathJc;
enum WdOMathBreakBin;
enum WdOMathBreakSub;
enum WdReadingLayoutMargin;
enum WdContentControlType;
enum WdCompareDestination;
enum WdGranularity;
enum WdMergeFormatFrom;
enum WdShowSourceDocuments;
enum WdPasteOptions;
enum WdBuildingBlockTypes;
enum WdAlignmentTabRelative;
enum WdAlignmentTabAlignment;
enum WdCellColor;
enum WdTextboxTightWrap;
enum WdShapePositionRelative;
enum WdShapeSizeRelative;
enum WdRelativeHorizontalSize;
enum WdRelativeVerticalSize;
enum WdThemeColorIndex;
enum WdExportFormat;
enum WdExportOptimizeFor;
enum WdExportCreateBookmarks;
enum WdExportItem;
enum WdExportRange;
enum WdFrenchSpeller;
enum WdDocPartInsertOptions;
enum WdContentControlDateStorageFormat;
struct __declspec(uuid("4a304b59-31ff-42dd-b436-7fc9c5db7559"))
/* dual interface */ wordChartData;
struct __declspec(uuid("6ffa84bb-a350-4442-bb53-a43653459a84"))
/* dual interface */ wordChart;
struct __declspec(uuid("ae6d45e5-981e-4547-8752-674bb55420a5"))
/* dual interface */ wordCorners;
struct __declspec(uuid("b3a1e8c6-e1ce-4a46-8d12-e017157b03d7"))
/* dual interface */ wordLegend;
struct __declspec(uuid("ab0d33a3-c9ea-485b-9443-4c1bb3656cea"))
/* dual interface */ wordChartBorder;
struct __declspec(uuid("a2e94180-7564-4d97-806b-bbc0d0a1350c"))
/* dual interface */ wordWalls;
struct __declspec(uuid("7e64d2be-2818-48cb-8f8a-cc7b61d9e860"))
/* dual interface */ wordFloor;
struct __declspec(uuid("56afd330-440c-4f4c-a39c-ed306d084d5f"))
/* dual interface */ wordPlotArea;
struct __declspec(uuid("c75ad98a-74e9-49fe-8bf1-544839cc08a5"))
/* dual interface */ wordChartArea;
struct __declspec(uuid("5d7f6c15-36ce-44cc-9692-5a1f8b8c906d"))
/* dual interface */ wordSeriesLines;
struct __declspec(uuid("36162c62-b59a-4278-af3d-f2ac1eb999d9"))
/* dual interface */ wordLeaderLines;
struct __declspec(uuid("fc9090af-0ddb-4ec1-86e8-8751f2199f2c"))
/* dual interface */ wordGridlines;
struct __declspec(uuid("86905ac9-33f3-4a88-96c8-b289b0390bca"))
/* dual interface */ wordUpBars;
struct __declspec(uuid("84a6a663-aef4-4fcd-83fd-9bb707f157ca"))
/* dual interface */ wordDownBars;
struct __declspec(uuid("b184502b-587a-4c6a-8dc4-ece4354883c6"))
/* dual interface */ wordInterior;
struct __declspec(uuid("f152d349-7d20-4c01-a42b-2d6de4f3891c"))
/* dual interface */ wordChartFillFormat;
struct __declspec(uuid("b6511068-70bf-4751-a741-55c1d41ad96f"))
/* dual interface */ wordLegendEntries;
struct __declspec(uuid("cdb0ff41-e862-47bb-ae77-3fa7b1ae3189"))
/* dual interface */ wordChartFont;
struct __declspec(uuid("dd8f80b8-9b80-4e89-9bec-f12df35e43b3"))
/* dual interface */ wordChartColorFormat;
struct __declspec(uuid("c4a02049-024c-4273-8934-e48cc21479a9"))
/* dual interface */ wordLegendEntry;
struct __declspec(uuid("df076fde-8781-4051-a5bc-99f6b7dc04d4"))
/* dual interface */ wordLegendKey;
struct __declspec(uuid("8feb78f7-35c6-4871-918c-193c3cdd886d"))
/* dual interface */ wordSeriesCollection;
struct __declspec(uuid("40810760-068a-4486-bec9-8ea58c7029f5"))
/* dual interface */ wordSeries;
struct __declspec(uuid("194f8476-b79d-4572-a609-294207de77c1"))
/* dual interface */ wordErrorBars;
struct __declspec(uuid("91c46192-3124-4346-a815-10b8873f5a06"))
/* dual interface */ wordTrendline;
struct __declspec(uuid("54b7061a-d56c-40e5-b85b-58146446c782"))
/* dual interface */ wordTrendlines;
struct __declspec(uuid("d8252c5e-eb9f-4d74-aa72-c178b128fac4"))
/* dual interface */ wordDataLabels;
struct __declspec(uuid("1fd94df1-3569-4465-94ff-e8b22d28eeb0"))
/* dual interface */ wordDataLabel;
struct __declspec(uuid("c1a870a0-850e-4d38-98a7-741cb8c3bca4"))
/* dual interface */ wordPoints;
struct __declspec(uuid("8a342fa0-5831-4b5e-82e1-003d0a0c635d"))
/* dual interface */ wordPoint;
struct __declspec(uuid("354ab591-a217-48b4-99e4-14f58f15667d"))
/* dual interface */ wordAxes;
struct __declspec(uuid("7ebc66bd-f788-42c3-91f4-e8c841a69005"))
/* dual interface */ wordAxis;
struct __declspec(uuid("dce9f2c4-4c02-43ba-840e-b4276550ef79"))
/* dual interface */ wordDataTable;
struct __declspec(uuid("c1ad33e4-f088-40a9-9d2f-d94017d115c4"))
/* dual interface */ wordChartTitle;
struct __declspec(uuid("8b0e45db-3a7b-42ee-9d17-a92af69b79c1"))
/* dual interface */ wordAxisTitle;
struct __declspec(uuid("c04865a3-9f8a-486c-bb58-b4c3e6563136"))
/* dual interface */ wordDisplayUnitLabel;
struct __declspec(uuid("935d59f5-e365-4f92-b7f5-1c499a63eca8"))
/* dual interface */ wordTickLabels;
struct __declspec(uuid("9f1df642-3cce-4d83-a770-d2634a05d278"))
/* dual interface */ wordDropLines;
struct __declspec(uuid("7a1bce11-5783-4c7d-bd02-f3d84ab40e7f"))
/* dual interface */ wordHiLoLines;
struct __declspec(uuid("86488fb4-9633-4c93-8057-fc1fa7a847ae"))
/* dual interface */ wordChartGroup;
struct __declspec(uuid("f8ddb497-ca6c-4711-9ba4-2718fa3bb6fe"))
/* dual interface */ wordChartGroups;
struct __declspec(uuid("ff06fef2-da89-41c0-a0a8-5cd434e210ad"))
/* dual interface */ wordChartCharacters;
struct __declspec(uuid("b66d3c1a-4541-4961-b35b-a353c03f6a99"))
/* dual interface */ wordChartFormat;
enum wordXlChartSplitType;
enum wordXlSizeRepresents;
enum wordXlAxisGroup;
enum XlBackground;
enum XlChartGallery;
enum XlChartPicturePlacement;
enum XlDataLabelSeparator;
enum XlPattern;
enum wordXlPictureAppearance;
enum wordXlCopyPictureFormat;
enum XlRgbColor;
enum XlConstants;
enum XlReadingOrder;
enum wordXlBorderWeight;
enum wordXlLegendPosition;
enum XlUnderlineStyle;
enum wordXlColorIndex;
enum wordXlMarkerStyle;
enum wordXlRowCol;
enum wordXlDataLabelsType;
enum wordXlErrorBarInclude;
enum wordXlErrorBarType;
enum wordXlErrorBarDirection;
enum wordXlChartPictureType;
enum XlChartItem;
enum wordXlBarShape;
enum wordXlEndStyleCap;
enum wordXlTrendlineType;
enum wordXlAxisType;
enum wordXlAxisCrosses;
enum wordXlTickMark;
enum wordXlScaleType;
enum wordXlTickLabelPosition;
enum wordXlTimeUnit;
enum wordXlCategoryType;
enum wordXlDisplayUnit;
enum XlOrientation;
enum wordXlTickLabelOrientation;
enum wordXlDisplayBlanksAs;
enum wordXlDataLabelPosition;
enum wordXlPivotFieldOrientation;
enum wordXlHAlign;
enum wordXlVAlign;
enum XlLineStyle;
enum wordXlChartElementPosition;
struct __declspec(uuid("e598e358-2852-42d4-8775-160bd91b7244"))
/* dual interface */ UndoRecord;
struct __declspec(uuid("99755f80-fe96-4f7d-b636-b8e800e54f44"))
/* dual interface */ CoAuthLock;
struct __declspec(uuid("dff99ac2-cd2a-43ad-91b1-a2be40bc7146"))
/* dual interface */ CoAuthLocks;
struct __declspec(uuid("9e6b5ec5-e8e4-40af-9540-6203f71e2823"))
/* dual interface */ CoAuthUpdate;
struct __declspec(uuid("30225cfc-5a71-4fe6-b527-90a52c54ae77"))
/* dual interface */ CoAuthUpdates;
struct __declspec(uuid("e59544d5-c299-46a0-84c1-c51ab38f9759"))
/* dual interface */ CoAuthor;
struct __declspec(uuid("256b6aba-6a38-4d39-971c-91fda9922814"))
/* dual interface */ CoAuthors;
struct __declspec(uuid("65df9f31-b1e3-4651-87e8-51d55f302161"))
/* dual interface */ CoAuthoring;
struct __declspec(uuid("fd0a74e8-c719-49f6-ba1b-f6d9839d1ab9"))
/* dual interface */ wordProtectedViewWindows;
struct __declspec(uuid("f743edd0-9b97-4b09-89cc-77be19b51481"))
/* dual interface */ wordProtectedViewWindow;
enum WdUpdateStyleListBehavior;
enum WdApplyQuickStyleSets;
enum WdLigatures;
enum WdNumberForm;
enum WdNumberSpacing;
enum WdStylisticSet;
enum WdSpanishSpeller;
enum WdLockType;
enum wordXlPieSliceLocation;
enum wordXlPieSliceIndex;
enum WdCompatibilityMode;
enum WdProtectedViewCloseReason;
enum WdPortugueseReform;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_OLEControl, __uuidof(_OLEControl));
_COM_SMARTPTR_TYPEDEF(wordApplicationEvents, __uuidof(wordApplicationEvents));
_COM_SMARTPTR_TYPEDEF(wordFontNames, __uuidof(wordFontNames));
_COM_SMARTPTR_TYPEDEF(RoutingSlip, __uuidof(RoutingSlip));
_COM_SMARTPTR_TYPEDEF(Variable, __uuidof(Variable));
_COM_SMARTPTR_TYPEDEF(Variables, __uuidof(Variables));
_COM_SMARTPTR_TYPEDEF(DropCap, __uuidof(DropCap));
_COM_SMARTPTR_TYPEDEF(wordTabStop, __uuidof(wordTabStop));
_COM_SMARTPTR_TYPEDEF(wordTabStops, __uuidof(wordTabStops));
_COM_SMARTPTR_TYPEDEF(FirstLetterException, __uuidof(FirstLetterException));
_COM_SMARTPTR_TYPEDEF(FirstLetterExceptions, __uuidof(FirstLetterExceptions));
_COM_SMARTPTR_TYPEDEF(TwoInitialCapsException, __uuidof(TwoInitialCapsException));
_COM_SMARTPTR_TYPEDEF(TwoInitialCapsExceptions, __uuidof(TwoInitialCapsExceptions));
_COM_SMARTPTR_TYPEDEF(TextRetrievalMode, __uuidof(TextRetrievalMode));
_COM_SMARTPTR_TYPEDEF(System, __uuidof(System));
_COM_SMARTPTR_TYPEDEF(wordOLEFormat, __uuidof(wordOLEFormat));
_COM_SMARTPTR_TYPEDEF(wordLinkFormat, __uuidof(wordLinkFormat));
_COM_SMARTPTR_TYPEDEF(Browser, __uuidof(Browser));
_COM_SMARTPTR_TYPEDEF(TextInput, __uuidof(TextInput));
_COM_SMARTPTR_TYPEDEF(CheckBox, __uuidof(CheckBox));
_COM_SMARTPTR_TYPEDEF(ListEntry, __uuidof(ListEntry));
_COM_SMARTPTR_TYPEDEF(ListEntries, __uuidof(ListEntries));
_COM_SMARTPTR_TYPEDEF(DropDown, __uuidof(DropDown));
_COM_SMARTPTR_TYPEDEF(MailMergeFieldName, __uuidof(MailMergeFieldName));
_COM_SMARTPTR_TYPEDEF(MailMergeFieldNames, __uuidof(MailMergeFieldNames));
_COM_SMARTPTR_TYPEDEF(MailMergeDataField, __uuidof(MailMergeDataField));
_COM_SMARTPTR_TYPEDEF(MailMergeDataFields, __uuidof(MailMergeDataFields));
_COM_SMARTPTR_TYPEDEF(CustomLabel, __uuidof(CustomLabel));
_COM_SMARTPTR_TYPEDEF(CustomLabels, __uuidof(CustomLabels));
_COM_SMARTPTR_TYPEDEF(Dialog, __uuidof(Dialog));
_COM_SMARTPTR_TYPEDEF(Dialogs, __uuidof(Dialogs));
_COM_SMARTPTR_TYPEDEF(LineNumbering, __uuidof(LineNumbering));
_COM_SMARTPTR_TYPEDEF(TextColumn, __uuidof(TextColumn));
_COM_SMARTPTR_TYPEDEF(TableOfAuthoritiesCategory, __uuidof(TableOfAuthoritiesCategory));
_COM_SMARTPTR_TYPEDEF(TablesOfAuthoritiesCategories, __uuidof(TablesOfAuthoritiesCategories));
_COM_SMARTPTR_TYPEDEF(CaptionLabel, __uuidof(CaptionLabel));
_COM_SMARTPTR_TYPEDEF(CaptionLabels, __uuidof(CaptionLabels));
_COM_SMARTPTR_TYPEDEF(AutoCaption, __uuidof(AutoCaption));
_COM_SMARTPTR_TYPEDEF(AutoCaptions, __uuidof(AutoCaptions));
_COM_SMARTPTR_TYPEDEF(wordAddIn, __uuidof(wordAddIn));
_COM_SMARTPTR_TYPEDEF(wordAddIns, __uuidof(wordAddIns));
_COM_SMARTPTR_TYPEDEF(Task, __uuidof(Task));
_COM_SMARTPTR_TYPEDEF(Tasks, __uuidof(Tasks));
_COM_SMARTPTR_TYPEDEF(PageNumber, __uuidof(PageNumber));
_COM_SMARTPTR_TYPEDEF(PageNumbers, __uuidof(PageNumbers));
_COM_SMARTPTR_TYPEDEF(HeadingStyle, __uuidof(HeadingStyle));
_COM_SMARTPTR_TYPEDEF(HeadingStyles, __uuidof(HeadingStyles));
_COM_SMARTPTR_TYPEDEF(KeyBinding, __uuidof(KeyBinding));
_COM_SMARTPTR_TYPEDEF(KeyBindings, __uuidof(KeyBindings));
_COM_SMARTPTR_TYPEDEF(KeysBoundTo, __uuidof(KeysBoundTo));
_COM_SMARTPTR_TYPEDEF(wordFileConverters, __uuidof(wordFileConverters));
_COM_SMARTPTR_TYPEDEF(SynonymInfo, __uuidof(SynonymInfo));
_COM_SMARTPTR_TYPEDEF(Zoom, __uuidof(Zoom));
_COM_SMARTPTR_TYPEDEF(Zooms, __uuidof(Zooms));
_COM_SMARTPTR_TYPEDEF(SpellingSuggestion, __uuidof(SpellingSuggestion));
_COM_SMARTPTR_TYPEDEF(SpellingSuggestions, __uuidof(SpellingSuggestions));
_COM_SMARTPTR_TYPEDEF(Dictionary, __uuidof(Dictionary));
_COM_SMARTPTR_TYPEDEF(Language, __uuidof(Language));
_COM_SMARTPTR_TYPEDEF(Languages, __uuidof(Languages));
_COM_SMARTPTR_TYPEDEF(Dictionaries, __uuidof(Dictionaries));
_COM_SMARTPTR_TYPEDEF(HangulHanjaConversionDictionaries, __uuidof(HangulHanjaConversionDictionaries));
_COM_SMARTPTR_TYPEDEF(ReadabilityStatistic, __uuidof(ReadabilityStatistic));
_COM_SMARTPTR_TYPEDEF(ReadabilityStatistics, __uuidof(ReadabilityStatistics));
_COM_SMARTPTR_TYPEDEF(MailMessage, __uuidof(MailMessage));
_COM_SMARTPTR_TYPEDEF(Mailer, __uuidof(Mailer));
_COM_SMARTPTR_TYPEDEF(WrapFormat, __uuidof(WrapFormat));
_COM_SMARTPTR_TYPEDEF(HangulAndAlphabetException, __uuidof(HangulAndAlphabetException));
_COM_SMARTPTR_TYPEDEF(HangulAndAlphabetExceptions, __uuidof(HangulAndAlphabetExceptions));
_COM_SMARTPTR_TYPEDEF(wordAdjustments, __uuidof(wordAdjustments));
_COM_SMARTPTR_TYPEDEF(wordCalloutFormat, __uuidof(wordCalloutFormat));
_COM_SMARTPTR_TYPEDEF(wordPictureFormat, __uuidof(wordPictureFormat));
_COM_SMARTPTR_TYPEDEF(wordShapeNode, __uuidof(wordShapeNode));
_COM_SMARTPTR_TYPEDEF(wordShapeNodes, __uuidof(wordShapeNodes));
_COM_SMARTPTR_TYPEDEF(wordTextEffectFormat, __uuidof(wordTextEffectFormat));
_COM_SMARTPTR_TYPEDEF(DocumentEvents, __uuidof(DocumentEvents));
_COM_SMARTPTR_TYPEDEF(Documents, __uuidof(Documents));
_COM_SMARTPTR_TYPEDEF(RecentFile, __uuidof(RecentFile));
_COM_SMARTPTR_TYPEDEF(RecentFiles, __uuidof(RecentFiles));
_COM_SMARTPTR_TYPEDEF(MailingLabel, __uuidof(MailingLabel));
_COM_SMARTPTR_TYPEDEF(Version, __uuidof(Version));
_COM_SMARTPTR_TYPEDEF(Versions, __uuidof(Versions));
_COM_SMARTPTR_TYPEDEF(OCXEvents, __uuidof(OCXEvents));
_COM_SMARTPTR_TYPEDEF(_LetterContent, __uuidof(_LetterContent));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents, __uuidof(IApplicationEvents));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents2, __uuidof(ApplicationEvents2));
_COM_SMARTPTR_TYPEDEF(TextColumns, __uuidof(TextColumns));
_COM_SMARTPTR_TYPEDEF(wordPageSetup, __uuidof(wordPageSetup));
_COM_SMARTPTR_TYPEDEF(Border, __uuidof(Border));
_COM_SMARTPTR_TYPEDEF(wordBorders, __uuidof(wordBorders));
_COM_SMARTPTR_TYPEDEF(Shading, __uuidof(Shading));
_COM_SMARTPTR_TYPEDEF(HorizontalLineFormat, __uuidof(HorizontalLineFormat));
_COM_SMARTPTR_TYPEDEF(Frameset, __uuidof(Frameset));
_COM_SMARTPTR_TYPEDEF(wordDefaultWebOptions, __uuidof(wordDefaultWebOptions));
_COM_SMARTPTR_TYPEDEF(wordWebOptions, __uuidof(wordWebOptions));
_COM_SMARTPTR_TYPEDEF(OtherCorrectionsException, __uuidof(OtherCorrectionsException));
_COM_SMARTPTR_TYPEDEF(OtherCorrectionsExceptions, __uuidof(OtherCorrectionsExceptions));
_COM_SMARTPTR_TYPEDEF(EmailSignatureEntry, __uuidof(EmailSignatureEntry));
_COM_SMARTPTR_TYPEDEF(CustomProperty, __uuidof(CustomProperty));
_COM_SMARTPTR_TYPEDEF(CustomProperties, __uuidof(CustomProperties));
_COM_SMARTPTR_TYPEDEF(MappedDataField, __uuidof(MappedDataField));
_COM_SMARTPTR_TYPEDEF(ConditionalStyle, __uuidof(ConditionalStyle));
_COM_SMARTPTR_TYPEDEF(FootnoteOptions, __uuidof(FootnoteOptions));
_COM_SMARTPTR_TYPEDEF(EndnoteOptions, __uuidof(EndnoteOptions));
_COM_SMARTPTR_TYPEDEF(Reviewer, __uuidof(Reviewer));
_COM_SMARTPTR_TYPEDEF(Reviewers, __uuidof(Reviewers));
_COM_SMARTPTR_TYPEDEF(TaskPane, __uuidof(TaskPane));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents3, __uuidof(ApplicationEvents3));
_COM_SMARTPTR_TYPEDEF(StyleSheet, __uuidof(StyleSheet));
_COM_SMARTPTR_TYPEDEF(StyleSheets, __uuidof(StyleSheets));
_COM_SMARTPTR_TYPEDEF(MappedDataFields, __uuidof(MappedDataFields));
_COM_SMARTPTR_TYPEDEF(MailMergeDataSource, __uuidof(MailMergeDataSource));
_COM_SMARTPTR_TYPEDEF(wordTableStyle, __uuidof(wordTableStyle));
_COM_SMARTPTR_TYPEDEF(TaskPanes, __uuidof(TaskPanes));
_COM_SMARTPTR_TYPEDEF(SmartTagRecognizer, __uuidof(SmartTagRecognizer));
_COM_SMARTPTR_TYPEDEF(SmartTagRecognizers, __uuidof(SmartTagRecognizers));
_COM_SMARTPTR_TYPEDEF(XMLSchemaReference, __uuidof(XMLSchemaReference));
_COM_SMARTPTR_TYPEDEF(XMLSchemaReferences, __uuidof(XMLSchemaReferences));
_COM_SMARTPTR_TYPEDEF(XSLTransform, __uuidof(XSLTransform));
_COM_SMARTPTR_TYPEDEF(XSLTransforms, __uuidof(XSLTransforms));
_COM_SMARTPTR_TYPEDEF(XMLNamespace, __uuidof(XMLNamespace));
_COM_SMARTPTR_TYPEDEF(XMLNamespaces, __uuidof(XMLNamespaces));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents4, __uuidof(ApplicationEvents4));
_COM_SMARTPTR_TYPEDEF(DocumentEvents2, __uuidof(DocumentEvents2));
_COM_SMARTPTR_TYPEDEF(SmartTagAction, __uuidof(SmartTagAction));
_COM_SMARTPTR_TYPEDEF(SmartTagActions, __uuidof(SmartTagActions));
_COM_SMARTPTR_TYPEDEF(SmartTagType, __uuidof(SmartTagType));
_COM_SMARTPTR_TYPEDEF(SmartTagTypes, __uuidof(SmartTagTypes));
_COM_SMARTPTR_TYPEDEF(Source, __uuidof(Source));
_COM_SMARTPTR_TYPEDEF(Sources, __uuidof(Sources));
_COM_SMARTPTR_TYPEDEF(Bibliography, __uuidof(Bibliography));
_COM_SMARTPTR_TYPEDEF(OMathAutoCorrectEntry, __uuidof(OMathAutoCorrectEntry));
_COM_SMARTPTR_TYPEDEF(OMathAutoCorrectEntries, __uuidof(OMathAutoCorrectEntries));
_COM_SMARTPTR_TYPEDEF(OMathRecognizedFunction, __uuidof(OMathRecognizedFunction));
_COM_SMARTPTR_TYPEDEF(OMathRecognizedFunctions, __uuidof(OMathRecognizedFunctions));
_COM_SMARTPTR_TYPEDEF(OMathAutoCorrect, __uuidof(OMathAutoCorrect));
_COM_SMARTPTR_TYPEDEF(XMLMapping, __uuidof(XMLMapping));
_COM_SMARTPTR_TYPEDEF(ContentControlListEntry, __uuidof(ContentControlListEntry));
_COM_SMARTPTR_TYPEDEF(ContentControlListEntries, __uuidof(ContentControlListEntries));
_COM_SMARTPTR_TYPEDEF(wordResearch, __uuidof(wordResearch));
_COM_SMARTPTR_TYPEDEF(wordSoftEdgeFormat, __uuidof(wordSoftEdgeFormat));
_COM_SMARTPTR_TYPEDEF(wordReflectionFormat, __uuidof(wordReflectionFormat));
_COM_SMARTPTR_TYPEDEF(wordView, __uuidof(wordView));
_COM_SMARTPTR_TYPEDEF(_ParagraphFormat, __uuidof(_ParagraphFormat));
_COM_SMARTPTR_TYPEDEF(wordColorFormat, __uuidof(wordColorFormat));
_COM_SMARTPTR_TYPEDEF(wordFillFormat, __uuidof(wordFillFormat));
_COM_SMARTPTR_TYPEDEF(wordLineFormat, __uuidof(wordLineFormat));
_COM_SMARTPTR_TYPEDEF(wordShadowFormat, __uuidof(wordShadowFormat));
_COM_SMARTPTR_TYPEDEF(wordThreeDFormat, __uuidof(wordThreeDFormat));
_COM_SMARTPTR_TYPEDEF(wordGlowFormat, __uuidof(wordGlowFormat));
_COM_SMARTPTR_TYPEDEF(wordChartData, __uuidof(wordChartData));
_COM_SMARTPTR_TYPEDEF(wordCorners, __uuidof(wordCorners));
_COM_SMARTPTR_TYPEDEF(wordChartBorder, __uuidof(wordChartBorder));
_COM_SMARTPTR_TYPEDEF(wordInterior, __uuidof(wordInterior));
_COM_SMARTPTR_TYPEDEF(wordChartFont, __uuidof(wordChartFont));
_COM_SMARTPTR_TYPEDEF(wordChartColorFormat, __uuidof(wordChartColorFormat));
_COM_SMARTPTR_TYPEDEF(wordChartFillFormat, __uuidof(wordChartFillFormat));
_COM_SMARTPTR_TYPEDEF(wordChartCharacters, __uuidof(wordChartCharacters));
_COM_SMARTPTR_TYPEDEF(wordChartFormat, __uuidof(wordChartFormat));
_COM_SMARTPTR_TYPEDEF(wordWalls, __uuidof(wordWalls));
_COM_SMARTPTR_TYPEDEF(wordFloor, __uuidof(wordFloor));
_COM_SMARTPTR_TYPEDEF(wordChartArea, __uuidof(wordChartArea));
_COM_SMARTPTR_TYPEDEF(wordSeriesLines, __uuidof(wordSeriesLines));
_COM_SMARTPTR_TYPEDEF(wordLeaderLines, __uuidof(wordLeaderLines));
_COM_SMARTPTR_TYPEDEF(wordGridlines, __uuidof(wordGridlines));
_COM_SMARTPTR_TYPEDEF(wordUpBars, __uuidof(wordUpBars));
_COM_SMARTPTR_TYPEDEF(wordDownBars, __uuidof(wordDownBars));
_COM_SMARTPTR_TYPEDEF(wordDataTable, __uuidof(wordDataTable));
_COM_SMARTPTR_TYPEDEF(wordDropLines, __uuidof(wordDropLines));
_COM_SMARTPTR_TYPEDEF(wordHiLoLines, __uuidof(wordHiLoLines));
_COM_SMARTPTR_TYPEDEF(wordLegend, __uuidof(wordLegend));
_COM_SMARTPTR_TYPEDEF(wordLegendKey, __uuidof(wordLegendKey));
_COM_SMARTPTR_TYPEDEF(wordLegendEntry, __uuidof(wordLegendEntry));
_COM_SMARTPTR_TYPEDEF(wordLegendEntries, __uuidof(wordLegendEntries));
_COM_SMARTPTR_TYPEDEF(wordErrorBars, __uuidof(wordErrorBars));
_COM_SMARTPTR_TYPEDEF(wordSeries, __uuidof(wordSeries));
_COM_SMARTPTR_TYPEDEF(wordSeriesCollection, __uuidof(wordSeriesCollection));
_COM_SMARTPTR_TYPEDEF(wordTickLabels, __uuidof(wordTickLabels));
_COM_SMARTPTR_TYPEDEF(wordChartGroup, __uuidof(wordChartGroup));
_COM_SMARTPTR_TYPEDEF(wordChartGroups, __uuidof(wordChartGroups));
_COM_SMARTPTR_TYPEDEF(wordDataLabel, __uuidof(wordDataLabel));
_COM_SMARTPTR_TYPEDEF(wordTrendline, __uuidof(wordTrendline));
_COM_SMARTPTR_TYPEDEF(wordTrendlines, __uuidof(wordTrendlines));
_COM_SMARTPTR_TYPEDEF(wordDataLabels, __uuidof(wordDataLabels));
_COM_SMARTPTR_TYPEDEF(wordPlotArea, __uuidof(wordPlotArea));
_COM_SMARTPTR_TYPEDEF(wordChartTitle, __uuidof(wordChartTitle));
_COM_SMARTPTR_TYPEDEF(wordChart, __uuidof(wordChart));
_COM_SMARTPTR_TYPEDEF(wordAxisTitle, __uuidof(wordAxisTitle));
_COM_SMARTPTR_TYPEDEF(wordDisplayUnitLabel, __uuidof(wordDisplayUnitLabel));
_COM_SMARTPTR_TYPEDEF(wordAxis, __uuidof(wordAxis));
_COM_SMARTPTR_TYPEDEF(wordAxes, __uuidof(wordAxes));
_COM_SMARTPTR_TYPEDEF(UndoRecord, __uuidof(UndoRecord));
_COM_SMARTPTR_TYPEDEF(wordProtectedViewWindow, __uuidof(wordProtectedViewWindow));
_COM_SMARTPTR_TYPEDEF(wordProtectedViewWindows, __uuidof(wordProtectedViewWindows));
_COM_SMARTPTR_TYPEDEF(_Font, __uuidof(_Font));
_COM_SMARTPTR_TYPEDEF(wordPoint, __uuidof(wordPoint));
_COM_SMARTPTR_TYPEDEF(wordPoints, __uuidof(wordPoints));
_COM_SMARTPTR_TYPEDEF(wordOptions, __uuidof(wordOptions));
_COM_SMARTPTR_TYPEDEF(_wordApplication, __uuidof(_wordApplication));
_COM_SMARTPTR_TYPEDEF(_wordGlobal, __uuidof(_wordGlobal));
_COM_SMARTPTR_TYPEDEF(_Document, __uuidof(_Document));
_COM_SMARTPTR_TYPEDEF(Template, __uuidof(Template));
_COM_SMARTPTR_TYPEDEF(Templates, __uuidof(Templates));
_COM_SMARTPTR_TYPEDEF(Bookmark, __uuidof(Bookmark));
_COM_SMARTPTR_TYPEDEF(Bookmarks, __uuidof(Bookmarks));
_COM_SMARTPTR_TYPEDEF(Window, __uuidof(Window));
_COM_SMARTPTR_TYPEDEF(Windows, __uuidof(Windows));
_COM_SMARTPTR_TYPEDEF(wordPane, __uuidof(wordPane));
_COM_SMARTPTR_TYPEDEF(wordPanes, __uuidof(wordPanes));
_COM_SMARTPTR_TYPEDEF(Range, __uuidof(Range));
_COM_SMARTPTR_TYPEDEF(Characters, __uuidof(Characters));
_COM_SMARTPTR_TYPEDEF(Words, __uuidof(Words));
_COM_SMARTPTR_TYPEDEF(Sentences, __uuidof(Sentences));
_COM_SMARTPTR_TYPEDEF(Paragraph, __uuidof(Paragraph));
_COM_SMARTPTR_TYPEDEF(Paragraphs, __uuidof(Paragraphs));
_COM_SMARTPTR_TYPEDEF(AutoCorrectEntry, __uuidof(AutoCorrectEntry));
_COM_SMARTPTR_TYPEDEF(AutoCorrectEntries, __uuidof(AutoCorrectEntries));
_COM_SMARTPTR_TYPEDEF(wordAutoCorrect, __uuidof(wordAutoCorrect));
_COM_SMARTPTR_TYPEDEF(Footnote, __uuidof(Footnote));
_COM_SMARTPTR_TYPEDEF(Footnotes, __uuidof(Footnotes));
_COM_SMARTPTR_TYPEDEF(Endnote, __uuidof(Endnote));
_COM_SMARTPTR_TYPEDEF(Endnotes, __uuidof(Endnotes));
_COM_SMARTPTR_TYPEDEF(wordComment, __uuidof(wordComment));
_COM_SMARTPTR_TYPEDEF(wordComments, __uuidof(wordComments));
_COM_SMARTPTR_TYPEDEF(AutoTextEntry, __uuidof(AutoTextEntry));
_COM_SMARTPTR_TYPEDEF(AutoTextEntries, __uuidof(AutoTextEntries));
_COM_SMARTPTR_TYPEDEF(Frame, __uuidof(Frame));
_COM_SMARTPTR_TYPEDEF(Replacement, __uuidof(Replacement));
_COM_SMARTPTR_TYPEDEF(Find, __uuidof(Find));
_COM_SMARTPTR_TYPEDEF(Frames, __uuidof(Frames));
_COM_SMARTPTR_TYPEDEF(FormField, __uuidof(FormField));
_COM_SMARTPTR_TYPEDEF(FormFields, __uuidof(FormFields));
_COM_SMARTPTR_TYPEDEF(TableOfFigures, __uuidof(TableOfFigures));
_COM_SMARTPTR_TYPEDEF(MailMergeField, __uuidof(MailMergeField));
_COM_SMARTPTR_TYPEDEF(MailMergeFields, __uuidof(MailMergeFields));
_COM_SMARTPTR_TYPEDEF(MailMerge, __uuidof(MailMerge));
_COM_SMARTPTR_TYPEDEF(TableOfContents, __uuidof(TableOfContents));
_COM_SMARTPTR_TYPEDEF(TableOfAuthorities, __uuidof(TableOfAuthorities));
_COM_SMARTPTR_TYPEDEF(Index, __uuidof(Index));
_COM_SMARTPTR_TYPEDEF(Subdocument, __uuidof(Subdocument));
_COM_SMARTPTR_TYPEDEF(Subdocuments, __uuidof(Subdocuments));
_COM_SMARTPTR_TYPEDEF(StoryRanges, __uuidof(StoryRanges));
_COM_SMARTPTR_TYPEDEF(ListParagraphs, __uuidof(ListParagraphs));
_COM_SMARTPTR_TYPEDEF(ProofreadingErrors, __uuidof(ProofreadingErrors));
_COM_SMARTPTR_TYPEDEF(EmailSignatureEntries, __uuidof(EmailSignatureEntries));
_COM_SMARTPTR_TYPEDEF(EmailSignature, __uuidof(EmailSignature));
_COM_SMARTPTR_TYPEDEF(Break, __uuidof(Break));
_COM_SMARTPTR_TYPEDEF(Breaks, __uuidof(Breaks));
_COM_SMARTPTR_TYPEDEF(Editor, __uuidof(Editor));
_COM_SMARTPTR_TYPEDEF(Editors, __uuidof(Editors));
_COM_SMARTPTR_TYPEDEF(OMathBreak, __uuidof(OMathBreak));
_COM_SMARTPTR_TYPEDEF(OMathBreaks, __uuidof(OMathBreaks));
_COM_SMARTPTR_TYPEDEF(CoAuthUpdate, __uuidof(CoAuthUpdate));
_COM_SMARTPTR_TYPEDEF(CoAuthUpdates, __uuidof(CoAuthUpdates));
_COM_SMARTPTR_TYPEDEF(ListFormat, __uuidof(ListFormat));
_COM_SMARTPTR_TYPEDEF(Sections, __uuidof(Sections));
_COM_SMARTPTR_TYPEDEF(Section, __uuidof(Section));
_COM_SMARTPTR_TYPEDEF(wordTable, __uuidof(wordTable));
_COM_SMARTPTR_TYPEDEF(Tables, __uuidof(Tables));
_COM_SMARTPTR_TYPEDEF(wordRow, __uuidof(wordRow));
_COM_SMARTPTR_TYPEDEF(wordRows, __uuidof(wordRows));
_COM_SMARTPTR_TYPEDEF(wordColumn, __uuidof(wordColumn));
_COM_SMARTPTR_TYPEDEF(wordCell, __uuidof(wordCell));
_COM_SMARTPTR_TYPEDEF(wordColumns, __uuidof(wordColumns));
_COM_SMARTPTR_TYPEDEF(Cells, __uuidof(Cells));
_COM_SMARTPTR_TYPEDEF(Fields, __uuidof(Fields));
_COM_SMARTPTR_TYPEDEF(Field, __uuidof(Field));
_COM_SMARTPTR_TYPEDEF(TablesOfFigures, __uuidof(TablesOfFigures));
_COM_SMARTPTR_TYPEDEF(TablesOfContents, __uuidof(TablesOfContents));
_COM_SMARTPTR_TYPEDEF(TablesOfAuthorities, __uuidof(TablesOfAuthorities));
_COM_SMARTPTR_TYPEDEF(Indexes, __uuidof(Indexes));
_COM_SMARTPTR_TYPEDEF(Styles, __uuidof(Styles));
_COM_SMARTPTR_TYPEDEF(Style, __uuidof(Style));
_COM_SMARTPTR_TYPEDEF(Envelope, __uuidof(Envelope));
_COM_SMARTPTR_TYPEDEF(Revision, __uuidof(Revision));
_COM_SMARTPTR_TYPEDEF(Revisions, __uuidof(Revisions));
_COM_SMARTPTR_TYPEDEF(EmailAuthor, __uuidof(EmailAuthor));
_COM_SMARTPTR_TYPEDEF(EmailOptions, __uuidof(EmailOptions));
_COM_SMARTPTR_TYPEDEF(Email, __uuidof(Email));
_COM_SMARTPTR_TYPEDEF(wordSelection, __uuidof(wordSelection));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents2, __uuidof(IApplicationEvents2));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents3, __uuidof(IApplicationEvents3));
_COM_SMARTPTR_TYPEDEF(wordHeadersFooters, __uuidof(wordHeadersFooters));
_COM_SMARTPTR_TYPEDEF(wordHeaderFooter, __uuidof(wordHeaderFooter));
_COM_SMARTPTR_TYPEDEF(ListLevel, __uuidof(ListLevel));
_COM_SMARTPTR_TYPEDEF(ListLevels, __uuidof(ListLevels));
_COM_SMARTPTR_TYPEDEF(ListTemplate, __uuidof(ListTemplate));
_COM_SMARTPTR_TYPEDEF(ListTemplates, __uuidof(ListTemplates));
_COM_SMARTPTR_TYPEDEF(List, __uuidof(List));
_COM_SMARTPTR_TYPEDEF(Lists, __uuidof(Lists));
_COM_SMARTPTR_TYPEDEF(ListGallery, __uuidof(ListGallery));
_COM_SMARTPTR_TYPEDEF(ListGalleries, __uuidof(ListGalleries));
_COM_SMARTPTR_TYPEDEF(wordHyperlinks, __uuidof(wordHyperlinks));
_COM_SMARTPTR_TYPEDEF(wordHyperlink, __uuidof(wordHyperlink));
_COM_SMARTPTR_TYPEDEF(wordShapes, __uuidof(wordShapes));
_COM_SMARTPTR_TYPEDEF(wordShapeRange, __uuidof(wordShapeRange));
_COM_SMARTPTR_TYPEDEF(wordGroupShapes, __uuidof(wordGroupShapes));
_COM_SMARTPTR_TYPEDEF(wordShape, __uuidof(wordShape));
_COM_SMARTPTR_TYPEDEF(wordTextFrame, __uuidof(wordTextFrame));
_COM_SMARTPTR_TYPEDEF(InlineShape, __uuidof(InlineShape));
_COM_SMARTPTR_TYPEDEF(InlineShapes, __uuidof(InlineShapes));
_COM_SMARTPTR_TYPEDEF(wordConnectorFormat, __uuidof(wordConnectorFormat));
_COM_SMARTPTR_TYPEDEF(wordFreeformBuilder, __uuidof(wordFreeformBuilder));
_COM_SMARTPTR_TYPEDEF(wordCanvasShapes, __uuidof(wordCanvasShapes));
_COM_SMARTPTR_TYPEDEF(HTMLDivision, __uuidof(HTMLDivision));
_COM_SMARTPTR_TYPEDEF(HTMLDivisions, __uuidof(HTMLDivisions));
_COM_SMARTPTR_TYPEDEF(wordDiagramNode, __uuidof(wordDiagramNode));
_COM_SMARTPTR_TYPEDEF(wordDiagramNodeChildren, __uuidof(wordDiagramNodeChildren));
_COM_SMARTPTR_TYPEDEF(wordDiagramNodes, __uuidof(wordDiagramNodes));
_COM_SMARTPTR_TYPEDEF(wordDiagram, __uuidof(wordDiagram));
_COM_SMARTPTR_TYPEDEF(SmartTag, __uuidof(SmartTag));
_COM_SMARTPTR_TYPEDEF(SmartTags, __uuidof(SmartTags));
_COM_SMARTPTR_TYPEDEF(Line, __uuidof(Line));
_COM_SMARTPTR_TYPEDEF(Lines, __uuidof(Lines));
_COM_SMARTPTR_TYPEDEF(Rectangle, __uuidof(Rectangle));
_COM_SMARTPTR_TYPEDEF(Rectangles, __uuidof(Rectangles));
_COM_SMARTPTR_TYPEDEF(Page, __uuidof(Page));
_COM_SMARTPTR_TYPEDEF(wordPages, __uuidof(wordPages));
_COM_SMARTPTR_TYPEDEF(XMLNode, __uuidof(XMLNode));
_COM_SMARTPTR_TYPEDEF(XMLNodes, __uuidof(XMLNodes));
_COM_SMARTPTR_TYPEDEF(XMLChildNodeSuggestion, __uuidof(XMLChildNodeSuggestion));
_COM_SMARTPTR_TYPEDEF(XMLChildNodeSuggestions, __uuidof(XMLChildNodeSuggestions));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents4, __uuidof(IApplicationEvents4));
_COM_SMARTPTR_TYPEDEF(OMaths, __uuidof(OMaths));
_COM_SMARTPTR_TYPEDEF(OMath, __uuidof(OMath));
_COM_SMARTPTR_TYPEDEF(OMathArgs, __uuidof(OMathArgs));
_COM_SMARTPTR_TYPEDEF(OMathAcc, __uuidof(OMathAcc));
_COM_SMARTPTR_TYPEDEF(OMathBar, __uuidof(OMathBar));
_COM_SMARTPTR_TYPEDEF(OMathBox, __uuidof(OMathBox));
_COM_SMARTPTR_TYPEDEF(OMathBorderBox, __uuidof(OMathBorderBox));
_COM_SMARTPTR_TYPEDEF(OMathDelim, __uuidof(OMathDelim));
_COM_SMARTPTR_TYPEDEF(OMathEqArray, __uuidof(OMathEqArray));
_COM_SMARTPTR_TYPEDEF(OMathFrac, __uuidof(OMathFrac));
_COM_SMARTPTR_TYPEDEF(OMathFunc, __uuidof(OMathFunc));
_COM_SMARTPTR_TYPEDEF(OMathGroupChar, __uuidof(OMathGroupChar));
_COM_SMARTPTR_TYPEDEF(OMathMatRow, __uuidof(OMathMatRow));
_COM_SMARTPTR_TYPEDEF(OMathMatRows, __uuidof(OMathMatRows));
_COM_SMARTPTR_TYPEDEF(OMathMatCol, __uuidof(OMathMatCol));
_COM_SMARTPTR_TYPEDEF(OMathMatCols, __uuidof(OMathMatCols));
_COM_SMARTPTR_TYPEDEF(OMathMat, __uuidof(OMathMat));
_COM_SMARTPTR_TYPEDEF(OMathNary, __uuidof(OMathNary));
_COM_SMARTPTR_TYPEDEF(OMathPhantom, __uuidof(OMathPhantom));
_COM_SMARTPTR_TYPEDEF(OMathRad, __uuidof(OMathRad));
_COM_SMARTPTR_TYPEDEF(OMathScrSub, __uuidof(OMathScrSub));
_COM_SMARTPTR_TYPEDEF(OMathScrSup, __uuidof(OMathScrSup));
_COM_SMARTPTR_TYPEDEF(OMathFunctions, __uuidof(OMathFunctions));
_COM_SMARTPTR_TYPEDEF(OMathFunction, __uuidof(OMathFunction));
_COM_SMARTPTR_TYPEDEF(OMathLimLow, __uuidof(OMathLimLow));
_COM_SMARTPTR_TYPEDEF(OMathLimUpp, __uuidof(OMathLimUpp));
_COM_SMARTPTR_TYPEDEF(OMathScrPre, __uuidof(OMathScrPre));
_COM_SMARTPTR_TYPEDEF(OMathScrSubSup, __uuidof(OMathScrSubSup));
_COM_SMARTPTR_TYPEDEF(ContentControls, __uuidof(ContentControls));
_COM_SMARTPTR_TYPEDEF(ContentControl, __uuidof(ContentControl));
_COM_SMARTPTR_TYPEDEF(BuildingBlockTypes, __uuidof(BuildingBlockTypes));
_COM_SMARTPTR_TYPEDEF(BuildingBlockType, __uuidof(BuildingBlockType));
_COM_SMARTPTR_TYPEDEF(Categories, __uuidof(Categories));
_COM_SMARTPTR_TYPEDEF(Category, __uuidof(Category));
_COM_SMARTPTR_TYPEDEF(BuildingBlock, __uuidof(BuildingBlock));
_COM_SMARTPTR_TYPEDEF(BuildingBlocks, __uuidof(BuildingBlocks));
_COM_SMARTPTR_TYPEDEF(BuildingBlockEntries, __uuidof(BuildingBlockEntries));
_COM_SMARTPTR_TYPEDEF(CoAuthLock, __uuidof(CoAuthLock));
_COM_SMARTPTR_TYPEDEF(CoAuthLocks, __uuidof(CoAuthLocks));
_COM_SMARTPTR_TYPEDEF(CoAuthor, __uuidof(CoAuthor));
_COM_SMARTPTR_TYPEDEF(CoAuthors, __uuidof(CoAuthors));
_COM_SMARTPTR_TYPEDEF(CoAuthoring, __uuidof(CoAuthoring));

//
// Type library items
//

enum WdMailSystem
{
    wdNoMailSystem = 0,
    wdMAPI = 1,
    wdPowerTalk = 2,
    wdMAPIandPowerTalk = 3
};

enum WdTemplateType
{
    wdNormalTemplate = 0,
    wdGlobalTemplate = 1,
    wdAttachedTemplate = 2
};

enum WdContinue
{
    wdContinueDisabled = 0,
    wdResetList = 1,
    wdContinueList = 2
};

enum WdIMEMode
{
    wdIMEModeNoControl = 0,
    wdIMEModeOn = 1,
    wdIMEModeOff = 2,
    wdIMEModeHiragana = 4,
    wdIMEModeKatakana = 5,
    wdIMEModeKatakanaHalf = 6,
    wdIMEModeAlphaFull = 7,
    wdIMEModeAlpha = 8,
    wdIMEModeHangulFull = 9,
    wdIMEModeHangul = 10
};

enum WdBaselineAlignment
{
    wdBaselineAlignTop = 0,
    wdBaselineAlignCenter = 1,
    wdBaselineAlignBaseline = 2,
    wdBaselineAlignFarEast50 = 3,
    wdBaselineAlignAuto = 4
};

enum WdIndexFilter
{
    wdIndexFilterNone = 0,
    wdIndexFilterAiueo = 1,
    wdIndexFilterAkasatana = 2,
    wdIndexFilterChosung = 3,
    wdIndexFilterLow = 4,
    wdIndexFilterMedium = 5,
    wdIndexFilterFull = 6
};

enum WdIndexSortBy
{
    wdIndexSortByStroke = 0,
    wdIndexSortBySyllable = 1
};

enum WdJustificationMode
{
    wdJustificationModeExpand = 0,
    wdJustificationModeCompress = 1,
    wdJustificationModeCompressKana = 2
};

enum WdFarEastLineBreakLevel
{
    wdFarEastLineBreakLevelNormal = 0,
    wdFarEastLineBreakLevelStrict = 1,
    wdFarEastLineBreakLevelCustom = 2
};

enum WdMultipleWordConversionsMode
{
    wdHangulToHanja = 0,
    wdHanjaToHangul = 1
};

enum WdColorIndex
{
    wdAuto = 0,
    wdBlack = 1,
    wdBlue = 2,
    wdTurquoise = 3,
    wdBrightGreen = 4,
    wdPink = 5,
    wdRed = 6,
    wdYellow = 7,
    wdWhite = 8,
    wdDarkBlue = 9,
    wdTeal = 10,
    wdGreen = 11,
    wdViolet = 12,
    wdDarkRed = 13,
    wdDarkYellow = 14,
    wdGray50 = 15,
    wdGray25 = 16,
    wdByAuthor = -1,
    wdNoHighlight = 0
};

enum WdTextureIndex
{
    wdTextureNone = 0,
    wdTexture2Pt5Percent = 25,
    wdTexture5Percent = 50,
    wdTexture7Pt5Percent = 75,
    wdTexture10Percent = 100,
    wdTexture12Pt5Percent = 125,
    wdTexture15Percent = 150,
    wdTexture17Pt5Percent = 175,
    wdTexture20Percent = 200,
    wdTexture22Pt5Percent = 225,
    wdTexture25Percent = 250,
    wdTexture27Pt5Percent = 275,
    wdTexture30Percent = 300,
    wdTexture32Pt5Percent = 325,
    wdTexture35Percent = 350,
    wdTexture37Pt5Percent = 375,
    wdTexture40Percent = 400,
    wdTexture42Pt5Percent = 425,
    wdTexture45Percent = 450,
    wdTexture47Pt5Percent = 475,
    wdTexture50Percent = 500,
    wdTexture52Pt5Percent = 525,
    wdTexture55Percent = 550,
    wdTexture57Pt5Percent = 575,
    wdTexture60Percent = 600,
    wdTexture62Pt5Percent = 625,
    wdTexture65Percent = 650,
    wdTexture67Pt5Percent = 675,
    wdTexture70Percent = 700,
    wdTexture72Pt5Percent = 725,
    wdTexture75Percent = 750,
    wdTexture77Pt5Percent = 775,
    wdTexture80Percent = 800,
    wdTexture82Pt5Percent = 825,
    wdTexture85Percent = 850,
    wdTexture87Pt5Percent = 875,
    wdTexture90Percent = 900,
    wdTexture92Pt5Percent = 925,
    wdTexture95Percent = 950,
    wdTexture97Pt5Percent = 975,
    wdTextureSolid = 1000,
    wdTextureDarkHorizontal = -1,
    wdTextureDarkVertical = -2,
    wdTextureDarkDiagonalDown = -3,
    wdTextureDarkDiagonalUp = -4,
    wdTextureDarkCross = -5,
    wdTextureDarkDiagonalCross = -6,
    wdTextureHorizontal = -7,
    wdTextureVertical = -8,
    wdTextureDiagonalDown = -9,
    wdTextureDiagonalUp = -10,
    wdTextureCross = -11,
    wdTextureDiagonalCross = -12
};

enum WdUnderline
{
    wdUnderlineNone = 0,
    wdUnderlineSingle = 1,
    wdUnderlineWords = 2,
    wdUnderlineDouble = 3,
    wdUnderlineDotted = 4,
    wdUnderlineThick = 6,
    wdUnderlineDash = 7,
    wdUnderlineDotDash = 9,
    wdUnderlineDotDotDash = 10,
    wdUnderlineWavy = 11,
    wdUnderlineWavyHeavy = 27,
    wdUnderlineDottedHeavy = 20,
    wdUnderlineDashHeavy = 23,
    wdUnderlineDotDashHeavy = 25,
    wdUnderlineDotDotDashHeavy = 26,
    wdUnderlineDashLong = 39,
    wdUnderlineDashLongHeavy = 55,
    wdUnderlineWavyDouble = 43
};

enum WdEmphasisMark
{
    wdEmphasisMarkNone = 0,
    wdEmphasisMarkOverSolidCircle = 1,
    wdEmphasisMarkOverComma = 2,
    wdEmphasisMarkOverWhiteCircle = 3,
    wdEmphasisMarkUnderSolidCircle = 4
};

enum WdInternationalIndex
{
    wdListSeparator = 17,
    wdDecimalSeparator = 18,
    wdThousandsSeparator = 19,
    wdCurrencyCode = 20,
    wd24HourClock = 21,
    wdInternationalAM = 22,
    wdInternationalPM = 23,
    wdTimeSeparator = 24,
    wdDateSeparator = 25,
    wdProductLanguageID = 26
};

enum WdAutoMacros
{
    wdAutoExec = 0,
    wdAutoNew = 1,
    wdAutoOpen = 2,
    wdAutoClose = 3,
    wdAutoExit = 4,
    wdAutoSync = 5
};

enum WdCaptionPosition
{
    wdCaptionPositionAbove = 0,
    wdCaptionPositionBelow = 1
};

enum WdCountry
{
    wdUS = 1,
    wdCanada = 2,
    wdLatinAmerica = 3,
    wdNetherlands = 31,
    wdFrance = 33,
    wdSpain = 34,
    wdItaly = 39,
    wdUK = 44,
    wdDenmark = 45,
    wdSweden = 46,
    wdNorway = 47,
    wdGermany = 49,
    wdPeru = 51,
    wdMexico = 52,
    wdArgentina = 54,
    wdBrazil = 55,
    wdChile = 56,
    wdVenezuela = 58,
    wdJapan = 81,
    wdTaiwan = 886,
    wdChina = 86,
    wdKorea = 82,
    wdFinland = 358,
    wdIceland = 354
};

enum WdHeadingSeparator
{
    wdHeadingSeparatorNone = 0,
    wdHeadingSeparatorBlankLine = 1,
    wdHeadingSeparatorLetter = 2,
    wdHeadingSeparatorLetterLow = 3,
    wdHeadingSeparatorLetterFull = 4
};

enum WdSeparatorType
{
    wdSeparatorHyphen = 0,
    wdSeparatorPeriod = 1,
    wdSeparatorColon = 2,
    wdSeparatorEmDash = 3,
    wdSeparatorEnDash = 4
};

enum WdPageNumberAlignment
{
    wdAlignPageNumberLeft = 0,
    wdAlignPageNumberCenter = 1,
    wdAlignPageNumberRight = 2,
    wdAlignPageNumberInside = 3,
    wdAlignPageNumberOutside = 4
};

enum WdBorderType
{
    wdBorderTop = -1,
    wdBorderLeft = -2,
    wdBorderBottom = -3,
    wdBorderRight = -4,
    wdBorderHorizontal = -5,
    wdBorderVertical = -6,
    wdBorderDiagonalDown = -7,
    wdBorderDiagonalUp = -8
};

enum WdBorderTypeHID
{
    emptyenum = 0
};

enum WdFramePosition
{
    wdFrameTop = -999999,
    wdFrameLeft = -999998,
    wdFrameBottom = -999997,
    wdFrameRight = -999996,
    wdFrameCenter = -999995,
    wdFrameInside = -999994,
    wdFrameOutside = -999993
};

enum WdAnimation
{
    wdAnimationNone = 0,
    wdAnimationLasVegasLights = 1,
    wdAnimationBlinkingBackground = 2,
    wdAnimationSparkleText = 3,
    wdAnimationMarchingBlackAnts = 4,
    wdAnimationMarchingRedAnts = 5,
    wdAnimationShimmer = 6
};

enum WdCharacterCase
{
    wdNextCase = -1,
    wdLowerCase = 0,
    wdUpperCase = 1,
    wdTitleWord = 2,
    wdTitleSentence = 4,
    wdToggleCase = 5,
    wdHalfWidth = 6,
    wdFullWidth = 7,
    wdKatakana = 8,
    wdHiragana = 9
};

enum WdCharacterCaseHID
{
//  emptyenum = 0
};

enum WdSummaryMode
{
    wdSummaryModeHighlight = 0,
    wdSummaryModeHideAllButSummary = 1,
    wdSummaryModeInsert = 2,
    wdSummaryModeCreateNew = 3
};

enum WdSummaryLength
{
    wd10Sentences = -2,
    wd20Sentences = -3,
    wd100Words = -4,
    wd500Words = -5,
    wd10Percent = -6,
    wd25Percent = -7,
    wd50Percent = -8,
    wd75Percent = -9
};

enum WdStyleType
{
    wdStyleTypeParagraph = 1,
    wdStyleTypeCharacter = 2,
    wdStyleTypeTable = 3,
    wdStyleTypeList = 4,
    wdStyleTypeParagraphOnly = 5,
    wdStyleTypeLinked = 6
};

enum WdUnits
{
    wdCharacter = 1,
    wdWord = 2,
    wdSentence = 3,
    wdParagraph = 4,
    wdLine = 5,
    wdStory = 6,
    wdScreen = 7,
    wdSection = 8,
    wdColumn = 9,
    wdRow = 10,
    wdWindow = 11,
    wdCell = 12,
    wdCharacterFormatting = 13,
    wdParagraphFormatting = 14,
    wdTable = 15,
    wdItem = 16
};

enum WdGoToItem
{
    wdGoToBookmark = -1,
    wdGoToSection = 0,
    wdGoToPage = 1,
    wdGoToTable = 2,
    wdGoToLine = 3,
    wdGoToFootnote = 4,
    wdGoToEndnote = 5,
    wdGoToComment = 6,
    wdGoToField = 7,
    wdGoToGraphic = 8,
    wdGoToObject = 9,
    wdGoToEquation = 10,
    wdGoToHeading = 11,
    wdGoToPercent = 12,
    wdGoToSpellingError = 13,
    wdGoToGrammaticalError = 14,
    wdGoToProofreadingError = 15
};

enum WdGoToDirection
{
    wdGoToFirst = 1,
    wdGoToLast = -1,
    wdGoToNext = 2,
    wdGoToRelative = 2,
    wdGoToPrevious = 3,
    wdGoToAbsolute = 1
};

enum WdCollapseDirection
{
    wdCollapseStart = 1,
    wdCollapseEnd = 0
};

enum WdRowHeightRule
{
    wdRowHeightAuto = 0,
    wdRowHeightAtLeast = 1,
    wdRowHeightExactly = 2
};

enum WdFrameSizeRule
{
    wdFrameAuto = 0,
    wdFrameAtLeast = 1,
    wdFrameExact = 2
};

enum WdInsertCells
{
    wdInsertCellsShiftRight = 0,
    wdInsertCellsShiftDown = 1,
    wdInsertCellsEntireRow = 2,
    wdInsertCellsEntireColumn = 3
};

enum WdDeleteCells
{
    wdDeleteCellsShiftLeft = 0,
    wdDeleteCellsShiftUp = 1,
    wdDeleteCellsEntireRow = 2,
    wdDeleteCellsEntireColumn = 3
};

enum WdListApplyTo
{
    wdListApplyToWholeList = 0,
    wdListApplyToThisPointForward = 1,
    wdListApplyToSelection = 2
};

enum WdAlertLevel
{
    wdAlertsNone = 0,
    wdAlertsMessageBox = -2,
    wdAlertsAll = -1
};

enum WdCursorType
{
    wdCursorWait = 0,
    wdCursorIBeam = 1,
    wdCursorNormal = 2,
    wdCursorNorthwestArrow = 3
};

enum WdEnableCancelKey
{
    wdCancelDisabled = 0,
    wdCancelInterrupt = 1
};

enum WdRulerStyle
{
    wdAdjustNone = 0,
    wdAdjustProportional = 1,
    wdAdjustFirstColumn = 2,
    wdAdjustSameWidth = 3
};

enum WdParagraphAlignment
{
    wdAlignParagraphLeft = 0,
    wdAlignParagraphCenter = 1,
    wdAlignParagraphRight = 2,
    wdAlignParagraphJustify = 3,
    wdAlignParagraphDistribute = 4,
    wdAlignParagraphJustifyMed = 5,
    wdAlignParagraphJustifyHi = 7,
    wdAlignParagraphJustifyLow = 8,
    wdAlignParagraphThaiJustify = 9
};

enum WdParagraphAlignmentHID
{
//  emptyenum = 0
};

enum WdListLevelAlignment
{
    wdListLevelAlignLeft = 0,
    wdListLevelAlignCenter = 1,
    wdListLevelAlignRight = 2
};

enum WdRowAlignment
{
    wdAlignRowLeft = 0,
    wdAlignRowCenter = 1,
    wdAlignRowRight = 2
};

enum WdTabAlignment
{
    wdAlignTabLeft = 0,
    wdAlignTabCenter = 1,
    wdAlignTabRight = 2,
    wdAlignTabDecimal = 3,
    wdAlignTabBar = 4,
    wdAlignTabList = 6
};

enum WdVerticalAlignment
{
    wdAlignVerticalTop = 0,
    wdAlignVerticalCenter = 1,
    wdAlignVerticalJustify = 2,
    wdAlignVerticalBottom = 3
};

enum WdCellVerticalAlignment
{
    wdCellAlignVerticalTop = 0,
    wdCellAlignVerticalCenter = 1,
    wdCellAlignVerticalBottom = 3
};

enum WdTrailingCharacter
{
    wdTrailingTab = 0,
    wdTrailingSpace = 1,
    wdTrailingNone = 2
};

enum WdListGalleryType
{
    wdBulletGallery = 1,
    wdNumberGallery = 2,
    wdOutlineNumberGallery = 3
};

enum WdListNumberStyle
{
    wdListNumberStyleArabic = 0,
    wdListNumberStyleUppercaseRoman = 1,
    wdListNumberStyleLowercaseRoman = 2,
    wdListNumberStyleUppercaseLetter = 3,
    wdListNumberStyleLowercaseLetter = 4,
    wdListNumberStyleOrdinal = 5,
    wdListNumberStyleCardinalText = 6,
    wdListNumberStyleOrdinalText = 7,
    wdListNumberStyleKanji = 10,
    wdListNumberStyleKanjiDigit = 11,
    wdListNumberStyleAiueoHalfWidth = 12,
    wdListNumberStyleIrohaHalfWidth = 13,
    wdListNumberStyleArabicFullWidth = 14,
    wdListNumberStyleKanjiTraditional = 16,
    wdListNumberStyleKanjiTraditional2 = 17,
    wdListNumberStyleNumberInCircle = 18,
    wdListNumberStyleAiueo = 20,
    wdListNumberStyleIroha = 21,
    wdListNumberStyleArabicLZ = 22,
    wdListNumberStyleBullet = 23,
    wdListNumberStyleGanada = 24,
    wdListNumberStyleChosung = 25,
    wdListNumberStyleGBNum1 = 26,
    wdListNumberStyleGBNum2 = 27,
    wdListNumberStyleGBNum3 = 28,
    wdListNumberStyleGBNum4 = 29,
    wdListNumberStyleZodiac1 = 30,
    wdListNumberStyleZodiac2 = 31,
    wdListNumberStyleZodiac3 = 32,
    wdListNumberStyleTradChinNum1 = 33,
    wdListNumberStyleTradChinNum2 = 34,
    wdListNumberStyleTradChinNum3 = 35,
    wdListNumberStyleTradChinNum4 = 36,
    wdListNumberStyleSimpChinNum1 = 37,
    wdListNumberStyleSimpChinNum2 = 38,
    wdListNumberStyleSimpChinNum3 = 39,
    wdListNumberStyleSimpChinNum4 = 40,
    wdListNumberStyleHanjaRead = 41,
    wdListNumberStyleHanjaReadDigit = 42,
    wdListNumberStyleHangul = 43,
    wdListNumberStyleHanja = 44,
    wdListNumberStyleHebrew1 = 45,
    wdListNumberStyleArabic1 = 46,
    wdListNumberStyleHebrew2 = 47,
    wdListNumberStyleArabic2 = 48,
    wdListNumberStyleHindiLetter1 = 49,
    wdListNumberStyleHindiLetter2 = 50,
    wdListNumberStyleHindiArabic = 51,
    wdListNumberStyleHindiCardinalText = 52,
    wdListNumberStyleThaiLetter = 53,
    wdListNumberStyleThaiArabic = 54,
    wdListNumberStyleThaiCardinalText = 55,
    wdListNumberStyleVietCardinalText = 56,
    wdListNumberStyleLowercaseRussian = 58,
    wdListNumberStyleUppercaseRussian = 59,
    wdListNumberStyleLowercaseGreek = 60,
    wdListNumberStyleUppercaseGreek = 61,
    wdListNumberStyleArabicLZ2 = 62,
    wdListNumberStyleArabicLZ3 = 63,
    wdListNumberStyleArabicLZ4 = 64,
    wdListNumberStyleLowercaseTurkish = 65,
    wdListNumberStyleUppercaseTurkish = 66,
    wdListNumberStyleLowercaseBulgarian = 67,
    wdListNumberStyleUppercaseBulgarian = 68,
    wdListNumberStylePictureBullet = 249,
    wdListNumberStyleLegal = 253,
    wdListNumberStyleLegalLZ = 254,
    wdListNumberStyleNone = 255
};

enum WdListNumberStyleHID
{
//  emptyenum = 0
};

enum WdNoteNumberStyle
{
    wdNoteNumberStyleArabic = 0,
    wdNoteNumberStyleUppercaseRoman = 1,
    wdNoteNumberStyleLowercaseRoman = 2,
    wdNoteNumberStyleUppercaseLetter = 3,
    wdNoteNumberStyleLowercaseLetter = 4,
    wdNoteNumberStyleSymbol = 9,
    wdNoteNumberStyleArabicFullWidth = 14,
    wdNoteNumberStyleKanji = 10,
    wdNoteNumberStyleKanjiDigit = 11,
    wdNoteNumberStyleKanjiTraditional = 16,
    wdNoteNumberStyleNumberInCircle = 18,
    wdNoteNumberStyleHanjaRead = 41,
    wdNoteNumberStyleHanjaReadDigit = 42,
    wdNoteNumberStyleTradChinNum1 = 33,
    wdNoteNumberStyleTradChinNum2 = 34,
    wdNoteNumberStyleSimpChinNum1 = 37,
    wdNoteNumberStyleSimpChinNum2 = 38,
    wdNoteNumberStyleHebrewLetter1 = 45,
    wdNoteNumberStyleArabicLetter1 = 46,
    wdNoteNumberStyleHebrewLetter2 = 47,
    wdNoteNumberStyleArabicLetter2 = 48,
    wdNoteNumberStyleHindiLetter1 = 49,
    wdNoteNumberStyleHindiLetter2 = 50,
    wdNoteNumberStyleHindiArabic = 51,
    wdNoteNumberStyleHindiCardinalText = 52,
    wdNoteNumberStyleThaiLetter = 53,
    wdNoteNumberStyleThaiArabic = 54,
    wdNoteNumberStyleThaiCardinalText = 55,
    wdNoteNumberStyleVietCardinalText = 56
};

enum WdNoteNumberStyleHID
{
//  emptyenum = 0
};

enum WdCaptionNumberStyle
{
    wdCaptionNumberStyleArabic = 0,
    wdCaptionNumberStyleUppercaseRoman = 1,
    wdCaptionNumberStyleLowercaseRoman = 2,
    wdCaptionNumberStyleUppercaseLetter = 3,
    wdCaptionNumberStyleLowercaseLetter = 4,
    wdCaptionNumberStyleArabicFullWidth = 14,
    wdCaptionNumberStyleKanji = 10,
    wdCaptionNumberStyleKanjiDigit = 11,
    wdCaptionNumberStyleKanjiTraditional = 16,
    wdCaptionNumberStyleNumberInCircle = 18,
    wdCaptionNumberStyleGanada = 24,
    wdCaptionNumberStyleChosung = 25,
    wdCaptionNumberStyleZodiac1 = 30,
    wdCaptionNumberStyleZodiac2 = 31,
    wdCaptionNumberStyleHanjaRead = 41,
    wdCaptionNumberStyleHanjaReadDigit = 42,
    wdCaptionNumberStyleTradChinNum2 = 34,
    wdCaptionNumberStyleTradChinNum3 = 35,
    wdCaptionNumberStyleSimpChinNum2 = 38,
    wdCaptionNumberStyleSimpChinNum3 = 39,
    wdCaptionNumberStyleHebrewLetter1 = 45,
    wdCaptionNumberStyleArabicLetter1 = 46,
    wdCaptionNumberStyleHebrewLetter2 = 47,
    wdCaptionNumberStyleArabicLetter2 = 48,
    wdCaptionNumberStyleHindiLetter1 = 49,
    wdCaptionNumberStyleHindiLetter2 = 50,
    wdCaptionNumberStyleHindiArabic = 51,
    wdCaptionNumberStyleHindiCardinalText = 52,
    wdCaptionNumberStyleThaiLetter = 53,
    wdCaptionNumberStyleThaiArabic = 54,
    wdCaptionNumberStyleThaiCardinalText = 55,
    wdCaptionNumberStyleVietCardinalText = 56
};

enum WdCaptionNumberStyleHID
{
//  emptyenum = 0
};

enum WdPageNumberStyle
{
    wdPageNumberStyleArabic = 0,
    wdPageNumberStyleUppercaseRoman = 1,
    wdPageNumberStyleLowercaseRoman = 2,
    wdPageNumberStyleUppercaseLetter = 3,
    wdPageNumberStyleLowercaseLetter = 4,
    wdPageNumberStyleArabicFullWidth = 14,
    wdPageNumberStyleKanji = 10,
    wdPageNumberStyleKanjiDigit = 11,
    wdPageNumberStyleKanjiTraditional = 16,
    wdPageNumberStyleNumberInCircle = 18,
    wdPageNumberStyleHanjaRead = 41,
    wdPageNumberStyleHanjaReadDigit = 42,
    wdPageNumberStyleTradChinNum1 = 33,
    wdPageNumberStyleTradChinNum2 = 34,
    wdPageNumberStyleSimpChinNum1 = 37,
    wdPageNumberStyleSimpChinNum2 = 38,
    wdPageNumberStyleHebrewLetter1 = 45,
    wdPageNumberStyleArabicLetter1 = 46,
    wdPageNumberStyleHebrewLetter2 = 47,
    wdPageNumberStyleArabicLetter2 = 48,
    wdPageNumberStyleHindiLetter1 = 49,
    wdPageNumberStyleHindiLetter2 = 50,
    wdPageNumberStyleHindiArabic = 51,
    wdPageNumberStyleHindiCardinalText = 52,
    wdPageNumberStyleThaiLetter = 53,
    wdPageNumberStyleThaiArabic = 54,
    wdPageNumberStyleThaiCardinalText = 55,
    wdPageNumberStyleVietCardinalText = 56,
    wdPageNumberStyleNumberInDash = 57
};

enum WdPageNumberStyleHID
{
//  emptyenum = 0
};

enum WdStatistic
{
    wdStatisticWords = 0,
    wdStatisticLines = 1,
    wdStatisticPages = 2,
    wdStatisticCharacters = 3,
    wdStatisticParagraphs = 4,
    wdStatisticCharactersWithSpaces = 5,
    wdStatisticFarEastCharacters = 6
};

enum WdStatisticHID
{
//  emptyenum = 0
};

enum WdBuiltInProperty
{
    wdPropertyTitle = 1,
    wdPropertySubject = 2,
    wdPropertyAuthor = 3,
    wdPropertyKeywords = 4,
    wdPropertyComments = 5,
    wdPropertyTemplate = 6,
    wdPropertyLastAuthor = 7,
    wdPropertyRevision = 8,
    wdPropertyAppName = 9,
    wdPropertyTimeLastPrinted = 10,
    wdPropertyTimeCreated = 11,
    wdPropertyTimeLastSaved = 12,
    wdPropertyVBATotalEdit = 13,
    wdPropertyPages = 14,
    wdPropertyWords = 15,
    wdPropertyCharacters = 16,
    wdPropertySecurity = 17,
    wdPropertyCategory = 18,
    wdPropertyFormat = 19,
    wdPropertyManager = 20,
    wdPropertyCompany = 21,
    wdPropertyBytes = 22,
    wdPropertyLines = 23,
    wdPropertyParas = 24,
    wdPropertySlides = 25,
    wdPropertyNotes = 26,
    wdPropertyHiddenSlides = 27,
    wdPropertyMMClips = 28,
    wdPropertyHyperlinkBase = 29,
    wdPropertyCharsWSpaces = 30
};

enum WdLineSpacing
{
    wdLineSpaceSingle = 0,
    wdLineSpace1pt5 = 1,
    wdLineSpaceDouble = 2,
    wdLineSpaceAtLeast = 3,
    wdLineSpaceExactly = 4,
    wdLineSpaceMultiple = 5
};

enum WdNumberType
{
    wdNumberParagraph = 1,
    wdNumberListNum = 2,
    wdNumberAllNumbers = 3
};

enum WdListType
{
    wdListNoNumbering = 0,
    wdListListNumOnly = 1,
    wdListBullet = 2,
    wdListSimpleNumbering = 3,
    wdListOutlineNumbering = 4,
    wdListMixedNumbering = 5,
    wdListPictureBullet = 6
};

enum WdStoryType
{
    wdMainTextStory = 1,
    wdFootnotesStory = 2,
    wdEndnotesStory = 3,
    wdCommentsStory = 4,
    wdTextFrameStory = 5,
    wdEvenPagesHeaderStory = 6,
    wdPrimaryHeaderStory = 7,
    wdEvenPagesFooterStory = 8,
    wdPrimaryFooterStory = 9,
    wdFirstPageHeaderStory = 10,
    wdFirstPageFooterStory = 11,
    wdFootnoteSeparatorStory = 12,
    wdFootnoteContinuationSeparatorStory = 13,
    wdFootnoteContinuationNoticeStory = 14,
    wdEndnoteSeparatorStory = 15,
    wdEndnoteContinuationSeparatorStory = 16,
    wdEndnoteContinuationNoticeStory = 17
};

enum WdSaveFormat
{
    wdFormatDocument = 0,
    wdFormatDocument97 = 0,
    wdFormatTemplate = 1,
    wdFormatTemplate97 = 1,
    wdFormatText = 2,
    wdFormatTextLineBreaks = 3,
    wdFormatDOSText = 4,
    wdFormatDOSTextLineBreaks = 5,
    wdFormatRTF = 6,
    wdFormatUnicodeText = 7,
    wdFormatEncodedText = 7,
    wdFormatHTML = 8,
    wdFormatWebArchive = 9,
    wdFormatFilteredHTML = 10,
    wdFormatXML = 11,
    wdFormatXMLDocument = 12,
    wdFormatXMLDocumentMacroEnabled = 13,
    wdFormatXMLTemplate = 14,
    wdFormatXMLTemplateMacroEnabled = 15,
    wdFormatDocumentDefault = 16,
    wdFormatPDF = 17,
    wdFormatXPS = 18,
    wdFormatFlatXML = 19,
    wdFormatFlatXMLMacroEnabled = 20,
    wdFormatFlatXMLTemplate = 21,
    wdFormatFlatXMLTemplateMacroEnabled = 22,
    wdFormatOpenDocumentText = 23
};

enum WdOpenFormat
{
    wdOpenFormatAuto = 0,
    wdOpenFormatDocument = 1,
    wdOpenFormatTemplate = 2,
    wdOpenFormatRTF = 3,
    wdOpenFormatText = 4,
    wdOpenFormatUnicodeText = 5,
    wdOpenFormatEncodedText = 5,
    wdOpenFormatAllWord = 6,
    wdOpenFormatWebPages = 7,
    wdOpenFormatXML = 8,
    wdOpenFormatXMLDocument = 9,
    wdOpenFormatXMLDocumentMacroEnabled = 10,
    wdOpenFormatXMLTemplate = 11,
    wdOpenFormatXMLTemplateMacroEnabled = 12,
    wdOpenFormatDocument97 = 1,
    wdOpenFormatTemplate97 = 2,
    wdOpenFormatAllWordTemplates = 13,
    wdOpenFormatXMLDocumentSerialized = 14,
    wdOpenFormatXMLDocumentMacroEnabledSerialized = 15,
    wdOpenFormatXMLTemplateSerialized = 16,
    wdOpenFormatXMLTemplateMacroEnabledSerialized = 17,
    wdOpenFormatOpenDocumentText = 18
};

enum WdHeaderFooterIndex
{
    wdHeaderFooterPrimary = 1,
    wdHeaderFooterFirstPage = 2,
    wdHeaderFooterEvenPages = 3
};

enum WdTocFormat
{
    wdTOCTemplate = 0,
    wdTOCClassic = 1,
    wdTOCDistinctive = 2,
    wdTOCFancy = 3,
    wdTOCModern = 4,
    wdTOCFormal = 5,
    wdTOCSimple = 6
};

enum WdTofFormat
{
    wdTOFTemplate = 0,
    wdTOFClassic = 1,
    wdTOFDistinctive = 2,
    wdTOFCentered = 3,
    wdTOFFormal = 4,
    wdTOFSimple = 5
};

enum WdToaFormat
{
    wdTOATemplate = 0,
    wdTOAClassic = 1,
    wdTOADistinctive = 2,
    wdTOAFormal = 3,
    wdTOASimple = 4
};

enum WdLineStyle
{
    wdLineStyleNone = 0,
    wdLineStyleSingle = 1,
    wdLineStyleDot = 2,
    wdLineStyleDashSmallGap = 3,
    wdLineStyleDashLargeGap = 4,
    wdLineStyleDashDot = 5,
    wdLineStyleDashDotDot = 6,
    wdLineStyleDouble = 7,
    wdLineStyleTriple = 8,
    wdLineStyleThinThickSmallGap = 9,
    wdLineStyleThickThinSmallGap = 10,
    wdLineStyleThinThickThinSmallGap = 11,
    wdLineStyleThinThickMedGap = 12,
    wdLineStyleThickThinMedGap = 13,
    wdLineStyleThinThickThinMedGap = 14,
    wdLineStyleThinThickLargeGap = 15,
    wdLineStyleThickThinLargeGap = 16,
    wdLineStyleThinThickThinLargeGap = 17,
    wdLineStyleSingleWavy = 18,
    wdLineStyleDoubleWavy = 19,
    wdLineStyleDashDotStroked = 20,
    wdLineStyleEmboss3D = 21,
    wdLineStyleEngrave3D = 22,
    wdLineStyleOutset = 23,
    wdLineStyleInset = 24
};

enum WdLineWidth
{
    wdLineWidth025pt = 2,
    wdLineWidth050pt = 4,
    wdLineWidth075pt = 6,
    wdLineWidth100pt = 8,
    wdLineWidth150pt = 12,
    wdLineWidth225pt = 18,
    wdLineWidth300pt = 24,
    wdLineWidth450pt = 36,
    wdLineWidth600pt = 48
};

enum WdBreakType
{
    wdSectionBreakNextPage = 2,
    wdSectionBreakContinuous = 3,
    wdSectionBreakEvenPage = 4,
    wdSectionBreakOddPage = 5,
    wdLineBreak = 6,
    wdPageBreak = 7,
    wdColumnBreak = 8,
    wdLineBreakClearLeft = 9,
    wdLineBreakClearRight = 10,
    wdTextWrappingBreak = 11
};

enum WdTabLeader
{
    wdTabLeaderSpaces = 0,
    wdTabLeaderDots = 1,
    wdTabLeaderDashes = 2,
    wdTabLeaderLines = 3,
    wdTabLeaderHeavy = 4,
    wdTabLeaderMiddleDot = 5
};

enum WdTabLeaderHID
{
//  emptyenum = 0
};

enum WdMeasurementUnits
{
    wdInches = 0,
    wdCentimeters = 1,
    wdMillimeters = 2,
    wdPoints = 3,
    wdPicas = 4
};

enum WdMeasurementUnitsHID
{
//  emptyenum = 0
};

enum WdDropPosition
{
    wdDropNone = 0,
    wdDropNormal = 1,
    wdDropMargin = 2
};

enum WdNumberingRule
{
    wdRestartContinuous = 0,
    wdRestartSection = 1,
    wdRestartPage = 2
};

enum WdFootnoteLocation
{
    wdBottomOfPage = 0,
    wdBeneathText = 1
};

enum WdEndnoteLocation
{
    wdEndOfSection = 0,
    wdEndOfDocument = 1
};

enum WdSortSeparator
{
    wdSortSeparateByTabs = 0,
    wdSortSeparateByCommas = 1,
    wdSortSeparateByDefaultTableSeparator = 2
};

enum WdTableFieldSeparator
{
    wdSeparateByParagraphs = 0,
    wdSeparateByTabs = 1,
    wdSeparateByCommas = 2,
    wdSeparateByDefaultListSeparator = 3
};

enum WdSortFieldType
{
    wdSortFieldAlphanumeric = 0,
    wdSortFieldNumeric = 1,
    wdSortFieldDate = 2,
    wdSortFieldSyllable = 3,
    wdSortFieldJapanJIS = 4,
    wdSortFieldStroke = 5,
    wdSortFieldKoreaKS = 6
};

enum WdSortFieldTypeHID
{
//  emptyenum = 0
};

enum WdSortOrder
{
    wdSortOrderAscending = 0,
    wdSortOrderDescending = 1
};

enum WdTableFormat
{
    wdTableFormatNone = 0,
    wdTableFormatSimple1 = 1,
    wdTableFormatSimple2 = 2,
    wdTableFormatSimple3 = 3,
    wdTableFormatClassic1 = 4,
    wdTableFormatClassic2 = 5,
    wdTableFormatClassic3 = 6,
    wdTableFormatClassic4 = 7,
    wdTableFormatColorful1 = 8,
    wdTableFormatColorful2 = 9,
    wdTableFormatColorful3 = 10,
    wdTableFormatColumns1 = 11,
    wdTableFormatColumns2 = 12,
    wdTableFormatColumns3 = 13,
    wdTableFormatColumns4 = 14,
    wdTableFormatColumns5 = 15,
    wdTableFormatGrid1 = 16,
    wdTableFormatGrid2 = 17,
    wdTableFormatGrid3 = 18,
    wdTableFormatGrid4 = 19,
    wdTableFormatGrid5 = 20,
    wdTableFormatGrid6 = 21,
    wdTableFormatGrid7 = 22,
    wdTableFormatGrid8 = 23,
    wdTableFormatList1 = 24,
    wdTableFormatList2 = 25,
    wdTableFormatList3 = 26,
    wdTableFormatList4 = 27,
    wdTableFormatList5 = 28,
    wdTableFormatList6 = 29,
    wdTableFormatList7 = 30,
    wdTableFormatList8 = 31,
    wdTableFormat3DEffects1 = 32,
    wdTableFormat3DEffects2 = 33,
    wdTableFormat3DEffects3 = 34,
    wdTableFormatContemporary = 35,
    wdTableFormatElegant = 36,
    wdTableFormatProfessional = 37,
    wdTableFormatSubtle1 = 38,
    wdTableFormatSubtle2 = 39,
    wdTableFormatWeb1 = 40,
    wdTableFormatWeb2 = 41,
    wdTableFormatWeb3 = 42
};

enum WdTableFormatApply
{
    wdTableFormatApplyBorders = 1,
    wdTableFormatApplyShading = 2,
    wdTableFormatApplyFont = 4,
    wdTableFormatApplyColor = 8,
    wdTableFormatApplyAutoFit = 16,
    wdTableFormatApplyHeadingRows = 32,
    wdTableFormatApplyLastRow = 64,
    wdTableFormatApplyFirstColumn = 128,
    wdTableFormatApplyLastColumn = 256
};

enum WdLanguageID
{
    wdLanguageNone = 0,
    wdNoProofing = 1024,
    wdAfrikaans = 1078,
    wdAlbanian = 1052,
    wdAmharic = 1118,
    wdArabicAlgeria = 5121,
    wdArabicBahrain = 15361,
    wdArabicEgypt = 3073,
    wdArabicIraq = 2049,
    wdArabicJordan = 11265,
    wdArabicKuwait = 13313,
    wdArabicLebanon = 12289,
    wdArabicLibya = 4097,
    wdArabicMorocco = 6145,
    wdArabicOman = 8193,
    wdArabicQatar = 16385,
    wdArabic = 1025,
    wdArabicSyria = 10241,
    wdArabicTunisia = 7169,
    wdArabicUAE = 14337,
    wdArabicYemen = 9217,
    wdArmenian = 1067,
    wdAssamese = 1101,
    wdAzeriCyrillic = 2092,
    wdAzeriLatin = 1068,
    wdBasque = 1069,
    wdByelorussian = 1059,
    wdBengali = 1093,
    wdBulgarian = 1026,
    wdBurmese = 1109,
    wdCatalan = 1027,
    wdCherokee = 1116,
    wdChineseHongKongSAR = 3076,
    wdChineseMacaoSAR = 5124,
    wdSimplifiedChinese = 2052,
    wdChineseSingapore = 4100,
    wdTraditionalChinese = 1028,
    wdCroatian = 1050,
    wdCzech = 1029,
    wdDanish = 1030,
    wdDivehi = 1125,
    wdBelgianDutch = 2067,
    wdDutch = 1043,
    wdEdo = 1126,
    wdEnglishAUS = 3081,
    wdEnglishBelize = 10249,
    wdEnglishCanadian = 4105,
    wdEnglishCaribbean = 9225,
    wdEnglishIreland = 6153,
    wdEnglishJamaica = 8201,
    wdEnglishNewZealand = 5129,
    wdEnglishPhilippines = 13321,
    wdEnglishSouthAfrica = 7177,
    wdEnglishTrinidadTobago = 11273,
    wdEnglishUK = 2057,
    wdEnglishUS = 1033,
    wdEnglishZimbabwe = 12297,
    wdEnglishIndonesia = 14345,
    wdEstonian = 1061,
    wdFaeroese = 1080,
    wdPersian = 1065,
    wdFilipino = 1124,
    wdFinnish = 1035,
    wdFulfulde = 1127,
    wdBelgianFrench = 2060,
    wdFrenchCameroon = 11276,
    wdFrenchCanadian = 3084,
    wdFrenchCotedIvoire = 12300,
    wdFrench = 1036,
    wdFrenchLuxembourg = 5132,
    wdFrenchMali = 13324,
    wdFrenchMonaco = 6156,
    wdFrenchReunion = 8204,
    wdFrenchSenegal = 10252,
    wdFrenchMorocco = 14348,
    wdFrenchHaiti = 15372,
    wdSwissFrench = 4108,
    wdFrenchWestIndies = 7180,
    wdFrenchCongoDRC = 9228,
    wdFrisianNetherlands = 1122,
    wdGaelicIreland = 2108,
    wdGaelicScotland = 1084,
    wdGalician = 1110,
    wdGeorgian = 1079,
    wdGermanAustria = 3079,
    wdGerman = 1031,
    wdGermanLiechtenstein = 5127,
    wdGermanLuxembourg = 4103,
    wdSwissGerman = 2055,
    wdGreek = 1032,
    wdGuarani = 1140,
    wdGujarati = 1095,
    wdHausa = 1128,
    wdHawaiian = 1141,
    wdHebrew = 1037,
    wdHindi = 1081,
    wdHungarian = 1038,
    wdIbibio = 1129,
    wdIcelandic = 1039,
    wdIgbo = 1136,
    wdIndonesian = 1057,
    wdInuktitut = 1117,
    wdItalian = 1040,
    wdSwissItalian = 2064,
    wdJapanese = 1041,
    wdKannada = 1099,
    wdKanuri = 1137,
    wdKashmiri = 1120,
    wdKazakh = 1087,
    wdKhmer = 1107,
    wdKirghiz = 1088,
    wdKonkani = 1111,
    wdKorean = 1042,
    wdKyrgyz = 1088,
    wdLao = 1108,
    wdLatin = 1142,
    wdLatvian = 1062,
    wdLithuanian = 1063,
    wdMacedonianFYROM = 1071,
    wdMalaysian = 1086,
    wdMalayBruneiDarussalam = 2110,
    wdMalayalam = 1100,
    wdMaltese = 1082,
    wdManipuri = 1112,
    wdMarathi = 1102,
    wdMongolian = 1104,
    wdNepali = 1121,
    wdNorwegianBokmol = 1044,
    wdNorwegianNynorsk = 2068,
    wdOriya = 1096,
    wdOromo = 1138,
    wdPashto = 1123,
    wdPolish = 1045,
    wdPortugueseBrazil = 1046,
    wdPortuguese = 2070,
    wdPunjabi = 1094,
    wdRhaetoRomanic = 1047,
    wdRomanianMoldova = 2072,
    wdRomanian = 1048,
    wdRussianMoldova = 2073,
    wdRussian = 1049,
    wdSamiLappish = 1083,
    wdSanskrit = 1103,
    wdSerbianCyrillic = 3098,
    wdSerbianLatin = 2074,
    wdSinhalese = 1115,
    wdSindhi = 1113,
    wdSindhiPakistan = 2137,
    wdSlovak = 1051,
    wdSlovenian = 1060,
    wdSomali = 1143,
    wdSorbian = 1070,
    wdSpanishArgentina = 11274,
    wdSpanishBolivia = 16394,
    wdSpanishChile = 13322,
    wdSpanishColombia = 9226,
    wdSpanishCostaRica = 5130,
    wdSpanishDominicanRepublic = 7178,
    wdSpanishEcuador = 12298,
    wdSpanishElSalvador = 17418,
    wdSpanishGuatemala = 4106,
    wdSpanishHonduras = 18442,
    wdMexicanSpanish = 2058,
    wdSpanishNicaragua = 19466,
    wdSpanishPanama = 6154,
    wdSpanishParaguay = 15370,
    wdSpanishPeru = 10250,
    wdSpanishPuertoRico = 20490,
    wdSpanishModernSort = 3082,
    wdSpanish = 1034,
    wdSpanishUruguay = 14346,
    wdSpanishVenezuela = 8202,
    wdSesotho = 1072,
    wdSutu = 1072,
    wdSwahili = 1089,
    wdSwedishFinland = 2077,
    wdSwedish = 1053,
    wdSyriac = 1114,
    wdTajik = 1064,
    wdTamazight = 1119,
    wdTamazightLatin = 2143,
    wdTamil = 1097,
    wdTatar = 1092,
    wdTelugu = 1098,
    wdThai = 1054,
    wdTibetan = 1105,
    wdTigrignaEthiopic = 1139,
    wdTigrignaEritrea = 2163,
    wdTsonga = 1073,
    wdTswana = 1074,
    wdTurkish = 1055,
    wdTurkmen = 1090,
    wdUkrainian = 1058,
    wdUrdu = 1056,
    wdUzbekCyrillic = 2115,
    wdUzbekLatin = 1091,
    wdVenda = 1075,
    wdVietnamese = 1066,
    wdWelsh = 1106,
    wdXhosa = 1076,
    wdYi = 1144,
    wdYiddish = 1085,
    wdYoruba = 1130,
    wdZulu = 1077
};

enum WdFieldType
{
    wdFieldEmpty = -1,
    wdFieldRef = 3,
    wdFieldIndexEntry = 4,
    wdFieldFootnoteRef = 5,
    wdFieldSet = 6,
    wdFieldIf = 7,
    wdFieldIndex = 8,
    wdFieldTOCEntry = 9,
    wdFieldStyleRef = 10,
    wdFieldRefDoc = 11,
    wdFieldSequence = 12,
    wdFieldTOC = 13,
    wdFieldInfo = 14,
    wdFieldTitle = 15,
    wdFieldSubject = 16,
    wdFieldAuthor = 17,
    wdFieldKeyWord = 18,
    wdFieldComments = 19,
    wdFieldLastSavedBy = 20,
    wdFieldCreateDate = 21,
    wdFieldSaveDate = 22,
    wdFieldPrintDate = 23,
    wdFieldRevisionNum = 24,
    wdFieldEditTime = 25,
    wdFieldNumPages = 26,
    wdFieldNumWords = 27,
    wdFieldNumChars = 28,
    wdFieldFileName = 29,
    wdFieldTemplate = 30,
    wdFieldDate = 31,
    wdFieldTime = 32,
    wdFieldPage = 33,
    wdFieldExpression = 34,
    wdFieldQuote = 35,
    wdFieldInclude = 36,
    wdFieldPageRef = 37,
    wdFieldAsk = 38,
    wdFieldFillIn = 39,
    wdFieldData = 40,
    wdFieldNext = 41,
    wdFieldNextIf = 42,
    wdFieldSkipIf = 43,
    wdFieldMergeRec = 44,
    wdFieldDDE = 45,
    wdFieldDDEAuto = 46,
    wdFieldGlossary = 47,
    wdFieldPrint = 48,
    wdFieldFormula = 49,
    wdFieldGoToButton = 50,
    wdFieldMacroButton = 51,
    wdFieldAutoNumOutline = 52,
    wdFieldAutoNumLegal = 53,
    wdFieldAutoNum = 54,
    wdFieldImport = 55,
    wdFieldLink = 56,
    wdFieldSymbol = 57,
    wdFieldEmbed = 58,
    wdFieldMergeField = 59,
    wdFieldUserName = 60,
    wdFieldUserInitials = 61,
    wdFieldUserAddress = 62,
    wdFieldBarCode = 63,
    wdFieldDocVariable = 64,
    wdFieldSection = 65,
    wdFieldSectionPages = 66,
    wdFieldIncludePicture = 67,
    wdFieldIncludeText = 68,
    wdFieldFileSize = 69,
    wdFieldFormTextInput = 70,
    wdFieldFormCheckBox = 71,
    wdFieldNoteRef = 72,
    wdFieldTOA = 73,
    wdFieldTOAEntry = 74,
    wdFieldMergeSeq = 75,
    wdFieldPrivate = 77,
    wdFieldDatabase = 78,
    wdFieldAutoText = 79,
    wdFieldCompare = 80,
    wdFieldAddin = 81,
    wdFieldSubscriber = 82,
    wdFieldFormDropDown = 83,
    wdFieldAdvance = 84,
    wdFieldDocProperty = 85,
    wdFieldOCX = 87,
    wdFieldHyperlink = 88,
    wdFieldAutoTextList = 89,
    wdFieldListNum = 90,
    wdFieldHTMLActiveX = 91,
    wdFieldBidiOutline = 92,
    wdFieldAddressBlock = 93,
    wdFieldGreetingLine = 94,
    wdFieldShape = 95,
    wdFieldCitation = 96,
    wdFieldBibliography = 97
};

enum WdBuiltinStyle
{
    wdStyleNormal = -1,
    wdStyleEnvelopeAddress = -37,
    wdStyleEnvelopeReturn = -38,
    wdStyleBodyText = -67,
    wdStyleHeading1 = -2,
    wdStyleHeading2 = -3,
    wdStyleHeading3 = -4,
    wdStyleHeading4 = -5,
    wdStyleHeading5 = -6,
    wdStyleHeading6 = -7,
    wdStyleHeading7 = -8,
    wdStyleHeading8 = -9,
    wdStyleHeading9 = -10,
    wdStyleIndex1 = -11,
    wdStyleIndex2 = -12,
    wdStyleIndex3 = -13,
    wdStyleIndex4 = -14,
    wdStyleIndex5 = -15,
    wdStyleIndex6 = -16,
    wdStyleIndex7 = -17,
    wdStyleIndex8 = -18,
    wdStyleIndex9 = -19,
    wdStyleTOC1 = -20,
    wdStyleTOC2 = -21,
    wdStyleTOC3 = -22,
    wdStyleTOC4 = -23,
    wdStyleTOC5 = -24,
    wdStyleTOC6 = -25,
    wdStyleTOC7 = -26,
    wdStyleTOC8 = -27,
    wdStyleTOC9 = -28,
    wdStyleNormalIndent = -29,
    wdStyleFootnoteText = -30,
    wdStyleCommentText = -31,
    wdStyleHeader = -32,
    wdStyleFooter = -33,
    wdStyleIndexHeading = -34,
    wdStyleCaption = -35,
    wdStyleTableOfFigures = -36,
    wdStyleFootnoteReference = -39,
    wdStyleCommentReference = -40,
    wdStyleLineNumber = -41,
    wdStylePageNumber = -42,
    wdStyleEndnoteReference = -43,
    wdStyleEndnoteText = -44,
    wdStyleTableOfAuthorities = -45,
    wdStyleMacroText = -46,
    wdStyleTOAHeading = -47,
    wdStyleList = -48,
    wdStyleListBullet = -49,
    wdStyleListNumber = -50,
    wdStyleList2 = -51,
    wdStyleList3 = -52,
    wdStyleList4 = -53,
    wdStyleList5 = -54,
    wdStyleListBullet2 = -55,
    wdStyleListBullet3 = -56,
    wdStyleListBullet4 = -57,
    wdStyleListBullet5 = -58,
    wdStyleListNumber2 = -59,
    wdStyleListNumber3 = -60,
    wdStyleListNumber4 = -61,
    wdStyleListNumber5 = -62,
    wdStyleTitle = -63,
    wdStyleClosing = -64,
    wdStyleSignature = -65,
    wdStyleDefaultParagraphFont = -66,
    wdStyleBodyTextIndent = -68,
    wdStyleListContinue = -69,
    wdStyleListContinue2 = -70,
    wdStyleListContinue3 = -71,
    wdStyleListContinue4 = -72,
    wdStyleListContinue5 = -73,
    wdStyleMessageHeader = -74,
    wdStyleSubtitle = -75,
    wdStyleSalutation = -76,
    wdStyleDate = -77,
    wdStyleBodyTextFirstIndent = -78,
    wdStyleBodyTextFirstIndent2 = -79,
    wdStyleNoteHeading = -80,
    wdStyleBodyText2 = -81,
    wdStyleBodyText3 = -82,
    wdStyleBodyTextIndent2 = -83,
    wdStyleBodyTextIndent3 = -84,
    wdStyleBlockQuotation = -85,
    wdStyleHyperlink = -86,
    wdStyleHyperlinkFollowed = -87,
    wdStyleStrong = -88,
    wdStyleEmphasis = -89,
    wdStyleNavPane = -90,
    wdStylePlainText = -91,
    wdStyleHtmlNormal = -95,
    wdStyleHtmlAcronym = -96,
    wdStyleHtmlAddress = -97,
    wdStyleHtmlCite = -98,
    wdStyleHtmlCode = -99,
    wdStyleHtmlDfn = -100,
    wdStyleHtmlKbd = -101,
    wdStyleHtmlPre = -102,
    wdStyleHtmlSamp = -103,
    wdStyleHtmlTt = -104,
    wdStyleHtmlVar = -105,
    wdStyleNormalTable = -106,
    wdStyleNormalObject = -158,
    wdStyleTableLightShading = -159,
    wdStyleTableLightList = -160,
    wdStyleTableLightGrid = -161,
    wdStyleTableMediumShading1 = -162,
    wdStyleTableMediumShading2 = -163,
    wdStyleTableMediumList1 = -164,
    wdStyleTableMediumList2 = -165,
    wdStyleTableMediumGrid1 = -166,
    wdStyleTableMediumGrid2 = -167,
    wdStyleTableMediumGrid3 = -168,
    wdStyleTableDarkList = -169,
    wdStyleTableColorfulShading = -170,
    wdStyleTableColorfulList = -171,
    wdStyleTableColorfulGrid = -172,
    wdStyleTableLightShadingAccent1 = -173,
    wdStyleTableLightListAccent1 = -174,
    wdStyleTableLightGridAccent1 = -175,
    wdStyleTableMediumShading1Accent1 = -176,
    wdStyleTableMediumShading2Accent1 = -177,
    wdStyleTableMediumList1Accent1 = -178,
    wdStyleListParagraph = -180,
    wdStyleQuote = -181,
    wdStyleIntenseQuote = -182,
    wdStyleSubtleEmphasis = -261,
    wdStyleIntenseEmphasis = -262,
    wdStyleSubtleReference = -263,
    wdStyleIntenseReference = -264,
    wdStyleBookTitle = -265,
    wdStyleBibliography = -266,
    wdStyleTocHeading = -267
};

enum WdWordDialogTab
{
    wdDialogToolsOptionsTabView = 204,
    wdDialogToolsOptionsTabGeneral = 203,
    wdDialogToolsOptionsTabEdit = 224,
    wdDialogToolsOptionsTabPrint = 208,
    wdDialogToolsOptionsTabSave = 209,
    wdDialogToolsOptionsTabProofread = 211,
    wdDialogToolsOptionsTabTrackChanges = 386,
    wdDialogToolsOptionsTabUserInfo = 213,
    wdDialogToolsOptionsTabCompatibility = 525,
    wdDialogToolsOptionsTabTypography = 739,
    wdDialogToolsOptionsTabFileLocations = 225,
    wdDialogToolsOptionsTabFuzzy = 790,
    wdDialogToolsOptionsTabHangulHanjaConversion = 786,
    wdDialogToolsOptionsTabBidi = 1029,
    wdDialogToolsOptionsTabSecurity = 1361,
    wdDialogFilePageSetupTabMargins = 150000,
    wdDialogFilePageSetupTabPaper = 150001,
    wdDialogFilePageSetupTabLayout = 150003,
    wdDialogFilePageSetupTabCharsLines = 150004,
    wdDialogInsertSymbolTabSymbols = 200000,
    wdDialogInsertSymbolTabSpecialCharacters = 200001,
    wdDialogNoteOptionsTabAllFootnotes = 300000,
    wdDialogNoteOptionsTabAllEndnotes = 300001,
    wdDialogInsertIndexAndTablesTabIndex = 400000,
    wdDialogInsertIndexAndTablesTabTableOfContents = 400001,
    wdDialogInsertIndexAndTablesTabTableOfFigures = 400002,
    wdDialogInsertIndexAndTablesTabTableOfAuthorities = 400003,
    wdDialogOrganizerTabStyles = 500000,
    wdDialogOrganizerTabAutoText = 500001,
    wdDialogOrganizerTabCommandBars = 500002,
    wdDialogOrganizerTabMacros = 500003,
    wdDialogFormatFontTabFont = 600000,
    wdDialogFormatFontTabCharacterSpacing = 600001,
    wdDialogFormatFontTabAnimation = 600002,
    wdDialogFormatBordersAndShadingTabBorders = 700000,
    wdDialogFormatBordersAndShadingTabPageBorder = 700001,
    wdDialogFormatBordersAndShadingTabShading = 700002,
    wdDialogToolsEnvelopesAndLabelsTabEnvelopes = 800000,
    wdDialogToolsEnvelopesAndLabelsTabLabels = 800001,
    wdDialogFormatParagraphTabIndentsAndSpacing = 1000000,
    wdDialogFormatParagraphTabTextFlow = 1000001,
    wdDialogFormatParagraphTabTeisai = 1000002,
    wdDialogFormatDrawingObjectTabColorsAndLines = 1200000,
    wdDialogFormatDrawingObjectTabSize = 1200001,
    wdDialogFormatDrawingObjectTabPosition = 1200002,
    wdDialogFormatDrawingObjectTabWrapping = 1200003,
    wdDialogFormatDrawingObjectTabPicture = 1200004,
    wdDialogFormatDrawingObjectTabTextbox = 1200005,
    wdDialogFormatDrawingObjectTabWeb = 1200006,
    wdDialogFormatDrawingObjectTabHR = 1200007,
    wdDialogToolsAutoCorrectExceptionsTabFirstLetter = 1400000,
    wdDialogToolsAutoCorrectExceptionsTabInitialCaps = 1400001,
    wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = 1400002,
    wdDialogToolsAutoCorrectExceptionsTabIac = 1400003,
    wdDialogFormatBulletsAndNumberingTabBulleted = 1500000,
    wdDialogFormatBulletsAndNumberingTabNumbered = 1500001,
    wdDialogFormatBulletsAndNumberingTabOutlineNumbered = 1500002,
    wdDialogLetterWizardTabLetterFormat = 1600000,
    wdDialogLetterWizardTabRecipientInfo = 1600001,
    wdDialogLetterWizardTabOtherElements = 1600002,
    wdDialogLetterWizardTabSenderInfo = 1600003,
    wdDialogToolsAutoManagerTabAutoCorrect = 1700000,
    wdDialogToolsAutoManagerTabAutoFormatAsYouType = 1700001,
    wdDialogToolsAutoManagerTabAutoText = 1700002,
    wdDialogToolsAutoManagerTabAutoFormat = 1700003,
    wdDialogToolsAutoManagerTabSmartTags = 1700004,
    wdDialogTablePropertiesTabTable = 1800000,
    wdDialogTablePropertiesTabRow = 1800001,
    wdDialogTablePropertiesTabColumn = 1800002,
    wdDialogTablePropertiesTabCell = 1800003,
    wdDialogEmailOptionsTabSignature = 1900000,
    wdDialogEmailOptionsTabStationary = 1900001,
    wdDialogEmailOptionsTabQuoting = 1900002,
    wdDialogWebOptionsBrowsers = 2000000,
    wdDialogWebOptionsGeneral = 2000000,
    wdDialogWebOptionsFiles = 2000001,
    wdDialogWebOptionsPictures = 2000002,
    wdDialogWebOptionsEncoding = 2000003,
    wdDialogWebOptionsFonts = 2000004,
    wdDialogToolsOptionsTabAcetate = 1266,
    wdDialogTemplates = 2100000,
    wdDialogTemplatesXMLSchema = 2100001,
    wdDialogTemplatesXMLExpansionPacks = 2100002,
    wdDialogTemplatesLinkedCSS = 2100003,
    wdDialogStyleManagementTabEdit = 2200000,
    wdDialogStyleManagementTabRecommend = 2200001,
    wdDialogStyleManagementTabRestrict = 2200002
};

enum WdWordDialogTabHID
{
    wdDialogFilePageSetupTabPaperSize = 150001,
    wdDialogFilePageSetupTabPaperSource = 150002
};

enum WdWordDialog
{
    wdDialogHelpAbout = 9,
    wdDialogHelpWordPerfectHelp = 10,
    wdDialogDocumentStatistics = 78,
    wdDialogFileNew = 79,
    wdDialogFileOpen = 80,
    wdDialogMailMergeOpenDataSource = 81,
    wdDialogMailMergeOpenHeaderSource = 82,
    wdDialogFileSaveAs = 84,
    wdDialogFileSummaryInfo = 86,
    wdDialogToolsTemplates = 87,
    wdDialogFilePrint = 88,
    wdDialogFilePrintSetup = 97,
    wdDialogFileFind = 99,
    wdDialogFormatAddrFonts = 103,
    wdDialogEditPasteSpecial = 111,
    wdDialogEditFind = 112,
    wdDialogEditReplace = 117,
    wdDialogEditStyle = 120,
    wdDialogEditLinks = 124,
    wdDialogEditObject = 125,
    wdDialogTableToText = 128,
    wdDialogTextToTable = 127,
    wdDialogTableInsertTable = 129,
    wdDialogTableInsertCells = 130,
    wdDialogTableInsertRow = 131,
    wdDialogTableDeleteCells = 133,
    wdDialogTableSplitCells = 137,
    wdDialogTableRowHeight = 142,
    wdDialogTableColumnWidth = 143,
    wdDialogToolsCustomize = 152,
    wdDialogInsertBreak = 159,
    wdDialogInsertSymbol = 162,
    wdDialogInsertPicture = 163,
    wdDialogInsertFile = 164,
    wdDialogInsertDateTime = 165,
    wdDialogInsertField = 166,
    wdDialogInsertMergeField = 167,
    wdDialogInsertBookmark = 168,
    wdDialogMarkIndexEntry = 169,
    wdDialogInsertIndex = 170,
    wdDialogInsertTableOfContents = 171,
    wdDialogInsertObject = 172,
    wdDialogToolsCreateEnvelope = 173,
    wdDialogFormatFont = 174,
    wdDialogFormatParagraph = 175,
    wdDialogFormatSectionLayout = 176,
    wdDialogFormatColumns = 177,
    wdDialogFileDocumentLayout = 178,
    wdDialogFilePageSetup = 178,
    wdDialogFormatTabs = 179,
    wdDialogFormatStyle = 180,
    wdDialogFormatDefineStyleFont = 181,
    wdDialogFormatDefineStylePara = 182,
    wdDialogFormatDefineStyleTabs = 183,
    wdDialogFormatDefineStyleFrame = 184,
    wdDialogFormatDefineStyleBorders = 185,
    wdDialogFormatDefineStyleLang = 186,
    wdDialogFormatPicture = 187,
    wdDialogToolsLanguage = 188,
    wdDialogFormatBordersAndShading = 189,
    wdDialogFormatFrame = 190,
    wdDialogToolsThesaurus = 194,
    wdDialogToolsHyphenation = 195,
    wdDialogToolsBulletsNumbers = 196,
    wdDialogToolsHighlightChanges = 197,
    wdDialogToolsRevisions = 197,
    wdDialogToolsCompareDocuments = 198,
    wdDialogTableSort = 199,
    wdDialogToolsOptionsGeneral = 203,
    wdDialogToolsOptionsView = 204,
    wdDialogToolsAdvancedSettings = 206,
    wdDialogToolsOptionsPrint = 208,
    wdDialogToolsOptionsSave = 209,
    wdDialogToolsOptionsSpellingAndGrammar = 211,
    wdDialogToolsOptionsUserInfo = 213,
    wdDialogToolsMacroRecord = 214,
    wdDialogToolsMacro = 215,
    wdDialogWindowActivate = 220,
    wdDialogFormatRetAddrFonts = 221,
    wdDialogOrganizer = 222,
    wdDialogToolsOptionsEdit = 224,
    wdDialogToolsOptionsFileLocations = 225,
    wdDialogToolsWordCount = 228,
    wdDialogControlRun = 235,
    wdDialogInsertPageNumbers = 294,
    wdDialogFormatPageNumber = 298,
    wdDialogCopyFile = 300,
    wdDialogFormatChangeCase = 322,
    wdDialogUpdateTOC = 331,
    wdDialogInsertDatabase = 341,
    wdDialogTableFormula = 348,
    wdDialogFormFieldOptions = 353,
    wdDialogInsertCaption = 357,
    wdDialogInsertCaptionNumbering = 358,
    wdDialogInsertAutoCaption = 359,
    wdDialogFormFieldHelp = 361,
    wdDialogInsertCrossReference = 367,
    wdDialogInsertFootnote = 370,
    wdDialogNoteOptions = 373,
    wdDialogToolsAutoCorrect = 378,
    wdDialogToolsOptionsTrackChanges = 386,
    wdDialogConvertObject = 392,
    wdDialogInsertAddCaption = 402,
    wdDialogConnect = 420,
    wdDialogToolsCustomizeKeyboard = 432,
    wdDialogToolsCustomizeMenus = 433,
    wdDialogToolsMergeDocuments = 435,
    wdDialogMarkTableOfContentsEntry = 442,
    wdDialogFileMacPageSetupGX = 444,
    wdDialogFilePrintOneCopy = 445,
    wdDialogEditFrame = 458,
    wdDialogMarkCitation = 463,
    wdDialogTableOfContentsOptions = 470,
    wdDialogInsertTableOfAuthorities = 471,
    wdDialogInsertTableOfFigures = 472,
    wdDialogInsertIndexAndTables = 473,
    wdDialogInsertFormField = 483,
    wdDialogFormatDropCap = 488,
    wdDialogToolsCreateLabels = 489,
    wdDialogToolsProtectDocument = 503,
    wdDialogFormatStyleGallery = 505,
    wdDialogToolsAcceptRejectChanges = 506,
    wdDialogHelpWordPerfectHelpOptions = 511,
    wdDialogToolsUnprotectDocument = 521,
    wdDialogToolsOptionsCompatibility = 525,
    wdDialogTableOfCaptionsOptions = 551,
    wdDialogTableAutoFormat = 563,
    wdDialogMailMergeFindRecord = 569,
    wdDialogReviewAfmtRevisions = 570,
    wdDialogViewZoom = 577,
    wdDialogToolsProtectSection = 578,
    wdDialogFontSubstitution = 581,
    wdDialogInsertSubdocument = 583,
    wdDialogNewToolbar = 586,
    wdDialogToolsEnvelopesAndLabels = 607,
    wdDialogFormatCallout = 610,
    wdDialogTableFormatCell = 612,
    wdDialogToolsCustomizeMenuBar = 615,
    wdDialogFileRoutingSlip = 624,
    wdDialogEditTOACategory = 625,
    wdDialogToolsManageFields = 631,
    wdDialogDrawSnapToGrid = 633,
    wdDialogDrawAlign = 634,
    wdDialogMailMergeCreateDataSource = 642,
    wdDialogMailMergeCreateHeaderSource = 643,
    wdDialogMailMerge = 676,
    wdDialogMailMergeCheck = 677,
    wdDialogMailMergeHelper = 680,
    wdDialogMailMergeQueryOptions = 681,
    wdDialogFileMacPageSetup = 685,
    wdDialogListCommands = 723,
    wdDialogEditCreatePublisher = 732,
    wdDialogEditSubscribeTo = 733,
    wdDialogEditPublishOptions = 735,
    wdDialogEditSubscribeOptions = 736,
    wdDialogFileMacCustomPageSetupGX = 737,
    wdDialogToolsOptionsTypography = 739,
    wdDialogToolsAutoCorrectExceptions = 762,
    wdDialogToolsOptionsAutoFormatAsYouType = 778,
    wdDialogMailMergeUseAddressBook = 779,
    wdDialogToolsHangulHanjaConversion = 784,
    wdDialogToolsOptionsFuzzy = 790,
    wdDialogEditGoToOld = 811,
    wdDialogInsertNumber = 812,
    wdDialogLetterWizard = 821,
    wdDialogFormatBulletsAndNumbering = 824,
    wdDialogToolsSpellingAndGrammar = 828,
    wdDialogToolsCreateDirectory = 833,
    wdDialogTableWrapping = 854,
    wdDialogFormatTheme = 855,
    wdDialogTableProperties = 861,
    wdDialogEmailOptions = 863,
    wdDialogCreateAutoText = 872,
    wdDialogToolsAutoSummarize = 874,
    wdDialogToolsGrammarSettings = 885,
    wdDialogEditGoTo = 896,
    wdDialogWebOptions = 898,
    wdDialogInsertHyperlink = 925,
    wdDialogToolsAutoManager = 915,
    wdDialogFileVersions = 945,
    wdDialogToolsOptionsAutoFormat = 959,
    wdDialogFormatDrawingObject = 960,
    wdDialogToolsOptions = 974,
    wdDialogFitText = 983,
    wdDialogEditAutoText = 985,
    wdDialogPhoneticGuide = 986,
    wdDialogToolsDictionary = 989,
    wdDialogFileSaveVersion = 1007,
    wdDialogToolsOptionsBidi = 1029,
    wdDialogFrameSetProperties = 1074,
    wdDialogTableTableOptions = 1080,
    wdDialogTableCellOptions = 1081,
    wdDialogIMESetDefault = 1094,
    wdDialogTCSCTranslator = 1156,
    wdDialogHorizontalInVertical = 1160,
    wdDialogTwoLinesInOne = 1161,
    wdDialogFormatEncloseCharacters = 1162,
    wdDialogConsistencyChecker = 1121,
    wdDialogToolsOptionsSmartTag = 1395,
    wdDialogFormatStylesCustom = 1248,
    wdDialogCSSLinks = 1261,
    wdDialogInsertWebComponent = 1324,
    wdDialogToolsOptionsEditCopyPaste = 1356,
    wdDialogToolsOptionsSecurity = 1361,
    wdDialogSearch = 1363,
    wdDialogShowRepairs = 1381,
    wdDialogMailMergeInsertAsk = 4047,
    wdDialogMailMergeInsertFillIn = 4048,
    wdDialogMailMergeInsertIf = 4049,
    wdDialogMailMergeInsertNextIf = 4053,
    wdDialogMailMergeInsertSet = 4054,
    wdDialogMailMergeInsertSkipIf = 4055,
    wdDialogMailMergeFieldMapping = 1304,
    wdDialogMailMergeInsertAddressBlock = 1305,
    wdDialogMailMergeInsertGreetingLine = 1306,
    wdDialogMailMergeInsertFields = 1307,
    wdDialogMailMergeRecipients = 1308,
    wdDialogMailMergeFindRecipient = 1326,
    wdDialogMailMergeSetDocumentType = 1339,
    wdDialogLabelOptions = 1367,
    wdDialogXMLElementAttributes = 1460,
    wdDialogSchemaLibrary = 1417,
    wdDialogPermission = 1469,
    wdDialogMyPermission = 1437,
    wdDialogXMLOptions = 1425,
    wdDialogFormattingRestrictions = 1427,
    wdDialogSourceManager = 1920,
    wdDialogCreateSource = 1922,
    wdDialogDocumentInspector = 1482,
    wdDialogStyleManagement = 1948,
    wdDialogInsertSource = 2120,
    wdDialogOMathRecognizedFunctions = 2165,
    wdDialogInsertPlaceholder = 2348,
    wdDialogBuildingBlockOrganizer = 2067,
    wdDialogContentControlProperties = 2394,
    wdDialogCompatibilityChecker = 2439,
    wdDialogExportAsFixedFormat = 2349,
    wdDialogFileNew2007 = 1116
};

enum WdWordDialogHID
{
//  emptyenum = 0
};

enum WdFieldKind
{
    wdFieldKindNone = 0,
    wdFieldKindHot = 1,
    wdFieldKindWarm = 2,
    wdFieldKindCold = 3
};

enum WdTextFormFieldType
{
    wdRegularText = 0,
    wdNumberText = 1,
    wdDateText = 2,
    wdCurrentDateText = 3,
    wdCurrentTimeText = 4,
    wdCalculationText = 5
};

enum WdChevronConvertRule
{
    wdNeverConvert = 0,
    wdAlwaysConvert = 1,
    wdAskToNotConvert = 2,
    wdAskToConvert = 3
};

enum WdMailMergeMainDocType
{
    wdNotAMergeDocument = -1,
    wdFormLetters = 0,
    wdMailingLabels = 1,
    wdEnvelopes = 2,
    wdCatalog = 3,
    wdEMail = 4,
    wdFax = 5,
    wdDirectory = 3
};

enum WdMailMergeState
{
    wdNormalDocument = 0,
    wdMainDocumentOnly = 1,
    wdMainAndDataSource = 2,
    wdMainAndHeader = 3,
    wdMainAndSourceAndHeader = 4,
    wdDataSource = 5
};

enum WdMailMergeDestination
{
    wdSendToNewDocument = 0,
    wdSendToPrinter = 1,
    wdSendToEmail = 2,
    wdSendToFax = 3
};

enum WdMailMergeActiveRecord
{
    wdNoActiveRecord = -1,
    wdNextRecord = -2,
    wdPreviousRecord = -3,
    wdFirstRecord = -4,
    wdLastRecord = -5,
    wdFirstDataSourceRecord = -6,
    wdLastDataSourceRecord = -7,
    wdNextDataSourceRecord = -8,
    wdPreviousDataSourceRecord = -9
};

enum WdMailMergeDefaultRecord
{
    wdDefaultFirstRecord = 1,
    wdDefaultLastRecord = -16
};

enum WdMailMergeDataSource
{
    wdNoMergeInfo = -1,
    wdMergeInfoFromWord = 0,
    wdMergeInfoFromAccessDDE = 1,
    wdMergeInfoFromExcelDDE = 2,
    wdMergeInfoFromMSQueryDDE = 3,
    wdMergeInfoFromODBC = 4,
    wdMergeInfoFromODSO = 5
};

enum WdMailMergeComparison
{
    wdMergeIfEqual = 0,
    wdMergeIfNotEqual = 1,
    wdMergeIfLessThan = 2,
    wdMergeIfGreaterThan = 3,
    wdMergeIfLessThanOrEqual = 4,
    wdMergeIfGreaterThanOrEqual = 5,
    wdMergeIfIsBlank = 6,
    wdMergeIfIsNotBlank = 7
};

enum WdBookmarkSortBy
{
    wdSortByName = 0,
    wdSortByLocation = 1
};

enum WdWindowState
{
    wdWindowStateNormal = 0,
    wdWindowStateMaximize = 1,
    wdWindowStateMinimize = 2
};

enum WdPictureLinkType
{
    wdLinkNone = 0,
    wdLinkDataInDoc = 1,
    wdLinkDataOnDisk = 2
};

enum WdLinkType
{
    wdLinkTypeOLE = 0,
    wdLinkTypePicture = 1,
    wdLinkTypeText = 2,
    wdLinkTypeReference = 3,
    wdLinkTypeInclude = 4,
    wdLinkTypeImport = 5,
    wdLinkTypeDDE = 6,
    wdLinkTypeDDEAuto = 7,
    wdLinkTypeChart = 8
};

enum WdWindowType
{
    wdWindowDocument = 0,
    wdWindowTemplate = 1
};

enum WdViewType
{
    wdNormalView = 1,
    wdOutlineView = 2,
    wdPrintView = 3,
    wdPrintPreview = 4,
    wdMasterView = 5,
    wdWebView = 6,
    wdReadingView = 7,
    wdConflictView = 8
};

enum WdSeekView
{
    wdSeekMainDocument = 0,
    wdSeekPrimaryHeader = 1,
    wdSeekFirstPageHeader = 2,
    wdSeekEvenPagesHeader = 3,
    wdSeekPrimaryFooter = 4,
    wdSeekFirstPageFooter = 5,
    wdSeekEvenPagesFooter = 6,
    wdSeekFootnotes = 7,
    wdSeekEndnotes = 8,
    wdSeekCurrentPageHeader = 9,
    wdSeekCurrentPageFooter = 10
};

enum WdSpecialPane
{
    wdPaneNone = 0,
    wdPanePrimaryHeader = 1,
    wdPaneFirstPageHeader = 2,
    wdPaneEvenPagesHeader = 3,
    wdPanePrimaryFooter = 4,
    wdPaneFirstPageFooter = 5,
    wdPaneEvenPagesFooter = 6,
    wdPaneFootnotes = 7,
    wdPaneEndnotes = 8,
    wdPaneFootnoteContinuationNotice = 9,
    wdPaneFootnoteContinuationSeparator = 10,
    wdPaneFootnoteSeparator = 11,
    wdPaneEndnoteContinuationNotice = 12,
    wdPaneEndnoteContinuationSeparator = 13,
    wdPaneEndnoteSeparator = 14,
    wdPaneComments = 15,
    wdPaneCurrentPageHeader = 16,
    wdPaneCurrentPageFooter = 17,
    wdPaneRevisions = 18,
    wdPaneRevisionsHoriz = 19,
    wdPaneRevisionsVert = 20
};

enum WdPageFit
{
    wdPageFitNone = 0,
    wdPageFitFullPage = 1,
    wdPageFitBestFit = 2,
    wdPageFitTextFit = 3
};

enum WdBrowseTarget
{
    wdBrowsePage = 1,
    wdBrowseSection = 2,
    wdBrowseComment = 3,
    wdBrowseFootnote = 4,
    wdBrowseEndnote = 5,
    wdBrowseField = 6,
    wdBrowseTable = 7,
    wdBrowseGraphic = 8,
    wdBrowseHeading = 9,
    wdBrowseEdit = 10,
    wdBrowseFind = 11,
    wdBrowseGoTo = 12
};

enum WdPaperTray
{
    wdPrinterDefaultBin = 0,
    wdPrinterUpperBin = 1,
    wdPrinterOnlyBin = 1,
    wdPrinterLowerBin = 2,
    wdPrinterMiddleBin = 3,
    wdPrinterManualFeed = 4,
    wdPrinterEnvelopeFeed = 5,
    wdPrinterManualEnvelopeFeed = 6,
    wdPrinterAutomaticSheetFeed = 7,
    wdPrinterTractorFeed = 8,
    wdPrinterSmallFormatBin = 9,
    wdPrinterLargeFormatBin = 10,
    wdPrinterLargeCapacityBin = 11,
    wdPrinterPaperCassette = 14,
    wdPrinterFormSource = 15
};

enum WdOrientation
{
    wdOrientPortrait = 0,
    wdOrientLandscape = 1
};

enum WdSelectionType
{
    wdNoSelection = 0,
    wdSelectionIP = 1,
    wdSelectionNormal = 2,
    wdSelectionFrame = 3,
    wdSelectionColumn = 4,
    wdSelectionRow = 5,
    wdSelectionBlock = 6,
    wdSelectionInlineShape = 7,
    wdSelectionShape = 8
};

enum WdCaptionLabelID
{
    wdCaptionFigure = -1,
    wdCaptionTable = -2,
    wdCaptionEquation = -3
};

enum WdReferenceType
{
    wdRefTypeNumberedItem = 0,
    wdRefTypeHeading = 1,
    wdRefTypeBookmark = 2,
    wdRefTypeFootnote = 3,
    wdRefTypeEndnote = 4
};

enum WdReferenceKind
{
    wdContentText = -1,
    wdNumberRelativeContext = -2,
    wdNumberNoContext = -3,
    wdNumberFullContext = -4,
    wdEntireCaption = 2,
    wdOnlyLabelAndNumber = 3,
    wdOnlyCaptionText = 4,
    wdFootnoteNumber = 5,
    wdEndnoteNumber = 6,
    wdPageNumber = 7,
    wdPosition = 15,
    wdFootnoteNumberFormatted = 16,
    wdEndnoteNumberFormatted = 17
};

enum WdIndexFormat
{
    wdIndexTemplate = 0,
    wdIndexClassic = 1,
    wdIndexFancy = 2,
    wdIndexModern = 3,
    wdIndexBulleted = 4,
    wdIndexFormal = 5,
    wdIndexSimple = 6
};

enum WdIndexType
{
    wdIndexIndent = 0,
    wdIndexRunin = 1
};

enum WdRevisionsWrap
{
    wdWrapNever = 0,
    wdWrapAlways = 1,
    wdWrapAsk = 2
};

enum WdRevisionType
{
    wdNoRevision = 0,
    wdRevisionInsert = 1,
    wdRevisionDelete = 2,
    wdRevisionProperty = 3,
    wdRevisionParagraphNumber = 4,
    wdRevisionDisplayField = 5,
    wdRevisionReconcile = 6,
    wdRevisionConflict = 7,
    wdRevisionStyle = 8,
    wdRevisionReplace = 9,
    wdRevisionParagraphProperty = 10,
    wdRevisionTableProperty = 11,
    wdRevisionSectionProperty = 12,
    wdRevisionStyleDefinition = 13,
    wdRevisionMovedFrom = 14,
    wdRevisionMovedTo = 15,
    wdRevisionCellInsertion = 16,
    wdRevisionCellDeletion = 17,
    wdRevisionCellMerge = 18,
    wdRevisionCellSplit = 19,
    wdRevisionConflictInsert = 20,
    wdRevisionConflictDelete = 21
};

enum WdRoutingSlipDelivery
{
    wdOneAfterAnother = 0,
    wdAllAtOnce = 1
};

enum WdRoutingSlipStatus
{
    wdNotYetRouted = 0,
    wdRouteInProgress = 1,
    wdRouteComplete = 2
};

enum WdSectionStart
{
    wdSectionContinuous = 0,
    wdSectionNewColumn = 1,
    wdSectionNewPage = 2,
    wdSectionEvenPage = 3,
    wdSectionOddPage = 4
};

enum WdSaveOptions
{
    wdDoNotSaveChanges = 0,
    wdSaveChanges = -1,
    wdPromptToSaveChanges = -2
};

enum WdDocumentKind
{
    wdDocumentNotSpecified = 0,
    wdDocumentLetter = 1,
    wdDocumentEmail = 2
};

enum WdDocumentType
{
    wdTypeDocument = 0,
    wdTypeTemplate = 1,
    wdTypeFrameset = 2
};

enum WdOriginalFormat
{
    wdWordDocument = 0,
    wdOriginalDocumentFormat = 1,
    wdPromptUser = 2
};

enum WdRelocate
{
    wdRelocateUp = 0,
    wdRelocateDown = 1
};

enum WdInsertedTextMark
{
    wdInsertedTextMarkNone = 0,
    wdInsertedTextMarkBold = 1,
    wdInsertedTextMarkItalic = 2,
    wdInsertedTextMarkUnderline = 3,
    wdInsertedTextMarkDoubleUnderline = 4,
    wdInsertedTextMarkColorOnly = 5,
    wdInsertedTextMarkStrikeThrough = 6,
    wdInsertedTextMarkDoubleStrikeThrough = 7
};

enum WdRevisedLinesMark
{
    wdRevisedLinesMarkNone = 0,
    wdRevisedLinesMarkLeftBorder = 1,
    wdRevisedLinesMarkRightBorder = 2,
    wdRevisedLinesMarkOutsideBorder = 3
};

enum WdDeletedTextMark
{
    wdDeletedTextMarkHidden = 0,
    wdDeletedTextMarkStrikeThrough = 1,
    wdDeletedTextMarkCaret = 2,
    wdDeletedTextMarkPound = 3,
    wdDeletedTextMarkNone = 4,
    wdDeletedTextMarkBold = 5,
    wdDeletedTextMarkItalic = 6,
    wdDeletedTextMarkUnderline = 7,
    wdDeletedTextMarkDoubleUnderline = 8,
    wdDeletedTextMarkColorOnly = 9,
    wdDeletedTextMarkDoubleStrikeThrough = 10
};

enum WdRevisedPropertiesMark
{
    wdRevisedPropertiesMarkNone = 0,
    wdRevisedPropertiesMarkBold = 1,
    wdRevisedPropertiesMarkItalic = 2,
    wdRevisedPropertiesMarkUnderline = 3,
    wdRevisedPropertiesMarkDoubleUnderline = 4,
    wdRevisedPropertiesMarkColorOnly = 5,
    wdRevisedPropertiesMarkStrikeThrough = 6,
    wdRevisedPropertiesMarkDoubleStrikeThrough = 7
};

enum WdFieldShading
{
    wdFieldShadingNever = 0,
    wdFieldShadingAlways = 1,
    wdFieldShadingWhenSelected = 2
};

enum WdDefaultFilePath
{
    wdDocumentsPath = 0,
    wdPicturesPath = 1,
    wdUserTemplatesPath = 2,
    wdWorkgroupTemplatesPath = 3,
    wdUserOptionsPath = 4,
    wdAutoRecoverPath = 5,
    wdToolsPath = 6,
    wdTutorialPath = 7,
    wdStartupPath = 8,
    wdProgramPath = 9,
    wdGraphicsFiltersPath = 10,
    wdTextConvertersPath = 11,
    wdProofingToolsPath = 12,
    wdTempFilePath = 13,
    wdCurrentFolderPath = 14,
    wdStyleGalleryPath = 15,
    wdBorderArtPath = 19
};

enum WdCompatibility
{
    wdNoTabHangIndent = 1,
    wdNoSpaceRaiseLower = 2,
    wdPrintColBlack = 3,
    wdWrapTrailSpaces = 4,
    wdNoColumnBalance = 5,
    wdConvMailMergeEsc = 6,
    wdSuppressSpBfAfterPgBrk = 7,
    wdSuppressTopSpacing = 8,
    wdOrigWordTableRules = 9,
    wdTransparentMetafiles = 10,
    wdShowBreaksInFrames = 11,
    wdSwapBordersFacingPages = 12,
    wdLeaveBackslashAlone = 13,
    wdExpandShiftReturn = 14,
    wdDontULTrailSpace = 15,
    wdDontBalanceSingleByteDoubleByteWidth = 16,
    wdSuppressTopSpacingMac5 = 17,
    wdSpacingInWholePoints = 18,
    wdPrintBodyTextBeforeHeader = 19,
    wdNoLeading = 20,
    wdNoSpaceForUL = 21,
    wdMWSmallCaps = 22,
    wdNoExtraLineSpacing = 23,
    wdTruncateFontHeight = 24,
    wdSubFontBySize = 25,
    wdUsePrinterMetrics = 26,
    wdWW6BorderRules = 27,
    wdExactOnTop = 28,
    wdSuppressBottomSpacing = 29,
    wdWPSpaceWidth = 30,
    wdWPJustification = 31,
    wdLineWrapLikeWord6 = 32,
    wdShapeLayoutLikeWW8 = 33,
    wdFootnoteLayoutLikeWW8 = 34,
    wdDontUseHTMLParagraphAutoSpacing = 35,
    wdDontAdjustLineHeightInTable = 36,
    wdForgetLastTabAlignment = 37,
    wdAutospaceLikeWW7 = 38,
    wdAlignTablesRowByRow = 39,
    wdLayoutRawTableWidth = 40,
    wdLayoutTableRowsApart = 41,
    wdUseWord97LineBreakingRules = 42,
    wdDontBreakWrappedTables = 43,
    wdDontSnapTextToGridInTableWithObjects = 44,
    wdSelectFieldWithFirstOrLastCharacter = 45,
    wdApplyBreakingRules = 46,
    wdDontWrapTextWithPunctuation = 47,
    wdDontUseAsianBreakRulesInGrid = 48,
    wdUseWord2002TableStyleRules = 49,
    wdGrowAutofit = 50,
    wdUseNormalStyleForList = 51,
    wdDontUseIndentAsNumberingTabStop = 52,
    wdFELineBreak11 = 53,
    wdAllowSpaceOfSameStyleInTable = 54,
    wdWW11IndentRules = 55,
    wdDontAutofitConstrainedTables = 56,
    wdAutofitLikeWW11 = 57,
    wdUnderlineTabInNumList = 58,
    wdHangulWidthLikeWW11 = 59,
    wdSplitPgBreakAndParaMark = 60,
    wdDontVertAlignCellWithShape = 61,
    wdDontBreakConstrainedForcedTables = 62,
    wdDontVertAlignInTextbox = 63,
    wdWord11KerningPairs = 64,
    wdCachedColBalance = 65,
    wdDisableOTKerning = 66,
    wdFlipMirrorIndents = 67,
    wdDontOverrideTableStyleFontSzAndJustification = 68
};

enum WdPaperSize
{
    wdPaper10x14 = 0,
    wdPaper11x17 = 1,
    wdPaperLetter = 2,
    wdPaperLetterSmall = 3,
    wdPaperLegal = 4,
    wdPaperExecutive = 5,
    wdPaperA3 = 6,
    wdPaperA4 = 7,
    wdPaperA4Small = 8,
    wdPaperA5 = 9,
    wdPaperB4 = 10,
    wdPaperB5 = 11,
    wdPaperCSheet = 12,
    wdPaperDSheet = 13,
    wdPaperESheet = 14,
    wdPaperFanfoldLegalGerman = 15,
    wdPaperFanfoldStdGerman = 16,
    wdPaperFanfoldUS = 17,
    wdPaperFolio = 18,
    wdPaperLedger = 19,
    wdPaperNote = 20,
    wdPaperQuarto = 21,
    wdPaperStatement = 22,
    wdPaperTabloid = 23,
    wdPaperEnvelope9 = 24,
    wdPaperEnvelope10 = 25,
    wdPaperEnvelope11 = 26,
    wdPaperEnvelope12 = 27,
    wdPaperEnvelope14 = 28,
    wdPaperEnvelopeB4 = 29,
    wdPaperEnvelopeB5 = 30,
    wdPaperEnvelopeB6 = 31,
    wdPaperEnvelopeC3 = 32,
    wdPaperEnvelopeC4 = 33,
    wdPaperEnvelopeC5 = 34,
    wdPaperEnvelopeC6 = 35,
    wdPaperEnvelopeC65 = 36,
    wdPaperEnvelopeDL = 37,
    wdPaperEnvelopeItaly = 38,
    wdPaperEnvelopeMonarch = 39,
    wdPaperEnvelopePersonal = 40,
    wdPaperCustom = 41
};

enum WdCustomLabelPageSize
{
    wdCustomLabelLetter = 0,
    wdCustomLabelLetterLS = 1,
    wdCustomLabelA4 = 2,
    wdCustomLabelA4LS = 3,
    wdCustomLabelA5 = 4,
    wdCustomLabelA5LS = 5,
    wdCustomLabelB5 = 6,
    wdCustomLabelMini = 7,
    wdCustomLabelFanfold = 8,
    wdCustomLabelVertHalfSheet = 9,
    wdCustomLabelVertHalfSheetLS = 10,
    wdCustomLabelHigaki = 11,
    wdCustomLabelHigakiLS = 12,
    wdCustomLabelB4JIS = 13
};

enum WdProtectionType
{
    wdNoProtection = -1,
    wdAllowOnlyRevisions = 0,
    wdAllowOnlyComments = 1,
    wdAllowOnlyFormFields = 2,
    wdAllowOnlyReading = 3
};

enum WdPartOfSpeech
{
    wdAdjective = 0,
    wdNoun = 1,
    wdAdverb = 2,
    wdVerb = 3,
    wdPronoun = 4,
    wdConjunction = 5,
    wdPreposition = 6,
    wdInterjection = 7,
    wdIdiom = 8,
    wdOther = 9
};

enum WdSubscriberFormats
{
    wdSubscriberBestFormat = 0,
    wdSubscriberRTF = 1,
    wdSubscriberText = 2,
    wdSubscriberPict = 4
};

enum WdEditionType
{
    wdPublisher = 0,
    wdSubscriber = 1
};

enum WdEditionOption
{
    wdCancelPublisher = 0,
    wdSendPublisher = 1,
    wdSelectPublisher = 2,
    wdAutomaticUpdate = 3,
    wdManualUpdate = 4,
    wdChangeAttributes = 5,
    wdUpdateSubscriber = 6,
    wdOpenSource = 7
};

enum WdRelativeHorizontalPosition
{
    wdRelativeHorizontalPositionMargin = 0,
    wdRelativeHorizontalPositionPage = 1,
    wdRelativeHorizontalPositionColumn = 2,
    wdRelativeHorizontalPositionCharacter = 3,
    wdRelativeHorizontalPositionLeftMarginArea = 4,
    wdRelativeHorizontalPositionRightMarginArea = 5,
    wdRelativeHorizontalPositionInnerMarginArea = 6,
    wdRelativeHorizontalPositionOuterMarginArea = 7
};

enum WdRelativeVerticalPosition
{
    wdRelativeVerticalPositionMargin = 0,
    wdRelativeVerticalPositionPage = 1,
    wdRelativeVerticalPositionParagraph = 2,
    wdRelativeVerticalPositionLine = 3,
    wdRelativeVerticalPositionTopMarginArea = 4,
    wdRelativeVerticalPositionBottomMarginArea = 5,
    wdRelativeVerticalPositionInnerMarginArea = 6,
    wdRelativeVerticalPositionOuterMarginArea = 7
};

enum WdHelpType
{
    wdHelp = 0,
    wdHelpAbout = 1,
    wdHelpActiveWindow = 2,
    wdHelpContents = 3,
    wdHelpExamplesAndDemos = 4,
    wdHelpIndex = 5,
    wdHelpKeyboard = 6,
    wdHelpPSSHelp = 7,
    wdHelpQuickPreview = 8,
    wdHelpSearch = 9,
    wdHelpUsingHelp = 10,
    wdHelpIchitaro = 11,
    wdHelpPE2 = 12,
    wdHelpHWP = 13
};

enum WdHelpTypeHID
{
//  emptyenum = 0
};

enum WdKeyCategory
{
    wdKeyCategoryNil = -1,
    wdKeyCategoryDisable = 0,
    wdKeyCategoryCommand = 1,
    wdKeyCategoryMacro = 2,
    wdKeyCategoryFont = 3,
    wdKeyCategoryAutoText = 4,
    wdKeyCategoryStyle = 5,
    wdKeyCategorySymbol = 6,
    wdKeyCategoryPrefix = 7
};

enum WdKey
{
    wdNoKey = 255,
    wdKeyShift = 256,
    wdKeyControl = 512,
    wdKeyCommand = 512,
    wdKeyAlt = 1024,
    wdKeyOption = 1024,
    wdKeyA = 65,
    wdKeyB = 66,
    wdKeyC = 67,
    wdKeyD = 68,
    wdKeyE = 69,
    wdKeyF = 70,
    wdKeyG = 71,
    wdKeyH = 72,
    wdKeyI = 73,
    wdKeyJ = 74,
    wdKeyK = 75,
    wdKeyL = 76,
    wdKeyM = 77,
    wdKeyN = 78,
    wdKeyO = 79,
    wdKeyP = 80,
    wdKeyQ = 81,
    wdKeyR = 82,
    wdKeyS = 83,
    wdKeyT = 84,
    wdKeyU = 85,
    wdKeyV = 86,
    wdKeyW = 87,
    wdKeyX = 88,
    wdKeyY = 89,
    wdKeyZ = 90,
    wdKey0 = 48,
    wdKey1 = 49,
    wdKey2 = 50,
    wdKey3 = 51,
    wdKey4 = 52,
    wdKey5 = 53,
    wdKey6 = 54,
    wdKey7 = 55,
    wdKey8 = 56,
    wdKey9 = 57,
    wdKeyBackspace = 8,
    wdKeyTab = 9,
    wdKeyNumeric5Special = 12,
    wdKeyReturn = 13,
    wdKeyPause = 19,
    wdKeyEsc = 27,
    wdKeySpacebar = 32,
    wdKeyPageUp = 33,
    wdKeyPageDown = 34,
    wdKeyEnd = 35,
    wdKeyHome = 36,
    wdKeyInsert = 45,
    wdKeyDelete = 46,
    wdKeyNumeric0 = 96,
    wdKeyNumeric1 = 97,
    wdKeyNumeric2 = 98,
    wdKeyNumeric3 = 99,
    wdKeyNumeric4 = 100,
    wdKeyNumeric5 = 101,
    wdKeyNumeric6 = 102,
    wdKeyNumeric7 = 103,
    wdKeyNumeric8 = 104,
    wdKeyNumeric9 = 105,
    wdKeyNumericMultiply = 106,
    wdKeyNumericAdd = 107,
    wdKeyNumericSubtract = 109,
    wdKeyNumericDecimal = 110,
    wdKeyNumericDivide = 111,
    wdKeyF1 = 112,
    wdKeyF2 = 113,
    wdKeyF3 = 114,
    wdKeyF4 = 115,
    wdKeyF5 = 116,
    wdKeyF6 = 117,
    wdKeyF7 = 118,
    wdKeyF8 = 119,
    wdKeyF9 = 120,
    wdKeyF10 = 121,
    wdKeyF11 = 122,
    wdKeyF12 = 123,
    wdKeyF13 = 124,
    wdKeyF14 = 125,
    wdKeyF15 = 126,
    wdKeyF16 = 127,
    wdKeyScrollLock = 145,
    wdKeySemiColon = 186,
    wdKeyEquals = 187,
    wdKeyComma = 188,
    wdKeyHyphen = 189,
    wdKeyPeriod = 190,
    wdKeySlash = 191,
    wdKeyBackSingleQuote = 192,
    wdKeyOpenSquareBrace = 219,
    wdKeyBackSlash = 220,
    wdKeyCloseSquareBrace = 221,
    wdKeySingleQuote = 222
};

enum WdOLEType
{
    wdOLELink = 0,
    wdOLEEmbed = 1,
    wdOLEControl = 2
};

enum WdOLEVerb
{
    wdOLEVerbPrimary = 0,
    wdOLEVerbShow = -1,
    wdOLEVerbOpen = -2,
    wdOLEVerbHide = -3,
    wdOLEVerbUIActivate = -4,
    wdOLEVerbInPlaceActivate = -5,
    wdOLEVerbDiscardUndoState = -6
};

enum WdOLEPlacement
{
    wdInLine = 0,
    wdFloatOverText = 1
};

enum WdEnvelopeOrientation
{
    wdLeftPortrait = 0,
    wdCenterPortrait = 1,
    wdRightPortrait = 2,
    wdLeftLandscape = 3,
    wdCenterLandscape = 4,
    wdRightLandscape = 5,
    wdLeftClockwise = 6,
    wdCenterClockwise = 7,
    wdRightClockwise = 8
};

enum WdLetterStyle
{
    wdFullBlock = 0,
    wdModifiedBlock = 1,
    wdSemiBlock = 2
};

enum WdLetterheadLocation
{
    wdLetterTop = 0,
    wdLetterBottom = 1,
    wdLetterLeft = 2,
    wdLetterRight = 3
};

enum WdSalutationType
{
    wdSalutationInformal = 0,
    wdSalutationFormal = 1,
    wdSalutationBusiness = 2,
    wdSalutationOther = 3
};

enum WdSalutationGender
{
    wdGenderFemale = 0,
    wdGenderMale = 1,
    wdGenderNeutral = 2,
    wdGenderUnknown = 3
};

enum WdMovementType
{
    wdMove = 0,
    wdExtend = 1
};

enum WdConstants
{
    wdUndefined = 9999999,
    wdToggle = 9999998,
    wdForward = 1073741823,
    wdBackward = -1073741823,
    wdAutoPosition = 0,
    wdFirst = 1,
    wdCreatorCode = 1297307460
};

enum WdPasteDataType
{
    wdPasteOLEObject = 0,
    wdPasteRTF = 1,
    wdPasteText = 2,
    wdPasteMetafilePicture = 3,
    wdPasteBitmap = 4,
    wdPasteDeviceIndependentBitmap = 5,
    wdPasteHyperlink = 7,
    wdPasteShape = 8,
    wdPasteEnhancedMetafile = 9,
    wdPasteHTML = 10
};

enum WdPrintOutItem
{
    wdPrintDocumentContent = 0,
    wdPrintProperties = 1,
    wdPrintComments = 2,
    wdPrintMarkup = 2,
    wdPrintStyles = 3,
    wdPrintAutoTextEntries = 4,
    wdPrintKeyAssignments = 5,
    wdPrintEnvelope = 6,
    wdPrintDocumentWithMarkup = 7
};

enum WdPrintOutPages
{
    wdPrintAllPages = 0,
    wdPrintOddPagesOnly = 1,
    wdPrintEvenPagesOnly = 2
};

enum WdPrintOutRange
{
    wdPrintAllDocument = 0,
    wdPrintSelection = 1,
    wdPrintCurrentPage = 2,
    wdPrintFromTo = 3,
    wdPrintRangeOfPages = 4
};

enum WdDictionaryType
{
    wdSpelling = 0,
    wdGrammar = 1,
    wdThesaurus = 2,
    wdHyphenation = 3,
    wdSpellingComplete = 4,
    wdSpellingCustom = 5,
    wdSpellingLegal = 6,
    wdSpellingMedical = 7,
    wdHangulHanjaConversion = 8,
    wdHangulHanjaConversionCustom = 9
};

enum WdDictionaryTypeHID
{
//  emptyenum = 0
};

enum WdSpellingWordType
{
    wdSpellword = 0,
    wdWildcard = 1,
    wdAnagram = 2
};

enum WdSpellingErrorType
{
    wdSpellingCorrect = 0,
    wdSpellingNotInDictionary = 1,
    wdSpellingCapitalization = 2
};

enum WdProofreadingErrorType
{
    wdSpellingError = 0,
    wdGrammaticalError = 1
};

enum WdInlineShapeType
{
    wdInlineShapeEmbeddedOLEObject = 1,
    wdInlineShapeLinkedOLEObject = 2,
    wdInlineShapePicture = 3,
    wdInlineShapeLinkedPicture = 4,
    wdInlineShapeOLEControlObject = 5,
    wdInlineShapeHorizontalLine = 6,
    wdInlineShapePictureHorizontalLine = 7,
    wdInlineShapeLinkedPictureHorizontalLine = 8,
    wdInlineShapePictureBullet = 9,
    wdInlineShapeScriptAnchor = 10,
    wdInlineShapeOWSAnchor = 11,
    wdInlineShapeChart = 12,
    wdInlineShapeDiagram = 13,
    wdInlineShapeLockedCanvas = 14,
    wdInlineShapeSmartArt = 15
};

enum WdArrangeStyle
{
    wdTiled = 0,
    wdIcons = 1
};

enum WdSelectionFlags
{
    wdSelStartActive = 1,
    wdSelAtEOL = 2,
    wdSelOvertype = 4,
    wdSelActive = 8,
    wdSelReplace = 16
};

enum WdAutoVersions
{
    wdAutoVersionOff = 0,
    wdAutoVersionOnClose = 1
};

enum WdOrganizerObject
{
    wdOrganizerObjectStyles = 0,
    wdOrganizerObjectAutoText = 1,
    wdOrganizerObjectCommandBars = 2,
    wdOrganizerObjectProjectItems = 3
};

enum WdFindMatch
{
    wdMatchParagraphMark = 65551,
    wdMatchTabCharacter = 9,
    wdMatchCommentMark = 5,
    wdMatchAnyCharacter = 65599,
    wdMatchAnyDigit = 65567,
    wdMatchAnyLetter = 65583,
    wdMatchCaretCharacter = 11,
    wdMatchColumnBreak = 14,
    wdMatchEmDash = 8212,
    wdMatchEnDash = 8211,
    wdMatchEndnoteMark = 65555,
    wdMatchField = 19,
    wdMatchFootnoteMark = 65554,
    wdMatchGraphic = 1,
    wdMatchManualLineBreak = 65551,
    wdMatchManualPageBreak = 65564,
    wdMatchNonbreakingHyphen = 30,
    wdMatchNonbreakingSpace = 160,
    wdMatchOptionalHyphen = 31,
    wdMatchSectionBreak = 65580,
    wdMatchWhiteSpace = 65655
};

enum WdFindWrap
{
    wdFindStop = 0,
    wdFindContinue = 1,
    wdFindAsk = 2
};

enum WdInformation
{
    wdActiveEndAdjustedPageNumber = 1,
    wdActiveEndSectionNumber = 2,
    wdActiveEndPageNumber = 3,
    wdNumberOfPagesInDocument = 4,
    wdHorizontalPositionRelativeToPage = 5,
    wdVerticalPositionRelativeToPage = 6,
    wdHorizontalPositionRelativeToTextBoundary = 7,
    wdVerticalPositionRelativeToTextBoundary = 8,
    wdFirstCharacterColumnNumber = 9,
    wdFirstCharacterLineNumber = 10,
    wdFrameIsSelected = 11,
    wdWithInTable = 12,
    wdStartOfRangeRowNumber = 13,
    wdEndOfRangeRowNumber = 14,
    wdMaximumNumberOfRows = 15,
    wdStartOfRangeColumnNumber = 16,
    wdEndOfRangeColumnNumber = 17,
    wdMaximumNumberOfColumns = 18,
    wdZoomPercentage = 19,
    wdSelectionMode = 20,
    wdCapsLock = 21,
    wdNumLock = 22,
    wdOverType = 23,
    wdRevisionMarking = 24,
    wdInFootnoteEndnotePane = 25,
    wdInCommentPane = 26,
    wdInHeaderFooter = 28,
    wdAtEndOfRowMarker = 31,
    wdReferenceOfType = 32,
    wdHeaderFooterType = 33,
    wdInMasterDocument = 34,
    wdInFootnote = 35,
    wdInEndnote = 36,
    wdInWordMail = 37,
    wdInClipboard = 38
};

enum WdWrapType
{
    wdWrapSquare = 0,
    wdWrapTight = 1,
    wdWrapThrough = 2,
    wdWrapNone = 3,
    wdWrapTopBottom = 4,
    wdWrapBehind = 5,
    wdWrapFront = 3,
    wdWrapInline = 7
};

enum WdWrapSideType
{
    wdWrapBoth = 0,
    wdWrapLeft = 1,
    wdWrapRight = 2,
    wdWrapLargest = 3
};

enum WdOutlineLevel
{
    wdOutlineLevel1 = 1,
    wdOutlineLevel2 = 2,
    wdOutlineLevel3 = 3,
    wdOutlineLevel4 = 4,
    wdOutlineLevel5 = 5,
    wdOutlineLevel6 = 6,
    wdOutlineLevel7 = 7,
    wdOutlineLevel8 = 8,
    wdOutlineLevel9 = 9,
    wdOutlineLevelBodyText = 10
};

enum WdTextOrientation
{
    wdTextOrientationHorizontal = 0,
    wdTextOrientationUpward = 2,
    wdTextOrientationDownward = 3,
    wdTextOrientationVerticalFarEast = 1,
    wdTextOrientationHorizontalRotatedFarEast = 4,
    wdTextOrientationVertical = 5
};

enum WdTextOrientationHID
{
//  emptyenum = 0
};

enum WdPageBorderArt
{
    wdArtApples = 1,
    wdArtMapleMuffins = 2,
    wdArtCakeSlice = 3,
    wdArtCandyCorn = 4,
    wdArtIceCreamCones = 5,
    wdArtChampagneBottle = 6,
    wdArtPartyGlass = 7,
    wdArtChristmasTree = 8,
    wdArtTrees = 9,
    wdArtPalmsColor = 10,
    wdArtBalloons3Colors = 11,
    wdArtBalloonsHotAir = 12,
    wdArtPartyFavor = 13,
    wdArtConfettiStreamers = 14,
    wdArtHearts = 15,
    wdArtHeartBalloon = 16,
    wdArtStars3D = 17,
    wdArtStarsShadowed = 18,
    wdArtStars = 19,
    wdArtSun = 20,
    wdArtEarth2 = 21,
    wdArtEarth1 = 22,
    wdArtPeopleHats = 23,
    wdArtSombrero = 24,
    wdArtPencils = 25,
    wdArtPackages = 26,
    wdArtClocks = 27,
    wdArtFirecrackers = 28,
    wdArtRings = 29,
    wdArtMapPins = 30,
    wdArtConfetti = 31,
    wdArtCreaturesButterfly = 32,
    wdArtCreaturesLadyBug = 33,
    wdArtCreaturesFish = 34,
    wdArtBirdsFlight = 35,
    wdArtScaredCat = 36,
    wdArtBats = 37,
    wdArtFlowersRoses = 38,
    wdArtFlowersRedRose = 39,
    wdArtPoinsettias = 40,
    wdArtHolly = 41,
    wdArtFlowersTiny = 42,
    wdArtFlowersPansy = 43,
    wdArtFlowersModern2 = 44,
    wdArtFlowersModern1 = 45,
    wdArtWhiteFlowers = 46,
    wdArtVine = 47,
    wdArtFlowersDaisies = 48,
    wdArtFlowersBlockPrint = 49,
    wdArtDecoArchColor = 50,
    wdArtFans = 51,
    wdArtFilm = 52,
    wdArtLightning1 = 53,
    wdArtCompass = 54,
    wdArtDoubleD = 55,
    wdArtClassicalWave = 56,
    wdArtShadowedSquares = 57,
    wdArtTwistedLines1 = 58,
    wdArtWaveline = 59,
    wdArtQuadrants = 60,
    wdArtCheckedBarColor = 61,
    wdArtSwirligig = 62,
    wdArtPushPinNote1 = 63,
    wdArtPushPinNote2 = 64,
    wdArtPumpkin1 = 65,
    wdArtEggsBlack = 66,
    wdArtCup = 67,
    wdArtHeartGray = 68,
    wdArtGingerbreadMan = 69,
    wdArtBabyPacifier = 70,
    wdArtBabyRattle = 71,
    wdArtCabins = 72,
    wdArtHouseFunky = 73,
    wdArtStarsBlack = 74,
    wdArtSnowflakes = 75,
    wdArtSnowflakeFancy = 76,
    wdArtSkyrocket = 77,
    wdArtSeattle = 78,
    wdArtMusicNotes = 79,
    wdArtPalmsBlack = 80,
    wdArtMapleLeaf = 81,
    wdArtPaperClips = 82,
    wdArtShorebirdTracks = 83,
    wdArtPeople = 84,
    wdArtPeopleWaving = 85,
    wdArtEclipsingSquares2 = 86,
    wdArtHypnotic = 87,
    wdArtDiamondsGray = 88,
    wdArtDecoArch = 89,
    wdArtDecoBlocks = 90,
    wdArtCirclesLines = 91,
    wdArtPapyrus = 92,
    wdArtWoodwork = 93,
    wdArtWeavingBraid = 94,
    wdArtWeavingRibbon = 95,
    wdArtWeavingAngles = 96,
    wdArtArchedScallops = 97,
    wdArtSafari = 98,
    wdArtCelticKnotwork = 99,
    wdArtCrazyMaze = 100,
    wdArtEclipsingSquares1 = 101,
    wdArtBirds = 102,
    wdArtFlowersTeacup = 103,
    wdArtNorthwest = 104,
    wdArtSouthwest = 105,
    wdArtTribal6 = 106,
    wdArtTribal4 = 107,
    wdArtTribal3 = 108,
    wdArtTribal2 = 109,
    wdArtTribal5 = 110,
    wdArtXIllusions = 111,
    wdArtZanyTriangles = 112,
    wdArtPyramids = 113,
    wdArtPyramidsAbove = 114,
    wdArtConfettiGrays = 115,
    wdArtConfettiOutline = 116,
    wdArtConfettiWhite = 117,
    wdArtMosaic = 118,
    wdArtLightning2 = 119,
    wdArtHeebieJeebies = 120,
    wdArtLightBulb = 121,
    wdArtGradient = 122,
    wdArtTriangleParty = 123,
    wdArtTwistedLines2 = 124,
    wdArtMoons = 125,
    wdArtOvals = 126,
    wdArtDoubleDiamonds = 127,
    wdArtChainLink = 128,
    wdArtTriangles = 129,
    wdArtTribal1 = 130,
    wdArtMarqueeToothed = 131,
    wdArtSharksTeeth = 132,
    wdArtSawtooth = 133,
    wdArtSawtoothGray = 134,
    wdArtPostageStamp = 135,
    wdArtWeavingStrips = 136,
    wdArtZigZag = 137,
    wdArtCrossStitch = 138,
    wdArtGems = 139,
    wdArtCirclesRectangles = 140,
    wdArtCornerTriangles = 141,
    wdArtCreaturesInsects = 142,
    wdArtZigZagStitch = 143,
    wdArtCheckered = 144,
    wdArtCheckedBarBlack = 145,
    wdArtMarquee = 146,
    wdArtBasicWhiteDots = 147,
    wdArtBasicWideMidline = 148,
    wdArtBasicWideOutline = 149,
    wdArtBasicWideInline = 150,
    wdArtBasicThinLines = 151,
    wdArtBasicWhiteDashes = 152,
    wdArtBasicWhiteSquares = 153,
    wdArtBasicBlackSquares = 154,
    wdArtBasicBlackDashes = 155,
    wdArtBasicBlackDots = 156,
    wdArtStarsTop = 157,
    wdArtCertificateBanner = 158,
    wdArtHandmade1 = 159,
    wdArtHandmade2 = 160,
    wdArtTornPaper = 161,
    wdArtTornPaperBlack = 162,
    wdArtCouponCutoutDashes = 163,
    wdArtCouponCutoutDots = 164
};

enum WdBorderDistanceFrom
{
    wdBorderDistanceFromText = 0,
    wdBorderDistanceFromPageEdge = 1
};

enum WdReplace
{
    wdReplaceNone = 0,
    wdReplaceOne = 1,
    wdReplaceAll = 2
};

enum WdFontBias
{
    wdFontBiasDontCare = 255,
    wdFontBiasDefault = 0,
    wdFontBiasFareast = 1
};

struct __declspec(uuid("000209a4-0000-0000-c000-000000000046"))
_OLEControl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Automation (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_AltHTML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AltHTML (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209f7-0000-0000-c000-000000000046"))
wordApplicationEvents : IDispatch
{};

struct __declspec(uuid("000209f0-0000-0000-c000-000000000046"))
wordGlobal;
    // [ default ] interface _wordGlobal

struct __declspec(uuid("000209ff-0000-0000-c000-000000000046"))
wordApplication;
    // [ default ] interface _wordApplication
    // [ source ] dispinterface wordApplicationEvents
    // [ source ] dispinterface ApplicationEvents2
    // [ source ] dispinterface ApplicationEvents3
    // [ default, source ] dispinterface ApplicationEvents4

struct __declspec(uuid("0002096f-0000-0000-c000-000000000046"))
wordFontNames : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("00020969-0000-0000-c000-000000000046"))
RoutingSlip : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Message (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Message (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Delivery (
        /*[out,retval]*/ enum WdRoutingSlipDelivery * prop ) = 0;
      virtual HRESULT __stdcall put_Delivery (
        /*[in]*/ enum WdRoutingSlipDelivery prop ) = 0;
      virtual HRESULT __stdcall get_TrackStatus (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackStatus (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Protect (
        /*[out,retval]*/ enum WdProtectionType * prop ) = 0;
      virtual HRESULT __stdcall put_Protect (
        /*[in]*/ enum WdProtectionType prop ) = 0;
      virtual HRESULT __stdcall get_ReturnWhenDone (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnWhenDone (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum WdRoutingSlipStatus * prop ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall AddRecipient (
        /*[in]*/ BSTR Recipient ) = 0;
};

struct __declspec(uuid("00020966-0000-0000-c000-000000000046"))
Variable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020965-0000-0000-c000-000000000046"))
Variables : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Variable * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Value,
        /*[out,retval]*/ struct Variable * * prop ) = 0;
};

struct __declspec(uuid("00020956-0000-0000-c000-000000000046"))
DropCap : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum WdDropPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum WdDropPosition prop ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LinesToDrop (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LinesToDrop (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall Enable ( ) = 0;
};

struct __declspec(uuid("00020954-0000-0000-c000-000000000046"))
wordTabStop : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdTabAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdTabAlignment prop ) = 0;
      virtual HRESULT __stdcall get_Leader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_Leader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CustomTab (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct wordTabStop * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct wordTabStop * * prop ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("00020955-0000-0000-c000-000000000046"))
wordTabStops : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordTabStop * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ float Position,
        /*[in]*/ VARIANT * Alignment,
        /*[in]*/ VARIANT * Leader,
        /*[out,retval]*/ struct wordTabStop * * prop ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
      virtual HRESULT __stdcall Before (
        /*[in]*/ float Position,
        /*[out,retval]*/ struct wordTabStop * * prop ) = 0;
      virtual HRESULT __stdcall After (
        /*[in]*/ float Position,
        /*[out,retval]*/ struct wordTabStop * * prop ) = 0;
};

struct __declspec(uuid("00020945-0000-0000-c000-000000000046"))
FirstLetterException : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020946-0000-0000-c000-000000000046"))
FirstLetterExceptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct FirstLetterException * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct FirstLetterException * * prop ) = 0;
};

struct __declspec(uuid("00020943-0000-0000-c000-000000000046"))
TwoInitialCapsException : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020944-0000-0000-c000-000000000046"))
TwoInitialCapsExceptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct TwoInitialCapsException * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct TwoInitialCapsException * * prop ) = 0;
};

struct __declspec(uuid("00020939-0000-0000-c000-000000000046"))
TextRetrievalMode : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum WdViewType * prop ) = 0;
      virtual HRESULT __stdcall put_ViewType (
        /*[in]*/ enum WdViewType prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct TextRetrievalMode * * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeHiddenText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeHiddenText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IncludeFieldCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeFieldCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020935-0000-0000-c000-000000000046"))
System : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OperatingSystem (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ProcessorType (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_FreeDiskSpace (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Country (
        /*[out,retval]*/ enum WdCountry * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageDesignation (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalResolution (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_VerticalResolution (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ProfileString (
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ProfileString (
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PrivateProfileString (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PrivateProfileString (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MathCoprocessorInstalled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ComputerType (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_MacintoshName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_QuickDrawInstalled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Cursor (
        /*[out,retval]*/ enum WdCursorType * prop ) = 0;
      virtual HRESULT __stdcall put_Cursor (
        /*[in]*/ enum WdCursorType prop ) = 0;
      virtual HRESULT __stdcall MSInfo ( ) = 0;
      virtual HRESULT __stdcall Connect (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT * Drive = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_CountryRegion (
        /*[out,retval]*/ enum WdCountry * prop ) = 0;
};

struct __declspec(uuid("00020933-0000-0000-c000-000000000046"))
wordOLEFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ClassType (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ClassType (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAsIcon (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAsIcon (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IconName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_IconName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IconPath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_IconIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_IconIndex (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_IconLabel (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_IconLabel (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Label (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Edit ( ) = 0;
      virtual HRESULT __stdcall Open ( ) = 0;
      virtual HRESULT __stdcall DoVerb (
        /*[in]*/ VARIANT * VerbIndex = &vtMissing ) = 0;
      virtual HRESULT __stdcall ConvertTo (
        /*[in]*/ VARIANT * ClassType = &vtMissing,
        /*[in]*/ VARIANT * DisplayAsIcon = &vtMissing,
        /*[in]*/ VARIANT * IconFileName = &vtMissing,
        /*[in]*/ VARIANT * IconIndex = &vtMissing,
        /*[in]*/ VARIANT * IconLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall ActivateAs (
        /*[in]*/ BSTR ClassType ) = 0;
      virtual HRESULT __stdcall get_PreserveFormattingOnUpdate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PreserveFormattingOnUpdate (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020931-0000-0000-c000-000000000046"))
wordLinkFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoUpdate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoUpdate (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SourcePath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdLinkType * prop ) = 0;
      virtual HRESULT __stdcall get_SourceFullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SourceFullName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SavePictureWithDocument (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SavePictureWithDocument (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall BreakLink ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
};

struct __declspec(uuid("0002092e-0000-0000-c000-000000000046"))
Browser : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ enum WdBrowseTarget * prop ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ enum WdBrowseTarget prop ) = 0;
      virtual HRESULT __stdcall Next ( ) = 0;
      virtual HRESULT __stdcall Previous ( ) = 0;
};

struct __declspec(uuid("00020927-0000-0000-c000-000000000046"))
TextInput : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Default (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdTextFormFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall EditType (
        /*[in]*/ enum WdTextFormFieldType Type,
        /*[in]*/ VARIANT * Default = &vtMissing,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * Enabled = &vtMissing ) = 0;
};

struct __declspec(uuid("00020926-0000-0000-c000-000000000046"))
CheckBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Default (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020923-0000-0000-c000-000000000046"))
ListEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020924-0000-0000-c000-000000000046"))
ListEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ListEntry * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ListEntry * * prop ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("00020925-0000-0000-c000-000000000046"))
DropDown : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Default (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ListEntries (
        /*[out,retval]*/ struct ListEntries * * prop ) = 0;
};

struct __declspec(uuid("0002091b-0000-0000-c000-000000000046"))
MailMergeFieldName : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("0002091c-0000-0000-c000-000000000046"))
MailMergeFieldNames : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct MailMergeFieldName * * prop ) = 0;
};

struct __declspec(uuid("00020919-0000-0000-c000-000000000046"))
MailMergeDataField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("0002091a-0000-0000-c000-000000000046"))
MailMergeDataFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct MailMergeDataField * * prop ) = 0;
};

struct __declspec(uuid("00020915-0000-0000-c000-000000000046"))
CustomLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SideMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SideMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPitch (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPitch (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPitch (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPitch (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_NumberAcross (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NumberAcross (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberDown (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NumberDown (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DotMatrix (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_PageSize (
        /*[out,retval]*/ enum WdCustomLabelPageSize * prop ) = 0;
      virtual HRESULT __stdcall put_PageSize (
        /*[in]*/ enum WdCustomLabelPageSize prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020916-0000-0000-c000-000000000046"))
CustomLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct CustomLabel * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * DotMatrix,
        /*[out,retval]*/ struct CustomLabel * * prop ) = 0;
};

struct __declspec(uuid("000209b8-0000-0000-c000-000000000046"))
Dialog : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTab (
        /*[out,retval]*/ enum WdWordDialogTab * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTab (
        /*[in]*/ enum WdWordDialogTab prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdWordDialog * prop ) = 0;
      virtual HRESULT __stdcall Show (
        /*[in]*/ VARIANT * TimeOut,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ VARIANT * TimeOut,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Execute ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall get_CommandName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CommandBarId (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020910-0000-0000-c000-000000000046"))
Dialogs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdWordDialog Index,
        /*[out,retval]*/ struct Dialog * * prop ) = 0;
};

struct __declspec(uuid("00020972-0000-0000-c000-000000000046"))
LineNumbering : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RestartMode (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_RestartMode (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CountBy (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_CountBy (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Active (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("00020974-0000-0000-c000-000000000046"))
TextColumn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("00020977-0000-0000-c000-000000000046"))
TableOfAuthoritiesCategory : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020976-0000-0000-c000-000000000046"))
TablesOfAuthoritiesCategories : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct TableOfAuthoritiesCategory * * prop ) = 0;
};

struct __declspec(uuid("00020979-0000-0000-c000-000000000046"))
CaptionLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ enum WdCaptionLabelID * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeChapterNumber (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeChapterNumber (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdCaptionNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdCaptionNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_ChapterStyleLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ChapterStyleLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ enum WdSeparatorType * prop ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ enum WdSeparatorType prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum WdCaptionPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum WdCaptionPosition prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020978-0000-0000-c000-000000000046"))
CaptionLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct CaptionLabel * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct CaptionLabel * * prop ) = 0;
};

struct __declspec(uuid("0002097b-0000-0000-c000-000000000046"))
AutoCaption : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_AutoInsert (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoInsert (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CaptionLabel (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_CaptionLabel (
        /*[in]*/ VARIANT * prop ) = 0;
};

struct __declspec(uuid("0002097a-0000-0000-c000-000000000046"))
AutoCaptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AutoCaption * * prop ) = 0;
      virtual HRESULT __stdcall CancelAutoInsert ( ) = 0;
};

struct __declspec(uuid("0002097e-0000-0000-c000-000000000046"))
wordAddIn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Installed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Installed (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Compiled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Autoload (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("0002097f-0000-0000-c000-000000000046"))
wordAddIns : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordAddIn * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Install,
        /*[out,retval]*/ struct wordAddIn * * prop ) = 0;
      virtual HRESULT __stdcall Unload (
        /*[in]*/ VARIANT_BOOL RemoveFromList ) = 0;
};

struct __declspec(uuid("00020982-0000-0000-c000-000000000046"))
Task : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[in]*/ VARIANT * Wait = &vtMissing ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ long Left,
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall Resize (
        /*[in]*/ long Width,
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall SendWindowMessage (
        /*[in]*/ long Message,
        /*[in]*/ long wParam,
        /*[in]*/ long lParam ) = 0;
};

struct __declspec(uuid("00020983-0000-0000-c000-000000000046"))
Tasks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Task * * prop ) = 0;
      virtual HRESULT __stdcall Exists (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall wordExitWindows ( ) = 0;
};

struct __declspec(uuid("00020987-0000-0000-c000-000000000046"))
PageNumber : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdPageNumberAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdPageNumberAlignment prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020986-0000-0000-c000-000000000046"))
PageNumbers : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdPageNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdPageNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_IncludeChapterNumber (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeChapterNumber (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HeadingLevelForChapter (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingLevelForChapter (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ChapterPageSeparator (
        /*[out,retval]*/ enum WdSeparatorType * prop ) = 0;
      virtual HRESULT __stdcall put_ChapterPageSeparator (
        /*[in]*/ enum WdSeparatorType prop ) = 0;
      virtual HRESULT __stdcall get_RestartNumberingAtSection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RestartNumberingAtSection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowFirstPageNumber (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFirstPageNumber (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct PageNumber * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * PageNumberAlignment,
        /*[in]*/ VARIANT * FirstPage,
        /*[out,retval]*/ struct PageNumber * * prop ) = 0;
      virtual HRESULT __stdcall get_DoubleQuote (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DoubleQuote (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002098b-0000-0000-c000-000000000046"))
HeadingStyle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Level (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Level (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("0002098a-0000-0000-c000-000000000046"))
HeadingStyles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct HeadingStyle * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Style,
        /*[in]*/ short Level,
        /*[out,retval]*/ struct HeadingStyle * * prop ) = 0;
};

struct __declspec(uuid("00020998-0000-0000-c000-000000000046"))
KeyBinding : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Command (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_KeyString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Protected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCategory (
        /*[out,retval]*/ enum WdKeyCategory * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCode (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCode2 (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CommandParameter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Context (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall Disable ( ) = 0;
      virtual HRESULT __stdcall Execute ( ) = 0;
      virtual HRESULT __stdcall Rebind (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ VARIANT * CommandParameter = &vtMissing ) = 0;
};

struct __declspec(uuid("00020996-0000-0000-c000-000000000046"))
KeyBindings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Context (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[in]*/ VARIANT * CommandParameter,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
      virtual HRESULT __stdcall Key (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
};

struct __declspec(uuid("00020997-0000-0000-c000-000000000046"))
KeysBoundTo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCategory (
        /*[out,retval]*/ enum WdKeyCategory * prop ) = 0;
      virtual HRESULT __stdcall get_Command (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CommandParameter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Context (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall Key (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
};

struct __declspec(uuid("0002099a-0000-0000-c000-000000000046"))
wordFileConverters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_ConvertMacWordChevrons (
        /*[out,retval]*/ enum WdChevronConvertRule * prop ) = 0;
      virtual HRESULT __stdcall put_ConvertMacWordChevrons (
        /*[in]*/ enum WdChevronConvertRule prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct FileConverter * * prop ) = 0;
};

struct __declspec(uuid("0002099b-0000-0000-c000-000000000046"))
SynonymInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Word (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Found (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_MeaningCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_MeaningList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_PartOfSpeechList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_SynonymList (
        /*[in]*/ VARIANT * Meaning,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_AntonymList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_RelatedExpressionList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_RelatedWordList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
};

struct __declspec(uuid("000209a6-0000-0000-c000-000000000046"))
Zoom : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Percentage (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Percentage (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageFit (
        /*[out,retval]*/ enum WdPageFit * prop ) = 0;
      virtual HRESULT __stdcall put_PageFit (
        /*[in]*/ enum WdPageFit prop ) = 0;
      virtual HRESULT __stdcall get_PageRows (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageRows (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageColumns (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageColumns (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("000209a7-0000-0000-c000-000000000046"))
Zooms : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdViewType Index,
        /*[out,retval]*/ struct Zoom * * prop ) = 0;
};

struct __declspec(uuid("000209ab-0000-0000-c000-000000000046"))
SpellingSuggestion : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("000209aa-0000-0000-c000-000000000046"))
SpellingSuggestions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingErrorType (
        /*[out,retval]*/ enum WdSpellingErrorType * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct SpellingSuggestion * * prop ) = 0;
};

struct __declspec(uuid("000209ad-0000-0000-c000-000000000046"))
Dictionary : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdDictionaryType * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageSpecific (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageSpecific (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("0002096d-0000-0000-c000-000000000046"))
Language : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveGrammarDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveHyphenationDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveSpellingDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveThesaurusDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultWritingStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultWritingStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_WritingStyleList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingDictionaryType (
        /*[out,retval]*/ enum WdDictionaryType * prop ) = 0;
      virtual HRESULT __stdcall put_SpellingDictionaryType (
        /*[in]*/ enum WdDictionaryType prop ) = 0;
};

struct __declspec(uuid("0002096e-0000-0000-c000-000000000046"))
Languages : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Language * * prop ) = 0;
};

struct __declspec(uuid("000209ac-0000-0000-c000-000000000046"))
Dictionaries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveCustomDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveCustomDictionary (
        /*[in]*/ struct Dictionary * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
};

struct __declspec(uuid("000209e0-0000-0000-c000-000000000046"))
HangulHanjaConversionDictionaries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveCustomDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveCustomDictionary (
        /*[in]*/ struct Dictionary * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltinDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
};

struct __declspec(uuid("000209af-0000-0000-c000-000000000046"))
ReadabilityStatistic : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ float * prop ) = 0;
};

struct __declspec(uuid("000209ae-0000-0000-c000-000000000046"))
ReadabilityStatistics : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ReadabilityStatistic * * prop ) = 0;
};

struct __declspec(uuid("000209ba-0000-0000-c000-000000000046"))
MailMessage : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall CheckName ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall DisplayMoveDialog ( ) = 0;
      virtual HRESULT __stdcall DisplayProperties ( ) = 0;
      virtual HRESULT __stdcall DisplaySelectNamesDialog ( ) = 0;
      virtual HRESULT __stdcall Forward ( ) = 0;
      virtual HRESULT __stdcall GoToNext ( ) = 0;
      virtual HRESULT __stdcall GoToPrevious ( ) = 0;
      virtual HRESULT __stdcall Reply ( ) = 0;
      virtual HRESULT __stdcall ReplyAll ( ) = 0;
      virtual HRESULT __stdcall ToggleHeader ( ) = 0;
};

struct __declspec(uuid("000209bd-0000-0000-c000-000000000046"))
Mailer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BCCRecipients (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_BCCRecipients (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_CCRecipients (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_CCRecipients (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Recipients (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Enclosures (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Enclosures (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Sender (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SendDateTime (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_Received (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209c3-0000-0000-c000-000000000046"))
WrapFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdWrapType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdWrapType prop ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum WdWrapSideType * prop ) = 0;
      virtual HRESULT __stdcall put_Side (
        /*[in]*/ enum WdWrapSideType prop ) = 0;
      virtual HRESULT __stdcall get_DistanceTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_AllowOverlap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowOverlap (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("000209d2-0000-0000-c000-000000000046"))
HangulAndAlphabetException : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("000209d1-0000-0000-c000-000000000046"))
HangulAndAlphabetExceptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct HangulAndAlphabetException * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct HangulAndAlphabetException * * prop ) = 0;
};

struct __declspec(uuid("000209c4-0000-0000-c000-000000000046"))
wordAdjustments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Item (
        /*[in]*/ long Index,
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("000209c5-0000-0000-c000-000000000046"))
wordCalloutFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Accent (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Accent (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ enum Office::MsoCalloutAngleType * prop ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ enum Office::MsoCalloutAngleType prop ) = 0;
      virtual HRESULT __stdcall get_AutoAttach (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAttach (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_AutoLength (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Border (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Drop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_DropType (
        /*[out,retval]*/ enum Office::MsoCalloutDropType * prop ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoCalloutType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoCalloutType prop ) = 0;
      virtual HRESULT __stdcall AutomaticLength ( ) = 0;
      virtual HRESULT __stdcall CustomDrop (
        /*[in]*/ float Drop ) = 0;
      virtual HRESULT __stdcall CustomLength (
        /*[in]*/ float Length ) = 0;
      virtual HRESULT __stdcall PresetDrop (
        /*[in]*/ enum Office::MsoCalloutDropType DropType ) = 0;
};

struct __declspec(uuid("000209cb-0000-0000-c000-000000000046"))
wordPictureFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ColorType (
        /*[out,retval]*/ enum Office::MsoPictureColorType * prop ) = 0;
      virtual HRESULT __stdcall put_ColorType (
        /*[in]*/ enum Office::MsoPictureColorType prop ) = 0;
      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TransparencyColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_TransparencyColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TransparentBackground (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_TransparentBackground (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall IncrementBrightness (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementContrast (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Crop (
        /*[out,retval]*/ struct Office::Crop * * prop ) = 0;
      virtual HRESULT __stdcall put_Crop (
        /*[in]*/ struct Office::Crop * prop ) = 0;
};

struct __declspec(uuid("000209cd-0000-0000-c000-000000000046"))
wordShapeNode : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_EditingType (
        /*[out,retval]*/ enum Office::MsoEditingType * prop ) = 0;
      virtual HRESULT __stdcall get_wordPoints (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_SegmentType (
        /*[out,retval]*/ enum Office::MsoSegmentType * prop ) = 0;
};

struct __declspec(uuid("000209ce-0000-0000-c000-000000000046"))
wordShapeNodes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShapeNode * * prop ) = 0;
      virtual HRESULT __stdcall SetEditingType (
        /*[in]*/ long Index,
        /*[in]*/ enum Office::MsoEditingType EditingType ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ long Index,
        /*[in]*/ float X1,
        /*[in]*/ float Y1 ) = 0;
      virtual HRESULT __stdcall SetSegmentType (
        /*[in]*/ long Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
};

struct __declspec(uuid("000209cf-0000-0000-c000-000000000046"))
wordTextEffectFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum Office::MsoTextEffectAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum Office::MsoTextEffectAlignment prop ) = 0;
      virtual HRESULT __stdcall get_FontBold (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_FontBold (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_FontItalic (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_FontItalic (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FontSize (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FontSize (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_KernedPairs (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_KernedPairs (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_NormalizedHeight (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_NormalizedHeight (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_PresetShape (
        /*[out,retval]*/ enum Office::MsoPresetTextEffectShape * prop ) = 0;
      virtual HRESULT __stdcall put_PresetShape (
        /*[in]*/ enum Office::MsoPresetTextEffectShape prop ) = 0;
      virtual HRESULT __stdcall get_PresetTextEffect (
        /*[out,retval]*/ enum Office::MsoPresetTextEffect * prop ) = 0;
      virtual HRESULT __stdcall put_PresetTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect prop ) = 0;
      virtual HRESULT __stdcall get_RotatedChars (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_RotatedChars (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Tracking (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Tracking (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall ToggleVerticalText ( ) = 0;
};

struct __declspec(uuid("000209f6-0000-0000-c000-000000000046"))
DocumentEvents : IDispatch
{};

struct __declspec(uuid("00020906-0000-0000-c000-000000000046"))
Document;
    // [ default ] interface _Document
    // [ source ] dispinterface DocumentEvents
    // [ default, source ] dispinterface DocumentEvents2

struct __declspec(uuid("0002096c-0000-0000-c000-000000000046"))
Documents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall AddOld (
        /*[in]*/ VARIANT * Template,
        /*[in]*/ VARIANT * NewTemplate,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall OpenOld (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ VARIANT * NoPrompt = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Template,
        /*[in]*/ VARIANT * NewTemplate,
        /*[in]*/ VARIANT * DocumentType,
        /*[in]*/ VARIANT * Visible,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Open2000 (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall CheckOut (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall CanCheckOut (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Open2002 (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[in]*/ VARIANT * DocumentDirection,
        /*[in]*/ VARIANT * NoEncodingDialog,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[in]*/ VARIANT * DocumentDirection,
        /*[in]*/ VARIANT * NoEncodingDialog,
        /*[in]*/ VARIANT * XMLTransform,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall OpenNoRepairDialog (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[in]*/ VARIANT * DocumentDirection,
        /*[in]*/ VARIANT * NoEncodingDialog,
        /*[in]*/ VARIANT * XMLTransform,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall AddBlogDocument (
        /*[in]*/ BSTR ProviderID,
        /*[in]*/ BSTR PostURL,
        /*[in]*/ BSTR BlogName,
        /*[in]*/ BSTR PostID,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
};

struct __declspec(uuid("00020964-0000-0000-c000-000000000046"))
RecentFile : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Open (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020963-0000-0000-c000-000000000046"))
RecentFiles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Maximum (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct RecentFile * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Document,
        /*[in]*/ VARIANT * ReadOnly,
        /*[out,retval]*/ struct RecentFile * * prop ) = 0;
};

struct __declspec(uuid("00020917-0000-0000-c000-000000000046"))
MailingLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultPrintBarCode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultPrintBarCode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultLaserTray (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultLaserTray (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_CustomLabels (
        /*[out,retval]*/ struct CustomLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultLabelName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultLabelName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall CreateNewDocument2000 (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * AutoText,
        /*[in]*/ VARIANT * ExtractAddress,
        /*[in]*/ VARIANT * LaserTray,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall PrintOut2000 (
        /*[in]*/ VARIANT * Name = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * LaserTray = &vtMissing,
        /*[in]*/ VARIANT * SingleLabel = &vtMissing,
        /*[in]*/ VARIANT * wordRow = &vtMissing,
        /*[in]*/ VARIANT * wordColumn = &vtMissing ) = 0;
      virtual HRESULT __stdcall LabelOptions ( ) = 0;
      virtual HRESULT __stdcall CreateNewDocument (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * AutoText,
        /*[in]*/ VARIANT * ExtractAddress,
        /*[in]*/ VARIANT * LaserTray,
        /*[in]*/ VARIANT * PrintEPostageLabel,
        /*[in]*/ VARIANT * Vertical,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT * Name = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * LaserTray = &vtMissing,
        /*[in]*/ VARIANT * SingleLabel = &vtMissing,
        /*[in]*/ VARIANT * wordRow = &vtMissing,
        /*[in]*/ VARIANT * wordColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostageLabel = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_Vertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Vertical (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall CreateNewDocumentByID (
        /*[in]*/ VARIANT * LabelID,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * AutoText,
        /*[in]*/ VARIANT * ExtractAddress,
        /*[in]*/ VARIANT * LaserTray,
        /*[in]*/ VARIANT * PrintEPostageLabel,
        /*[in]*/ VARIANT * Vertical,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall PrintOutByID (
        /*[in]*/ VARIANT * LabelID = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * LaserTray = &vtMissing,
        /*[in]*/ VARIANT * SingleLabel = &vtMissing,
        /*[in]*/ VARIANT * wordRow = &vtMissing,
        /*[in]*/ VARIANT * wordColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostageLabel = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing ) = 0;
};

struct __declspec(uuid("000209b4-0000-0000-c000-000000000046"))
Version : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SavedBy (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordComment (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall OpenOld ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Open (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
};

struct __declspec(uuid("000209b3-0000-0000-c000-000000000046"))
Versions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_AutoVersion (
        /*[out,retval]*/ enum WdAutoVersions * prop ) = 0;
      virtual HRESULT __stdcall put_AutoVersion (
        /*[in]*/ enum WdAutoVersions prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Version * * prop ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ VARIANT * wordComment = &vtMissing ) = 0;
};

struct __declspec(uuid("000209f5-0000-0000-c000-000000000046"))
wordFont;
    // [ default ] interface _Font

struct __declspec(uuid("000209f4-0000-0000-c000-000000000046"))
ParagraphFormat;
    // [ default ] interface _ParagraphFormat

struct __declspec(uuid("000209f3-0000-0000-c000-000000000046"))
OCXEvents : IDispatch
{};

struct __declspec(uuid("000209f2-0000-0000-c000-000000000046"))
wordOLEControl;
    // [ default ] interface _OLEControl
    // [ default, source ] dispinterface OCXEvents

struct __declspec(uuid("000209f1-0000-0000-c000-000000000046"))
LetterContent;
    // [ default ] interface _LetterContent

struct __declspec(uuid("000209a1-0000-0000-c000-000000000046"))
_LetterContent : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct _LetterContent * * prop ) = 0;
      virtual HRESULT __stdcall get_DateFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DateFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeHeaderFooter (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PageDesign (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PageDesign (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LetterStyle (
        /*[out,retval]*/ enum WdLetterStyle * prop ) = 0;
      virtual HRESULT __stdcall put_LetterStyle (
        /*[in]*/ enum WdLetterStyle prop ) = 0;
      virtual HRESULT __stdcall get_Letterhead (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Letterhead (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LetterheadLocation (
        /*[out,retval]*/ enum WdLetterheadLocation * prop ) = 0;
      virtual HRESULT __stdcall put_LetterheadLocation (
        /*[in]*/ enum WdLetterheadLocation prop ) = 0;
      virtual HRESULT __stdcall get_LetterheadSize (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LetterheadSize (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_RecipientAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Salutation (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Salutation (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SalutationType (
        /*[out,retval]*/ enum WdSalutationType * prop ) = 0;
      virtual HRESULT __stdcall put_SalutationType (
        /*[in]*/ enum WdSalutationType prop ) = 0;
      virtual HRESULT __stdcall get_RecipientReference (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientReference (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MailingInstructions (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MailingInstructions (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_AttentionLine (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AttentionLine (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EnclosureNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_EnclosureNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_CCList (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_CCList (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Closing (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Closing (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderCompany (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderCompany (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderJobTitle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderJobTitle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderInitials (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderInitials (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_InfoBlock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InfoBlock (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RecipientCode (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientCode (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_RecipientGender (
        /*[out,retval]*/ enum WdSalutationGender * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientGender (
        /*[in]*/ enum WdSalutationGender prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressShortForm (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddressShortForm (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderCity (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderCity (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderCode (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderCode (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderGender (
        /*[out,retval]*/ enum WdSalutationGender * prop ) = 0;
      virtual HRESULT __stdcall put_SenderGender (
        /*[in]*/ enum WdSalutationGender prop ) = 0;
      virtual HRESULT __stdcall get_SenderReference (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderReference (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209f7-0001-0000-c000-000000000046"))
IApplicationEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Startup ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall DocumentChange ( ) = 0;
};

struct __declspec(uuid("000209fe-0000-0000-c000-000000000046"))
ApplicationEvents2 : IDispatch
{};

enum WdBrowserLevel
{
    wdBrowserLevelV4 = 0,
    wdBrowserLevelMicrosoftInternetExplorer5 = 1,
    wdBrowserLevelMicrosoftInternetExplorer6 = 2
};

enum WdEnclosureType
{
    wdEnclosureCircle = 0,
    wdEnclosureSquare = 1,
    wdEnclosureTriangle = 2,
    wdEnclosureDiamond = 3
};

enum WdEncloseStyle
{
    wdEncloseStyleNone = 0,
    wdEncloseStyleSmall = 1,
    wdEncloseStyleLarge = 2
};

enum WdHighAnsiText
{
    wdHighAnsiIsFarEast = 0,
    wdHighAnsiIsHighAnsi = 1,
    wdAutoDetectHighAnsiFarEast = 2
};

enum WdLayoutMode
{
    wdLayoutModeDefault = 0,
    wdLayoutModeGrid = 1,
    wdLayoutModeLineGrid = 2,
    wdLayoutModeGenko = 3
};

enum WdDocumentMedium
{
    wdEmailMessage = 0,
    wdDocument = 1,
    wdWebPage = 2
};

enum WdMailerPriority
{
    wdPriorityNormal = 1,
    wdPriorityLow = 2,
    wdPriorityHigh = 3
};

enum WdDocumentViewDirection
{
    wdDocumentViewRtl = 0,
    wdDocumentViewLtr = 1
};

enum WdArabicNumeral
{
    wdNumeralArabic = 0,
    wdNumeralHindi = 1,
    wdNumeralContext = 2,
    wdNumeralSystem = 3
};

enum WdMonthNames
{
    wdMonthNamesArabic = 0,
    wdMonthNamesEnglish = 1,
    wdMonthNamesFrench = 2
};

enum WdCursorMovement
{
    wdCursorMovementLogical = 0,
    wdCursorMovementVisual = 1
};

enum WdVisualSelection
{
    wdVisualSelectionBlock = 0,
    wdVisualSelectionContinuous = 1
};

enum WdTableDirection
{
    wdTableDirectionRtl = 0,
    wdTableDirectionLtr = 1
};

enum WdFlowDirection
{
    wdFlowLtr = 0,
    wdFlowRtl = 1
};

struct __declspec(uuid("00020973-0000-0000-c000-000000000046"))
TextColumns : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_EvenlySpaced (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_EvenlySpaced (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LineBetween (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LineBetween (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TextColumn * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Spacing,
        /*[in]*/ VARIANT * EvenlySpaced,
        /*[out,retval]*/ struct TextColumn * * prop ) = 0;
      virtual HRESULT __stdcall SetCount (
        /*[in]*/ long NumColumns ) = 0;
      virtual HRESULT __stdcall get_FlowDirection (
        /*[out,retval]*/ enum WdFlowDirection * prop ) = 0;
      virtual HRESULT __stdcall put_FlowDirection (
        /*[in]*/ enum WdFlowDirection prop ) = 0;
};

enum WdDiacriticColor
{
    wdDiacriticColorBidi = 0,
    wdDiacriticColorLatin = 1
};

enum WdGutterStyle
{
    wdGutterPosLeft = 0,
    wdGutterPosTop = 1,
    wdGutterPosRight = 2
};

enum WdGutterStyleOld
{
    wdGutterStyleLatin = -10,
    wdGutterStyleBidi = 2
};

enum WdSectionDirection
{
    wdSectionDirectionRtl = 0,
    wdSectionDirectionLtr = 1
};

struct __declspec(uuid("00020971-0000-0000-c000-000000000046"))
wordPageSetup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BottomMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Gutter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Gutter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PageWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PageWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PageHeight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PageHeight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum WdOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum WdOrientation prop ) = 0;
      virtual HRESULT __stdcall get_FirstPageTray (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_FirstPageTray (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_OtherPagesTray (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_OtherPagesTray (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum WdVerticalAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum WdVerticalAlignment prop ) = 0;
      virtual HRESULT __stdcall get_MirrorMargins (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MirrorMargins (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HeaderDistance (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HeaderDistance (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FooterDistance (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FooterDistance (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SectionStart (
        /*[out,retval]*/ enum WdSectionStart * prop ) = 0;
      virtual HRESULT __stdcall put_SectionStart (
        /*[in]*/ enum WdSectionStart prop ) = 0;
      virtual HRESULT __stdcall get_OddAndEvenPagesHeaderFooter (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_OddAndEvenPagesHeaderFooter (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DifferentFirstPageHeaderFooter (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DifferentFirstPageHeaderFooter (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SuppressEndnotes (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SuppressEndnotes (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LineNumbering (
        /*[out,retval]*/ struct LineNumbering * * prop ) = 0;
      virtual HRESULT __stdcall put_LineNumbering (
        /*[in]*/ struct LineNumbering * prop ) = 0;
      virtual HRESULT __stdcall get_TextColumns (
        /*[out,retval]*/ struct TextColumns * * prop ) = 0;
      virtual HRESULT __stdcall put_TextColumns (
        /*[in]*/ struct TextColumns * prop ) = 0;
      virtual HRESULT __stdcall get_PaperSize (
        /*[out,retval]*/ enum WdPaperSize * prop ) = 0;
      virtual HRESULT __stdcall put_PaperSize (
        /*[in]*/ enum WdPaperSize prop ) = 0;
      virtual HRESULT __stdcall get_TwoPagesOnOne (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TwoPagesOnOne (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_GutterOnTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GutterOnTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CharsLine (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharsLine (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LinesPage (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LinesPage (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ShowGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall TogglePortrait ( ) = 0;
      virtual HRESULT __stdcall SetAsTemplateDefault ( ) = 0;
      virtual HRESULT __stdcall get_GutterStyle (
        /*[out,retval]*/ enum WdGutterStyleOld * prop ) = 0;
      virtual HRESULT __stdcall put_GutterStyle (
        /*[in]*/ enum WdGutterStyleOld prop ) = 0;
      virtual HRESULT __stdcall get_SectionDirection (
        /*[out,retval]*/ enum WdSectionDirection * prop ) = 0;
      virtual HRESULT __stdcall put_SectionDirection (
        /*[in]*/ enum WdSectionDirection prop ) = 0;
      virtual HRESULT __stdcall get_LayoutMode (
        /*[out,retval]*/ enum WdLayoutMode * prop ) = 0;
      virtual HRESULT __stdcall put_LayoutMode (
        /*[in]*/ enum WdLayoutMode prop ) = 0;
      virtual HRESULT __stdcall get_GutterPos (
        /*[out,retval]*/ enum WdGutterStyle * prop ) = 0;
      virtual HRESULT __stdcall put_GutterPos (
        /*[in]*/ enum WdGutterStyle prop ) = 0;
      virtual HRESULT __stdcall get_BookFoldPrinting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BookFoldPrinting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BookFoldRevPrinting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BookFoldRevPrinting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BookFoldPrintingSheets (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BookFoldPrintingSheets (
        /*[in]*/ long prop ) = 0;
};

enum WdDateLanguage
{
    wdDateLanguageBidi = 10,
    wdDateLanguageLatin = 1033
};

enum WdCalendarTypeBi
{
    wdCalendarTypeBidi = 99,
    wdCalendarTypeGregorian = 100
};

enum WdCalendarType
{
    wdCalendarWestern = 0,
    wdCalendarArabic = 1,
    wdCalendarHebrew = 2,
    wdCalendarTaiwan = 3,
    wdCalendarJapan = 4,
    wdCalendarThai = 5,
    wdCalendarKorean = 6,
    wdCalendarSakaEra = 7,
    wdCalendarTranslitEnglish = 8,
    wdCalendarTranslitFrench = 9,
    wdCalendarUmalqura = 13
};

enum WdReadingOrder
{
    wdReadingOrderRtl = 0,
    wdReadingOrderLtr = 1
};

enum WdHebSpellStart
{
    wdFullScript = 0,
    wdPartialScript = 1,
    wdMixedScript = 2,
    wdMixedAuthorizedScript = 3
};

enum WdAraSpeller
{
    wdNone = 0,
    wdInitialAlef = 1,
    wdFinalYaa = 2,
    wdBoth = 3
};

enum WdColor
{
    wdColorAutomatic = -16777216,
    wdColorBlack = 0,
    wdColorBlue = 16711680,
    wdColorTurquoise = 16776960,
    wdColorBrightGreen = 65280,
    wdColorPink = 16711935,
    wdColorRed = 255,
    wdColorYellow = 65535,
    wdColorWhite = 16777215,
    wdColorDarkBlue = 8388608,
    wdColorTeal = 8421376,
    wdColorGreen = 32768,
    wdColorViolet = 8388736,
    wdColorDarkRed = 128,
    wdColorDarkYellow = 32896,
    wdColorBrown = 13209,
    wdColorOliveGreen = 13107,
    wdColorDarkGreen = 13056,
    wdColorDarkTeal = 6697728,
    wdColorIndigo = 10040115,
    wdColorOrange = 26367,
    wdColorBlueGray = 10053222,
    wdColorLightOrange = 39423,
    wdColorLime = 52377,
    wdColorSeaGreen = 6723891,
    wdColorAqua = 13421619,
    wdColorLightBlue = 16737843,
    wdColorGold = 52479,
    wdColorSkyBlue = 16763904,
    wdColorPlum = 6697881,
    wdColorRose = 13408767,
    wdColorTan = 10079487,
    wdColorLightYellow = 10092543,
    wdColorLightGreen = 13434828,
    wdColorLightTurquoise = 16777164,
    wdColorPaleBlue = 16764057,
    wdColorLavender = 16751052,
    wdColorGray05 = 15987699,
    wdColorGray10 = 15132390,
    wdColorGray125 = 14737632,
    wdColorGray15 = 14277081,
    wdColorGray20 = 13421772,
    wdColorGray25 = 12632256,
    wdColorGray30 = 11776947,
    wdColorGray35 = 10921638,
    wdColorGray375 = 10526880,
    wdColorGray40 = 10066329,
    wdColorGray45 = 9211020,
    wdColorGray50 = 8421504,
    wdColorGray55 = 7566195,
    wdColorGray60 = 6710886,
    wdColorGray625 = 6316128,
    wdColorGray65 = 5855577,
    wdColorGray70 = 5000268,
    wdColorGray75 = 4210752,
    wdColorGray80 = 3355443,
    wdColorGray85 = 2500134,
    wdColorGray875 = 2105376,
    wdColorGray90 = 1644825,
    wdColorGray95 = 789516
};

struct __declspec(uuid("0002093b-0000-0000-c000-000000000046"))
Border : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Inside (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_LineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_LineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_ArtStyle (
        /*[out,retval]*/ enum WdPageBorderArt * prop ) = 0;
      virtual HRESULT __stdcall put_ArtStyle (
        /*[in]*/ enum WdPageBorderArt prop ) = 0;
      virtual HRESULT __stdcall get_ArtWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ArtWidth (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum WdColor prop ) = 0;
};

struct __declspec(uuid("0002093c-0000-0000-c000-000000000046"))
wordBorders : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromTop (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromTop (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InsideLineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_InsideLineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_OutsideLineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideLineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_InsideLineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_InsideLineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_OutsideLineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideLineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_InsideColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_InsideColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_OutsideColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromLeft (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromLeft (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromBottom (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromBottom (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromRight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromRight (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AlwaysInFront (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlwaysInFront (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SurroundHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SurroundHeader (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SurroundFooter (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SurroundFooter (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_JoinBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_JoinBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasHorizontal (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HasVertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFrom (
        /*[out,retval]*/ enum WdBorderDistanceFrom * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFrom (
        /*[in]*/ enum WdBorderDistanceFrom prop ) = 0;
      virtual HRESULT __stdcall get_EnableFirstPageInSection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableFirstPageInSection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableOtherPagesInSection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableOtherPagesInSection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdBorderType Index,
        /*[out,retval]*/ struct Border * * prop ) = 0;
      virtual HRESULT __stdcall ApplyPageBordersToAllSections ( ) = 0;
      virtual HRESULT __stdcall get_InsideColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_InsideColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_OutsideColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideColor (
        /*[in]*/ enum WdColor prop ) = 0;
};

struct __declspec(uuid("0002093a-0000-0000-c000-000000000046"))
Shading : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ForegroundPatternColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ForegroundPatternColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundPatternColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundPatternColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Texture (
        /*[out,retval]*/ enum WdTextureIndex * prop ) = 0;
      virtual HRESULT __stdcall put_Texture (
        /*[in]*/ enum WdTextureIndex prop ) = 0;
      virtual HRESULT __stdcall get_ForegroundPatternColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_ForegroundPatternColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundPatternColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundPatternColor (
        /*[in]*/ enum WdColor prop ) = 0;
};

enum WdShapePosition
{
    wdShapeTop = -999999,
    wdShapeLeft = -999998,
    wdShapeBottom = -999997,
    wdShapeRight = -999996,
    wdShapeCenter = -999995,
    wdShapeInside = -999994,
    wdShapeOutside = -999993
};

enum WdTablePosition
{
    wdTableTop = -999999,
    wdTableLeft = -999998,
    wdTableBottom = -999997,
    wdTableRight = -999996,
    wdTableCenter = -999995,
    wdTableInside = -999994,
    wdTableOutside = -999993
};

enum WdDefaultListBehavior
{
    wdWord8ListBehavior = 0,
    wdWord9ListBehavior = 1,
    wdWord10ListBehavior = 2
};

enum WdDefaultTableBehavior
{
    wdWord8TableBehavior = 0,
    wdWord9TableBehavior = 1
};

enum WdAutoFitBehavior
{
    wdAutoFitFixed = 0,
    wdAutoFitContent = 1,
    wdAutoFitWindow = 2
};

enum WdPreferredWidthType
{
    wdPreferredWidthAuto = 1,
    wdPreferredWidthPercent = 2,
    wdPreferredWidthPoints = 3
};

enum WdFarEastLineBreakLanguageID
{
    wdLineBreakJapanese = 1041,
    wdLineBreakKorean = 1042,
    wdLineBreakSimplifiedChinese = 2052,
    wdLineBreakTraditionalChinese = 1028
};

enum WdViewTypeOld
{
    wdPageView = 3,
    wdOnlineView = 6
};

enum WdFramesetType
{
    wdFramesetTypeFrameset = 0,
    wdFramesetTypeFrame = 1
};

enum WdFramesetSizeType
{
    wdFramesetSizeTypePercent = 0,
    wdFramesetSizeTypeFixed = 1,
    wdFramesetSizeTypeRelative = 2
};

enum WdFramesetNewFrameLocation
{
    wdFramesetNewFrameAbove = 0,
    wdFramesetNewFrameBelow = 1,
    wdFramesetNewFrameRight = 2,
    wdFramesetNewFrameLeft = 3
};

enum WdScrollbarType
{
    wdScrollbarTypeAuto = 0,
    wdScrollbarTypeYes = 1,
    wdScrollbarTypeNo = 2
};

enum WdTwoLinesInOneType
{
    wdTwoLinesInOneNone = 0,
    wdTwoLinesInOneNoBrackets = 1,
    wdTwoLinesInOneParentheses = 2,
    wdTwoLinesInOneSquareBrackets = 3,
    wdTwoLinesInOneAngleBrackets = 4,
    wdTwoLinesInOneCurlyBrackets = 5
};

enum WdHorizontalInVerticalType
{
    wdHorizontalInVerticalNone = 0,
    wdHorizontalInVerticalFitInLine = 1,
    wdHorizontalInVerticalResizeLine = 2
};

enum WdHorizontalLineAlignment
{
    wdHorizontalLineAlignLeft = 0,
    wdHorizontalLineAlignCenter = 1,
    wdHorizontalLineAlignRight = 2
};

enum WdHorizontalLineWidthType
{
    wdHorizontalLinePercentWidth = -1,
    wdHorizontalLineFixedWidth = -2
};

enum WdPhoneticGuideAlignmentType
{
    wdPhoneticGuideAlignmentCenter = 0,
    wdPhoneticGuideAlignmentZeroOneZero = 1,
    wdPhoneticGuideAlignmentOneTwoOne = 2,
    wdPhoneticGuideAlignmentLeft = 3,
    wdPhoneticGuideAlignmentRight = 4,
    wdPhoneticGuideAlignmentRightVertical = 5
};

enum WdNewDocumentType
{
    wdNewBlankDocument = 0,
    wdNewWebPage = 1,
    wdNewEmailMessage = 2,
    wdNewFrameset = 3,
    wdNewXMLDocument = 4
};

enum WdKana
{
    wdKanaKatakana = 8,
    wdKanaHiragana = 9
};

enum WdCharacterWidth
{
    wdWidthHalfWidth = 6,
    wdWidthFullWidth = 7
};

enum WdNumberStyleWordBasicBiDi
{
    wdListNumberStyleBidi1 = 49,
    wdListNumberStyleBidi2 = 50,
    wdCaptionNumberStyleBidiLetter1 = 49,
    wdCaptionNumberStyleBidiLetter2 = 50,
    wdNoteNumberStyleBidiLetter1 = 49,
    wdNoteNumberStyleBidiLetter2 = 50,
    wdPageNumberStyleBidiLetter1 = 49,
    wdPageNumberStyleBidiLetter2 = 50
};

enum WdTCSCConverterDirection
{
    wdTCSCConverterDirectionSCTC = 0,
    wdTCSCConverterDirectionTCSC = 1,
    wdTCSCConverterDirectionAuto = 2
};

struct __declspec(uuid("000209de-0000-0000-c000-000000000046"))
HorizontalLineFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PercentWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PercentWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_NoShade (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoShade (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdHorizontalLineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdHorizontalLineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_WidthType (
        /*[out,retval]*/ enum WdHorizontalLineWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_WidthType (
        /*[in]*/ enum WdHorizontalLineWidthType prop ) = 0;
};

struct __declspec(uuid("000209e2-0000-0000-c000-000000000046"))
Frameset : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentFrameset (
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFramesetType * prop ) = 0;
      virtual HRESULT __stdcall get_WidthType (
        /*[out,retval]*/ enum WdFramesetSizeType * prop ) = 0;
      virtual HRESULT __stdcall put_WidthType (
        /*[in]*/ enum WdFramesetSizeType prop ) = 0;
      virtual HRESULT __stdcall get_HeightType (
        /*[out,retval]*/ enum WdFramesetSizeType * prop ) = 0;
      virtual HRESULT __stdcall put_HeightType (
        /*[in]*/ enum WdFramesetSizeType prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ChildFramesetCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ChildFramesetItem (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_FramesetBorderWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FramesetBorderWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FramesetBorderColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_FramesetBorderColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_FrameScrollbarType (
        /*[out,retval]*/ enum WdScrollbarType * prop ) = 0;
      virtual HRESULT __stdcall put_FrameScrollbarType (
        /*[in]*/ enum WdScrollbarType prop ) = 0;
      virtual HRESULT __stdcall get_FrameResizable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FrameResizable (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FrameName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FrameName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FrameDisplayBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FrameDisplayBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FrameDefaultURL (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FrameDefaultURL (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FrameLinkToFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FrameLinkToFile (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall AddNewFrame (
        /*[in]*/ enum WdFramesetNewFrameLocation Where,
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("000209e3-0000-0000-c000-000000000046"))
wordDefaultWebOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForBrowser (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForBrowser (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowserLevel (
        /*[out,retval]*/ enum WdBrowserLevel * prop ) = 0;
      virtual HRESULT __stdcall put_BrowserLevel (
        /*[in]*/ enum WdBrowserLevel prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksOnSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksOnSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckIfOfficeIsHTMLEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckIfOfficeIsHTMLEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckIfWordIsDefaultHTMLEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckIfWordIsDefaultHTMLEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize prop ) = 0;
      virtual HRESULT __stdcall get_PixelsPerInch (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PixelsPerInch (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_AlwaysSaveInDefaultEncoding (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlwaysSaveInDefaultEncoding (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Fonts (
        /*[out,retval]*/ struct Office::WebPageFonts * * prop ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * prop ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser prop ) = 0;
      virtual HRESULT __stdcall get_SaveNewWebPagesAsWebArchives (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveNewWebPagesAsWebArchives (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("000209e4-0000-0000-c000-000000000046"))
wordWebOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForBrowser (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForBrowser (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowserLevel (
        /*[out,retval]*/ enum WdBrowserLevel * prop ) = 0;
      virtual HRESULT __stdcall put_BrowserLevel (
        /*[in]*/ enum WdBrowserLevel prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize prop ) = 0;
      virtual HRESULT __stdcall get_PixelsPerInch (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PixelsPerInch (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall UseDefaultFolderSuffix ( ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * prop ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser prop ) = 0;
};

struct __declspec(uuid("000209e1-0000-0000-c000-000000000046"))
OtherCorrectionsException : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("000209df-0000-0000-c000-000000000046"))
OtherCorrectionsExceptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct OtherCorrectionsException * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct OtherCorrectionsException * * prop ) = 0;
};

struct __declspec(uuid("000209e6-0000-0000-c000-000000000046"))
EmailSignatureEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("b923fde0-f08c-11d3-91b0-00105a0a19fd"))
CustomProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("b923fde1-f08c-11d3-91b0-00105a0a19fd"))
CustomProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct CustomProperty * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct CustomProperty * * prop ) = 0;
};

struct __declspec(uuid("5d311669-ea51-11d3-87cc-00105aa31a34"))
MappedDataField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DataFieldName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_DataFieldIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DataFieldIndex (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("1498f56d-ed33-41f9-b37b-ef30e50b08ac"))
ConditionalStyle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
};

struct __declspec(uuid("bea85a24-d7da-4f3d-b58c-ed90fb01d615"))
FootnoteOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdFootnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdFootnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
};

struct __declspec(uuid("bf043168-f4de-4e7c-b206-741a8b3ef71a"))
EndnoteOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdEndnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdEndnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
};

struct __declspec(uuid("47cef4ae-dc32-4220-8aa5-19ccc0e6633a"))
Reviewer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("12dcdc9a-5418-48a3-bbe6-eb57bae275e8"))
Reviewers : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Reviewer * * prop ) = 0;
};

struct __declspec(uuid("b9f1a4e2-0d0a-43b7-8495-139e7acbd840"))
TaskPane : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020a00-0000-0000-c000-000000000046"))
ApplicationEvents3 : IDispatch
{};

enum WdDisableFeaturesIntroducedAfter
{
    wd70 = 0,
    wd70FE = 1,
    wd80 = 2
};

enum WdWrapTypeMerged
{
    wdWrapMergeInline = 0,
    wdWrapMergeSquare = 1,
    wdWrapMergeTight = 2,
    wdWrapMergeBehind = 3,
    wdWrapMergeFront = 4,
    wdWrapMergeThrough = 5,
    wdWrapMergeTopBottom = 6
};

enum WdRecoveryType
{
    wdPasteDefault = 0,
    wdSingleCellText = 5,
    wdSingleCellTable = 6,
    wdListContinueNumbering = 7,
    wdListRestartNumbering = 8,
    wdTableInsertAsRows = 11,
    wdTableAppendTable = 10,
    wdTableOriginalFormatting = 12,
    wdChartPicture = 13,
    wdChart = 14,
    wdChartLinked = 15,
    wdFormatOriginalFormatting = 16,
    wdFormatSurroundingFormattingWithEmphasis = 20,
    wdFormatPlainText = 22,
    wdTableOverwriteCells = 23,
    wdListCombineWithExistingList = 24,
    wdListDontMerge = 25,
    wdUseDestinationStylesRecovery = 19
};

enum WdLineEndingType
{
    wdCRLF = 0,
    wdCROnly = 1,
    wdLFOnly = 2,
    wdLFCR = 3,
    wdLSPS = 4
};

enum WdStyleSheetLinkType
{
    wdStyleSheetLinkTypeLinked = 0,
    wdStyleSheetLinkTypeImported = 1
};

enum WdStyleSheetPrecedence
{
    wdStyleSheetPrecedenceHigher = -1,
    wdStyleSheetPrecedenceLower = -2,
    wdStyleSheetPrecedenceHighest = 1,
    wdStyleSheetPrecedenceLowest = 0
};

struct __declspec(uuid("000209ef-0000-0000-c000-000000000046"))
StyleSheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdStyleSheetLinkType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdStyleSheetLinkType prop ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ enum WdStyleSheetPrecedence Precedence ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("07b7cc7e-e66c-11d3-9454-00105aa31a08"))
StyleSheets : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct StyleSheet * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum WdStyleSheetLinkType LinkType,
        /*[in]*/ BSTR Title,
        /*[in]*/ enum WdStyleSheetPrecedence Precedence,
        /*[out,retval]*/ struct StyleSheet * * prop ) = 0;
};

enum WdEmailHTMLFidelity
{
    wdEmailHTMLFidelityLow = 1,
    wdEmailHTMLFidelityMedium = 2,
    wdEmailHTMLFidelityHigh = 3
};

enum WdMailMergeMailFormat
{
    wdMailFormatPlainText = 0,
    wdMailFormatHTML = 1
};

enum WdMappedDataFields
{
    wdUniqueIdentifier = 1,
    wdCourtesyTitle = 2,
    wdFirstName = 3,
    wdMiddleName = 4,
    wdLastName = 5,
    wdSuffix = 6,
    wdNickname = 7,
    wdJobTitle = 8,
    wdCompany = 9,
    wdAddress1 = 10,
    wdAddress2 = 11,
    wdCity = 12,
    wdState = 13,
    wdPostalCode = 14,
    wdCountryRegion = 15,
    wdBusinessPhone = 16,
    wdBusinessFax = 17,
    wdHomePhone = 18,
    wdHomeFax = 19,
    wdEmailAddress = 20,
    wdWebPageURL = 21,
    wdSpouseCourtesyTitle = 22,
    wdSpouseFirstName = 23,
    wdSpouseMiddleName = 24,
    wdSpouseLastName = 25,
    wdSpouseNickname = 26,
    wdRubyFirstName = 27,
    wdRubyLastName = 28,
    wdAddress3 = 29,
    wdDepartment = 30
};

struct __declspec(uuid("799a6814-ea41-11d3-87cc-00105aa31a34"))
MappedDataFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdMappedDataFields Index,
        /*[out,retval]*/ struct MappedDataField * * prop ) = 0;
};

struct __declspec(uuid("0002091d-0000-0000-c000-000000000046"))
MailMergeDataSource : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_HeaderSourceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdMailMergeDataSource * prop ) = 0;
      virtual HRESULT __stdcall get_HeaderSourceType (
        /*[out,retval]*/ enum WdMailMergeDataSource * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_QueryString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_QueryString (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ActiveRecord (
        /*[out,retval]*/ enum WdMailMergeActiveRecord * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveRecord (
        /*[in]*/ enum WdMailMergeActiveRecord prop ) = 0;
      virtual HRESULT __stdcall get_FirstRecord (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FirstRecord (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LastRecord (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LastRecord (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_FieldNames (
        /*[out,retval]*/ struct MailMergeFieldNames * * prop ) = 0;
      virtual HRESULT __stdcall get_DataFields (
        /*[out,retval]*/ struct MailMergeDataFields * * prop ) = 0;
      virtual HRESULT __stdcall FindRecord2000 (
        /*[in]*/ BSTR wordFindText,
        /*[in]*/ BSTR Field,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_RecordCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Included (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Included (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InvalidAddress (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InvalidAddress (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InvalidComments (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_InvalidComments (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MappedDataFields (
        /*[out,retval]*/ struct MappedDataFields * * prop ) = 0;
      virtual HRESULT __stdcall get_TableName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall FindRecord (
        /*[in]*/ BSTR wordFindText,
        /*[in]*/ VARIANT * Field,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall SetAllIncludedFlags (
        /*[in]*/ VARIANT_BOOL Included ) = 0;
      virtual HRESULT __stdcall SetAllErrorFlags (
        /*[in]*/ VARIANT_BOOL Invalid,
        /*[in]*/ BSTR InvalidComment ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
};

enum WdConditionCode
{
    wdFirstRow = 0,
    wdLastRow = 1,
    wdOddRowBanding = 2,
    wdEvenRowBanding = 3,
    wdFirstColumn = 4,
    wdLastColumn = 5,
    wdOddColumnBanding = 6,
    wdEvenColumnBanding = 7,
    wdNECell = 8,
    wdNWCell = 9,
    wdSECell = 10,
    wdSWCell = 11
};

struct __declspec(uuid("b7564e97-0519-4c68-b400-3803e7c63242"))
wordTableStyle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AllowPageBreaks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPageBreaks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdRowAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdRowAlignment prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall Condition (
        /*[in]*/ enum WdConditionCode ConditionCode,
        /*[out,retval]*/ struct ConditionalStyle * * prop ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum WdTableDirection * prop ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum WdTableDirection prop ) = 0;
      virtual HRESULT __stdcall get_AllowBreakAcrossPage (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowBreakAcrossPage (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_RowStripe (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RowStripe (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColumnStripe (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ColumnStripe (
        /*[in]*/ long prop ) = 0;
};

enum WdCompareTarget
{
    wdCompareTargetSelected = 0,
    wdCompareTargetCurrent = 1,
    wdCompareTargetNew = 2
};

enum WdMergeTarget
{
    wdMergeTargetSelected = 0,
    wdMergeTargetCurrent = 1,
    wdMergeTargetNew = 2
};

enum WdUseFormattingFrom
{
    wdFormattingFromCurrent = 0,
    wdFormattingFromSelected = 1,
    wdFormattingFromPrompt = 2
};

enum WdRevisionsView
{
    wdRevisionsViewFinal = 0,
    wdRevisionsViewOriginal = 1
};

enum WdRevisionsMode
{
    wdBalloonRevisions = 0,
    wdInLineRevisions = 1,
    wdMixedRevisions = 2
};

enum WdRevisionsBalloonWidthType
{
    wdBalloonWidthPercent = 0,
    wdBalloonWidthPoints = 1
};

enum WdRevisionsBalloonPrintOrientation
{
    wdBalloonPrintOrientationAuto = 0,
    wdBalloonPrintOrientationPreserve = 1,
    wdBalloonPrintOrientationForceLandscape = 2
};

enum WdRevisionsBalloonMargin
{
    wdLeftMargin = 0,
    wdRightMargin = 1
};

enum WdTaskPanes
{
    wdTaskPaneFormatting = 0,
    wdTaskPaneRevealFormatting = 1,
    wdTaskPaneMailMerge = 2,
    wdTaskPaneTranslate = 3,
    wdTaskPaneSearch = 4,
    wdTaskPaneXMLStructure = 5,
    wdTaskPaneDocumentProtection = 6,
    wdTaskPaneDocumentActions = 7,
    wdTaskPaneSharedWorkspace = 8,
    wdTaskPaneHelp = 9,
    wdTaskPaneResearch = 10,
    wdTaskPaneFaxService = 11,
    wdTaskPaneXMLDocument = 12,
    wdTaskPaneDocumentUpdates = 13,
    wdTaskPaneSignature = 14,
    wdTaskPaneStyleInspector = 15,
    wdTaskPaneDocumentManagement = 16,
    wdTaskPaneApplyStyles = 17,
    wdTaskPaneNav = 18,
    wdTaskPaneSelection = 19
};

struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f5c"))
TaskPanes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdTaskPanes Index,
        /*[out,retval]*/ struct TaskPane * * prop ) = 0;
};

enum WdShowFilter
{
    wdShowFilterStylesAvailable = 0,
    wdShowFilterStylesInUse = 1,
    wdShowFilterStylesAll = 2,
    wdShowFilterFormattingInUse = 3,
    wdShowFilterFormattingAvailable = 4,
    wdShowFilterFormattingRecommended = 5
};

enum WdMergeSubType
{
    wdMergeSubTypeOther = 0,
    wdMergeSubTypeAccess = 1,
    wdMergeSubTypeOAL = 2,
    wdMergeSubTypeOLEDBWord = 3,
    wdMergeSubTypeWorks = 4,
    wdMergeSubTypeOLEDBText = 5,
    wdMergeSubTypeOutlook = 6,
    wdMergeSubTypeWord = 7,
    wdMergeSubTypeWord2000 = 8
};

enum WdDocumentDirection
{
    wdLeftToRight = 0,
    wdRightToLeft = 1
};

enum WdLanguageID2000
{
    wdChineseHongKong = 3076,
    wdChineseMacao = 5124,
    wdEnglishTrinidad = 11273
};

struct __declspec(uuid("15ebe471-0182-4cce-98d0-b6614d1c32a1"))
SmartTagRecognizer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("f2b60a10-ded5-46fb-a914-3c6f4ebb6451"))
SmartTagRecognizers : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTagRecognizer * * prop ) = 0;
      virtual HRESULT __stdcall ReloadRecognizers ( ) = 0;
};

struct __declspec(uuid("fe0971f0-5e60-4985-bcda-95cb0b8e0308"))
XMLSchemaReference : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Reload ( ) = 0;
};

struct __declspec(uuid("356b06ec-4908-42a4-81fc-4b5a51f3483b"))
XMLSchemaReferences : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AutomaticValidation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutomaticValidation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowSaveAsXMLWithoutValidation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowSaveAsXMLWithoutValidation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideValidationErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideValidationErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreMixedContent (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreMixedContent (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowPlaceholderText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowPlaceholderText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XMLSchemaReference * * prop ) = 0;
      virtual HRESULT __stdcall Validate ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * NamespaceURI,
        /*[in]*/ VARIANT * Alias,
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers,
        /*[out,retval]*/ struct XMLSchemaReference * * prop ) = 0;
};

struct __declspec(uuid("e3124493-7d6a-410f-9a48-cc822c033cec"))
XSLTransform : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("c774f5ea-a539-4284-a1be-30aec052d899"))
XSLTransforms : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XSLTransform * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Location,
        /*[in]*/ VARIANT * Alias,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers,
        /*[out,retval]*/ struct XSLTransform * * prop ) = 0;
};

struct __declspec(uuid("b140a023-4850-4da6-bc5f-cc459c4507bc"))
XMLNamespace : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_URI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_XSLTransforms (
        /*[out,retval]*/ struct XSLTransforms * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTransform (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ struct XSLTransform * * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTransform (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ struct XSLTransform * prop ) = 0;
      virtual HRESULT __stdcall AttachToDocument (
        /*[in]*/ VARIANT * Document ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("656bbed7-e82d-4b0a-8f97-ec742ba11ffa"))
XMLNamespaces : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XMLNamespace * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT * NamespaceURI,
        /*[in]*/ VARIANT * Alias,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers,
        /*[out,retval]*/ struct XMLNamespace * * prop ) = 0;
      virtual HRESULT __stdcall InstallManifest (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers ) = 0;
};

struct __declspec(uuid("00020a01-0000-0000-c000-000000000046"))
ApplicationEvents4 : IDispatch
{};

struct __declspec(uuid("00020a02-0000-0000-c000-000000000046"))
DocumentEvents2 : IDispatch
{};

enum WdRectangleType
{
    wdTextRectangle = 0,
    wdShapeRectangle = 1,
    wdMarkupRectangle = 2,
    wdMarkupRectangleButton = 3,
    wdPageBorderRectangle = 4,
    wdLineBetweenColumnRectangle = 5,
    wdSelection = 6,
    wdSystem = 7,
    wdMarkupRectangleArea = 8,
    wdReadingModeNavigation = 9,
    wdMarkupRectangleMoveMatch = 10,
    wdReadingModePanningArea = 11,
    wdMailNavArea = 12,
    wdDocumentControlRectangle = 13
};

enum WdLineType
{
    wdTextLine = 0,
    wdTableRow = 1
};

enum WdXMLNodeType
{
    wdXMLNodeElement = 1,
    wdXMLNodeAttribute = 2
};

enum WdXMLSelectionChangeReason
{
    wdXMLSelectionChangeReasonMove = 0,
    wdXMLSelectionChangeReasonInsert = 1,
    wdXMLSelectionChangeReasonDelete = 2
};

enum WdXMLNodeLevel
{
    wdXMLNodeLevelInline = 0,
    wdXMLNodeLevelParagraph = 1,
    wdXMLNodeLevelRow = 2,
    wdXMLNodeLevelCell = 3
};

enum WdSmartTagControlType
{
    wdControlSmartTag = 1,
    wdControlLink = 2,
    wdControlHelp = 3,
    wdControlHelpURL = 4,
    wdControlSeparator = 5,
    wdControlButton = 6,
    wdControlLabel = 7,
    wdControlImage = 8,
    wdControlCheckbox = 9,
    wdControlTextbox = 10,
    wdControlListbox = 11,
    wdControlCombo = 12,
    wdControlActiveX = 13,
    wdControlDocumentFragment = 14,
    wdControlDocumentFragmentURL = 15,
    wdControlRadioGroup = 16
};

struct __declspec(uuid("dfb6aa6c-1068-420f-969d-01280fcc1630"))
SmartTagAction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Execute ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdSmartTagControlType * prop ) = 0;
      virtual HRESULT __stdcall get_PresentInPane (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ExpandHelp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ExpandHelp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckboxState (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckboxState (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TextboxText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TextboxText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ListSelection (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ListSelection (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RadioGroupSelection (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RadioGroupSelection (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ExpandDocumentFragment (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ExpandDocumentFragment (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ActiveXControl (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("cde12cd8-767b-4757-8a31-13029a086305"))
SmartTagActions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTagAction * * prop ) = 0;
      virtual HRESULT __stdcall ReloadActions ( ) = 0;
};

struct __declspec(uuid("5e9a888c-e5dc-4dcb-8308-3c91fb61e6f4"))
SmartTagType : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagActions (
        /*[out,retval]*/ struct SmartTagActions * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagRecognizers (
        /*[out,retval]*/ struct SmartTagRecognizers * * prop ) = 0;
      virtual HRESULT __stdcall get_FriendlyName (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("db8e3072-e106-4453-8e7c-53056f1d30dc"))
SmartTagTypes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTagType * * prop ) = 0;
      virtual HRESULT __stdcall ReloadAll ( ) = 0;
};

enum WdEditorType
{
    wdEditorEveryone = -1,
    wdEditorOwners = -4,
    wdEditorEditors = -5,
    wdEditorCurrent = -6
};

enum WdXMLValidationStatus
{
    wdXMLValidationStatusOK = 0,
    wdXMLValidationStatusCustom = -1072898048
};

struct __declspec(uuid("4a6ae865-199d-4ea3-9f6b-125bd9c40edf"))
Source : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Field (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Field (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Cited (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("fa02a26b-6550-45c5-b6f0-80e757cd3482"))
Sources : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Source * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Data ) = 0;
};

struct __declspec(uuid("3834f60f-ee8c-455d-a441-d766675d6d3b"))
Bibliography : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Sources (
        /*[out,retval]*/ struct Sources * * prop ) = 0;
      virtual HRESULT __stdcall get_BibliographyStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BibliographyStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall GenerateUniqueTag (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("d8779f01-4869-4403-b334-d60c5f9c9175"))
OMathAutoCorrectEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("18cd5ec8-8b7b-42c8-992a-2a407468642c"))
OMathAutoCorrectEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct OMathAutoCorrectEntry * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct OMathAutoCorrectEntry * * prop ) = 0;
};

struct __declspec(uuid("5c04bd93-2f3f-4668-918d-9738ec901039"))
OMathRecognizedFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("44fee887-6600-41ab-95a5-de33c605116c"))
OMathRecognizedFunctions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct OMathRecognizedFunction * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct OMathRecognizedFunction * * prop ) = 0;
};

struct __declspec(uuid("6f9d1f68-06f7-49ef-8902-185e54eb5e87"))
OMathAutoCorrect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordReplaceText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_wordReplaceText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseOutsideOMath (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseOutsideOMath (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Entries (
        /*[out,retval]*/ struct OMathAutoCorrectEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_Functions (
        /*[out,retval]*/ struct OMathRecognizedFunctions * * prop ) = 0;
};

struct __declspec(uuid("0c1fabe7-f737-406f-9ca3-b07661f9d1a2"))
XMLMapping : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_IsMapped (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_CustomXMLPart (
        /*[out,retval]*/ struct Office::_CustomXMLPart * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomXMLNode (
        /*[out,retval]*/ struct Office::CustomXMLNode * * prop ) = 0;
      virtual HRESULT __stdcall SetMapping (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ struct Office::_CustomXMLPart * Source,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall SetMappingByNode (
        /*[in]*/ struct Office::CustomXMLNode * Node,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_XPath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PrefixMappings (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("0c6fa8ca-e65f-4fc7-ab8f-20729eecbb14"))
ContentControlListEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Index (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall MoveUp ( ) = 0;
      virtual HRESULT __stdcall MoveDown ( ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
};

struct __declspec(uuid("54f46dc4-f6a6-48cc-bd66-46c1ddeadd22"))
ContentControlListEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ContentControlListEntry * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR Value,
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ContentControlListEntry * * prop ) = 0;
};

struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f51"))
wordResearch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Query (
        /*[in]*/ BSTR ServiceID,
        /*[in]*/ BSTR QueryString,
        /*[in]*/ enum WdLanguageID QueryLanguage,
        /*[in]*/ VARIANT_BOOL UseSelection,
        /*[in]*/ VARIANT_BOOL LaunchQuery,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall SetLanguagePair (
        /*[in]*/ enum WdLanguageID LanguageFrom,
        /*[in]*/ enum WdLanguageID LanguageTo,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall IsResearchService (
        /*[in]*/ BSTR ServiceID,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_FavoriteService (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FavoriteService (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("d040daf9-6ce4-4be8-839d-f4538a4301cf"))
wordSoftEdgeFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoSoftEdgeType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoSoftEdgeType prop ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("f01943ff-1985-445e-8602-8fb8f39cca75"))
wordReflectionFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoReflectionType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoReflectionType prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Offset (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Blur (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Blur (
        /*[in]*/ float prop ) = 0;
};

enum WdStyleSort
{
    wdStyleSortByName = 0,
    wdStyleSortRecommended = 1,
    wdStyleSortByFont = 2,
    wdStyleSortByBasedOn = 3,
    wdStyleSortByType = 4
};

enum WdRemoveDocInfoType
{
    wdRDIComments = 1,
    wdRDIRevisions = 2,
    wdRDIVersions = 3,
    wdRDIRemovePersonalInformation = 4,
    wdRDIEmailHeader = 5,
    wdRDIRoutingSlip = 6,
    wdRDISendForReview = 7,
    wdRDIDocumentProperties = 8,
    wdRDITemplate = 9,
    wdRDIDocumentWorkspace = 10,
    wdRDIInkAnnotations = 11,
    wdRDIDocumentServerProperties = 14,
    wdRDIDocumentManagementPolicy = 15,
    wdRDIContentType = 16,
    wdRDIAll = 99
};

enum WdCheckInVersionType
{
    wdCheckInMinorVersion = 0,
    wdCheckInMajorVersion = 1,
    wdCheckInOverwriteVersion = 2
};

enum WdMoveToTextMark
{
    wdMoveToTextMarkNone = 0,
    wdMoveToTextMarkBold = 1,
    wdMoveToTextMarkItalic = 2,
    wdMoveToTextMarkUnderline = 3,
    wdMoveToTextMarkDoubleUnderline = 4,
    wdMoveToTextMarkColorOnly = 5,
    wdMoveToTextMarkStrikeThrough = 6,
    wdMoveToTextMarkDoubleStrikeThrough = 7
};

enum WdMoveFromTextMark
{
    wdMoveFromTextMarkHidden = 0,
    wdMoveFromTextMarkDoubleStrikeThrough = 1,
    wdMoveFromTextMarkStrikeThrough = 2,
    wdMoveFromTextMarkCaret = 3,
    wdMoveFromTextMarkPound = 4,
    wdMoveFromTextMarkNone = 5,
    wdMoveFromTextMarkBold = 6,
    wdMoveFromTextMarkItalic = 7,
    wdMoveFromTextMarkUnderline = 8,
    wdMoveFromTextMarkDoubleUnderline = 9,
    wdMoveFromTextMarkColorOnly = 10
};

enum WdOMathFunctionType
{
    wdOMathFunctionAcc = 1,
    wdOMathFunctionBar = 2,
    wdOMathFunctionBox = 3,
    wdOMathFunctionBorderBox = 4,
    wdOMathFunctionDelim = 5,
    wdOMathFunctionEqArray = 6,
    wdOMathFunctionFrac = 7,
    wdOMathFunctionFunc = 8,
    wdOMathFunctionGroupChar = 9,
    wdOMathFunctionLimLow = 10,
    wdOMathFunctionLimUpp = 11,
    wdOMathFunctionMat = 12,
    wdOMathFunctionNary = 13,
    wdOMathFunctionPhantom = 14,
    wdOMathFunctionScrPre = 15,
    wdOMathFunctionRad = 16,
    wdOMathFunctionScrSub = 17,
    wdOMathFunctionScrSubSup = 18,
    wdOMathFunctionScrSup = 19,
    wdOMathFunctionText = 20,
    wdOMathFunctionNormalText = 21,
    wdOMathFunctionLiteralText = 22
};

enum WdOMathHorizAlignType
{
    wdOMathHorizAlignCenter = 0,
    wdOMathHorizAlignLeft = 1,
    wdOMathHorizAlignRight = 2
};

enum WdOMathVertAlignType
{
    wdOMathVertAlignCenter = 0,
    wdOMathVertAlignTop = 1,
    wdOMathVertAlignBottom = 2
};

enum WdOMathFracType
{
    wdOMathFracBar = 0,
    wdOMathFracNoBar = 1,
    wdOMathFracSkw = 2,
    wdOMathFracLin = 3
};

enum WdOMathSpacingRule
{
    wdOMathSpacingSingle = 0,
    wdOMathSpacing1pt5 = 1,
    wdOMathSpacingDouble = 2,
    wdOMathSpacingExactly = 3,
    wdOMathSpacingMultiple = 4
};

enum WdOMathType
{
    wdOMathDisplay = 0,
    wdOMathInline = 1
};

enum WdOMathShapeType
{
    wdOMathShapeCentered = 0,
    wdOMathShapeMatch = 1
};

enum WdOMathJc
{
    wdOMathJcCenterGroup = 1,
    wdOMathJcCenter = 2,
    wdOMathJcLeft = 3,
    wdOMathJcRight = 4,
    wdOMathJcInline = 7
};

enum WdOMathBreakBin
{
    wdOMathBreakBinBefore = 0,
    wdOMathBreakBinAfter = 1,
    wdOMathBreakBinRepeat = 2
};

enum WdOMathBreakSub
{
    wdOMathBreakSubMinusMinus = 0,
    wdOMathBreakSubPlusMinus = 1,
    wdOMathBreakSubMinusPlus = 2
};

enum WdReadingLayoutMargin
{
    wdAutomaticMargin = 0,
    wdSuppressMargin = 1,
    wdFullMargin = 2
};

struct __declspec(uuid("000209a5-0000-0000-c000-000000000046"))
wordView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdViewType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdViewType prop ) = 0;
      virtual HRESULT __stdcall get_FullScreen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FullScreen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Draft (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Draft (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowAll (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAll (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFieldCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFieldCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailMergeDataView (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MailMergeDataView (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Magnifier (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Magnifier (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFirstLineOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFirstLineOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFormat (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFormat (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ struct Zoom * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowObjectAnchors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowObjectAnchors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowTextBoundaries (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowTextBoundaries (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowHighlight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHighlight (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowDrawings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDrawings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowTabs (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowTabs (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowParagraphs (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowParagraphs (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowHyphens (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHyphens (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowHiddenText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHiddenText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WrapToWindow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WrapToWindow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowPicturePlaceHolders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowPicturePlaceHolders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowBookmarks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowBookmarks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FieldShading (
        /*[out,retval]*/ enum WdFieldShading * prop ) = 0;
      virtual HRESULT __stdcall put_FieldShading (
        /*[in]*/ enum WdFieldShading prop ) = 0;
      virtual HRESULT __stdcall get_ShowAnimation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAnimation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TableGridlines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TableGridlines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnlargeFontsLessThan (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_EnlargeFontsLessThan (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowMainTextLayer (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMainTextLayer (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SeekView (
        /*[out,retval]*/ enum WdSeekView * prop ) = 0;
      virtual HRESULT __stdcall put_SeekView (
        /*[in]*/ enum WdSeekView prop ) = 0;
      virtual HRESULT __stdcall get_SplitSpecial (
        /*[out,retval]*/ enum WdSpecialPane * prop ) = 0;
      virtual HRESULT __stdcall put_SplitSpecial (
        /*[in]*/ enum WdSpecialPane prop ) = 0;
      virtual HRESULT __stdcall get_BrowseToWindow (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BrowseToWindow (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowOptionalBreaks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowOptionalBreaks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall CollapseOutline (
        /*[in]*/ VARIANT * Range = &vtMissing ) = 0;
      virtual HRESULT __stdcall ExpandOutline (
        /*[in]*/ VARIANT * Range = &vtMissing ) = 0;
      virtual HRESULT __stdcall ShowAllHeadings ( ) = 0;
      virtual HRESULT __stdcall ShowHeading (
        /*[in]*/ long Level ) = 0;
      virtual HRESULT __stdcall PreviousHeaderFooter ( ) = 0;
      virtual HRESULT __stdcall NextHeaderFooter ( ) = 0;
      virtual HRESULT __stdcall get_DisplayPageBoundaries (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayPageBoundaries (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplaySmartTags (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplaySmartTags (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowRevisionsAndComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowRevisionsAndComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowInsertionsAndDeletions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowInsertionsAndDeletions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFormatChanges (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFormatChanges (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsView (
        /*[out,retval]*/ enum WdRevisionsView * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsView (
        /*[in]*/ enum WdRevisionsView prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsMode (
        /*[out,retval]*/ enum WdRevisionsMode * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsMode (
        /*[in]*/ enum WdRevisionsMode prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonWidthType (
        /*[out,retval]*/ enum WdRevisionsBalloonWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonWidthType (
        /*[in]*/ enum WdRevisionsBalloonWidthType prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonSide (
        /*[out,retval]*/ enum WdRevisionsBalloonMargin * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonSide (
        /*[in]*/ enum WdRevisionsBalloonMargin prop ) = 0;
      virtual HRESULT __stdcall get_Reviewers (
        /*[out,retval]*/ struct Reviewers * * prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonShowConnectingLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonShowConnectingLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayout (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayout (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowXMLMarkup (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ShowXMLMarkup (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShadeEditableRanges (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ShadeEditableRanges (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowInkAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowInkAnnotations (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayBackgrounds (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayBackgrounds (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutActualView (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutActualView (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutAllowMultiplePages (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutAllowMultiplePages (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutAllowEditing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutAllowEditing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutTruncateMargins (
        /*[out,retval]*/ enum WdReadingLayoutMargin * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutTruncateMargins (
        /*[in]*/ enum WdReadingLayoutMargin prop ) = 0;
      virtual HRESULT __stdcall get_ShowMarkupAreaHighlight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMarkupAreaHighlight (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Panning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Panning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowCropMarks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowCropMarks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkupMode (
        /*[out,retval]*/ enum WdRevisionsMode * prop ) = 0;
      virtual HRESULT __stdcall put_MarkupMode (
        /*[in]*/ enum WdRevisionsMode prop ) = 0;
      virtual HRESULT __stdcall get_ConflictMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ConflictMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowOtherAuthors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowOtherAuthors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

enum WdContentControlType
{
    wdContentControlRichText = 0,
    wdContentControlText = 1,
    wdContentControlPicture = 2,
    wdContentControlComboBox = 3,
    wdContentControlDropdownList = 4,
    wdContentControlBuildingBlockGallery = 5,
    wdContentControlDate = 6,
    wdContentControlGroup = 7,
    wdContentControlCheckBox = 8
};

enum WdCompareDestination
{
    wdCompareDestinationOriginal = 0,
    wdCompareDestinationRevised = 1,
    wdCompareDestinationNew = 2
};

enum WdGranularity
{
    wdGranularityCharLevel = 0,
    wdGranularityWordLevel = 1
};

enum WdMergeFormatFrom
{
    wdMergeFormatFromOriginal = 0,
    wdMergeFormatFromRevised = 1,
    wdMergeFormatFromPrompt = 2
};

enum WdShowSourceDocuments
{
    wdShowSourceDocumentsNone = 0,
    wdShowSourceDocumentsOriginal = 1,
    wdShowSourceDocumentsRevised = 2,
    wdShowSourceDocumentsBoth = 3
};

enum WdPasteOptions
{
    wdKeepSourceFormatting = 0,
    wdMatchDestinationFormatting = 1,
    wdKeepTextOnly = 2,
    wdUseDestinationStyles = 3
};

enum WdBuildingBlockTypes
{
    wdTypeQuickParts = 1,
    wdTypeCoverPage = 2,
    wdTypeEquations = 3,
    wdTypeFooters = 4,
    wdTypeHeaders = 5,
    wdTypePageNumber = 6,
    wdTypeTables = 7,
    wdTypeWatermarks = 8,
    wdTypeAutoText = 9,
    wdTypeTextBox = 10,
    wdTypePageNumberTop = 11,
    wdTypePageNumberBottom = 12,
    wdTypePageNumberPage = 13,
    wdTypeTableOfContents = 14,
    wdTypeCustomQuickParts = 15,
    wdTypeCustomCoverPage = 16,
    wdTypeCustomEquations = 17,
    wdTypeCustomFooters = 18,
    wdTypeCustomHeaders = 19,
    wdTypeCustomPageNumber = 20,
    wdTypeCustomTables = 21,
    wdTypeCustomWatermarks = 22,
    wdTypeCustomAutoText = 23,
    wdTypeCustomTextBox = 24,
    wdTypeCustomPageNumberTop = 25,
    wdTypeCustomPageNumberBottom = 26,
    wdTypeCustomPageNumberPage = 27,
    wdTypeCustomTableOfContents = 28,
    wdTypeCustom1 = 29,
    wdTypeCustom2 = 30,
    wdTypeCustom3 = 31,
    wdTypeCustom4 = 32,
    wdTypeCustom5 = 33,
    wdTypeBibliography = 34,
    wdTypeCustomBibliography = 35
};

enum WdAlignmentTabRelative
{
    wdMargin = 0,
    wdIndent = 1
};

enum WdAlignmentTabAlignment
{
    wdLeft = 0,
    wdCenter = 1,
    wdRight = 2
};

enum WdCellColor
{
    wdCellColorByAuthor = -1,
    wdCellColorNoHighlight = 0,
    wdCellColorPink = 1,
    wdCellColorLightBlue = 2,
    wdCellColorLightYellow = 3,
    wdCellColorLightPurple = 4,
    wdCellColorLightOrange = 5,
    wdCellColorLightGreen = 6,
    wdCellColorLightGray = 7
};

enum WdTextboxTightWrap
{
    wdTightNone = 0,
    wdTightAll = 1,
    wdTightFirstAndLastLines = 2,
    wdTightFirstLineOnly = 3,
    wdTightLastLineOnly = 4
};

struct __declspec(uuid("00020953-0000-0000-c000-000000000046"))
_ParagraphFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdParagraphAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdParagraphAlignment prop ) = 0;
      virtual HRESULT __stdcall get_KeepTogether (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepTogether (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_KeepWithNext (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepWithNext (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageBreakBefore (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageBreakBefore (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NoLineNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacingRule (
        /*[out,retval]*/ enum WdLineSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacingRule (
        /*[in]*/ enum WdLineSpacing prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Hyphenation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hyphenation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WidowControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WidowControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HalfWidthPunctuationOnTopOfLine (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HalfWidthPunctuationOnTopOfLine (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndAlpha (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndAlpha (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndDigit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndDigit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum WdBaselineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum WdBaselineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_AutoAdjustRightIndent (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAdjustRightIndent (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DisableLineHeightGrid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DisableLineHeightGrid (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordTabStops (
        /*[out,retval]*/ struct wordTabStops * * prop ) = 0;
      virtual HRESULT __stdcall put_wordTabStops (
        /*[in]*/ struct wordTabStops * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ enum WdOutlineLevel * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ enum WdOutlineLevel prop ) = 0;
      virtual HRESULT __stdcall CloseUp ( ) = 0;
      virtual HRESULT __stdcall OpenUp ( ) = 0;
      virtual HRESULT __stdcall OpenOrCloseUp ( ) = 0;
      virtual HRESULT __stdcall TabHangingIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall TabIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Space1 ( ) = 0;
      virtual HRESULT __stdcall Space15 ( ) = 0;
      virtual HRESULT __stdcall Space2 ( ) = 0;
      virtual HRESULT __stdcall IndentCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall IndentFirstLineCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitRightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitRightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitLeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitLeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitFirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitFirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ enum WdReadingOrder * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ enum WdReadingOrder prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBeforeAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBeforeAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfterAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfterAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MirrorIndents (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MirrorIndents (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TextboxTightWrap (
        /*[out,retval]*/ enum WdTextboxTightWrap * prop ) = 0;
      virtual HRESULT __stdcall put_TextboxTightWrap (
        /*[in]*/ enum WdTextboxTightWrap prop ) = 0;
};

enum WdShapePositionRelative
{
    wdShapePositionRelativeNone = -999999
};

enum WdShapeSizeRelative
{
    wdShapeSizeRelativeNone = -999999
};

enum WdRelativeHorizontalSize
{
    wdRelativeHorizontalSizeMargin = 0,
    wdRelativeHorizontalSizePage = 1,
    wdRelativeHorizontalSizeLeftMarginArea = 2,
    wdRelativeHorizontalSizeRightMarginArea = 3,
    wdRelativeHorizontalSizeInnerMarginArea = 4,
    wdRelativeHorizontalSizeOuterMarginArea = 5
};

enum WdRelativeVerticalSize
{
    wdRelativeVerticalSizeMargin = 0,
    wdRelativeVerticalSizePage = 1,
    wdRelativeVerticalSizeTopMarginArea = 2,
    wdRelativeVerticalSizeBottomMarginArea = 3,
    wdRelativeVerticalSizeInnerMarginArea = 4,
    wdRelativeVerticalSizeOuterMarginArea = 5
};

enum WdThemeColorIndex
{
    wdNotThemeColor = -1,
    wdThemeColorMainDark1 = 0,
    wdThemeColorMainLight1 = 1,
    wdThemeColorMainDark2 = 2,
    wdThemeColorMainLight2 = 3,
    wdThemeColorAccent1 = 4,
    wdThemeColorAccent2 = 5,
    wdThemeColorAccent3 = 6,
    wdThemeColorAccent4 = 7,
    wdThemeColorAccent5 = 8,
    wdThemeColorAccent6 = 9,
    wdThemeColorHyperlink = 10,
    wdThemeColorHyperlinkFollowed = 11,
    wdThemeColorBackground1 = 12,
    wdThemeColorText1 = 13,
    wdThemeColorBackground2 = 14,
    wdThemeColorText2 = 15
};

struct __declspec(uuid("000209c6-0000-0000-c000-000000000046"))
wordColorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordRGB (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_wordRGB (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SchemeColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SchemeColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoColorType * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OverPrint (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_OverPrint (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Ink (
        /*[in]*/ long Index,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Ink (
        /*[in]*/ long Index,
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Cyan (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Cyan (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Magenta (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Magenta (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Yellow (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Yellow (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Black (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Black (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall SetCMYK (
        /*[in]*/ long Cyan,
        /*[in]*/ long Magenta,
        /*[in]*/ long Yellow,
        /*[in]*/ long Black ) = 0;
      virtual HRESULT __stdcall get_ObjectThemeColor (
        /*[out,retval]*/ enum WdThemeColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ObjectThemeColor (
        /*[in]*/ enum WdThemeColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("000209c8-0000-0000-c000-000000000046"))
wordFillFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GradientColorType (
        /*[out,retval]*/ enum Office::MsoGradientColorType * prop ) = 0;
      virtual HRESULT __stdcall get_GradientDegree (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_GradientStyle (
        /*[out,retval]*/ enum Office::MsoGradientStyle * prop ) = 0;
      virtual HRESULT __stdcall get_GradientVariant (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * prop ) = 0;
      virtual HRESULT __stdcall get_PresetGradientType (
        /*[out,retval]*/ enum Office::MsoPresetGradientType * prop ) = 0;
      virtual HRESULT __stdcall get_PresetTexture (
        /*[out,retval]*/ enum Office::MsoPresetTexture * prop ) = 0;
      virtual HRESULT __stdcall get_TextureName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_TextureType (
        /*[out,retval]*/ enum Office::MsoTextureType * prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoFillType * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall Background ( ) = 0;
      virtual HRESULT __stdcall OneColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall Patterned (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall PresetGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ enum Office::MsoPresetGradientType PresetGradientType ) = 0;
      virtual HRESULT __stdcall PresetTextured (
        /*[in]*/ enum Office::MsoPresetTexture PresetTexture ) = 0;
      virtual HRESULT __stdcall Solid ( ) = 0;
      virtual HRESULT __stdcall TwoColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant ) = 0;
      virtual HRESULT __stdcall UserPicture (
        /*[in]*/ BSTR PictureFile ) = 0;
      virtual HRESULT __stdcall UserTextured (
        /*[in]*/ BSTR TextureFile ) = 0;
      virtual HRESULT __stdcall get_GradientStops (
        /*[out,retval]*/ struct Office::GradientStops * * prop ) = 0;
      virtual HRESULT __stdcall get_TextureOffsetX (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TextureOffsetX (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TextureOffsetY (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TextureOffsetY (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TextureAlignment (
        /*[out,retval]*/ enum Office::MsoTextureAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_TextureAlignment (
        /*[in]*/ enum Office::MsoTextureAlignment prop ) = 0;
      virtual HRESULT __stdcall get_TextureHorizontalScale (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TextureHorizontalScale (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TextureVerticalScale (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TextureVerticalScale (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TextureTile (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_TextureTile (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_RotateWithObject (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_RotateWithObject (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_PictureEffects (
        /*[out,retval]*/ struct Office::PictureEffects * * prop ) = 0;
      virtual HRESULT __stdcall get_GradientAngle (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GradientAngle (
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("000209ca-0000-0000-c000-000000000046"))
wordLineFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * prop ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength prop ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * prop ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle prop ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * prop ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth prop ) = 0;
      virtual HRESULT __stdcall get_DashStyle (
        /*[out,retval]*/ enum Office::MsoLineDashStyle * prop ) = 0;
      virtual HRESULT __stdcall put_DashStyle (
        /*[in]*/ enum Office::MsoLineDashStyle prop ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * prop ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength prop ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * prop ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle prop ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * prop ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * prop ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ enum Office::MsoPatternType prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_InsetPen (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_InsetPen (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
};

struct __declspec(uuid("000209cc-0000-0000-c000-000000000046"))
wordShadowFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Obscured (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Obscured (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_OffsetX (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OffsetX (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OffsetY (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OffsetY (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShadowType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoShadowType prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall IncrementOffsetX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementOffsetY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoShadowStyle * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoShadowStyle prop ) = 0;
      virtual HRESULT __stdcall get_Blur (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Blur (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RotateWithShape (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_RotateWithShape (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
};

struct __declspec(uuid("000209d0-0000-0000-c000-000000000046"))
wordThreeDFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColorType (
        /*[out,retval]*/ enum Office::MsoExtrusionColorType * prop ) = 0;
      virtual HRESULT __stdcall put_ExtrusionColorType (
        /*[in]*/ enum Office::MsoExtrusionColorType prop ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_PresetExtrusionDirection (
        /*[out,retval]*/ enum Office::MsoPresetExtrusionDirection * prop ) = 0;
      virtual HRESULT __stdcall get_PresetLightingDirection (
        /*[out,retval]*/ enum Office::MsoPresetLightingDirection * prop ) = 0;
      virtual HRESULT __stdcall put_PresetLightingDirection (
        /*[in]*/ enum Office::MsoPresetLightingDirection prop ) = 0;
      virtual HRESULT __stdcall get_PresetLightingSoftness (
        /*[out,retval]*/ enum Office::MsoPresetLightingSoftness * prop ) = 0;
      virtual HRESULT __stdcall put_PresetLightingSoftness (
        /*[in]*/ enum Office::MsoPresetLightingSoftness prop ) = 0;
      virtual HRESULT __stdcall get_PresetMaterial (
        /*[out,retval]*/ enum Office::MsoPresetMaterial * prop ) = 0;
      virtual HRESULT __stdcall put_PresetMaterial (
        /*[in]*/ enum Office::MsoPresetMaterial prop ) = 0;
      virtual HRESULT __stdcall get_PresetThreeDFormat (
        /*[out,retval]*/ enum Office::MsoPresetThreeDFormat * prop ) = 0;
      virtual HRESULT __stdcall get_RotationX (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RotationX (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RotationY (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RotationY (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall IncrementRotationX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall ResetRotation ( ) = 0;
      virtual HRESULT __stdcall SetExtrusionDirection (
        /*[in]*/ enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection ) = 0;
      virtual HRESULT __stdcall SetThreeDFormat (
        /*[in]*/ enum Office::MsoPresetThreeDFormat PresetThreeDFormat ) = 0;
      virtual HRESULT __stdcall SetPresetCamera (
        /*[in]*/ enum Office::MsoPresetCamera PresetCamera ) = 0;
      virtual HRESULT __stdcall IncrementRotationZ (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationHorizontal (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationVertical (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_PresetLighting (
        /*[out,retval]*/ enum Office::MsoLightRigType * prop ) = 0;
      virtual HRESULT __stdcall put_PresetLighting (
        /*[in]*/ enum Office::MsoLightRigType prop ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelTopType (
        /*[out,retval]*/ enum Office::MsoBevelType * prop ) = 0;
      virtual HRESULT __stdcall put_BevelTopType (
        /*[in]*/ enum Office::MsoBevelType prop ) = 0;
      virtual HRESULT __stdcall get_BevelTopInset (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelTopInset (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelTopDepth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelTopDepth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelBottomType (
        /*[out,retval]*/ enum Office::MsoBevelType * prop ) = 0;
      virtual HRESULT __stdcall put_BevelBottomType (
        /*[in]*/ enum Office::MsoBevelType prop ) = 0;
      virtual HRESULT __stdcall get_BevelBottomInset (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelBottomInset (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelBottomDepth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelBottomDepth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PresetCamera (
        /*[out,retval]*/ enum Office::MsoPresetCamera * prop ) = 0;
      virtual HRESULT __stdcall get_RotationZ (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RotationZ (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ContourWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ContourWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ContourColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_FieldOfView (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FieldOfView (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ProjectText (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_ProjectText (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_LightAngle (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LightAngle (
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("f1b14f40-5c32-4c8c-b5b2-de537bb6b89d"))
wordGlowFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
};

enum WdExportFormat
{
    wdExportFormatPDF = 17,
    wdExportFormatXPS = 18
};

enum WdExportOptimizeFor
{
    wdExportOptimizeForPrint = 0,
    wdExportOptimizeForOnScreen = 1
};

enum WdExportCreateBookmarks
{
    wdExportCreateNoBookmarks = 0,
    wdExportCreateHeadingBookmarks = 1,
    wdExportCreateWordBookmarks = 2
};

enum WdExportItem
{
    wdExportDocumentContent = 0,
    wdExportDocumentWithMarkup = 7
};

enum WdExportRange
{
    wdExportAllDocument = 0,
    wdExportSelection = 1,
    wdExportCurrentPage = 2,
    wdExportFromTo = 3
};

enum WdFrenchSpeller
{
    wdFrenchBoth = 0,
    wdFrenchPreReform = 1,
    wdFrenchPostReform = 2
};

enum WdDocPartInsertOptions
{
    wdInsertContent = 0,
    wdInsertParagraph = 1,
    wdInsertPage = 2
};

enum WdContentControlDateStorageFormat
{
    wdContentControlDateStorageText = 0,
    wdContentControlDateStorageDate = 1,
    wdContentControlDateStorageDateTime = 2
};

struct __declspec(uuid("4a304b59-31ff-42dd-b436-7fc9c5db7559"))
wordChartData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Workbook (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_IsLinked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall BreakLink ( ) = 0;
};

struct __declspec(uuid("ae6d45e5-981e-4547-8752-674bb55420a5"))
wordCorners : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("ab0d33a3-c9ea-485b-9443-4c1bb3656cea"))
wordChartBorder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("b184502b-587a-4c6a-8dc4-ece4354883c6"))
wordInterior : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_PatternColor (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_PatternColor (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_PatternColorIndex (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_PatternColorIndex (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("cdb0ff41-e862-47bb-ae77-3fa7b1ae3189"))
wordChartFont : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Background (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_FontStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_FontStyle (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_OutlineFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_StrikeThrough (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeThrough (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Subscript (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Subscript (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Superscript (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Superscript (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("dd8f80b8-9b80-4e89-9bec-f12df35e43b3"))
wordChartColorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SchemeColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SchemeColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordRGB (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__Default (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("f152d349-7d20-4c01-a42b-2d6de4f3891c"))
wordChartFillFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OneColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall TwoColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant ) = 0;
      virtual HRESULT __stdcall PresetTextured (
        /*[in]*/ enum Office::MsoPresetTexture PresetTexture ) = 0;
      virtual HRESULT __stdcall Solid ( ) = 0;
      virtual HRESULT __stdcall Patterned (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall UserPicture (
        /*[in]*/ VARIANT PictureFile = vtMissing,
        /*[in]*/ VARIANT wordPictureFormat = vtMissing,
        /*[in]*/ VARIANT PictureStackUnit = vtMissing,
        /*[in]*/ VARIANT PicturePlacement = vtMissing ) = 0;
      virtual HRESULT __stdcall UserTextured (
        /*[in]*/ BSTR TextureFile ) = 0;
      virtual HRESULT __stdcall PresetGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ enum Office::MsoPresetGradientType PresetGradientType ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct wordChartColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct wordChartColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GradientColorType (
        /*[out,retval]*/ enum Office::MsoGradientColorType * prop ) = 0;
      virtual HRESULT __stdcall get_GradientDegree (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_GradientStyle (
        /*[out,retval]*/ enum Office::MsoGradientStyle * prop ) = 0;
      virtual HRESULT __stdcall get_GradientVariant (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * prop ) = 0;
      virtual HRESULT __stdcall get_PresetGradientType (
        /*[out,retval]*/ enum Office::MsoPresetGradientType * prop ) = 0;
      virtual HRESULT __stdcall get_PresetTexture (
        /*[out,retval]*/ enum Office::MsoPresetTexture * prop ) = 0;
      virtual HRESULT __stdcall get_TextureName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_TextureType (
        /*[out,retval]*/ enum Office::MsoTextureType * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoFillType * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("ff06fef2-da89-41c0-a0a8-5cd434e210ad"))
wordChartCharacters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PhoneticCharacters (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PhoneticCharacters (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("b66d3c1a-4541-4961-b35b-a353c03f6a99"))
wordChartFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct wordGlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct wordLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPictureFormat (
        /*[out,retval]*/ struct wordPictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct wordShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct wordSoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame2 (
        /*[out,retval]*/ struct Office::TextFrame2 * * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct wordThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("a2e94180-7564-4d97-806b-bbc0d0a1350c"))
wordWalls : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("7e64d2be-2818-48cb-8f8a-cc7b61d9e860"))
wordFloor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("c75ad98a-74e9-49fe-8bf1-544839cc08a5"))
wordChartArea : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Clear (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall ClearContents (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("5d7f6c15-36ce-44cc-9692-5a1f8b8c906d"))
wordSeriesLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("36162c62-b59a-4278-af3d-f2ac1eb999d9"))
wordLeaderLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("fc9090af-0ddb-4ec1-86e8-8751f2199f2c"))
wordGridlines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("86905ac9-33f3-4a88-96c8-b289b0390bca"))
wordUpBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("84a6a663-aef4-4fcd-83fd-9bb707f157ca"))
wordDownBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("dce9f2c4-4c02-43ba-840e-b4276550ef79"))
wordDataTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ShowLegendKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowLegendKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasBorderHorizontal (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasBorderHorizontal (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasBorderVertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasBorderVertical (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasBorderOutline (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasBorderOutline (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("9f1df642-3cce-4d83-a770-d2634a05d278"))
wordDropLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("7a1bce11-5783-4c7d-bd02-f3d84ab40e7f"))
wordHiLoLines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

enum wordXlChartSplitType
{
    xlSplitByPosition = 1,
    xlSplitByPercentValue = 3,
    xlSplitByCustomSplit = 4,
    xlSplitByValue = 2
};

enum wordXlSizeRepresents
{
    xlSizeIsWidth = 2,
    xlSizeIsArea = 1
};

enum wordXlAxisGroup
{
    xlPrimary = 1,
    xlSecondary = 2
};

enum XlBackground
{
    xlBackgroundAutomatic = -4105,
    xlBackgroundOpaque = 3,
    xlBackgroundTransparent = 2
};

enum XlChartGallery
{
    xlBuiltIn = 21,
    xlUserDefined = 22,
    xlAnyGallery = 23
};

enum XlChartPicturePlacement
{
    xlSides = 1,
    xlEnd = 2,
    xlEndSides = 3,
    xlFront = 4,
    xlFrontSides = 5,
    xlFrontEnd = 6,
    xlAllFaces = 7
};

enum XlDataLabelSeparator
{
    xlDataLabelSeparatorDefault = 1
};

enum XlPattern
{
    xlPatternAutomatic = -4105,
    xlPatternChecker = 9,
    xlPatternCrissCross = 16,
    xlPatternDown = -4121,
    xlPatternGray16 = 17,
    xlPatternGray25 = -4124,
    xlPatternGray50 = -4125,
    xlPatternGray75 = -4126,
    xlPatternGray8 = 18,
    xlPatternGrid = 15,
    xlPatternHorizontal = -4128,
    xlPatternLightDown = 13,
    xlPatternLightHorizontal = 11,
    xlPatternLightUp = 14,
    xlPatternLightVertical = 12,
    xlPatternNone = -4142,
    xlPatternSemiGray75 = 10,
    xlPatternSolid = 1,
    xlPatternUp = -4162,
    xlPatternVertical = -4166,
    xlPatternLinearGradient = 4000,
    xlPatternRectangularGradient = 4001
};

enum wordXlPictureAppearance
{
    xlPrinter = 2,
    xlScreen = 1
};

enum wordXlCopyPictureFormat
{
    xlBitmap = 2,
    xlPicture = -4147
};

enum XlRgbColor
{
    xlAliceBlue = 16775408,
    xlAntiqueWhite = 14150650,
    xlAqua = 16776960,
    xlAquamarine = 13959039,
    xlAzure = 16777200,
    xlBeige = 14480885,
    xlBisque = 12903679,
    xlBlack = 0,
    xlBlanchedAlmond = 13495295,
    xlBlue = 16711680,
    xlBlueViolet = 14822282,
    xlBrown = 2763429,
    xlBurlyWood = 8894686,
    xlCadetBlue = 10526303,
    xlChartreuse = 65407,
    xlCoral = 5275647,
    xlCornflowerBlue = 15570276,
    xlCornsilk = 14481663,
    xlCrimson = 3937500,
    xlDarkBlue = 9109504,
    xlDarkCyan = 9145088,
    xlDarkGoldenrod = 755384,
    xlDarkGreen = 25600,
    xlDarkGray = 11119017,
    xlDarkGrey = 11119017,
    xlDarkKhaki = 7059389,
    xlDarkMagenta = 9109643,
    xlDarkOliveGreen = 3107669,
    xlDarkOrange = 36095,
    xlDarkOrchid = 13382297,
    xlDarkRed = 139,
    xlDarkSalmon = 8034025,
    xlDarkSeaGreen = 9419919,
    xlDarkSlateBlue = 9125192,
    xlDarkSlateGray = 5197615,
    xlDarkSlateGrey = 5197615,
    xlDarkTurquoise = 13749760,
    xlDarkViolet = 13828244,
    xlDeepPink = 9639167,
    xlDeepSkyBlue = 16760576,
    xlDimGray = 6908265,
    xlDimGrey = 6908265,
    xlDodgerBlue = 16748574,
    xlFireBrick = 2237106,
    xlFloralWhite = 15792895,
    xlForestGreen = 2263842,
    xlFuchsia = 16711935,
    xlGainsboro = 14474460,
    xlGhostWhite = 16775416,
    xlGold = 55295,
    xlGoldenrod = 2139610,
    xlGray = 8421504,
    xlGreen = 32768,
    xlGrey = 8421504,
    xlGreenYellow = 3145645,
    xlHoneydew = 15794160,
    xlHotPink = 11823615,
    xlIndianRed = 6053069,
    xlIndigo = 8519755,
    xlIvory = 15794175,
    xlKhaki = 9234160,
    xlLavender = 16443110,
    xlLavenderBlush = 16118015,
    xlLawnGreen = 64636,
    xlLemonChiffon = 13499135,
    xlLightBlue = 15128749,
    xlLightCoral = 8421616,
    xlLightCyan = 9145088,
    xlLightGoldenrodYellow = 13826810,
    xlLightGray = 13882323,
    xlLightGreen = 9498256,
    xlLightGrey = 13882323,
    xlLightPink = 12695295,
    xlLightSalmon = 8036607,
    xlLightSeaGreen = 11186720,
    xlLightSkyBlue = 16436871,
    xlLightSlateGray = 10061943,
    xlLightSlateGrey = 10061943,
    xlLightSteelBlue = 14599344,
    xlLightYellow = 14745599,
    xlLime = 65280,
    xlLimeGreen = 3329330,
    xlLinen = 15134970,
    xlMaroon = 128,
    xlMediumAquamarine = 11206502,
    xlMediumBlue = 13434880,
    xlMediumOrchid = 13850042,
    xlMediumPurple = 14381203,
    xlMediumSeaGreen = 7451452,
    xlMediumSlateBlue = 15624315,
    xlMediumSpringGreen = 10156544,
    xlMediumTurquoise = 13422920,
    xlMediumVioletRed = 8721863,
    xlMidnightBlue = 7346457,
    xlMintCream = 16449525,
    xlMistyRose = 14804223,
    xlMoccasin = 11920639,
    xlNavajoWhite = 11394815,
    xlNavy = 8388608,
    xlNavyBlue = 8388608,
    xlOldLace = 15136253,
    xlOlive = 32896,
    xlOliveDrab = 2330219,
    xlOrange = 42495,
    xlOrangeRed = 17919,
    xlOrchid = 14053594,
    xlPaleGoldenrod = 7071982,
    xlPaleGreen = 10025880,
    xlPaleTurquoise = 15658671,
    xlPaleVioletRed = 9662683,
    xlPapayaWhip = 14020607,
    xlPeachPuff = 12180223,
    xlPeru = 4163021,
    xlPink = 13353215,
    xlPlum = 14524637,
    xlPowderBlue = 15130800,
    xlPurple = 8388736,
    xlRed = 255,
    xlRosyBrown = 9408444,
    xlRoyalBlue = 14772545,
    xlSalmon = 7504122,
    xlSandyBrown = 6333684,
    xlSeaGreen = 5737262,
    xlSeashell = 15660543,
    xlSienna = 2970272,
    xlSilver = 12632256,
    xlSkyBlue = 15453831,
    xlSlateBlue = 13458026,
    xlSlateGray = 9470064,
    xlSlateGrey = 9470064,
    xlSnow = 16448255,
    xlSpringGreen = 8388352,
    xlSteelBlue = 11829830,
    xlTan = 9221330,
    xlTeal = 8421376,
    xlThistle = 14204888,
    xlTomato = 4678655,
    xlTurquoise = 13688896,
    xlYellow = 65535,
    xlYellowGreen = 3329434,
    xlViolet = 15631086,
    xlWheat = 11788021,
    xlWhite = 16777215,
    xlWhiteSmoke = 16119285
};

enum XlConstants
{
    xlAutomatic = -4105,
    xlCombination = -4111,
    xlCustom = -4114,
    xlBar = 2,
    xlColumn = 3,
    xl3DBar = -4099,
    xl3DSurface = -4103,
    xlDefaultAutoFormat = -1,
    xlNone = -4142,
    xlAbove = 0,
    xlBelow = 1,
    xlBoth = 1,
    xlBottom = -4107,
    xlCenter = -4108,
    xlChecker = 9,
    xlCircle = 8,
    xlCorner = 2,
    xlCrissCross = 16,
    xlCross = 4,
    xlDiamond = 2,
    xlDistributed = -4117,
    xlFill = 5,
    xlFixedValue = 1,
    xlGeneral = 1,
    xlGray16 = 17,
    xlGray25 = -4124,
    xlGray50 = -4125,
    xlGray75 = -4126,
    xlGray8 = 18,
    xlGrid = 15,
    xlHigh = -4127,
    xlInside = 2,
    xlJustify = -4130,
    xlLeft = -4131,
    xlLightDown = 13,
    xlLightHorizontal = 11,
    xlLightUp = 14,
    xlLightVertical = 12,
    xlLow = -4134,
    xlMaximum = 2,
    xlMinimum = 4,
    xlMinusValues = 3,
    xlNextToAxis = 4,
    xlOpaque = 3,
    xlOutside = 3,
    xlPercent = 2,
    xlPlus = 9,
    xlPlusValues = 2,
    xlRight = -4152,
    xlScale = 3,
    xlSemiGray75 = 10,
    xlShowLabel = 4,
    xlShowLabelAndPercent = 5,
    xlShowPercent = 3,
    xlShowValue = 2,
    xlSingle = 2,
    xlSolid = 1,
    xlSquare = 1,
    xlStar = 5,
    xlStError = 4,
    xlTop = -4160,
    xlTransparent = 2,
    xlTriangle = 3
};

enum XlReadingOrder
{
    xlContext = -5002,
    xlLTR = -5003,
    xlRTL = -5004
};

enum wordXlBorderWeight
{
    xlHairline = 1,
    xlMedium = -4138,
    xlThick = 4,
    xlThin = 2
};

enum wordXlLegendPosition
{
    xlLegendPositionBottom = -4107,
    xlLegendPositionCorner = 2,
    xlLegendPositionLeft = -4131,
    xlLegendPositionRight = -4152,
    xlLegendPositionTop = -4160,
    xlLegendPositionCustom = -4161
};

struct __declspec(uuid("b3a1e8c6-e1ce-4a46-8d12-e017157b03d7"))
wordLegend : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall wordLegendEntries (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlLegendPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlLegendPosition prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Clear (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

enum XlUnderlineStyle
{
    xlUnderlineStyleDouble = -4119,
    xlUnderlineStyleDoubleAccounting = 5,
    xlUnderlineStyleNone = -4142,
    xlUnderlineStyleSingle = 2,
    xlUnderlineStyleSingleAccounting = 4
};

enum wordXlColorIndex
{
    xlColorIndexAutomatic = -4105,
    xlColorIndexNone = -4142
};

enum wordXlMarkerStyle
{
    xlMarkerStyleAutomatic = -4105,
    xlMarkerStyleCircle = 8,
    xlMarkerStyleDash = -4115,
    xlMarkerStyleDiamond = 2,
    xlMarkerStyleDot = -4118,
    xlMarkerStyleNone = -4142,
    xlMarkerStylePicture = -4147,
    xlMarkerStylePlus = 9,
    xlMarkerStyleSquare = 1,
    xlMarkerStyleStar = 5,
    xlMarkerStyleTriangle = 3,
    xlMarkerStyleX = -4168
};

struct __declspec(uuid("df076fde-8781-4051-a5bc-99f6b7dc04d4"))
wordLegendKey : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MarkerSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerStyle (
        /*[out,retval]*/ enum wordXlMarkerStyle * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerStyle (
        /*[in]*/ enum wordXlMarkerStyle prop ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Smooth (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Smooth (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PictureUnit2 (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit2 (
        /*[in]*/ double prop ) = 0;
};

struct __declspec(uuid("c4a02049-024c-4273-8934-e48cc21479a9"))
wordLegendEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordLegendKey (
        /*[out,retval]*/ struct wordLegendKey * * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("b6511068-70bf-4751-a741-55c1d41ad96f"))
wordLegendEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordLegendEntry * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordLegendEntry * * prop ) = 0;
};

enum wordXlRowCol
{
    xlColumns = 2,
    xlRows = 1
};

enum wordXlDataLabelsType
{
    xlDataLabelsShowNone = -4142,
    xlDataLabelsShowValue = 2,
    xlDataLabelsShowPercent = 3,
    xlDataLabelsShowLabel = 4,
    xlDataLabelsShowLabelAndPercent = 5,
    xlDataLabelsShowBubbleSizes = 6
};

enum wordXlErrorBarInclude
{
    xlErrorBarIncludeBoth = 1,
    xlErrorBarIncludeMinusValues = 3,
    xlErrorBarIncludeNone = -4142,
    xlErrorBarIncludePlusValues = 2
};

enum wordXlErrorBarType
{
    xlErrorBarTypeCustom = -4114,
    xlErrorBarTypeFixedValue = 1,
    xlErrorBarTypePercent = 2,
    xlErrorBarTypeStDev = -4155,
    xlErrorBarTypeStError = 4
};

enum wordXlErrorBarDirection
{
    xlChartX = -4168,
    xlChartY = 1
};

enum wordXlChartPictureType
{
    xlStackScale = 3,
    xlStack = 2,
    xlStretch = 1
};

enum XlChartItem
{
    xlDataLabel = 0,
    xlChartArea = 2,
    xlSeries = 3,
    xlChartTitle = 4,
    xlWalls = 5,
    xlCorners = 6,
    xlDataTable = 7,
    xlTrendline = 8,
    xlErrorBars = 9,
    xlXErrorBars = 10,
    xlYErrorBars = 11,
    xlLegendEntry = 12,
    xlLegendKey = 13,
    xlShape = 14,
    xlMajorGridlines = 15,
    xlMinorGridlines = 16,
    xlAxisTitle = 17,
    xlUpBars = 18,
    xlPlotArea = 19,
    xlDownBars = 20,
    xlAxis = 21,
    xlSeriesLines = 22,
    xlFloor = 23,
    xlLegend = 24,
    xlHiLoLines = 25,
    xlDropLines = 26,
    xlRadarAxisLabels = 27,
    xlNothing = 28,
    xlLeaderLines = 29,
    xlDisplayUnitLabel = 30,
    xlPivotChartFieldButton = 31,
    xlPivotChartDropZone = 32
};

enum wordXlBarShape
{
    xlBox = 0,
    xlPyramidToPoint = 1,
    xlPyramidToMax = 2,
    xlCylinder = 3,
    xlConeToPoint = 4,
    xlConeToMax = 5
};

enum wordXlEndStyleCap
{
    xlCap = 1,
    xlNoCap = 2
};

struct __declspec(uuid("194f8476-b79d-4572-a609-294207de77c1"))
wordErrorBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_EndStyle (
        /*[out,retval]*/ enum wordXlEndStyleCap * prop ) = 0;
      virtual HRESULT __stdcall put_EndStyle (
        /*[in]*/ enum wordXlEndStyleCap prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("40810760-068a-4486-bec9-8ea58c7029f5"))
wordSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AxisGroup (
        /*[out,retval]*/ enum wordXlAxisGroup * prop ) = 0;
      virtual HRESULT __stdcall put_AxisGroup (
        /*[in]*/ enum wordXlAxisGroup prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall wordDataLabels (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall ErrorBar (
        /*[in]*/ enum wordXlErrorBarDirection Direction,
        /*[in]*/ enum wordXlErrorBarInclude Include,
        /*[in]*/ enum wordXlErrorBarType Type,
        /*[in]*/ VARIANT Amount,
        /*[in]*/ VARIANT MinusValues,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordErrorBars (
        /*[out,retval]*/ struct wordErrorBars * * prop ) = 0;
      virtual HRESULT __stdcall get_Explosion (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Explosion (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HasDataLabels (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasDataLabels (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasErrorBars (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasErrorBars (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MarkerSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerStyle (
        /*[out,retval]*/ enum wordXlMarkerStyle * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerStyle (
        /*[in]*/ enum wordXlMarkerStyle prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ enum wordXlChartPictureType * prop ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ enum wordXlChartPictureType prop ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_PlotOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PlotOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall wordPoints (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Smooth (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Smooth (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall wordTrendlines (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ChartType (
        /*[out,retval]*/ enum Office::XlChartType * prop ) = 0;
      virtual HRESULT __stdcall put_ChartType (
        /*[in]*/ enum Office::XlChartType prop ) = 0;
      virtual HRESULT __stdcall ApplyCustomType (
        /*[in]*/ enum Office::XlChartType ChartType ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Values (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_XValues (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_XValues (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_BubbleSizes (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_BubbleSizes (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_BarShape (
        /*[out,retval]*/ enum wordXlBarShape * prop ) = 0;
      virtual HRESULT __stdcall put_BarShape (
        /*[in]*/ enum wordXlBarShape prop ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToSides (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToSides (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToFront (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToFront (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToEnd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToEnd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Has3DEffect (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Has3DEffect (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasLeaderLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasLeaderLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordLeaderLines (
        /*[out,retval]*/ struct wordLeaderLines * * prop ) = 0;
      virtual HRESULT __stdcall ApplyDataLabels (
        /*[in]*/ enum wordXlDataLabelsType Type,
        /*[in]*/ VARIANT wordLegendKey,
        /*[in]*/ VARIANT AutoText,
        /*[in]*/ VARIANT HasLeaderLines,
        /*[in]*/ VARIANT ShowSeriesName,
        /*[in]*/ VARIANT ShowCategoryName,
        /*[in]*/ VARIANT ShowValue,
        /*[in]*/ VARIANT ShowPercentage,
        /*[in]*/ VARIANT ShowBubbleSize,
        /*[in]*/ VARIANT Separator,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PictureUnit2 (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit2 (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_PlotColorIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_InvertColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_InvertColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_InvertColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_InvertColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
};

struct __declspec(uuid("8feb78f7-35c6-4871-918c-193c3cdd886d"))
wordSeriesCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Source,
        /*[in]*/ enum wordXlRowCol Rowcol,
        /*[in]*/ VARIANT SeriesLabels,
        /*[in]*/ VARIANT CategoryLabels,
        /*[in]*/ VARIANT Replace,
        /*[out,retval]*/ struct wordSeries * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Extend (
        /*[in]*/ VARIANT Source,
        /*[in]*/ VARIANT Rowcol,
        /*[in]*/ VARIANT CategoryLabels,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordSeries * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall NewSeries (
        /*[out,retval]*/ struct wordSeries * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordSeries * * prop ) = 0;
};

enum wordXlTrendlineType
{
    xlExponential = 5,
    xlLinear = -4132,
    xlLogarithmic = -4133,
    xlMovingAvg = 6,
    xlPolynomial = 3,
    xlPower = 4
};

enum wordXlAxisType
{
    xlCategory = 1,
    xlSeriesAxis = 3,
    xlValue = 2
};

enum wordXlAxisCrosses
{
    xlAxisCrossesAutomatic = -4105,
    xlAxisCrossesCustom = -4114,
    xlAxisCrossesMaximum = 2,
    xlAxisCrossesMinimum = 4
};

enum wordXlTickMark
{
    xlTickMarkCross = 4,
    xlTickMarkInside = 2,
    xlTickMarkNone = -4142,
    xlTickMarkOutside = 3
};

enum wordXlScaleType
{
    xlScaleLinear = -4132,
    xlScaleLogarithmic = -4133
};

enum wordXlTickLabelPosition
{
    xlTickLabelPositionHigh = -4127,
    xlTickLabelPositionLow = -4134,
    xlTickLabelPositionNextToAxis = 4,
    xlTickLabelPositionNone = -4142
};

enum wordXlTimeUnit
{
    xlDays = 0,
    xlMonths = 1,
    xlYears = 2
};

enum wordXlCategoryType
{
    xlCategoryScale = 2,
    xlTimeScale = 3,
    xlAutomaticScale = -4105
};

enum wordXlDisplayUnit
{
    xlHundreds = -2,
    xlThousands = -3,
    xlTenThousands = -4,
    xlHundredThousands = -5,
    xlMillions = -6,
    xlTenMillions = -7,
    xlHundredMillions = -8,
    xlThousandMillions = -9,
    xlMillionMillions = -10
};

enum XlOrientation
{
    xlDownward = -4170,
    xlHorizontal = -4128,
    xlUpward = -4171,
    xlVertical = -4166
};

enum wordXlTickLabelOrientation
{
    xlTickLabelOrientationAutomatic = -4105,
    xlTickLabelOrientationDownward = -4170,
    xlTickLabelOrientationHorizontal = -4128,
    xlTickLabelOrientationUpward = -4171,
    xlTickLabelOrientationVertical = -4166
};

struct __declspec(uuid("935d59f5-e365-4f92-b7f5-1c499a63eca8"))
wordTickLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLinked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLinked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum wordXlTickLabelOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum wordXlTickLabelOrientation prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Offset (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MultiLevel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MultiLevel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("86488fb4-9633-4c93-8057-fc1fa7a847ae"))
wordChartGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AxisGroup (
        /*[out,retval]*/ enum wordXlAxisGroup * prop ) = 0;
      virtual HRESULT __stdcall put_AxisGroup (
        /*[in]*/ enum wordXlAxisGroup prop ) = 0;
      virtual HRESULT __stdcall get_DoughnutHoleSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DoughnutHoleSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordDownBars (
        /*[out,retval]*/ struct wordDownBars * * prop ) = 0;
      virtual HRESULT __stdcall get_wordDropLines (
        /*[out,retval]*/ struct wordDropLines * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstSliceAngle (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FirstSliceAngle (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_GapWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_GapWidth (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HasDropLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasDropLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasHiLoLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasHiLoLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasRadarAxisLabels (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasRadarAxisLabels (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasSeriesLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasSeriesLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasUpDownBars (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasUpDownBars (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordHiLoLines (
        /*[out,retval]*/ struct wordHiLoLines * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Overlap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Overlap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RadarAxisLabels (
        /*[out,retval]*/ struct wordTickLabels * * prop ) = 0;
      virtual HRESULT __stdcall wordSeriesCollection (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordSeriesLines (
        /*[out,retval]*/ struct wordSeriesLines * * prop ) = 0;
      virtual HRESULT __stdcall get_SubType (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SubType (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordUpBars (
        /*[out,retval]*/ struct wordUpBars * * prop ) = 0;
      virtual HRESULT __stdcall get_VaryByCategories (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_VaryByCategories (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SizeRepresents (
        /*[out,retval]*/ enum wordXlSizeRepresents * prop ) = 0;
      virtual HRESULT __stdcall put_SizeRepresents (
        /*[in]*/ enum wordXlSizeRepresents prop ) = 0;
      virtual HRESULT __stdcall get_BubbleScale (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BubbleScale (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowNegativeBubbles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowNegativeBubbles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SplitType (
        /*[out,retval]*/ enum wordXlChartSplitType * prop ) = 0;
      virtual HRESULT __stdcall put_SplitType (
        /*[in]*/ enum wordXlChartSplitType prop ) = 0;
      virtual HRESULT __stdcall get_SplitValue (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_SplitValue (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_SecondPlotSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SecondPlotSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Has3DShading (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Has3DShading (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("f8ddb497-ca6c-4711-9ba4-2718fa3bb6fe"))
wordChartGroups : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

enum wordXlDisplayBlanksAs
{
    xlInterpolated = 3,
    xlNotPlotted = 1,
    xlZero = 2
};

enum wordXlDataLabelPosition
{
    xlLabelPositionCenter = -4108,
    xlLabelPositionAbove = 0,
    xlLabelPositionBelow = 1,
    xlLabelPositionLeft = -4131,
    xlLabelPositionRight = -4152,
    xlLabelPositionOutsideEnd = 2,
    xlLabelPositionInsideEnd = 3,
    xlLabelPositionInsideBase = 4,
    xlLabelPositionBestFit = 5,
    xlLabelPositionMixed = 6,
    xlLabelPositionCustom = 7
};

struct __declspec(uuid("1fd94df1-3569-4465-94ff-e8b22d28eeb0"))
wordDataLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct wordChartCharacters * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_AutoText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLinked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLinked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ShowLegendKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowLegendKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlDataLabelPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlDataLabelPosition prop ) = 0;
      virtual HRESULT __stdcall get_ShowSeriesName (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSeriesName (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowCategoryName (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowCategoryName (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowValue (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowValue (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowPercentage (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowPercentage (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowBubbleSize (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowBubbleSize (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("91c46192-3124-4346-a815-10b8873f5a06"))
wordTrendline : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Backward (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Backward (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordDataLabel (
        /*[out,retval]*/ struct wordDataLabel * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayEquation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayEquation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRSquared (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRSquared (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Forward (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Forward (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Intercept (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Intercept (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_InterceptIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InterceptIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NameIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NameIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Order (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Period (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Period (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum wordXlTrendlineType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum wordXlTrendlineType prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Backward2 (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Backward2 (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Forward2 (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Forward2 (
        /*[in]*/ double prop ) = 0;
};

struct __declspec(uuid("54b7061a-d56c-40e5-b85b-58146446c782"))
wordTrendlines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum wordXlTrendlineType Type,
        /*[in]*/ VARIANT Order,
        /*[in]*/ VARIANT Period,
        /*[in]*/ VARIANT Forward,
        /*[in]*/ VARIANT Backward,
        /*[in]*/ VARIANT Intercept,
        /*[in]*/ VARIANT DisplayEquation,
        /*[in]*/ VARIANT DisplayRSquared,
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ struct wordTrendline * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordTrendline * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordTrendline * * prop ) = 0;
};

struct __declspec(uuid("d8252c5e-eb9f-4d74-aa72-c178b128fac4"))
wordDataLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_AutoText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLinked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLinked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormatLocal (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormatLocal (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ShowLegendKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowLegendKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlDataLabelPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlDataLabelPosition prop ) = 0;
      virtual HRESULT __stdcall get_ShowSeriesName (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSeriesName (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowCategoryName (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowCategoryName (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowValue (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowValue (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowPercentage (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowPercentage (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowBubbleSize (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowBubbleSize (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordDataLabel * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct wordDataLabel * * prop ) = 0;
};

enum wordXlPivotFieldOrientation
{
    xlColumnField = 2,
    xlDataField = 4,
    xlHidden = 0,
    xlPageField = 3,
    xlRowField = 1
};

enum wordXlHAlign
{
    xlHAlignCenter = -4108,
    xlHAlignCenterAcrossSelection = 7,
    xlHAlignDistributed = -4117,
    xlHAlignFill = 5,
    xlHAlignGeneral = 1,
    xlHAlignJustify = -4130,
    xlHAlignLeft = -4131,
    xlHAlignRight = -4152
};

enum wordXlVAlign
{
    xlVAlignBottom = -4107,
    xlVAlignCenter = -4108,
    xlVAlignDistributed = -4117,
    xlVAlignJustify = -4130,
    xlVAlignTop = -4160
};

enum XlLineStyle
{
    xlContinuous = 1,
    xlDash = -4115,
    xlDashDot = 4,
    xlDashDotDot = 5,
    xlDot = -4118,
    xlDouble = -4119,
    xlSlantDashDot = 13,
    xlLineStyleNone = -4142
};

enum wordXlChartElementPosition
{
    xlChartElementPositionAutomatic = -4105,
    xlChartElementPositionCustom = -4114
};

struct __declspec(uuid("56afd330-440c-4f4c-a39c-ed306d084d5f"))
wordPlotArea : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_InsideLeft (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_InsideLeft (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_InsideTop (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_InsideTop (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_InsideWidth (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_InsideWidth (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_InsideHeight (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_InsideHeight (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlChartElementPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlChartElementPosition prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("c1ad33e4-f088-40a9-9d2f-d94017d115c4"))
wordChartTitle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct wordChartCharacters * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlChartElementPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlChartElementPosition prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("6ffa84bb-a350-4442-bb53-a43653459a84"))
wordChart : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HasTitle (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasTitle (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordChartTitle (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartTitle * * prop ) = 0;
      virtual HRESULT __stdcall get_DepthPercent (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DepthPercent (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_GapDepth (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_GapDepth (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HeightPercent (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeightPercent (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightAngleAxes (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_RightAngleAxes (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_DisplayBlanksAs (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ enum wordXlDisplayBlanksAs * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayBlanksAs (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ enum wordXlDisplayBlanksAs prop ) = 0;
      virtual HRESULT __stdcall get_wordChartGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall wordSeriesCollection (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SubType (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SubType (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordCorners (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordCorners * * prop ) = 0;
      virtual HRESULT __stdcall ApplyDataLabels (
        /*[in]*/ enum wordXlDataLabelsType Type,
        /*[in]*/ VARIANT wordLegendKey = vtMissing,
        /*[in]*/ VARIANT AutoText = vtMissing,
        /*[in]*/ VARIANT HasLeaderLines = vtMissing,
        /*[in]*/ VARIANT ShowSeriesName = vtMissing,
        /*[in]*/ VARIANT ShowCategoryName = vtMissing,
        /*[in]*/ VARIANT ShowValue = vtMissing,
        /*[in]*/ VARIANT ShowPercentage = vtMissing,
        /*[in]*/ VARIANT ShowBubbleSize = vtMissing,
        /*[in]*/ VARIANT Separator = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_ChartType (
        /*[out,retval]*/ enum Office::XlChartType * prop ) = 0;
      virtual HRESULT __stdcall put_ChartType (
        /*[in]*/ enum Office::XlChartType prop ) = 0;
      virtual HRESULT __stdcall get_HasDataTable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasDataTable (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall ApplyCustomType (
        /*[in]*/ enum Office::XlChartType ChartType,
        /*[in]*/ VARIANT TypeName = vtMissing ) = 0;
      virtual HRESULT __stdcall GetChartElement (
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[out]*/ long * ElementID,
        /*[out]*/ long * Arg1,
        /*[out]*/ long * Arg2 ) = 0;
      virtual HRESULT __stdcall SetSourceData (
        /*[in]*/ BSTR Source,
        /*[in]*/ VARIANT PlotBy = vtMissing ) = 0;
      virtual HRESULT __stdcall get_PlotBy (
        /*[out,retval]*/ enum wordXlRowCol * prop ) = 0;
      virtual HRESULT __stdcall put_PlotBy (
        /*[in]*/ enum wordXlRowCol prop ) = 0;
      virtual HRESULT __stdcall get_HasLegend (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasLegend (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordLegend (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordLegend * * prop ) = 0;
      virtual HRESULT __stdcall wordAxes (
        /*[in]*/ VARIANT Type,
        /*[in]*/ enum wordXlAxisGroup AxisGroup,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HasAxis (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_HasAxis (
        /*[in]*/ VARIANT Index1,
        /*[in]*/ VARIANT Index2 = vtMissing,
        /*[in,lcid]*/ long lcid = 0,
        /*[in]*/ VARIANT prop = vtMissing ) = 0;
      virtual HRESULT __stdcall get_wordWalls (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordWalls * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFloor (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordFloor * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPlotArea (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordPlotArea * * prop ) = 0;
      virtual HRESULT __stdcall get_PlotVisibleOnly (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PlotVisibleOnly (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordChartArea (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartArea * * prop ) = 0;
      virtual HRESULT __stdcall AutoFormat (
        /*[in]*/ long Gallery,
        /*[in]*/ VARIANT Format = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AutoScaling (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaling (
        /*[in,lcid]*/ long lcid,
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall SetBackgroundPicture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall ChartWizard (
        /*[in]*/ VARIANT Source = vtMissing,
        /*[in]*/ VARIANT Gallery = vtMissing,
        /*[in]*/ VARIANT Format = vtMissing,
        /*[in]*/ VARIANT PlotBy = vtMissing,
        /*[in]*/ VARIANT CategoryLabels = vtMissing,
        /*[in]*/ VARIANT SeriesLabels = vtMissing,
        /*[in]*/ VARIANT HasLegend = vtMissing,
        /*[in]*/ VARIANT Title = vtMissing,
        /*[in]*/ VARIANT CategoryTitle = vtMissing,
        /*[in]*/ VARIANT ValueTitle = vtMissing,
        /*[in]*/ VARIANT ExtraTitle = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall CopyPicture (
        /*[in]*/ enum wordXlPictureAppearance Appearance,
        /*[in]*/ enum wordXlCopyPictureFormat Format,
        /*[in]*/ enum wordXlPictureAppearance Size,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_wordDataTable (
        /*[out,retval]*/ struct wordDataTable * * prop ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ VARIANT Type = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall get_BarShape (
        /*[out,retval]*/ enum wordXlBarShape * prop ) = 0;
      virtual HRESULT __stdcall put_BarShape (
        /*[in]*/ enum wordXlBarShape prop ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT FilterName,
        /*[in]*/ VARIANT Interactive,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall SetDefaultChart (
        /*[in]*/ VARIANT Name ) = 0;
      virtual HRESULT __stdcall ApplyChartTemplate (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall SaveChartTemplate (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_SideWall (
        /*[out,retval]*/ struct wordWalls * * prop ) = 0;
      virtual HRESULT __stdcall get_BackWall (
        /*[out,retval]*/ struct wordWalls * * prop ) = 0;
      virtual HRESULT __stdcall get_ChartStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_ChartStyle (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall ClearToMatchStyle ( ) = 0;
      virtual HRESULT __stdcall get_PivotLayout (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HasPivotFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasPivotFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowDataLabelsOverMaximum (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDataLabelsOverMaximum (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall ApplyLayout (
        /*[in]*/ long Layout,
        /*[in]*/ VARIANT ChartType = vtMissing ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall SetElement (
        /*[in]*/ enum Office::MsoChartElementType Element ) = 0;
      virtual HRESULT __stdcall get_wordChartData (
        /*[out,retval]*/ struct wordChartData * * prop ) = 0;
      virtual HRESULT __stdcall get_wordShapes (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Area3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall AreaGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Bar3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall BarGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Column3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall ColumnGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Line3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall LineGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Pie3DGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall PieGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall DoughnutGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall RadarGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SurfaceGroup (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ struct wordChartGroup * * prop ) = 0;
      virtual HRESULT __stdcall XYGroups (
        /*[in]*/ VARIANT Index,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ VARIANT Before = vtMissing,
        /*[in]*/ VARIANT After = vtMissing,
        /*[in,lcid]*/ long lcid = 0 ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT Replace,
        /*[in,lcid]*/ long lcid,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ShowReportFilterFieldButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowReportFilterFieldButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowLegendFieldButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowLegendFieldButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowAxisFieldButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAxisFieldButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowValueFieldButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowValueFieldButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowAllFieldButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAllFieldButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("8b0e45db-3a7b-42ee-9d17-a92af69b79c1"))
wordAxisTitle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct wordChartCharacters * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlChartElementPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlChartElementPosition prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("c04865a3-9f8a-486c-bb58-b4c3e6563136"))
wordDisplayUnitLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT Length,
        /*[out,retval]*/ struct wordChartCharacters * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct wordChartFont * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AutoScaleFont (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AutoScaleFont (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeInLayout (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeInLayout (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum wordXlChartElementPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum wordXlChartElementPosition prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1 (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1 (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormulaR1C1Local (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FormulaR1C1Local (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("7ebc66bd-f788-42c3-91f4-e8c841a69005"))
wordAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AxisBetweenCategories (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AxisBetweenCategories (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AxisGroup (
        /*[out,retval]*/ enum wordXlAxisGroup * prop ) = 0;
      virtual HRESULT __stdcall get_wordAxisTitle (
        /*[out,retval]*/ struct wordAxisTitle * * prop ) = 0;
      virtual HRESULT __stdcall get_CategoryNames (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_CategoryNames (
        /*[in]*/ VARIANT prop ) = 0;
      virtual HRESULT __stdcall get_Crosses (
        /*[out,retval]*/ enum wordXlAxisCrosses * prop ) = 0;
      virtual HRESULT __stdcall put_Crosses (
        /*[in]*/ enum wordXlAxisCrosses prop ) = 0;
      virtual HRESULT __stdcall get_CrossesAt (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_CrossesAt (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_HasMajorGridlines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasMajorGridlines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasMinorGridlines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasMinorGridlines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasTitle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasTitle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MajorGridlines (
        /*[out,retval]*/ struct wordGridlines * * prop ) = 0;
      virtual HRESULT __stdcall get_MajorTickMark (
        /*[out,retval]*/ enum wordXlTickMark * prop ) = 0;
      virtual HRESULT __stdcall put_MajorTickMark (
        /*[in]*/ enum wordXlTickMark prop ) = 0;
      virtual HRESULT __stdcall get_MajorUnit (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_MajorUnit (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_LogBase (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_LogBase (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_TickLabelSpacingIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TickLabelSpacingIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MajorUnitIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MajorUnitIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MaximumScale (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_MaximumScale (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_MaximumScaleIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MaximumScaleIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MinimumScale (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_MinimumScale (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_MinimumScaleIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MinimumScaleIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MinorGridlines (
        /*[out,retval]*/ struct wordGridlines * * prop ) = 0;
      virtual HRESULT __stdcall get_MinorTickMark (
        /*[out,retval]*/ enum wordXlTickMark * prop ) = 0;
      virtual HRESULT __stdcall put_MinorTickMark (
        /*[in]*/ enum wordXlTickMark prop ) = 0;
      virtual HRESULT __stdcall get_MinorUnit (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_MinorUnit (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_MinorUnitIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MinorUnitIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReversePlotOrder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReversePlotOrder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ScaleType (
        /*[out,retval]*/ enum wordXlScaleType * prop ) = 0;
      virtual HRESULT __stdcall put_ScaleType (
        /*[in]*/ enum wordXlScaleType prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_TickLabelPosition (
        /*[out,retval]*/ enum wordXlTickLabelPosition * prop ) = 0;
      virtual HRESULT __stdcall put_TickLabelPosition (
        /*[in]*/ enum wordXlTickLabelPosition prop ) = 0;
      virtual HRESULT __stdcall get_wordTickLabels (
        /*[out,retval]*/ struct wordTickLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_TickLabelSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_TickLabelSpacing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TickMarkSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_TickMarkSpacing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum wordXlAxisType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum wordXlAxisType prop ) = 0;
      virtual HRESULT __stdcall get_BaseUnit (
        /*[out,retval]*/ enum wordXlTimeUnit * prop ) = 0;
      virtual HRESULT __stdcall put_BaseUnit (
        /*[in]*/ enum wordXlTimeUnit prop ) = 0;
      virtual HRESULT __stdcall get_BaseUnitIsAuto (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BaseUnitIsAuto (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MajorUnitScale (
        /*[out,retval]*/ enum wordXlTimeUnit * prop ) = 0;
      virtual HRESULT __stdcall put_MajorUnitScale (
        /*[in]*/ enum wordXlTimeUnit prop ) = 0;
      virtual HRESULT __stdcall get_MinorUnitScale (
        /*[out,retval]*/ enum wordXlTimeUnit * prop ) = 0;
      virtual HRESULT __stdcall put_MinorUnitScale (
        /*[in]*/ enum wordXlTimeUnit prop ) = 0;
      virtual HRESULT __stdcall get_CategoryType (
        /*[out,retval]*/ enum wordXlCategoryType * prop ) = 0;
      virtual HRESULT __stdcall put_CategoryType (
        /*[in]*/ enum wordXlCategoryType prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayUnit (
        /*[out,retval]*/ enum wordXlDisplayUnit * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayUnit (
        /*[in]*/ enum wordXlDisplayUnit prop ) = 0;
      virtual HRESULT __stdcall get_DisplayUnitCustom (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayUnitCustom (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_HasDisplayUnitLabel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasDisplayUnitLabel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordDisplayUnitLabel (
        /*[out,retval]*/ struct wordDisplayUnitLabel * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("354ab591-a217-48b4-99e4-14f58f15667d"))
wordAxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum wordXlAxisType Type,
        /*[in]*/ enum wordXlAxisGroup AxisGroup,
        /*[out,retval]*/ struct wordAxis * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ enum wordXlAxisType Type,
        /*[in]*/ enum wordXlAxisGroup AxisGroup,
        /*[out,retval]*/ struct wordAxis * * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("e598e358-2852-42d4-8775-160bd91b7244"))
UndoRecord : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall StartCustomRecord (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall EndCustomRecord ( ) = 0;
      virtual HRESULT __stdcall get_IsRecordingCustomRecord (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_CustomRecordName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CustomRecordLevel (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("f743edd0-9b97-4b09-89cc-77be19b51481"))
wordProtectedViewWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SourcePath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Edit (
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall ToggleRibbon ( ) = 0;
};

struct __declspec(uuid("fd0a74e8-c719-49f6-ba1b-f6d9839d1ab9"))
wordProtectedViewWindows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordProtectedViewWindow * * prop ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[out,retval]*/ struct wordProtectedViewWindow * * prop ) = 0;
};

enum WdUpdateStyleListBehavior
{
    wdListBehaviorKeepPreviousPattern = 0,
    wdListBehaviorAddBulletsNumbering = 1
};

enum WdApplyQuickStyleSets
{
    wdSessionStartSet = 1,
    wdTemplateSet = 2
};

enum WdLigatures
{
    wdLigaturesNone = 0,
    wdLigaturesStandard = 1,
    wdLigaturesContextual = 2,
    wdLigaturesHistorical = 4,
    wdLigaturesDiscretional = 8,
    wdLigaturesStandardContextual = 3,
    wdLigaturesStandardHistorical = 5,
    wdLigaturesContextualHistorical = 6,
    wdLigaturesStandardDiscretional = 9,
    wdLigaturesContextualDiscretional = 10,
    wdLigaturesHistoricalDiscretional = 12,
    wdLigaturesStandardContextualHistorical = 7,
    wdLigaturesStandardContextualDiscretional = 11,
    wdLigaturesStandardHistoricalDiscretional = 13,
    wdLigaturesContextualHistoricalDiscretional = 14,
    wdLigaturesAll = 15
};

enum WdNumberForm
{
    wdNumberFormDefault = 0,
    wdNumberFormLining = 1,
    wdNumberFormOldStyle = 2
};

enum WdNumberSpacing
{
    wdNumberSpacingDefault = 0,
    wdNumberSpacingProportional = 1,
    wdNumberSpacingTabular = 2
};

enum WdStylisticSet
{
    wdStylisticSetDefault = 0,
    wdStylisticSet01 = 1,
    wdStylisticSet02 = 2,
    wdStylisticSet03 = 4,
    wdStylisticSet04 = 8,
    wdStylisticSet05 = 16,
    wdStylisticSet06 = 32,
    wdStylisticSet07 = 64,
    wdStylisticSet08 = 128,
    wdStylisticSet09 = 256,
    wdStylisticSet10 = 512,
    wdStylisticSet11 = 1024,
    wdStylisticSet12 = 2048,
    wdStylisticSet13 = 4096,
    wdStylisticSet14 = 8192,
    wdStylisticSet15 = 16384,
    wdStylisticSet16 = 32768,
    wdStylisticSet17 = 65536,
    wdStylisticSet18 = 131072,
    wdStylisticSet19 = 262144,
    wdStylisticSet20 = 524288
};

struct __declspec(uuid("00020952-0000-0000-c000-000000000046"))
_Font : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SmallCaps (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SmallCaps (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AllCaps (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllCaps (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_StrikeThrough (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeThrough (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DoubleStrikeThrough (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DoubleStrikeThrough (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Subscript (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Subscript (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Superscript (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Superscript (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ enum WdUnderline * prop ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ enum WdUnderline prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Scaling (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Scaling (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Outline (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Outline (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Emboss (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Emboss (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Kerning (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Kerning (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Engrave (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Engrave (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Animation (
        /*[out,retval]*/ enum WdAnimation * prop ) = 0;
      virtual HRESULT __stdcall put_Animation (
        /*[in]*/ enum WdAnimation prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_EmphasisMark (
        /*[out,retval]*/ enum WdEmphasisMark * prop ) = 0;
      virtual HRESULT __stdcall put_EmphasisMark (
        /*[in]*/ enum WdEmphasisMark prop ) = 0;
      virtual HRESULT __stdcall get_DisableCharacterSpaceGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableCharacterSpaceGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NameFarEast (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameFarEast (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NameAscii (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameAscii (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NameOther (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameOther (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Grow ( ) = 0;
      virtual HRESULT __stdcall Shrink ( ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall SetAsTemplateDefault ( ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_BoldBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BoldBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ItalicBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ItalicBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SizeBi (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SizeBi (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_NameBi (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameBi (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndexBi (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndexBi (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DiacriticColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_DiacriticColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_UnderlineColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_UnderlineColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct wordGlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Glow (
        /*[in]*/ struct wordGlowFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct wordReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Reflection (
        /*[in]*/ struct wordReflectionFormat * prop ) = 0;
      virtual HRESULT __stdcall get_TextShadow (
        /*[out,retval]*/ struct wordShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_TextShadow (
        /*[in]*/ struct wordShadowFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Fill (
        /*[in]*/ struct wordFillFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct wordLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Line (
        /*[in]*/ struct wordLineFormat * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct wordThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ThreeD (
        /*[in]*/ struct wordThreeDFormat * prop ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ struct wordColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Ligatures (
        /*[out,retval]*/ enum WdLigatures * prop ) = 0;
      virtual HRESULT __stdcall put_Ligatures (
        /*[in]*/ enum WdLigatures prop ) = 0;
      virtual HRESULT __stdcall get_NumberForm (
        /*[out,retval]*/ enum WdNumberForm * prop ) = 0;
      virtual HRESULT __stdcall put_NumberForm (
        /*[in]*/ enum WdNumberForm prop ) = 0;
      virtual HRESULT __stdcall get_NumberSpacing (
        /*[out,retval]*/ enum WdNumberSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_NumberSpacing (
        /*[in]*/ enum WdNumberSpacing prop ) = 0;
      virtual HRESULT __stdcall get_ContextualAlternates (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ContextualAlternates (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_StylisticSet (
        /*[out,retval]*/ enum WdStylisticSet * prop ) = 0;
      virtual HRESULT __stdcall put_StylisticSet (
        /*[in]*/ enum WdStylisticSet prop ) = 0;
};

enum WdSpanishSpeller
{
    wdSpanishTuteoOnly = 0,
    wdSpanishTuteoAndVoseo = 1,
    wdSpanishVoseoOnly = 2
};

enum WdLockType
{
    wdLockNone = 0,
    wdLockReservation = 1,
    wdLockEphemeral = 2,
    wdLockChanged = 3
};

enum wordXlPieSliceLocation
{
    xlHorizontalCoordinate = 1,
    xlVerticalCoordinate = 2
};

enum wordXlPieSliceIndex
{
    xlOuterCounterClockwisePoint = 1,
    xlOuterCenterPoint = 2,
    xlOuterClockwisePoint = 3,
    xlMidClockwiseRadiusPoint = 4,
    xlCenterPoint = 5,
    xlMidCounterClockwiseRadiusPoint = 6,
    xlInnerClockwisePoint = 7,
    xlInnerCenterPoint = 8,
    xlInnerCounterClockwisePoint = 9
};

struct __declspec(uuid("8a342fa0-5831-4b5e-82e1-003d0a0c635d"))
wordPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ struct wordChartBorder * * prop ) = 0;
      virtual HRESULT __stdcall ClearFormats (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordDataLabel (
        /*[out,retval]*/ struct wordDataLabel * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Explosion (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Explosion (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HasDataLabel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasDataLabel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordInterior (
        /*[out,retval]*/ struct wordInterior * * prop ) = 0;
      virtual HRESULT __stdcall get_InvertIfNegative (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InvertIfNegative (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerBackgroundColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerBackgroundColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerForegroundColorIndex (
        /*[out,retval]*/ enum wordXlColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerForegroundColorIndex (
        /*[in]*/ enum wordXlColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MarkerSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MarkerStyle (
        /*[out,retval]*/ enum wordXlMarkerStyle * prop ) = 0;
      virtual HRESULT __stdcall put_MarkerStyle (
        /*[in]*/ enum wordXlMarkerStyle prop ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_PictureType (
        /*[out,retval]*/ enum wordXlChartPictureType * prop ) = 0;
      virtual HRESULT __stdcall put_PictureType (
        /*[in]*/ enum wordXlChartPictureType prop ) = 0;
      virtual HRESULT __stdcall get_PictureUnit (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToSides (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToSides (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToFront (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToFront (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyPictToEnd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyPictToEnd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SecondaryPlot (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SecondaryPlot (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordChartFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall ApplyDataLabels (
        /*[in]*/ enum wordXlDataLabelsType Type,
        /*[in]*/ VARIANT wordLegendKey,
        /*[in]*/ VARIANT AutoText,
        /*[in]*/ VARIANT HasLeaderLines,
        /*[in]*/ VARIANT ShowSeriesName,
        /*[in]*/ VARIANT ShowCategoryName,
        /*[in]*/ VARIANT ShowValue,
        /*[in]*/ VARIANT ShowPercentage,
        /*[in]*/ VARIANT ShowBubbleSize,
        /*[in]*/ VARIANT Separator,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Has3DEffect (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Has3DEffect (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct wordChartFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PictureUnit2 (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall put_PictureUnit2 (
        /*[in]*/ double prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ double * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall PieSliceLocation (
        /*[in]*/ enum wordXlPieSliceLocation loc,
        /*[in]*/ enum wordXlPieSliceIndex Index,
        /*[out,retval]*/ double * prop ) = 0;
};

struct __declspec(uuid("c1a870a0-850e-4d38-98a7-741cb8c3bca4"))
wordPoints : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordPoint * * prop ) = 0;
      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall _Default (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordPoint * * prop ) = 0;
};

enum WdCompatibilityMode
{
    wdWord2003 = 11,
    wdWord2007 = 12,
    wdWord2010 = 14,
    wdCurrent = 65535
};

enum WdProtectedViewCloseReason
{
    wdProtectedViewCloseNormal = 0,
    wdProtectedViewCloseEdit = 1,
    wdProtectedViewCloseForced = 2
};

enum WdPortugueseReform
{
    wdPortuguesePreReform = 1,
    wdPortuguesePostReform = 2,
    wdPortugueseBoth = 3
};

struct __declspec(uuid("000209b7-0000-0000-c000-000000000046"))
wordOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AllowAccentedUppercase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowAccentedUppercase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WPHelp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WPHelp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WPDocNavKeys (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WPDocNavKeys (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Pagination (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Pagination (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BlueScreen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BlueScreen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableSound (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableSound (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ConfirmConversions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ConfirmConversions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksAtOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksAtOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SendMailAttach (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SendMailAttach (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MeasurementUnit (
        /*[out,retval]*/ enum WdMeasurementUnits * prop ) = 0;
      virtual HRESULT __stdcall put_MeasurementUnit (
        /*[in]*/ enum WdMeasurementUnits prop ) = 0;
      virtual HRESULT __stdcall get_ButtonFieldClicks (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ButtonFieldClicks (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShortMenuNames (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShortMenuNames (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RTFInClipboard (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RTFInClipboard (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateFieldsAtPrint (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateFieldsAtPrint (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintProperties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintProperties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintFieldCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintFieldCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintHiddenText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintHiddenText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnvelopeFeederInstalled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksAtPrint (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksAtPrint (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintBackground (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintBackground (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintDrawingObjects (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintDrawingObjects (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTray (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTray (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTrayID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTrayID (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_CreateBackup (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CreateBackup (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowFastSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowFastSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SavePropertiesPrompt (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SavePropertiesPrompt (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveNormalPrompt (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveNormalPrompt (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveInterval (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SaveInterval (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InsertedTextMark (
        /*[out,retval]*/ enum WdInsertedTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_InsertedTextMark (
        /*[in]*/ enum WdInsertedTextMark prop ) = 0;
      virtual HRESULT __stdcall get_DeletedTextMark (
        /*[out,retval]*/ enum WdDeletedTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_DeletedTextMark (
        /*[in]*/ enum WdDeletedTextMark prop ) = 0;
      virtual HRESULT __stdcall get_RevisedLinesMark (
        /*[out,retval]*/ enum WdRevisedLinesMark * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedLinesMark (
        /*[in]*/ enum WdRevisedLinesMark prop ) = 0;
      virtual HRESULT __stdcall get_InsertedTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_InsertedTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DeletedTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_DeletedTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_RevisedLinesColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedLinesColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DefaultFilePath (
        /*[in]*/ enum WdDefaultFilePath Path,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultFilePath (
        /*[in]*/ enum WdDefaultFilePath Path,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Overtype (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Overtype (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReplaceSelection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReplaceSelection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowDragAndDrop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowDragAndDrop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoWordSelection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoWordSelection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_INSKeyForPaste (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_INSKeyForPaste (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartCutPaste (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartCutPaste (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TabIndentKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TabIndentKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PictureEditor (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PictureEditor (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_AnimateScreenMovements (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AnimateScreenMovements (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_VirusProtection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_VirusProtection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RevisedPropertiesMark (
        /*[out,retval]*/ enum WdRevisedPropertiesMark * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedPropertiesMark (
        /*[in]*/ enum WdRevisedPropertiesMark prop ) = 0;
      virtual HRESULT __stdcall get_RevisedPropertiesColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedPropertiesColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_SnapToGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SnapToShapes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToShapes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_InlineConversion (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InlineConversion (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IMEAutomaticControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IMEAutomaticControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyHeadings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyHeadings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyBulletedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyBulletedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyOtherParas (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyOtherParas (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceQuotes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceQuotes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceSymbols (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceSymbols (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceOrdinals (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceOrdinals (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceFractions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceFractions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplacePlainTextEmphasis (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplacePlainTextEmphasis (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatPreserveStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatPreserveStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyHeadings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyHeadings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBulletedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBulletedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyNumberedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyNumberedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceQuotes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceQuotes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceSymbols (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceSymbols (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceOrdinals (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceOrdinals (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFractions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFractions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDefineStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDefineStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatPlainTextWordMail (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatPlainTextWordMail (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultHighlightColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultHighlightColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderLineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderLineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_CheckSpellingAsYouType (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckSpellingAsYouType (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckGrammarAsYouType (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckGrammarAsYouType (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreInternetAndFileAddresses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreInternetAndFileAddresses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowReadabilityStatistics (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowReadabilityStatistics (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreUppercase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreUppercase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreMixedDigits (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreMixedDigits (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SuggestFromMainDictionaryOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SuggestFromMainDictionaryOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SuggestSpellingCorrections (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SuggestSpellingCorrections (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderLineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderLineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_CheckGrammarWithSpelling (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckGrammarWithSpelling (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultOpenFormat (
        /*[out,retval]*/ enum WdOpenFormat * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultOpenFormat (
        /*[in]*/ enum WdOpenFormat prop ) = 0;
      virtual HRESULT __stdcall get_PrintDraft (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintDraft (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintReverse (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintReverse (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MapPaperSize (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MapPaperSize (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyTables (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyTables (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyFirstIndents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyFirstIndents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatMatchParentheses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatMatchParentheses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceFarEastDashes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceFarEastDashes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatDeleteAutoSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatDeleteAutoSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyFirstIndents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyFirstIndents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyDates (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyDates (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeMatchParentheses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeMatchParentheses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeAutoLetterWizard (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeAutoLetterWizard (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertOvers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertOvers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayGridLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayGridLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyCase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyCase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyByte (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyByte (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyHiragana (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyHiragana (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzySmallKana (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzySmallKana (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyDash (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyDash (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyIterationMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyIterationMark (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyKanji (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyKanji (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyOldKana (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyOldKana (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyProlongedSoundMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyProlongedSoundMark (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyDZ (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyDZ (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyBV (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyBV (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyTC (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyTC (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyHF (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyHF (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyZJ (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyZJ (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyAY (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyAY (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyKiKu (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyKiKu (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyPunctuation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyPunctuation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzySpace (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzySpace (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyFarEastFontsToAscii (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyFarEastFontsToAscii (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ConvertHighAnsiToFarEast (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ConvertHighAnsiToFarEast (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintOddPagesInAscendingOrder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintOddPagesInAscendingOrder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintEvenPagesInAscendingOrder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintEvenPagesInAscendingOrder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_EnableMisusedWordsDictionary (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableMisusedWordsDictionary (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowCombinedAuxiliaryForms (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowCombinedAuxiliaryForms (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HangulHanjaFastConversion (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HangulHanjaFastConversion (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckHangulEndings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckHangulEndings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableHangulHanjaRecentOrdering (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableHangulHanjaRecentOrdering (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MultipleWordConversionsMode (
        /*[out,retval]*/ enum WdMultipleWordConversionsMode * prop ) = 0;
      virtual HRESULT __stdcall put_MultipleWordConversionsMode (
        /*[in]*/ enum WdMultipleWordConversionsMode prop ) = 0;
      virtual HRESULT __stdcall SetWPHelpOptions (
        /*[in]*/ VARIANT * CommandKeyHelp = &vtMissing,
        /*[in]*/ VARIANT * DocNavigationKeys = &vtMissing,
        /*[in]*/ VARIANT * MouseSimulation = &vtMissing,
        /*[in]*/ VARIANT * DemoGuidance = &vtMissing,
        /*[in]*/ VARIANT * DemoSpeed = &vtMissing,
        /*[in]*/ VARIANT * HelpType = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_AllowPixelUnits (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPixelUnits (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseCharacterUnit (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseCharacterUnit (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowCompoundNounProcessing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowCompoundNounProcessing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoKeyboardSwitching (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoKeyboardSwitching (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DocumentViewDirection (
        /*[out,retval]*/ enum WdDocumentViewDirection * prop ) = 0;
      virtual HRESULT __stdcall put_DocumentViewDirection (
        /*[in]*/ enum WdDocumentViewDirection prop ) = 0;
      virtual HRESULT __stdcall get_ArabicNumeral (
        /*[out,retval]*/ enum WdArabicNumeral * prop ) = 0;
      virtual HRESULT __stdcall put_ArabicNumeral (
        /*[in]*/ enum WdArabicNumeral prop ) = 0;
      virtual HRESULT __stdcall get_MonthNames (
        /*[out,retval]*/ enum WdMonthNames * prop ) = 0;
      virtual HRESULT __stdcall put_MonthNames (
        /*[in]*/ enum WdMonthNames prop ) = 0;
      virtual HRESULT __stdcall get_CursorMovement (
        /*[out,retval]*/ enum WdCursorMovement * prop ) = 0;
      virtual HRESULT __stdcall put_CursorMovement (
        /*[in]*/ enum WdCursorMovement prop ) = 0;
      virtual HRESULT __stdcall get_VisualSelection (
        /*[out,retval]*/ enum WdVisualSelection * prop ) = 0;
      virtual HRESULT __stdcall put_VisualSelection (
        /*[in]*/ enum WdVisualSelection prop ) = 0;
      virtual HRESULT __stdcall get_ShowDiacritics (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDiacritics (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowControlCharacters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowControlCharacters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AddControlCharacters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AddControlCharacters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AddBiDirectionalMarksWhenSavingTextFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AddBiDirectionalMarksWhenSavingTextFile (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrictInitialAlefHamza (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrictInitialAlefHamza (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrictFinalYaa (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrictFinalYaa (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HebrewMode (
        /*[out,retval]*/ enum WdHebSpellStart * prop ) = 0;
      virtual HRESULT __stdcall put_HebrewMode (
        /*[in]*/ enum WdHebSpellStart prop ) = 0;
      virtual HRESULT __stdcall get_ArabicMode (
        /*[out,retval]*/ enum WdAraSpeller * prop ) = 0;
      virtual HRESULT __stdcall put_ArabicMode (
        /*[in]*/ enum WdAraSpeller prop ) = 0;
      virtual HRESULT __stdcall get_AllowClickAndTypeMouse (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowClickAndTypeMouse (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseGermanSpellingReform (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseGermanSpellingReform (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InterpretHighAnsi (
        /*[out,retval]*/ enum WdHighAnsiText * prop ) = 0;
      virtual HRESULT __stdcall put_InterpretHighAnsi (
        /*[in]*/ enum WdHighAnsiText prop ) = 0;
      virtual HRESULT __stdcall get_AddHebDoubleQuote (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AddHebDoubleQuote (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseDiffDiacColor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseDiffDiacColor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DiacriticColorVal (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_DiacriticColorVal (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForWord97byDefault (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForWord97byDefault (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LocalNetworkFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LocalNetworkFile (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TypeNReplace (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TypeNReplace (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SequenceCheck (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SequenceCheck (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeaturesbyDefault (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeaturesbyDefault (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteAdjustWordSpacing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteAdjustWordSpacing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteAdjustParagraphSpacing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteAdjustParagraphSpacing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteAdjustTableFormatting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteAdjustTableFormatting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteSmartStyleBehavior (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteSmartStyleBehavior (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteMergeFromPPT (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteMergeFromPPT (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteMergeFromXL (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteMergeFromXL (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CtrlClickHyperlinkToOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CtrlClickHyperlinkToOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PictureWrapType (
        /*[out,retval]*/ enum WdWrapTypeMerged * prop ) = 0;
      virtual HRESULT __stdcall put_PictureWrapType (
        /*[in]*/ enum WdWrapTypeMerged prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeaturesIntroducedAfterbyDefault (
        /*[out,retval]*/ enum WdDisableFeaturesIntroducedAfter * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeaturesIntroducedAfterbyDefault (
        /*[in]*/ enum WdDisableFeaturesIntroducedAfter prop ) = 0;
      virtual HRESULT __stdcall get_PasteSmartCutPaste (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteSmartCutPaste (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayPasteOptions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayPasteOptions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PromptUpdateStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PromptUpdateStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultEPostageApp (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultEPostageApp (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTextEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTextEncoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_LabelSmartTags (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LabelSmartTags (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplaySmartTagButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplaySmartTagButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WarnBeforeSavingPrintingSendingMarkup (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WarnBeforeSavingPrintingSendingMarkup (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StoreRSIDOnSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StoreRSIDOnSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFormatError (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFormatError (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormatScanning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormatScanning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteMergeLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteMergeLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoCreateNewDrawings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoCreateNewDrawings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartParaSelection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartParaSelection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonPrintOrientation (
        /*[out,retval]*/ enum WdRevisionsBalloonPrintOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonPrintOrientation (
        /*[in]*/ enum WdRevisionsBalloonPrintOrientation prop ) = 0;
      virtual HRESULT __stdcall get_CommentsColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_CommentsColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_PrintXMLTag (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintXMLTag (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintBackgrounds (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintBackgrounds (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowReadingMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowReadingMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowMarkupOpenSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMarkupOpenSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartCursoring (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartCursoring (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MoveToTextMark (
        /*[out,retval]*/ enum WdMoveToTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_MoveToTextMark (
        /*[in]*/ enum WdMoveToTextMark prop ) = 0;
      virtual HRESULT __stdcall get_MoveFromTextMark (
        /*[out,retval]*/ enum WdMoveFromTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_MoveFromTextMark (
        /*[in]*/ enum WdMoveFromTextMark prop ) = 0;
      virtual HRESULT __stdcall get_BibliographyStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BibliographyStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_BibliographySort (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BibliographySort (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_InsertedCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_InsertedCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_DeletedCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_DeletedCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_MergedCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_MergedCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_SplitCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_SplitCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_ShowSelectionFloaties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSelectionFloaties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowMenuFloaties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMenuFloaties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowDevTools (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDevTools (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableLivePreview (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableLivePreview (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathAutoBuildUp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathAutoBuildUp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AlwaysUseClearType (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlwaysUseClearType (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatWithinDocument (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatWithinDocument (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatBetweenDocuments (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatBetweenDocuments (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatBetweenStyledDocuments (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatBetweenStyledDocuments (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatFromExternalSource (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatFromExternalSource (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteOptionKeepBulletsAndNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteOptionKeepBulletsAndNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_INSKeyForOvertype (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_INSKeyForOvertype (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RepeatWord (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RepeatWord (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FrenchReform (
        /*[out,retval]*/ enum WdFrenchSpeller * prop ) = 0;
      virtual HRESULT __stdcall put_FrenchReform (
        /*[in]*/ enum WdFrenchSpeller prop ) = 0;
      virtual HRESULT __stdcall get_ContextualSpeller (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ContextualSpeller (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MoveToTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MoveToTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MoveFromTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MoveFromTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_OMathCopyLF (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathCopyLF (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseNormalStyleForList (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseNormalStyleForList (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowOpenInDraftView (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowOpenInDraftView (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableLegacyIMEMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableLegacyIMEMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DoNotPromptForConvert (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DoNotPromptForConvert (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrecisePositioning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrecisePositioning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateStyleListBehavior (
        /*[out,retval]*/ enum WdUpdateStyleListBehavior * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateStyleListBehavior (
        /*[in]*/ enum WdUpdateStyleListBehavior prop ) = 0;
      virtual HRESULT __stdcall get_StrictTaaMarboota (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrictTaaMarboota (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrictRussianE (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrictRussianE (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpanishMode (
        /*[out,retval]*/ enum WdSpanishSpeller * prop ) = 0;
      virtual HRESULT __stdcall put_SpanishMode (
        /*[in]*/ enum WdSpanishSpeller prop ) = 0;
      virtual HRESULT __stdcall get_PortugalReform (
        /*[out,retval]*/ enum WdPortugueseReform * prop ) = 0;
      virtual HRESULT __stdcall put_PortugalReform (
        /*[in]*/ enum WdPortugueseReform prop ) = 0;
      virtual HRESULT __stdcall get_BrazilReform (
        /*[out,retval]*/ enum WdPortugueseReform * prop ) = 0;
      virtual HRESULT __stdcall put_BrazilReform (
        /*[in]*/ enum WdPortugueseReform prop ) = 0;
      virtual HRESULT __stdcall get_UpdateFieldsWithTrackedChangesAtPrint (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateFieldsWithTrackedChangesAtPrint (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020970-0000-0000-c000-000000000046"))
_wordApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct Documents * * prop ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_wordSelection (
        /*[out,retval]*/ struct wordSelection * * prop ) = 0;
      virtual HRESULT __stdcall get_WordBasic (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RecentFiles (
        /*[out,retval]*/ struct RecentFiles * * prop ) = 0;
      virtual HRESULT __stdcall get_NormalTemplate (
        /*[out,retval]*/ struct Template * * prop ) = 0;
      virtual HRESULT __stdcall get_System (
        /*[out,retval]*/ struct System * * prop ) = 0;
      virtual HRESULT __stdcall get_wordAutoCorrect (
        /*[out,retval]*/ struct wordAutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFontNames (
        /*[out,retval]*/ struct wordFontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_LandscapeFontNames (
        /*[out,retval]*/ struct wordFontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_PortraitFontNames (
        /*[out,retval]*/ struct wordFontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_Languages (
        /*[out,retval]*/ struct Languages * * prop ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * prop ) = 0;
      virtual HRESULT __stdcall get_Browser (
        /*[out,retval]*/ struct Browser * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFileConverters (
        /*[out,retval]*/ struct wordFileConverters * * prop ) = 0;
      virtual HRESULT __stdcall get_MailingLabel (
        /*[out,retval]*/ struct MailingLabel * * prop ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ struct Dialogs * * prop ) = 0;
      virtual HRESULT __stdcall get_CaptionLabels (
        /*[out,retval]*/ struct CaptionLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCaptions (
        /*[out,retval]*/ struct AutoCaptions * * prop ) = 0;
      virtual HRESULT __stdcall get_wordAddIns (
        /*[out,retval]*/ struct wordAddIns * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ScreenUpdating (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenUpdating (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintPreview (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintPreview (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Tasks (
        /*[out,retval]*/ struct Tasks * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayStatusBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayStatusBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpecialMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_MathCoprocessorAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_MouseAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_International (
        /*[in]*/ enum WdInternationalIndex Index,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Build (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CapsLock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_NumLock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UserInitials (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_UserInitials (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UserAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_UserAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MacroContainer (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRecentFiles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRecentFiles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * prop ) = 0;
      virtual HRESULT __stdcall get_SynonymInfo (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * LanguageID,
        /*[out,retval]*/ struct SynonymInfo * * prop ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ struct VBIDE::VBE * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultSaveFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultSaveFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ListGalleries (
        /*[out,retval]*/ struct ListGalleries * * prop ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Templates (
        /*[out,retval]*/ struct Templates * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomizationContext (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall put_CustomizationContext (
        /*[in]*/ IDispatch * prop ) = 0;
      virtual HRESULT __stdcall get_KeyBindings (
        /*[out,retval]*/ struct KeyBindings * * prop ) = 0;
      virtual HRESULT __stdcall get_KeysBoundTo (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ VARIANT * CommandParameter,
        /*[out,retval]*/ struct KeysBoundTo * * prop ) = 0;
      virtual HRESULT __stdcall get_FindKey (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayScrollBars (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayScrollBars (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StartupPath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_StartupPath (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundSavingStatus (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundPrintingStatus (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAutoCompleteTips (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoCompleteTips (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordOptions (
        /*[out,retval]*/ struct wordOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAlerts (
        /*[out,retval]*/ enum WdAlertLevel * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAlerts (
        /*[in]*/ enum WdAlertLevel prop ) = 0;
      virtual HRESULT __stdcall get_CustomDictionaries (
        /*[out,retval]*/ struct Dictionaries * * prop ) = 0;
      virtual HRESULT __stdcall get_PathSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_MAPIAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayScreenTips (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayScreenTips (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableCancelKey (
        /*[out,retval]*/ enum WdEnableCancelKey * prop ) = 0;
      virtual HRESULT __stdcall put_EnableCancelKey (
        /*[in]*/ enum WdEnableCancelKey prop ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_FileSearch (
        /*[out,retval]*/ struct Office::FileSearch * * prop ) = 0;
      virtual HRESULT __stdcall get_MailSystem (
        /*[out,retval]*/ enum WdMailSystem * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTableSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTableSeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ShowVisualBasicEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowVisualBasicEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowseExtraFileTypes (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BrowseExtraFileTypes (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IsObjectValid (
        /*[in]*/ IDispatch * Object,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HangulHanjaDictionaries (
        /*[out,retval]*/ struct HangulHanjaConversionDictionaries * * prop ) = 0;
      virtual HRESULT __stdcall get_MailMessage (
        /*[out,retval]*/ struct MailMessage * * prop ) = 0;
      virtual HRESULT __stdcall get_FocusInMailHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Quit (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall ScreenRefresh ( ) = 0;
      virtual HRESULT __stdcall PrintOutOld (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing ) = 0;
      virtual HRESULT __stdcall LookupNameProperties (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall SubstituteFont (
        /*[in]*/ BSTR UnavailableFont,
        /*[in]*/ BSTR SubstituteFont ) = 0;
      virtual HRESULT __stdcall Repeat (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall DDEExecute (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Command ) = 0;
      virtual HRESULT __stdcall DDEInitiate (
        /*[in]*/ BSTR App,
        /*[in]*/ BSTR Topic,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall DDEPoke (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR Data ) = 0;
      virtual HRESULT __stdcall DDERequest (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall DDETerminate (
        /*[in]*/ long Channel ) = 0;
      virtual HRESULT __stdcall DDETerminateAll ( ) = 0;
      virtual HRESULT __stdcall BuildKeyCode (
        /*[in]*/ enum WdKey Arg1,
        /*[in]*/ VARIANT * Arg2,
        /*[in]*/ VARIANT * Arg3,
        /*[in]*/ VARIANT * Arg4,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall KeyString (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall OrganizerCopy (
        /*[in]*/ BSTR Source,
        /*[in]*/ BSTR Destination,
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdOrganizerObject Object ) = 0;
      virtual HRESULT __stdcall OrganizerDelete (
        /*[in]*/ BSTR Source,
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdOrganizerObject Object ) = 0;
      virtual HRESULT __stdcall OrganizerRename (
        /*[in]*/ BSTR Source,
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ enum WdOrganizerObject Object ) = 0;
      virtual HRESULT __stdcall AddAddress (
        /*[in]*/ SAFEARRAY * * TagID,
        /*[in]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall GetAddress (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * AddressProperties,
        /*[in]*/ VARIANT * UseAutoText,
        /*[in]*/ VARIANT * DisplaySelectDialog,
        /*[in]*/ VARIANT * SelectDialog,
        /*[in]*/ VARIANT * CheckNamesDialog,
        /*[in]*/ VARIANT * RecentAddressesChoice,
        /*[in]*/ VARIANT * UpdateRecentAddresses,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall CheckGrammar (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall ResetIgnoreAll ( ) = 0;
      virtual HRESULT __stdcall GetSpellingSuggestions (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * SuggestionMode,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ struct SpellingSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall GoBack ( ) = 0;
      virtual HRESULT __stdcall Help (
        /*[in]*/ VARIANT * HelpType ) = 0;
      virtual HRESULT __stdcall AutomaticChange ( ) = 0;
      virtual HRESULT __stdcall ShowMe ( ) = 0;
      virtual HRESULT __stdcall HelpTool ( ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall ListCommands (
        /*[in]*/ VARIANT_BOOL ListAllCommands ) = 0;
      virtual HRESULT __stdcall ShowClipboard ( ) = 0;
      virtual HRESULT __stdcall OnTime (
        /*[in]*/ VARIANT * When,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Tolerance = &vtMissing ) = 0;
      virtual HRESULT __stdcall NextLetter ( ) = 0;
      virtual HRESULT __stdcall MountVolume (
        /*[in]*/ BSTR Zone,
        /*[in]*/ BSTR Server,
        /*[in]*/ BSTR Volume,
        /*[in]*/ VARIANT * User,
        /*[in]*/ VARIANT * UserPassword,
        /*[in]*/ VARIANT * VolumePassword,
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall CleanString (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall SendFax ( ) = 0;
      virtual HRESULT __stdcall ChangeFileOpenDirectory (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall RunOld (
        /*[in]*/ BSTR MacroName ) = 0;
      virtual HRESULT __stdcall GoForward ( ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ long Left,
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall Resize (
        /*[in]*/ long Width,
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall InchesToPoints (
        /*[in]*/ float Inches,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall CentimetersToPoints (
        /*[in]*/ float Centimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall MillimetersToPoints (
        /*[in]*/ float Millimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PicasToPoints (
        /*[in]*/ float Picas,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall LinesToPoints (
        /*[in]*/ float Lines,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToInches (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToCentimeters (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToMillimeters (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToPicas (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToLines (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall PointsToPixels (
        /*[in]*/ float wordPoints,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PixelsToPoints (
        /*[in]*/ float Pixels,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall KeyboardLatin ( ) = 0;
      virtual HRESULT __stdcall KeyboardBidi ( ) = 0;
      virtual HRESULT __stdcall ToggleKeyboard ( ) = 0;
      virtual HRESULT __stdcall Keyboard (
        /*[in]*/ long LangId,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall ProductCode (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall wordDefaultWebOptions (
        /*[out,retval]*/ struct wordDefaultWebOptions * * prop ) = 0;
      virtual HRESULT __stdcall DiscussionSupport (
        /*[in]*/ VARIANT * Range,
        /*[in]*/ VARIANT * cid,
        /*[in]*/ VARIANT * piCSE ) = 0;
      virtual HRESULT __stdcall SetDefaultTheme (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdDocumentMedium DocumentType ) = 0;
      virtual HRESULT __stdcall GetDefaultTheme (
        /*[in]*/ enum WdDocumentMedium DocumentType,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_EmailOptions (
        /*[out,retval]*/ struct EmailOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ enum Office::MsoLanguageID * prop ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ struct Office::COMAddIns * * prop ) = 0;
      virtual HRESULT __stdcall get_CheckLanguage (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckLanguage (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * prop ) = 0;
      virtual HRESULT __stdcall get_FeatureInstall (
        /*[out,retval]*/ enum Office::MsoFeatureInstall * prop ) = 0;
      virtual HRESULT __stdcall put_FeatureInstall (
        /*[in]*/ enum Office::MsoFeatureInstall prop ) = 0;
      virtual HRESULT __stdcall PrintOut2000 (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall Run (
        /*[in]*/ BSTR MacroName,
        /*[in]*/ VARIANT * varg1,
        /*[in]*/ VARIANT * varg2,
        /*[in]*/ VARIANT * varg3,
        /*[in]*/ VARIANT * varg4,
        /*[in]*/ VARIANT * varg5,
        /*[in]*/ VARIANT * varg6,
        /*[in]*/ VARIANT * varg7,
        /*[in]*/ VARIANT * varg8,
        /*[in]*/ VARIANT * varg9,
        /*[in]*/ VARIANT * varg10,
        /*[in]*/ VARIANT * varg11,
        /*[in]*/ VARIANT * varg12,
        /*[in]*/ VARIANT * varg13,
        /*[in]*/ VARIANT * varg14,
        /*[in]*/ VARIANT * varg15,
        /*[in]*/ VARIANT * varg16,
        /*[in]*/ VARIANT * varg17,
        /*[in]*/ VARIANT * varg18,
        /*[in]*/ VARIANT * varg19,
        /*[in]*/ VARIANT * varg20,
        /*[in]*/ VARIANT * varg21,
        /*[in]*/ VARIANT * varg22,
        /*[in]*/ VARIANT * varg23,
        /*[in]*/ VARIANT * varg24,
        /*[in]*/ VARIANT * varg25,
        /*[in]*/ VARIANT * varg26,
        /*[in]*/ VARIANT * varg27,
        /*[in]*/ VARIANT * varg28,
        /*[in]*/ VARIANT * varg29,
        /*[in]*/ VARIANT * varg30,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_AutomationSecurity (
        /*[out,retval]*/ enum Office::MsoAutomationSecurity * prop ) = 0;
      virtual HRESULT __stdcall put_AutomationSecurity (
        /*[in]*/ enum Office::MsoAutomationSecurity prop ) = 0;
      virtual HRESULT __stdcall get_FileDialog (
        /*[in]*/ enum Office::MsoFileDialogType FileDialogType,
        /*[out,retval]*/ struct Office::FileDialog * * prop ) = 0;
      virtual HRESULT __stdcall get_EmailTemplate (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EmailTemplate (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ShowWindowsInTaskbar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowWindowsInTaskbar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NewDocument (
        /*[out,retval]*/ struct Office::NewFile * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowStartupDialog (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowStartupDialog (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoCorrectEmail (
        /*[out,retval]*/ struct wordAutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_TaskPanes (
        /*[out,retval]*/ struct TaskPanes * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultLegalBlackline (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultLegalBlackline (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Dummy2 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagRecognizers (
        /*[out,retval]*/ struct SmartTagRecognizers * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagTypes (
        /*[out,retval]*/ struct SmartTagTypes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLNamespaces (
        /*[out,retval]*/ struct XMLNamespaces * * prop ) = 0;
      virtual HRESULT __stdcall PutFocusInMailHeader ( ) = 0;
      virtual HRESULT __stdcall get_ArbitraryXMLSupportAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_BuildFull (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuildFeatureCrew (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall LoadMasterList (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall CompareDocuments (
        /*[in]*/ struct _Document * OriginalDocument,
        /*[in]*/ struct _Document * RevisedDocument,
        /*[in]*/ enum WdCompareDestination Destination,
        /*[in]*/ enum WdGranularity Granularity,
        /*[in]*/ VARIANT_BOOL CompareFormatting,
        /*[in]*/ VARIANT_BOOL CompareCaseChanges,
        /*[in]*/ VARIANT_BOOL CompareWhitespace,
        /*[in]*/ VARIANT_BOOL CompareTables,
        /*[in]*/ VARIANT_BOOL CompareHeaders,
        /*[in]*/ VARIANT_BOOL CompareFootnotes,
        /*[in]*/ VARIANT_BOOL CompareTextboxes,
        /*[in]*/ VARIANT_BOOL CompareFields,
        /*[in]*/ VARIANT_BOOL CompareComments,
        /*[in]*/ VARIANT_BOOL CompareMoves,
        /*[in]*/ BSTR RevisedAuthor,
        /*[in]*/ VARIANT_BOOL IgnoreAllComparisonWarnings,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall MergeDocuments (
        /*[in]*/ struct _Document * OriginalDocument,
        /*[in]*/ struct _Document * RevisedDocument,
        /*[in]*/ enum WdCompareDestination Destination,
        /*[in]*/ enum WdGranularity Granularity,
        /*[in]*/ VARIANT_BOOL CompareFormatting,
        /*[in]*/ VARIANT_BOOL CompareCaseChanges,
        /*[in]*/ VARIANT_BOOL CompareWhitespace,
        /*[in]*/ VARIANT_BOOL CompareTables,
        /*[in]*/ VARIANT_BOOL CompareHeaders,
        /*[in]*/ VARIANT_BOOL CompareFootnotes,
        /*[in]*/ VARIANT_BOOL CompareTextboxes,
        /*[in]*/ VARIANT_BOOL CompareFields,
        /*[in]*/ VARIANT_BOOL CompareComments,
        /*[in]*/ VARIANT_BOOL CompareMoves,
        /*[in]*/ BSTR OriginalAuthor,
        /*[in]*/ BSTR RevisedAuthor,
        /*[in]*/ enum WdMergeFormatFrom FormatFrom,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_Bibliography (
        /*[out,retval]*/ struct Bibliography * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowStylePreviews (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowStylePreviews (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RestrictLinkedStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RestrictLinkedStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathAutoCorrect (
        /*[out,retval]*/ struct OMathAutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayDocumentInformationPanel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayDocumentInformationPanel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Assistance (
        /*[out,retval]*/ struct Office::IAssistance * * prop ) = 0;
      virtual HRESULT __stdcall get_OpenAttachmentsInFullScreen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OpenAttachmentsInFullScreen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ActiveEncryptionSession (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DontResetInsertionPointProperties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DontResetInsertionPointProperties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartArtLayouts (
        /*[out,retval]*/ struct Office::SmartArtLayouts * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartArtQuickStyles (
        /*[out,retval]*/ struct Office::SmartArtQuickStyles * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartArtColors (
        /*[out,retval]*/ struct Office::SmartArtColors * * prop ) = 0;
      virtual HRESULT __stdcall ThreeWayMerge (
        /*[in]*/ struct _Document * LocalDocument,
        /*[in]*/ struct _Document * ServerDocument,
        /*[in]*/ struct _Document * BaseDocument,
        /*[in]*/ VARIANT_BOOL FavorSource ) = 0;
      virtual HRESULT __stdcall Dummy4 ( ) = 0;
      virtual HRESULT __stdcall get_UndoRecord (
        /*[out,retval]*/ struct UndoRecord * * prop ) = 0;
      virtual HRESULT __stdcall get_PickerDialog (
        /*[out,retval]*/ struct Office::PickerDialog * * prop ) = 0;
      virtual HRESULT __stdcall get_wordProtectedViewWindows (
        /*[out,retval]*/ struct wordProtectedViewWindows * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveProtectedViewWindow (
        /*[out,retval]*/ struct wordProtectedViewWindow * * prop ) = 0;
      virtual HRESULT __stdcall get_IsSandboxed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_FileValidation (
        /*[out,retval]*/ enum Office::MsoFileValidationMode * prop ) = 0;
      virtual HRESULT __stdcall put_FileValidation (
        /*[in]*/ enum Office::MsoFileValidationMode prop ) = 0;
};

struct __declspec(uuid("000209b9-0000-0000-c000-000000000046"))
_wordGlobal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct Documents * * prop ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_wordSelection (
        /*[out,retval]*/ struct wordSelection * * prop ) = 0;
      virtual HRESULT __stdcall get_WordBasic (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PrintPreview (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintPreview (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RecentFiles (
        /*[out,retval]*/ struct RecentFiles * * prop ) = 0;
      virtual HRESULT __stdcall get_NormalTemplate (
        /*[out,retval]*/ struct Template * * prop ) = 0;
      virtual HRESULT __stdcall get_System (
        /*[out,retval]*/ struct System * * prop ) = 0;
      virtual HRESULT __stdcall get_wordAutoCorrect (
        /*[out,retval]*/ struct wordAutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFontNames (
        /*[out,retval]*/ struct wordFontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_LandscapeFontNames (
        /*[out,retval]*/ struct wordFontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_PortraitFontNames (
        /*[out,retval]*/ struct wordFontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_Languages (
        /*[out,retval]*/ struct Languages * * prop ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFileConverters (
        /*[out,retval]*/ struct wordFileConverters * * prop ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ struct Dialogs * * prop ) = 0;
      virtual HRESULT __stdcall get_CaptionLabels (
        /*[out,retval]*/ struct CaptionLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCaptions (
        /*[out,retval]*/ struct AutoCaptions * * prop ) = 0;
      virtual HRESULT __stdcall get_wordAddIns (
        /*[out,retval]*/ struct wordAddIns * * prop ) = 0;
      virtual HRESULT __stdcall get_Tasks (
        /*[out,retval]*/ struct Tasks * * prop ) = 0;
      virtual HRESULT __stdcall get_MacroContainer (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * prop ) = 0;
      virtual HRESULT __stdcall get_SynonymInfo (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * LanguageID,
        /*[out,retval]*/ struct SynonymInfo * * prop ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ struct VBIDE::VBE * * prop ) = 0;
      virtual HRESULT __stdcall get_ListGalleries (
        /*[out,retval]*/ struct ListGalleries * * prop ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Templates (
        /*[out,retval]*/ struct Templates * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomizationContext (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall put_CustomizationContext (
        /*[in]*/ IDispatch * prop ) = 0;
      virtual HRESULT __stdcall get_KeyBindings (
        /*[out,retval]*/ struct KeyBindings * * prop ) = 0;
      virtual HRESULT __stdcall get_KeysBoundTo (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ VARIANT * CommandParameter,
        /*[out,retval]*/ struct KeysBoundTo * * prop ) = 0;
      virtual HRESULT __stdcall get_FindKey (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall get_wordOptions (
        /*[out,retval]*/ struct wordOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomDictionaries (
        /*[out,retval]*/ struct Dictionaries * * prop ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_ShowVisualBasicEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowVisualBasicEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IsObjectValid (
        /*[in]*/ IDispatch * Object,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HangulHanjaDictionaries (
        /*[out,retval]*/ struct HangulHanjaConversionDictionaries * * prop ) = 0;
      virtual HRESULT __stdcall Repeat (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall DDEExecute (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Command ) = 0;
      virtual HRESULT __stdcall DDEInitiate (
        /*[in]*/ BSTR App,
        /*[in]*/ BSTR Topic,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall DDEPoke (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR Data ) = 0;
      virtual HRESULT __stdcall DDERequest (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall DDETerminate (
        /*[in]*/ long Channel ) = 0;
      virtual HRESULT __stdcall DDETerminateAll ( ) = 0;
      virtual HRESULT __stdcall BuildKeyCode (
        /*[in]*/ enum WdKey Arg1,
        /*[in]*/ VARIANT * Arg2,
        /*[in]*/ VARIANT * Arg3,
        /*[in]*/ VARIANT * Arg4,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall KeyString (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall GetSpellingSuggestions (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * SuggestionMode,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ struct SpellingSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall Help (
        /*[in]*/ VARIANT * HelpType ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall CleanString (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall ChangeFileOpenDirectory (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall InchesToPoints (
        /*[in]*/ float Inches,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall CentimetersToPoints (
        /*[in]*/ float Centimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall MillimetersToPoints (
        /*[in]*/ float Millimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PicasToPoints (
        /*[in]*/ float Picas,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall LinesToPoints (
        /*[in]*/ float Lines,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToInches (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToCentimeters (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToMillimeters (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToPicas (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToLines (
        /*[in]*/ float wordPoints,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PointsToPixels (
        /*[in]*/ float wordPoints,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall PixelsToPoints (
        /*[in]*/ float Pixels,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * prop ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCorrectEmail (
        /*[out,retval]*/ struct wordAutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_wordProtectedViewWindows (
        /*[out,retval]*/ struct wordProtectedViewWindows * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveProtectedViewWindow (
        /*[out,retval]*/ struct wordProtectedViewWindow * * prop ) = 0;
      virtual HRESULT __stdcall get_IsSandboxed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("0002096b-0000-0000-c000-000000000046"))
_Document : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltInDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Bookmarks (
        /*[out,retval]*/ struct Bookmarks * * prop ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Footnotes (
        /*[out,retval]*/ struct Footnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Endnotes (
        /*[out,retval]*/ struct Endnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_wordComments (
        /*[out,retval]*/ struct wordComments * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdDocumentType * prop ) = 0;
      virtual HRESULT __stdcall get_AutoHyphenation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoHyphenation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HyphenateCaps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HyphenateCaps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HyphenationZone (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HyphenationZone (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ConsecutiveHyphensLimit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ConsecutiveHyphensLimit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * prop ) = 0;
      virtual HRESULT __stdcall get_Paragraphs (
        /*[out,retval]*/ struct Paragraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_Words (
        /*[out,retval]*/ struct Words * * prop ) = 0;
      virtual HRESULT __stdcall get_Sentences (
        /*[out,retval]*/ struct Sentences * * prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct Characters * * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct Fields * * prop ) = 0;
      virtual HRESULT __stdcall get_FormFields (
        /*[out,retval]*/ struct FormFields * * prop ) = 0;
      virtual HRESULT __stdcall get_Styles (
        /*[out,retval]*/ struct Styles * * prop ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ struct Frames * * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfFigures (
        /*[out,retval]*/ struct TablesOfFigures * * prop ) = 0;
      virtual HRESULT __stdcall get_Variables (
        /*[out,retval]*/ struct Variables * * prop ) = 0;
      virtual HRESULT __stdcall get_MailMerge (
        /*[out,retval]*/ struct MailMerge * * prop ) = 0;
      virtual HRESULT __stdcall get_Envelope (
        /*[out,retval]*/ struct Envelope * * prop ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Revisions (
        /*[out,retval]*/ struct Revisions * * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfContents (
        /*[out,retval]*/ struct TablesOfContents * * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfAuthorities (
        /*[out,retval]*/ struct TablesOfAuthorities * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPageSetup (
        /*[out,retval]*/ struct wordPageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_wordPageSetup (
        /*[in]*/ struct wordPageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * prop ) = 0;
      virtual HRESULT __stdcall get_HasRoutingSlip (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasRoutingSlip (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RoutingSlip (
        /*[out,retval]*/ struct RoutingSlip * * prop ) = 0;
      virtual HRESULT __stdcall get_Routed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfAuthoritiesCategories (
        /*[out,retval]*/ struct TablesOfAuthoritiesCategories * * prop ) = 0;
      virtual HRESULT __stdcall get_Indexes (
        /*[out,retval]*/ struct Indexes * * prop ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Content (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_Kind (
        /*[out,retval]*/ enum WdDocumentKind * prop ) = 0;
      virtual HRESULT __stdcall put_Kind (
        /*[in]*/ enum WdDocumentKind prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Subdocuments (
        /*[out,retval]*/ struct Subdocuments * * prop ) = 0;
      virtual HRESULT __stdcall get_IsMasterDocument (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTabStop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTabStop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_EmbedTrueTypeFonts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedTrueTypeFonts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveFormsData (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveFormsData (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnlyRecommended (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadOnlyRecommended (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveSubsetFonts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveSubsetFonts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Compatibility (
        /*[in]*/ enum WdCompatibility Type,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Compatibility (
        /*[in]*/ enum WdCompatibility Type,
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StoryRanges (
        /*[out,retval]*/ struct StoryRanges * * prop ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * prop ) = 0;
      virtual HRESULT __stdcall get_IsSubdocument (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SaveFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ProtectionType (
        /*[out,retval]*/ enum WdProtectionType * prop ) = 0;
      virtual HRESULT __stdcall get_wordHyperlinks (
        /*[out,retval]*/ struct wordHyperlinks * * prop ) = 0;
      virtual HRESULT __stdcall get_wordShapes (
        /*[out,retval]*/ struct wordShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplates (
        /*[out,retval]*/ struct ListTemplates * * prop ) = 0;
      virtual HRESULT __stdcall get_Lists (
        /*[out,retval]*/ struct Lists * * prop ) = 0;
      virtual HRESULT __stdcall get_UpdateStylesOnOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateStylesOnOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AttachedTemplate (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AttachedTemplate (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_InlineShapes (
        /*[out,retval]*/ struct InlineShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall put_Background (
        /*[in]*/ struct wordShape * prop ) = 0;
      virtual HRESULT __stdcall get_GrammarChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GrammarChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpellingChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SpellingChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowGrammaticalErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowGrammaticalErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowSpellingErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSpellingErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Versions (
        /*[out,retval]*/ struct Versions * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowSummary (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSummary (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SummaryViewMode (
        /*[out,retval]*/ enum WdSummaryMode * prop ) = 0;
      virtual HRESULT __stdcall put_SummaryViewMode (
        /*[in]*/ enum WdSummaryMode prop ) = 0;
      virtual HRESULT __stdcall get_SummaryLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SummaryLength (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PrintFractionalWidths (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintFractionalWidths (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintPostScriptOverText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintPostScriptOverText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Container (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PrintFormsData (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintFormsData (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ListParagraphs (
        /*[out,retval]*/ struct ListParagraphs * * prop ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_WritePassword (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_HasPassword (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_WriteReserved (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWritingStyle (
        /*[in]*/ VARIANT * LanguageID,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveWritingStyle (
        /*[in]*/ VARIANT * LanguageID,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UserControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasMailer (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasMailer (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Mailer (
        /*[out,retval]*/ struct Mailer * * prop ) = 0;
      virtual HRESULT __stdcall get_ReadabilityStatistics (
        /*[out,retval]*/ struct ReadabilityStatistics * * prop ) = 0;
      virtual HRESULT __stdcall get_GrammaticalErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ struct VBIDE::_VBProject * * prop ) = 0;
      virtual HRESULT __stdcall get_FormsDesign (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SnapToGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SnapToShapes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToShapes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridSpaceBetweenHorizontalLines (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_GridSpaceBetweenHorizontalLines (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_GridSpaceBetweenVerticalLines (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_GridSpaceBetweenVerticalLines (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginFromMargin (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginFromMargin (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_KerningByAlgorithm (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_KerningByAlgorithm (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_JustificationMode (
        /*[out,retval]*/ enum WdJustificationMode * prop ) = 0;
      virtual HRESULT __stdcall put_JustificationMode (
        /*[in]*/ enum WdJustificationMode prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLevel (
        /*[out,retval]*/ enum WdFarEastLineBreakLevel * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLevel (
        /*[in]*/ enum WdFarEastLineBreakLevel prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakBefore (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakBefore (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakAfter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakAfter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TrackRevisions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackRevisions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintRevisions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintRevisions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowRevisions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowRevisions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall SaveAs2000 (
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * LockComments = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * WritePassword = &vtMissing,
        /*[in]*/ VARIANT * ReadOnlyRecommended = &vtMissing,
        /*[in]*/ VARIANT * EmbedTrueTypeFonts = &vtMissing,
        /*[in]*/ VARIANT * SaveNativePictureFormat = &vtMissing,
        /*[in]*/ VARIANT * SaveFormsData = &vtMissing,
        /*[in]*/ VARIANT * SaveAsAOCELetter = &vtMissing ) = 0;
      virtual HRESULT __stdcall Repaginate ( ) = 0;
      virtual HRESULT __stdcall FitToPages ( ) = 0;
      virtual HRESULT __stdcall ManualHyphenation ( ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall DataForm ( ) = 0;
      virtual HRESULT __stdcall Route ( ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall PrintOutOld (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing ) = 0;
      virtual HRESULT __stdcall SendMail ( ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT * Start,
        /*[in]*/ VARIANT * End,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall RunAutoMacro (
        /*[in]*/ enum WdAutoMacros Which ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall PrintPreview ( ) = 0;
      virtual HRESULT __stdcall GoTo (
        /*[in]*/ VARIANT * What,
        /*[in]*/ VARIANT * Which,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Undo (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Redo (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall ComputeStatistics (
        /*[in]*/ enum WdStatistic Statistic,
        /*[in]*/ VARIANT * IncludeFootnotesAndEndnotes,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MakeCompatibilityDefault ( ) = 0;
      virtual HRESULT __stdcall Protect2002 (
        /*[in]*/ enum WdProtectionType Type,
        /*[in]*/ VARIANT * NoReset = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing ) = 0;
      virtual HRESULT __stdcall Unprotect (
        /*[in]*/ VARIANT * Password = &vtMissing ) = 0;
      virtual HRESULT __stdcall EditionOptions (
        /*[in]*/ enum WdEditionType Type,
        /*[in]*/ enum WdEditionOption Option,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing ) = 0;
      virtual HRESULT __stdcall RunLetterWizard (
        /*[in]*/ VARIANT * LetterContent = &vtMissing,
        /*[in]*/ VARIANT * WizardMode = &vtMissing ) = 0;
      virtual HRESULT __stdcall GetLetterContent (
        /*[out,retval]*/ struct _LetterContent * * prop ) = 0;
      virtual HRESULT __stdcall SetLetterContent (
        /*[in]*/ VARIANT * LetterContent ) = 0;
      virtual HRESULT __stdcall CopyStylesFromTemplate (
        /*[in]*/ BSTR Template ) = 0;
      virtual HRESULT __stdcall UpdateStyles ( ) = 0;
      virtual HRESULT __stdcall CheckGrammar ( ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT * CustomDictionary = &vtMissing,
        /*[in]*/ VARIANT * IgnoreUppercase = &vtMissing,
        /*[in]*/ VARIANT * AlwaysSuggest = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary2 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary3 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary4 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary5 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary6 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary7 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary8 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary9 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary10 = &vtMissing ) = 0;
      virtual HRESULT __stdcall FollowHyperlink (
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * SubAddress = &vtMissing,
        /*[in]*/ VARIANT * NewWindow = &vtMissing,
        /*[in]*/ VARIANT * AddHistory = &vtMissing,
        /*[in]*/ VARIANT * ExtraInfo = &vtMissing,
        /*[in]*/ VARIANT * Method = &vtMissing,
        /*[in]*/ VARIANT * HeaderInfo = &vtMissing ) = 0;
      virtual HRESULT __stdcall AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall Reload ( ) = 0;
      virtual HRESULT __stdcall AutoSummarize (
        /*[in]*/ VARIANT * Length,
        /*[in]*/ VARIANT * Mode,
        /*[in]*/ VARIANT * UpdateProperties,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall RemoveNumbers (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall ConvertNumbersToText (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall CountNumberedItems (
        /*[in]*/ VARIANT * NumberType,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Post ( ) = 0;
      virtual HRESULT __stdcall ToggleFormsDesign ( ) = 0;
      virtual HRESULT __stdcall Compare2000 (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall UpdateSummaryProperties ( ) = 0;
      virtual HRESULT __stdcall GetCrossReferenceItems (
        /*[in]*/ VARIANT * ReferenceType,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall AutoFormat ( ) = 0;
      virtual HRESULT __stdcall ViewCode ( ) = 0;
      virtual HRESULT __stdcall ViewPropertyBrowser ( ) = 0;
      virtual HRESULT __stdcall ForwardMailer ( ) = 0;
      virtual HRESULT __stdcall Reply ( ) = 0;
      virtual HRESULT __stdcall ReplyAll ( ) = 0;
      virtual HRESULT __stdcall SendMailer (
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * Priority = &vtMissing ) = 0;
      virtual HRESULT __stdcall UndoClear ( ) = 0;
      virtual HRESULT __stdcall PresentIt ( ) = 0;
      virtual HRESULT __stdcall SendFax (
        /*[in]*/ BSTR Address,
        /*[in]*/ VARIANT * Subject = &vtMissing ) = 0;
      virtual HRESULT __stdcall Merge2000 (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall ClosePrintPreview ( ) = 0;
      virtual HRESULT __stdcall CheckConsistency ( ) = 0;
      virtual HRESULT __stdcall CreateLetterContent (
        /*[in]*/ BSTR DateFormat,
        /*[in]*/ VARIANT_BOOL IncludeHeaderFooter,
        /*[in]*/ BSTR PageDesign,
        /*[in]*/ enum WdLetterStyle LetterStyle,
        /*[in]*/ VARIANT_BOOL Letterhead,
        /*[in]*/ enum WdLetterheadLocation LetterheadLocation,
        /*[in]*/ float LetterheadSize,
        /*[in]*/ BSTR RecipientName,
        /*[in]*/ BSTR RecipientAddress,
        /*[in]*/ BSTR Salutation,
        /*[in]*/ enum WdSalutationType SalutationType,
        /*[in]*/ BSTR RecipientReference,
        /*[in]*/ BSTR MailingInstructions,
        /*[in]*/ BSTR AttentionLine,
        /*[in]*/ BSTR Subject,
        /*[in]*/ BSTR CCList,
        /*[in]*/ BSTR ReturnAddress,
        /*[in]*/ BSTR SenderName,
        /*[in]*/ BSTR Closing,
        /*[in]*/ BSTR SenderCompany,
        /*[in]*/ BSTR SenderJobTitle,
        /*[in]*/ BSTR SenderInitials,
        /*[in]*/ long EnclosureNumber,
        /*[in]*/ VARIANT * InfoBlock,
        /*[in]*/ VARIANT * RecipientCode,
        /*[in]*/ VARIANT * RecipientGender,
        /*[in]*/ VARIANT * ReturnAddressShortForm,
        /*[in]*/ VARIANT * SenderCity,
        /*[in]*/ VARIANT * SenderCode,
        /*[in]*/ VARIANT * SenderGender,
        /*[in]*/ VARIANT * SenderReference,
        /*[out,retval]*/ struct _LetterContent * * prop ) = 0;
      virtual HRESULT __stdcall AcceptAllRevisions ( ) = 0;
      virtual HRESULT __stdcall RejectAllRevisions ( ) = 0;
      virtual HRESULT __stdcall DetectLanguage ( ) = 0;
      virtual HRESULT __stdcall ApplyTheme (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall RemoveTheme ( ) = 0;
      virtual HRESULT __stdcall WebPagePreview ( ) = 0;
      virtual HRESULT __stdcall ReloadAs (
        /*[in]*/ enum Office::MsoEncoding Encoding ) = 0;
      virtual HRESULT __stdcall get_ActiveTheme (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveThemeDisplayName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Email (
        /*[out,retval]*/ struct Email * * prop ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageDetected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageDetected (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLanguage (
        /*[out,retval]*/ enum WdFarEastLineBreakLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLanguage (
        /*[in]*/ enum WdFarEastLineBreakLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Frameset (
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_ClickAndTypeParagraphStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_ClickAndTypeParagraphStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_HTMLProject (
        /*[out,retval]*/ struct Office::HTMLProject * * prop ) = 0;
      virtual HRESULT __stdcall get_wordWebOptions (
        /*[out,retval]*/ struct wordWebOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_OpenEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall get_SaveEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_SaveEncoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForWord97 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForWord97 (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_VBASigned (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall PrintOut2000 (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall sblt (
        /*[in]*/ BSTR s ) = 0;
      virtual HRESULT __stdcall ConvertVietDoc (
        /*[in]*/ long CodePageOrigin ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_MailEnvelope (
        /*[out,retval]*/ struct Office::IMsoEnvelopeVB * * prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeatures (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeatures (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DoNotEmbedSystemFonts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DoNotEmbedSystemFonts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Signatures (
        /*[out,retval]*/ struct Office::SignatureSet * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTargetFrame (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTargetFrame (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeaturesIntroducedAfter (
        /*[out,retval]*/ enum WdDisableFeaturesIntroducedAfter * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeaturesIntroducedAfter (
        /*[in]*/ enum WdDisableFeaturesIntroducedAfter prop ) = 0;
      virtual HRESULT __stdcall get_RemovePersonalInformation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RemovePersonalInformation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
      virtual HRESULT __stdcall Compare2002 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * AuthorName = &vtMissing,
        /*[in]*/ VARIANT * CompareTarget = &vtMissing,
        /*[in]*/ VARIANT * DetectFormatChanges = &vtMissing,
        /*[in]*/ VARIANT * IgnoreAllComparisonWarnings = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing ) = 0;
      virtual HRESULT __stdcall CheckIn (
        /*[in]*/ VARIANT_BOOL SaveChanges,
        /*[in]*/ VARIANT * wordComments,
        /*[in]*/ VARIANT_BOOL MakePublic ) = 0;
      virtual HRESULT __stdcall CanCheckin (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * MergeTarget = &vtMissing,
        /*[in]*/ VARIANT * DetectFormatChanges = &vtMissing,
        /*[in]*/ VARIANT * UseFormattingFrom = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_EmbedSmartTags (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedSmartTags (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagsAsXMLProps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartTagsAsXMLProps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TextEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_TextEncoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_TextLineEnding (
        /*[out,retval]*/ enum WdLineEndingType * prop ) = 0;
      virtual HRESULT __stdcall put_TextLineEnding (
        /*[in]*/ enum WdLineEndingType prop ) = 0;
      virtual HRESULT __stdcall SendForReview (
        /*[in]*/ VARIANT * Recipients = &vtMissing,
        /*[in]*/ VARIANT * Subject = &vtMissing,
        /*[in]*/ VARIANT * ShowMessage = &vtMissing,
        /*[in]*/ VARIANT * IncludeAttachment = &vtMissing ) = 0;
      virtual HRESULT __stdcall ReplyWithChanges (
        /*[in]*/ VARIANT * ShowMessage = &vtMissing ) = 0;
      virtual HRESULT __stdcall EndReview ( ) = 0;
      virtual HRESULT __stdcall get_StyleSheets (
        /*[out,retval]*/ struct StyleSheets * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTableStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionProvider (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionAlgorithm (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionKeyLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionFileProperties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall SetPasswordEncryptionOptions (
        /*[in]*/ BSTR PasswordEncryptionProvider,
        /*[in]*/ BSTR PasswordEncryptionAlgorithm,
        /*[in]*/ long PasswordEncryptionKeyLength,
        /*[in]*/ VARIANT * PasswordEncryptionFileProperties = &vtMissing ) = 0;
      virtual HRESULT __stdcall RecheckSmartTags ( ) = 0;
      virtual HRESULT __stdcall RemoveSmartTags ( ) = 0;
      virtual HRESULT __stdcall SetDefaultTableStyle (
        /*[in]*/ VARIANT * Style,
        /*[in]*/ VARIANT_BOOL SetInTemplate ) = 0;
      virtual HRESULT __stdcall DeleteAllComments ( ) = 0;
      virtual HRESULT __stdcall AcceptAllRevisionsShown ( ) = 0;
      virtual HRESULT __stdcall RejectAllRevisionsShown ( ) = 0;
      virtual HRESULT __stdcall DeleteAllCommentsShown ( ) = 0;
      virtual HRESULT __stdcall ResetFormFields ( ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * LockComments = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * WritePassword = &vtMissing,
        /*[in]*/ VARIANT * ReadOnlyRecommended = &vtMissing,
        /*[in]*/ VARIANT * EmbedTrueTypeFonts = &vtMissing,
        /*[in]*/ VARIANT * SaveNativePictureFormat = &vtMissing,
        /*[in]*/ VARIANT * SaveFormsData = &vtMissing,
        /*[in]*/ VARIANT * SaveAsAOCELetter = &vtMissing,
        /*[in]*/ VARIANT * Encoding = &vtMissing,
        /*[in]*/ VARIANT * InsertLineBreaks = &vtMissing,
        /*[in]*/ VARIANT * AllowSubstitutions = &vtMissing,
        /*[in]*/ VARIANT * LineEnding = &vtMissing,
        /*[in]*/ VARIANT * AddBiDiMarks = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_EmbedLinguisticData (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedLinguisticData (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowFont (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowFont (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowClear (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowClear (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowParagraph (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowParagraph (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowNumbering (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowNumbering (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowFilter (
        /*[out,retval]*/ enum WdShowFilter * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowFilter (
        /*[in]*/ enum WdShowFilter prop ) = 0;
      virtual HRESULT __stdcall CheckNewSmartTags ( ) = 0;
      virtual HRESULT __stdcall get_Permission (
        /*[out,retval]*/ struct Office::Permission * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLSchemaReferences (
        /*[out,retval]*/ struct XMLSchemaReferences * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartDocument (
        /*[out,retval]*/ struct Office::SmartDocument * * prop ) = 0;
      virtual HRESULT __stdcall get_SharedWorkspace (
        /*[out,retval]*/ struct Office::SharedWorkspace * * prop ) = 0;
      virtual HRESULT __stdcall get_Sync (
        /*[out,retval]*/ struct Office::Sync * * prop ) = 0;
      virtual HRESULT __stdcall get_EnforceStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnforceStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatOverride (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatOverride (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLSaveDataOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLSaveDataOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLHideNamespaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLHideNamespaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLShowAdvancedErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLShowAdvancedErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLUseXSLTWhenSaving (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLUseXSLTWhenSaving (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLSaveThroughXSLT (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_XMLSaveThroughXSLT (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DocumentLibraryVersions (
        /*[out,retval]*/ struct Office::DocumentLibraryVersions * * prop ) = 0;
      virtual HRESULT __stdcall get_ReadingModeLayoutFrozen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingModeLayoutFrozen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RemoveDateAndTime (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RemoveDateAndTime (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall SendFaxOverInternet (
        /*[in]*/ VARIANT * Recipients = &vtMissing,
        /*[in]*/ VARIANT * Subject = &vtMissing,
        /*[in]*/ VARIANT * ShowMessage = &vtMissing ) = 0;
      virtual HRESULT __stdcall TransformDocument (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT_BOOL DataOnly ) = 0;
      virtual HRESULT __stdcall Protect (
        /*[in]*/ enum WdProtectionType Type,
        /*[in]*/ VARIANT * NoReset = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * UseIRM = &vtMissing,
        /*[in]*/ VARIANT * EnforceStyleLock = &vtMissing ) = 0;
      virtual HRESULT __stdcall SelectAllEditableRanges (
        /*[in]*/ VARIANT * EditorID = &vtMissing ) = 0;
      virtual HRESULT __stdcall DeleteAllEditableRanges (
        /*[in]*/ VARIANT * EditorID = &vtMissing ) = 0;
      virtual HRESULT __stdcall DeleteAllInkAnnotations ( ) = 0;
      virtual HRESULT __stdcall AddDocumentWorkspaceHeader (
        /*[in]*/ VARIANT_BOOL RichFormat,
        /*[in]*/ BSTR Url,
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR ID ) = 0;
      virtual HRESULT __stdcall RemoveDocumentWorkspaceHeader (
        /*[in]*/ BSTR ID ) = 0;
      virtual HRESULT __stdcall Compare (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * AuthorName = &vtMissing,
        /*[in]*/ VARIANT * CompareTarget = &vtMissing,
        /*[in]*/ VARIANT * DetectFormatChanges = &vtMissing,
        /*[in]*/ VARIANT * IgnoreAllComparisonWarnings = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * RemovePersonalInformation = &vtMissing,
        /*[in]*/ VARIANT * RemoveDateAndTime = &vtMissing ) = 0;
      virtual HRESULT __stdcall RemoveLockedStyles ( ) = 0;
      virtual HRESULT __stdcall get_ChildNodeSuggestions (
        /*[out,retval]*/ struct XMLChildNodeSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall SelectSingleNode (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall SelectNodes (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLSchemaViolations (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutSizeX (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutSizeX (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutSizeY (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutSizeY (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_StyleSortMethod (
        /*[out,retval]*/ enum WdStyleSort * prop ) = 0;
      virtual HRESULT __stdcall put_StyleSortMethod (
        /*[in]*/ enum WdStyleSort prop ) = 0;
      virtual HRESULT __stdcall get_ContentTypeProperties (
        /*[out,retval]*/ struct Office::MetaProperties * * prop ) = 0;
      virtual HRESULT __stdcall get_TrackMoves (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackMoves (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TrackFormatting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackFormatting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 ( ) = 0;
      virtual HRESULT __stdcall get_OMaths (
        /*[out,retval]*/ struct OMaths * * prop ) = 0;
      virtual HRESULT __stdcall RemoveDocumentInformation (
        /*[in]*/ enum WdRemoveDocInfoType RemoveDocInfoType ) = 0;
      virtual HRESULT __stdcall CheckInWithVersion (
        /*[in]*/ VARIANT_BOOL SaveChanges,
        /*[in]*/ VARIANT * wordComments,
        /*[in]*/ VARIANT_BOOL MakePublic,
        /*[in]*/ VARIANT * VersionType = &vtMissing ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall get_Dummy3 ( ) = 0;
      virtual HRESULT __stdcall get_ServerPolicy (
        /*[out,retval]*/ struct Office::ServerPolicy * * prop ) = 0;
      virtual HRESULT __stdcall get_ContentControls (
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall get_DocumentInspectors (
        /*[out,retval]*/ struct Office::DocumentInspectors * * prop ) = 0;
      virtual HRESULT __stdcall LockServerFile ( ) = 0;
      virtual HRESULT __stdcall GetWorkflowTasks (
        /*[out,retval]*/ struct Office::WorkflowTasks * * prop ) = 0;
      virtual HRESULT __stdcall GetWorkflowTemplates (
        /*[out,retval]*/ struct Office::WorkflowTemplates * * prop ) = 0;
      virtual HRESULT __stdcall Dummy4 ( ) = 0;
      virtual HRESULT __stdcall AddMeetingWorkspaceHeader (
        /*[in]*/ VARIANT_BOOL SkipIfAbsent,
        /*[in]*/ BSTR Url,
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR ID ) = 0;
      virtual HRESULT __stdcall get_Bibliography (
        /*[out,retval]*/ struct Bibliography * * prop ) = 0;
      virtual HRESULT __stdcall get_LockTheme (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockTheme (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LockQuickStyleSet (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockQuickStyleSet (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OriginalDocumentTitle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_RevisedDocumentTitle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CustomXMLParts (
        /*[out,retval]*/ struct Office::_CustomXMLParts * * prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowNextLevel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowNextLevel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowUserStyleName (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowUserStyleName (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall SaveAsQuickStyleSet (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall ApplyQuickStyleSet (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_wordResearch (
        /*[out,retval]*/ struct wordResearch * * prop ) = 0;
      virtual HRESULT __stdcall get_Final (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Final (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathBreakBin (
        /*[out,retval]*/ enum WdOMathBreakBin * prop ) = 0;
      virtual HRESULT __stdcall put_OMathBreakBin (
        /*[in]*/ enum WdOMathBreakBin prop ) = 0;
      virtual HRESULT __stdcall get_OMathBreakSub (
        /*[out,retval]*/ enum WdOMathBreakSub * prop ) = 0;
      virtual HRESULT __stdcall put_OMathBreakSub (
        /*[in]*/ enum WdOMathBreakSub prop ) = 0;
      virtual HRESULT __stdcall get_OMathJc (
        /*[out,retval]*/ enum WdOMathJc * prop ) = 0;
      virtual HRESULT __stdcall put_OMathJc (
        /*[in]*/ enum WdOMathJc prop ) = 0;
      virtual HRESULT __stdcall get_OMathLeftMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OMathLeftMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OMathRightMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OMathRightMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OMathWrap (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OMathWrap (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OMathIntSubSupLim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathIntSubSupLim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathNarySupSubLim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathNarySupSubLim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathSmallFrac (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathSmallFrac (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_DocumentTheme (
        /*[out,retval]*/ struct Office::OfficeTheme * * prop ) = 0;
      virtual HRESULT __stdcall ApplyDocumentTheme (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_HasVBProject (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall SelectLinkedControls (
        /*[in]*/ struct Office::CustomXMLNode * Node,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall SelectUnlinkedControls (
        /*[in]*/ struct Office::_CustomXMLPart * Stream,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall SelectContentControlsByTitle (
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum WdExportFormat ExportFormat,
        /*[in]*/ VARIANT_BOOL OpenAfterExport,
        /*[in]*/ enum WdExportOptimizeFor OptimizeFor,
        /*[in]*/ enum WdExportRange Range,
        /*[in]*/ long From,
        /*[in]*/ long To,
        /*[in]*/ enum WdExportItem Item,
        /*[in]*/ VARIANT_BOOL IncludeDocProps,
        /*[in]*/ VARIANT_BOOL KeepIRM,
        /*[in]*/ enum WdExportCreateBookmarks CreateBookmarks,
        /*[in]*/ VARIANT_BOOL DocStructureTags,
        /*[in]*/ VARIANT_BOOL BitmapMissingFonts,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT * FixedFormatExtClassPtr = &vtMissing ) = 0;
      virtual HRESULT __stdcall FreezeLayout ( ) = 0;
      virtual HRESULT __stdcall UnfreezeLayout ( ) = 0;
      virtual HRESULT __stdcall get_OMathFontName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_OMathFontName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall DowngradeDocument ( ) = 0;
      virtual HRESULT __stdcall get_EncryptionProvider (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EncryptionProvider (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UseMathDefaults (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseMathDefaults (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CurrentRsid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Convert ( ) = 0;
      virtual HRESULT __stdcall SelectContentControlsByTag (
        /*[in]*/ BSTR Tag,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall ConvertAutoHyphens ( ) = 0;
      virtual HRESULT __stdcall get_DocID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall ApplyQuickStyleSet2 (
        /*[in]*/ VARIANT * Style ) = 0;
      virtual HRESULT __stdcall get_CompatibilityMode (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall SaveAs2 (
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * LockComments = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * WritePassword = &vtMissing,
        /*[in]*/ VARIANT * ReadOnlyRecommended = &vtMissing,
        /*[in]*/ VARIANT * EmbedTrueTypeFonts = &vtMissing,
        /*[in]*/ VARIANT * SaveNativePictureFormat = &vtMissing,
        /*[in]*/ VARIANT * SaveFormsData = &vtMissing,
        /*[in]*/ VARIANT * SaveAsAOCELetter = &vtMissing,
        /*[in]*/ VARIANT * Encoding = &vtMissing,
        /*[in]*/ VARIANT * InsertLineBreaks = &vtMissing,
        /*[in]*/ VARIANT * AllowSubstitutions = &vtMissing,
        /*[in]*/ VARIANT * LineEnding = &vtMissing,
        /*[in]*/ VARIANT * AddBiDiMarks = &vtMissing,
        /*[in]*/ VARIANT * CompatibilityMode = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_CoAuthoring (
        /*[out,retval]*/ struct CoAuthoring * * prop ) = 0;
      virtual HRESULT __stdcall SetCompatibilityMode (
        /*[in]*/ long Mode ) = 0;
};

struct __declspec(uuid("0002096a-0000-0000-c000-000000000046"))
Template : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_AutoTextEntries (
        /*[out,retval]*/ struct AutoTextEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdTemplateType * prop ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltInDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplates (
        /*[out,retval]*/ struct ListTemplates * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ struct VBIDE::_VBProject * * prop ) = 0;
      virtual HRESULT __stdcall get_KerningByAlgorithm (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_KerningByAlgorithm (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_JustificationMode (
        /*[out,retval]*/ enum WdJustificationMode * prop ) = 0;
      virtual HRESULT __stdcall put_JustificationMode (
        /*[in]*/ enum WdJustificationMode prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLevel (
        /*[out,retval]*/ enum WdFarEastLineBreakLevel * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLevel (
        /*[in]*/ enum WdFarEastLineBreakLevel prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakBefore (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakBefore (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakAfter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakAfter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall OpenAsDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLanguage (
        /*[out,retval]*/ enum WdFarEastLineBreakLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLanguage (
        /*[in]*/ enum WdFarEastLineBreakLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockEntries (
        /*[out,retval]*/ struct BuildingBlockEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockTypes (
        /*[out,retval]*/ struct BuildingBlockTypes * * prop ) = 0;
};

struct __declspec(uuid("000209a2-0000-0000-c000-000000000046"))
Templates : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Template * * prop ) = 0;
      virtual HRESULT __stdcall LoadBuildingBlocks ( ) = 0;
};

struct __declspec(uuid("00020968-0000-0000-c000-000000000046"))
Bookmark : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Empty (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordColumn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_StoryType (
        /*[out,retval]*/ enum WdStoryType * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct Bookmark * * prop ) = 0;
};

struct __declspec(uuid("00020967-0000-0000-c000-000000000046"))
Bookmarks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultSorting (
        /*[out,retval]*/ enum WdBookmarkSortBy * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultSorting (
        /*[in]*/ enum WdBookmarkSortBy prop ) = 0;
      virtual HRESULT __stdcall get_ShowHidden (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHidden (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Bookmark * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct Bookmark * * prop ) = 0;
      virtual HRESULT __stdcall Exists (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("00020962-0000-0000-c000-000000000046"))
Window : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ActivePane (
        /*[out,retval]*/ struct wordPane * * prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPanes (
        /*[out,retval]*/ struct wordPanes * * prop ) = 0;
      virtual HRESULT __stdcall get_wordSelection (
        /*[out,retval]*/ struct wordSelection * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Split (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Split (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SplitVertical (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SplitVertical (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRulers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRulers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalRuler (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalRuler (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordView (
        /*[out,retval]*/ struct wordView * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdWindowType * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_WindowNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalScrollBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayHorizontalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayHorizontalScrollBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StyleAreaWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_StyleAreaWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DisplayScreenTips (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayScreenTips (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DocumentMap (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DocumentMap (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DocumentMapPercentWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DocumentMapPercentWidth (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_IMEMode (
        /*[out,retval]*/ enum WdIMEMode * prop ) = 0;
      virtual HRESULT __stdcall put_IMEMode (
        /*[in]*/ enum WdIMEMode prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall LargeScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall SmallScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall PrintOutOld (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing ) = 0;
      virtual HRESULT __stdcall PageScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing ) = 0;
      virtual HRESULT __stdcall SetFocus ( ) = 0;
      virtual HRESULT __stdcall RangeFromPoint (
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall ScrollIntoView (
        /*[in]*/ IDispatch * obj,
        /*[in]*/ VARIANT * Start = &vtMissing ) = 0;
      virtual HRESULT __stdcall GetPoint (
        /*[out]*/ long * ScreenPixelsLeft,
        /*[out]*/ long * ScreenPixelsTop,
        /*[out]*/ long * ScreenPixelsWidth,
        /*[out]*/ long * ScreenPixelsHeight,
        /*[in]*/ IDispatch * obj ) = 0;
      virtual HRESULT __stdcall PrintOut2000 (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_EnvelopeVisible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnvelopeVisible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRightRuler (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRightRuler (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayLeftScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayLeftScrollBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * wordPages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall ToggleShowAllReviewers ( ) = 0;
      virtual HRESULT __stdcall get_Thumbnails (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Thumbnails (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowSourceDocuments (
        /*[out,retval]*/ enum WdShowSourceDocuments * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSourceDocuments (
        /*[in]*/ enum WdShowSourceDocuments prop ) = 0;
      virtual HRESULT __stdcall ToggleRibbon ( ) = 0;
};

struct __declspec(uuid("00020961-0000-0000-c000-000000000046"))
Windows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Window,
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall Arrange (
        /*[in]*/ VARIANT * ArrangeStyle = &vtMissing ) = 0;
      virtual HRESULT __stdcall CompareSideBySideWith (
        /*[in]*/ VARIANT * Document,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall BreakSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall ResetPositionsSideBySide ( ) = 0;
      virtual HRESULT __stdcall get_SyncScrollingSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SyncScrollingSideBySide (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020960-0000-0000-c000-000000000046"))
wordPane : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_wordSelection (
        /*[out,retval]*/ struct wordSelection * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRulers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRulers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalRuler (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalRuler (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Zooms (
        /*[out,retval]*/ struct Zooms * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordView (
        /*[out,retval]*/ struct wordView * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct wordPane * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct wordPane * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MinimumFontSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MinimumFontSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BrowseToWindow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BrowseToWindow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowseWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall LargeScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall SmallScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall AutoScroll (
        /*[in]*/ long Velocity ) = 0;
      virtual HRESULT __stdcall PageScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing ) = 0;
      virtual HRESULT __stdcall NewFrameset ( ) = 0;
      virtual HRESULT __stdcall TOCInFrameset ( ) = 0;
      virtual HRESULT __stdcall get_Frameset (
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPages (
        /*[out,retval]*/ struct wordPages * * prop ) = 0;
};

struct __declspec(uuid("0002095f-0000-0000-c000-000000000046"))
wordPanes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordPane * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * SplitVertical,
        /*[out,retval]*/ struct wordPane * * prop ) = 0;
};

struct __declspec(uuid("0002095e-0000-0000-c000-000000000046"))
Range : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormattedText (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_FormattedText (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_StoryType (
        /*[out,retval]*/ enum WdStoryType * prop ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Words (
        /*[out,retval]*/ struct Words * * prop ) = 0;
      virtual HRESULT __stdcall get_Sentences (
        /*[out,retval]*/ struct Sentences * * prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct Characters * * prop ) = 0;
      virtual HRESULT __stdcall get_Footnotes (
        /*[out,retval]*/ struct Footnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Endnotes (
        /*[out,retval]*/ struct Endnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_wordComments (
        /*[out,retval]*/ struct wordComments * * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * prop ) = 0;
      virtual HRESULT __stdcall get_Paragraphs (
        /*[out,retval]*/ struct Paragraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_TextRetrievalMode (
        /*[out,retval]*/ struct TextRetrievalMode * * prop ) = 0;
      virtual HRESULT __stdcall put_TextRetrievalMode (
        /*[in]*/ struct TextRetrievalMode * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct Fields * * prop ) = 0;
      virtual HRESULT __stdcall get_FormFields (
        /*[out,retval]*/ struct FormFields * * prop ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ struct Frames * * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_ListFormat (
        /*[out,retval]*/ struct ListFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Bookmarks (
        /*[out,retval]*/ struct Bookmarks * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ enum WdUnderline * prop ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ enum WdUnderline prop ) = 0;
      virtual HRESULT __stdcall get_EmphasisMark (
        /*[out,retval]*/ enum WdEmphasisMark * prop ) = 0;
      virtual HRESULT __stdcall put_EmphasisMark (
        /*[in]*/ enum WdEmphasisMark prop ) = 0;
      virtual HRESULT __stdcall get_DisableCharacterSpaceGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableCharacterSpaceGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Revisions (
        /*[out,retval]*/ struct Revisions * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_StoryLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_SynonymInfo (
        /*[out,retval]*/ struct SynonymInfo * * prop ) = 0;
      virtual HRESULT __stdcall get_wordHyperlinks (
        /*[out,retval]*/ struct wordHyperlinks * * prop ) = 0;
      virtual HRESULT __stdcall get_ListParagraphs (
        /*[out,retval]*/ struct ListParagraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_Subdocuments (
        /*[out,retval]*/ struct Subdocuments * * prop ) = 0;
      virtual HRESULT __stdcall get_GrammarChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GrammarChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpellingChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SpellingChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HighlightColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_HighlightColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_wordColumns (
        /*[out,retval]*/ struct wordColumns * * prop ) = 0;
      virtual HRESULT __stdcall get_wordRows (
        /*[out,retval]*/ struct wordRows * * prop ) = 0;
      virtual HRESULT __stdcall get_CanEdit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CanPaste (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_IsEndOfRowMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_BookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreviousBookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Find (
        /*[out,retval]*/ struct Find * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPageSetup (
        /*[out,retval]*/ struct wordPageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_wordPageSetup (
        /*[in]*/ struct wordPageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_wordShapeRange (
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall get_Case (
        /*[out,retval]*/ enum WdCharacterCase * prop ) = 0;
      virtual HRESULT __stdcall put_Case (
        /*[in]*/ enum WdCharacterCase prop ) = 0;
      virtual HRESULT __stdcall get_Information (
        /*[in]*/ enum WdInformation Type,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ReadabilityStatistics (
        /*[out,retval]*/ struct ReadabilityStatistics * * prop ) = 0;
      virtual HRESULT __stdcall get_GrammaticalErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum WdTextOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum WdTextOrientation prop ) = 0;
      virtual HRESULT __stdcall get_InlineShapes (
        /*[out,retval]*/ struct InlineShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_NextStoryRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDOther (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDOther (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall SetRange (
        /*[in]*/ long Start,
        /*[in]*/ long End ) = 0;
      virtual HRESULT __stdcall Collapse (
        /*[in]*/ VARIANT * Direction = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertBefore (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall InsertAfter (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall Next (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Previous (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall StartOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall EndOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveStart (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveEnd (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveStartWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveEndWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveStartUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveEndUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall InsertBreak (
        /*[in]*/ VARIANT * Type = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Attachment = &vtMissing ) = 0;
      virtual HRESULT __stdcall InStory (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall InRange (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall WholeStory ( ) = 0;
      virtual HRESULT __stdcall Expand (
        /*[in]*/ VARIANT * Unit,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall InsertParagraph ( ) = 0;
      virtual HRESULT __stdcall InsertParagraphAfter ( ) = 0;
      virtual HRESULT __stdcall ConvertToTableOld (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall InsertDateTimeOld (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertSymbol (
        /*[in]*/ long CharacterNumber,
        /*[in]*/ VARIANT * wordFont = &vtMissing,
        /*[in]*/ VARIANT * Unicode = &vtMissing,
        /*[in]*/ VARIANT * Bias = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCrossReference_2002 (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCaptionXP (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing ) = 0;
      virtual HRESULT __stdcall CopyAsPicture ( ) = 0;
      virtual HRESULT __stdcall SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall SortAscending ( ) = 0;
      virtual HRESULT __stdcall SortDescending ( ) = 0;
      virtual HRESULT __stdcall IsEqual (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Calculate (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall GoTo (
        /*[in]*/ VARIANT * What,
        /*[in]*/ VARIANT * Which,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall GoToNext (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall GoToPrevious (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ VARIANT * IconIndex = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Placement = &vtMissing,
        /*[in]*/ VARIANT * DisplayAsIcon = &vtMissing,
        /*[in]*/ VARIANT * DataType = &vtMissing,
        /*[in]*/ VARIANT * IconFileName = &vtMissing,
        /*[in]*/ VARIANT * IconLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall LookupNameProperties ( ) = 0;
      virtual HRESULT __stdcall ComputeStatistics (
        /*[in]*/ enum WdStatistic Statistic,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Relocate (
        /*[in]*/ long Direction ) = 0;
      virtual HRESULT __stdcall CheckSynonyms ( ) = 0;
      virtual HRESULT __stdcall SubscribeTo (
        /*[in]*/ BSTR Edition,
        /*[in]*/ VARIANT * Format = &vtMissing ) = 0;
      virtual HRESULT __stdcall CreatePublisher (
        /*[in]*/ VARIANT * Edition = &vtMissing,
        /*[in]*/ VARIANT * ContainsPICT = &vtMissing,
        /*[in]*/ VARIANT * ContainsRTF = &vtMissing,
        /*[in]*/ VARIANT * ContainsText = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertAutoText ( ) = 0;
      virtual HRESULT __stdcall InsertDatabase (
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * Style = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * DataSource = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * IncludeFields = &vtMissing ) = 0;
      virtual HRESULT __stdcall AutoFormat ( ) = 0;
      virtual HRESULT __stdcall CheckGrammar ( ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ VARIANT * CustomDictionary = &vtMissing,
        /*[in]*/ VARIANT * IgnoreUppercase = &vtMissing,
        /*[in]*/ VARIANT * AlwaysSuggest = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary2 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary3 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary4 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary5 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary6 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary7 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary8 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary9 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary10 = &vtMissing ) = 0;
      virtual HRESULT __stdcall GetSpellingSuggestions (
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * SuggestionMode,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ struct SpellingSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall InsertParagraphBefore ( ) = 0;
      virtual HRESULT __stdcall NextSubdocument ( ) = 0;
      virtual HRESULT __stdcall PreviousSubdocument ( ) = 0;
      virtual HRESULT __stdcall ConvertHangulAndHanja (
        /*[in]*/ VARIANT * ConversionsMode = &vtMissing,
        /*[in]*/ VARIANT * FastConversion = &vtMissing,
        /*[in]*/ VARIANT * CheckHangulEnding = &vtMissing,
        /*[in]*/ VARIANT * EnableRecentOrdering = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary = &vtMissing ) = 0;
      virtual HRESULT __stdcall PasteAsNestedTable ( ) = 0;
      virtual HRESULT __stdcall ModifyEnclosure (
        /*[in]*/ VARIANT * Style,
        /*[in]*/ VARIANT * Symbol = &vtMissing,
        /*[in]*/ VARIANT * EnclosedText = &vtMissing ) = 0;
      virtual HRESULT __stdcall PhoneticGuide (
        /*[in]*/ BSTR Text,
        /*[in]*/ enum WdPhoneticGuideAlignmentType Alignment,
        /*[in]*/ long Raise,
        /*[in]*/ long FontSize,
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall InsertDateTime (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing,
        /*[in]*/ VARIANT * DateLanguage = &vtMissing,
        /*[in]*/ VARIANT * CalendarType = &vtMissing ) = 0;
      virtual HRESULT __stdcall Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall DetectLanguage ( ) = 0;
      virtual HRESULT __stdcall ConvertToTable (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[in]*/ VARIANT * AutoFitBehavior,
        /*[in]*/ VARIANT * DefaultTableBehavior,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall TCSCConverter (
        /*[in]*/ enum WdTCSCConverterDirection WdTCSCConverterDirection,
        /*[in]*/ VARIANT_BOOL CommonTerms,
        /*[in]*/ VARIANT_BOOL UseVariants ) = 0;
      virtual HRESULT __stdcall get_LanguageDetected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageDetected (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FitTextWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FitTextWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalInVertical (
        /*[out,retval]*/ enum WdHorizontalInVerticalType * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalInVertical (
        /*[in]*/ enum WdHorizontalInVerticalType prop ) = 0;
      virtual HRESULT __stdcall get_TwoLinesInOne (
        /*[out,retval]*/ enum WdTwoLinesInOneType * prop ) = 0;
      virtual HRESULT __stdcall put_TwoLinesInOne (
        /*[in]*/ enum WdTwoLinesInOneType prop ) = 0;
      virtual HRESULT __stdcall get_CombineCharacters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CombineCharacters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TopLevelTables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * prop ) = 0;
      virtual HRESULT __stdcall get_CharacterWidth (
        /*[out,retval]*/ enum WdCharacterWidth * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterWidth (
        /*[in]*/ enum WdCharacterWidth prop ) = 0;
      virtual HRESULT __stdcall get_Kana (
        /*[out,retval]*/ enum WdKana * prop ) = 0;
      virtual HRESULT __stdcall put_Kana (
        /*[in]*/ enum WdKana prop ) = 0;
      virtual HRESULT __stdcall get_BoldBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BoldBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ItalicBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ItalicBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowAll (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAll (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_FootnoteOptions (
        /*[out,retval]*/ struct FootnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_EndnoteOptions (
        /*[out,retval]*/ struct EndnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall PasteAndFormat (
        /*[in]*/ enum WdRecoveryType Type ) = 0;
      virtual HRESULT __stdcall PasteExcelTable (
        /*[in]*/ VARIANT_BOOL LinkedToExcel,
        /*[in]*/ VARIANT_BOOL WordFormatting,
        /*[in]*/ VARIANT_BOOL RTF ) = 0;
      virtual HRESULT __stdcall PasteAppendTable ( ) = 0;
      virtual HRESULT __stdcall get_XMLNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLParentNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Editors (
        /*[out,retval]*/ struct Editors * * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[in]*/ VARIANT_BOOL DataOnly,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_EnhMetaFileBits (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall GoToEditableRange (
        /*[in]*/ VARIANT * EditorID,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall InsertXML (
        /*[in]*/ BSTR XML,
        /*[in]*/ VARIANT * Transform = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCaption (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing,
        /*[in]*/ VARIANT * ExcludeLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCrossReference (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing,
        /*[in]*/ VARIANT * SeparateNumbers = &vtMissing,
        /*[in]*/ VARIANT * SeparatorString = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_OMaths (
        /*[out,retval]*/ struct OMaths * * prop ) = 0;
      virtual HRESULT __stdcall get_CharacterStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ListStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_wordTableStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ContentControls (
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall ExportFragment (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum WdSaveFormat Format ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall SetListLevel (
        /*[in]*/ short Level ) = 0;
      virtual HRESULT __stdcall InsertAlignmentTab (
        /*[in]*/ long Alignment,
        /*[in]*/ long RelativeTo ) = 0;
      virtual HRESULT __stdcall get_ParentContentControl (
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall ImportFragment (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL MatchDestination ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum WdExportFormat ExportFormat,
        /*[in]*/ VARIANT_BOOL OpenAfterExport,
        /*[in]*/ enum WdExportOptimizeFor OptimizeFor,
        /*[in]*/ VARIANT_BOOL ExportCurrentPage,
        /*[in]*/ enum WdExportItem Item,
        /*[in]*/ VARIANT_BOOL IncludeDocProps,
        /*[in]*/ VARIANT_BOOL KeepIRM,
        /*[in]*/ enum WdExportCreateBookmarks CreateBookmarks,
        /*[in]*/ VARIANT_BOOL DocStructureTags,
        /*[in]*/ VARIANT_BOOL BitmapMissingFonts,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT * FixedFormatExtClassPtr = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_Locks (
        /*[out,retval]*/ struct CoAuthLocks * * prop ) = 0;
      virtual HRESULT __stdcall get_Updates (
        /*[out,retval]*/ struct CoAuthUpdates * * prop ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * prop ) = 0;
};

struct __declspec(uuid("0002095d-0000-0000-c000-000000000046"))
Characters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("0002095c-0000-0000-c000-000000000046"))
Words : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("0002095b-0000-0000-c000-000000000046"))
Sentences : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("00020957-0000-0000-c000-000000000046"))
Paragraph : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_wordTabStops (
        /*[out,retval]*/ struct wordTabStops * * prop ) = 0;
      virtual HRESULT __stdcall put_wordTabStops (
        /*[in]*/ struct wordTabStops * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_DropCap (
        /*[out,retval]*/ struct DropCap * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdParagraphAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdParagraphAlignment prop ) = 0;
      virtual HRESULT __stdcall get_KeepTogether (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepTogether (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_KeepWithNext (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepWithNext (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageBreakBefore (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageBreakBefore (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NoLineNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacingRule (
        /*[out,retval]*/ enum WdLineSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacingRule (
        /*[in]*/ enum WdLineSpacing prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Hyphenation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hyphenation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WidowControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WidowControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HalfWidthPunctuationOnTopOfLine (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HalfWidthPunctuationOnTopOfLine (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndAlpha (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndAlpha (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndDigit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndDigit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum WdBaselineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum WdBaselineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_AutoAdjustRightIndent (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAdjustRightIndent (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DisableLineHeightGrid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DisableLineHeightGrid (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ enum WdOutlineLevel * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ enum WdOutlineLevel prop ) = 0;
      virtual HRESULT __stdcall CloseUp ( ) = 0;
      virtual HRESULT __stdcall OpenUp ( ) = 0;
      virtual HRESULT __stdcall OpenOrCloseUp ( ) = 0;
      virtual HRESULT __stdcall TabHangingIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall TabIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Space1 ( ) = 0;
      virtual HRESULT __stdcall Space15 ( ) = 0;
      virtual HRESULT __stdcall Space2 ( ) = 0;
      virtual HRESULT __stdcall IndentCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall IndentFirstLineCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall Next (
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall Previous (
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall OutlinePromote ( ) = 0;
      virtual HRESULT __stdcall OutlineDemote ( ) = 0;
      virtual HRESULT __stdcall OutlineDemoteToBody ( ) = 0;
      virtual HRESULT __stdcall Indent ( ) = 0;
      virtual HRESULT __stdcall Outdent ( ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitRightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitRightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitLeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitLeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitFirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitFirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ enum WdReadingOrder * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ enum WdReadingOrder prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBeforeAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBeforeAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfterAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfterAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_IsStyleSeparator (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall SelectNumber ( ) = 0;
      virtual HRESULT __stdcall ListAdvanceTo (
        /*[in]*/ short Level1,
        /*[in]*/ short Level2,
        /*[in]*/ short Level3,
        /*[in]*/ short Level4,
        /*[in]*/ short Level5,
        /*[in]*/ short Level6,
        /*[in]*/ short Level7,
        /*[in]*/ short Level8,
        /*[in]*/ short Level9 ) = 0;
      virtual HRESULT __stdcall ResetAdvanceTo ( ) = 0;
      virtual HRESULT __stdcall SeparateList ( ) = 0;
      virtual HRESULT __stdcall JoinList ( ) = 0;
      virtual HRESULT __stdcall get_MirrorIndents (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MirrorIndents (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TextboxTightWrap (
        /*[out,retval]*/ enum WdTextboxTightWrap * prop ) = 0;
      virtual HRESULT __stdcall put_TextboxTightWrap (
        /*[in]*/ enum WdTextboxTightWrap prop ) = 0;
      virtual HRESULT __stdcall get_ListNumberOriginal (
        /*[in]*/ short Level,
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall get_ParaID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_TextID (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020958-0000-0000-c000-000000000046"))
Paragraphs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_wordTabStops (
        /*[out,retval]*/ struct wordTabStops * * prop ) = 0;
      virtual HRESULT __stdcall put_wordTabStops (
        /*[in]*/ struct wordTabStops * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdParagraphAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdParagraphAlignment prop ) = 0;
      virtual HRESULT __stdcall get_KeepTogether (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepTogether (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_KeepWithNext (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepWithNext (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageBreakBefore (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageBreakBefore (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NoLineNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacingRule (
        /*[out,retval]*/ enum WdLineSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacingRule (
        /*[in]*/ enum WdLineSpacing prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Hyphenation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hyphenation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WidowControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WidowControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HalfWidthPunctuationOnTopOfLine (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HalfWidthPunctuationOnTopOfLine (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndAlpha (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndAlpha (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndDigit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndDigit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum WdBaselineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum WdBaselineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_AutoAdjustRightIndent (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAdjustRightIndent (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DisableLineHeightGrid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DisableLineHeightGrid (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ enum WdOutlineLevel * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ enum WdOutlineLevel prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall CloseUp ( ) = 0;
      virtual HRESULT __stdcall OpenUp ( ) = 0;
      virtual HRESULT __stdcall OpenOrCloseUp ( ) = 0;
      virtual HRESULT __stdcall TabHangingIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall TabIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Space1 ( ) = 0;
      virtual HRESULT __stdcall Space15 ( ) = 0;
      virtual HRESULT __stdcall Space2 ( ) = 0;
      virtual HRESULT __stdcall IndentCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall IndentFirstLineCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall OutlinePromote ( ) = 0;
      virtual HRESULT __stdcall OutlineDemote ( ) = 0;
      virtual HRESULT __stdcall OutlineDemoteToBody ( ) = 0;
      virtual HRESULT __stdcall Indent ( ) = 0;
      virtual HRESULT __stdcall Outdent ( ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitRightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitRightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitLeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitLeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitFirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitFirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ enum WdReadingOrder * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ enum WdReadingOrder prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBeforeAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBeforeAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfterAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfterAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall IncreaseSpacing ( ) = 0;
      virtual HRESULT __stdcall DecreaseSpacing ( ) = 0;
};

struct __declspec(uuid("00020947-0000-0000-c000-000000000046"))
AutoCorrectEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_RichText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Apply (
        /*[in]*/ struct Range * Range ) = 0;
};

struct __declspec(uuid("00020948-0000-0000-c000-000000000046"))
AutoCorrectEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AutoCorrectEntry * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct AutoCorrectEntry * * prop ) = 0;
      virtual HRESULT __stdcall AddRichText (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct AutoCorrectEntry * * prop ) = 0;
};

struct __declspec(uuid("00020949-0000-0000-c000-000000000046"))
wordAutoCorrect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CorrectDays (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectDays (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectInitialCaps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectInitialCaps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectSentenceCaps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectSentenceCaps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordReplaceText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_wordReplaceText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Entries (
        /*[out,retval]*/ struct AutoCorrectEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstLetterExceptions (
        /*[out,retval]*/ struct FirstLetterExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstLetterAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLetterAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TwoInitialCapsExceptions (
        /*[out,retval]*/ struct TwoInitialCapsExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_TwoInitialCapsAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TwoInitialCapsAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectCapsLock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectCapsLock (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectHangulAndAlphabet (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectHangulAndAlphabet (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HangulAndAlphabetExceptions (
        /*[out,retval]*/ struct HangulAndAlphabetExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_HangulAndAlphabetAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HangulAndAlphabetAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReplaceTextFromSpellingChecker (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReplaceTextFromSpellingChecker (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OtherCorrectionsAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OtherCorrectionsAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OtherCorrectionsExceptions (
        /*[out,retval]*/ struct OtherCorrectionsExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_CorrectKeyboardSetting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectKeyboardSetting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectTableCells (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectTableCells (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAutoCorrectOptions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoCorrectOptions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002093f-0000-0000-c000-000000000046"))
Footnote : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020942-0000-0000-c000-000000000046"))
Footnotes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdFootnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdFootnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationSeparator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationNotice (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Footnote * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Reference,
        /*[in]*/ VARIANT * Text,
        /*[out,retval]*/ struct Footnote * * prop ) = 0;
      virtual HRESULT __stdcall Convert ( ) = 0;
      virtual HRESULT __stdcall SwapWithEndnotes ( ) = 0;
      virtual HRESULT __stdcall ResetSeparator ( ) = 0;
      virtual HRESULT __stdcall ResetContinuationSeparator ( ) = 0;
      virtual HRESULT __stdcall ResetContinuationNotice ( ) = 0;
};

struct __declspec(uuid("0002093e-0000-0000-c000-000000000046"))
Endnote : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020941-0000-0000-c000-000000000046"))
Endnotes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdEndnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdEndnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationSeparator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationNotice (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Endnote * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Reference,
        /*[in]*/ VARIANT * Text,
        /*[out,retval]*/ struct Endnote * * prop ) = 0;
      virtual HRESULT __stdcall Convert ( ) = 0;
      virtual HRESULT __stdcall SwapWithFootnotes ( ) = 0;
      virtual HRESULT __stdcall ResetSeparator ( ) = 0;
      virtual HRESULT __stdcall ResetContinuationSeparator ( ) = 0;
      virtual HRESULT __stdcall ResetContinuationNotice ( ) = 0;
};

struct __declspec(uuid("0002093d-0000-0000-c000-000000000046"))
wordComment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Scope (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Author (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Initial (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Initial (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ShowTip (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowTip (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Edit ( ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_IsInk (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("00020940-0000-0000-c000-000000000046"))
wordComments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowBy (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ShowBy (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordComment * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Text,
        /*[out,retval]*/ struct wordComment * * prop ) = 0;
};

struct __declspec(uuid("00020936-0000-0000-c000-000000000046"))
AutoTextEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ struct Range * Where,
        /*[in]*/ VARIANT * RichText,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("00020937-0000-0000-c000-000000000046"))
AutoTextEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
      virtual HRESULT __stdcall AppendToSpike (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
};

struct __declspec(uuid("0002092a-0000-0000-c000-000000000046"))
Frame : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdFrameSizeRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdFrameSizeRule prop ) = 0;
      virtual HRESULT __stdcall get_WidthRule (
        /*[out,retval]*/ enum WdFrameSizeRule * prop ) = 0;
      virtual HRESULT __stdcall put_WidthRule (
        /*[in]*/ enum WdFrameSizeRule prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalDistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalDistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LockAnchor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockAnchor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_VerticalDistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalDistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TextWrap (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TextWrap (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
};

struct __declspec(uuid("000209b1-0000-0000-c000-000000000046"))
Replacement : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Highlight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Highlight (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall ClearFormatting ( ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("000209b0-0000-0000-c000-000000000046"))
Find : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Forward (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Forward (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Found (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_MatchAllWordForms (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchAllWordForms (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchCase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchCase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchWildcards (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchWildcards (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchSoundsLike (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchSoundsLike (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchWholeWord (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchWholeWord (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzy (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzy (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchByte (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchByte (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Highlight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Highlight (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Replacement (
        /*[out,retval]*/ struct Replacement * * prop ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall get_Wrap (
        /*[out,retval]*/ enum WdFindWrap * prop ) = 0;
      virtual HRESULT __stdcall put_Wrap (
        /*[in]*/ enum WdFindWrap prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDOther (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDOther (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_CorrectHangulEndings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectHangulEndings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall ExecuteOld (
        /*[in]*/ VARIANT * wordFindText,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * Forward,
        /*[in]*/ VARIANT * Wrap,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ReplaceWith,
        /*[in]*/ VARIANT * Replace,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall ClearFormatting ( ) = 0;
      virtual HRESULT __stdcall SetAllFuzzyOptions ( ) = 0;
      virtual HRESULT __stdcall ClearAllFuzzyOptions ( ) = 0;
      virtual HRESULT __stdcall Execute (
        /*[in]*/ VARIANT * wordFindText,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * Forward,
        /*[in]*/ VARIANT * Wrap,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ReplaceWith,
        /*[in]*/ VARIANT * Replace,
        /*[in]*/ VARIANT * MatchKashida,
        /*[in]*/ VARIANT * MatchDiacritics,
        /*[in]*/ VARIANT * MatchAlefHamza,
        /*[in]*/ VARIANT * MatchControl,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MatchKashida (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchKashida (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchDiacritics (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchDiacritics (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchAlefHamza (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchAlefHamza (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchPhrase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchPhrase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchPrefix (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchPrefix (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchSuffix (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchSuffix (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreSpace (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreSpace (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnorePunct (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnorePunct (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall HitHighlight (
        /*[in]*/ VARIANT * wordFindText,
        /*[in]*/ VARIANT * HighlightColor,
        /*[in]*/ VARIANT * TextColor,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchPrefix,
        /*[in]*/ VARIANT * MatchSuffix,
        /*[in]*/ VARIANT * MatchPhrase,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * MatchByte,
        /*[in]*/ VARIANT * MatchFuzzy,
        /*[in]*/ VARIANT * MatchKashida,
        /*[in]*/ VARIANT * MatchDiacritics,
        /*[in]*/ VARIANT * MatchAlefHamza,
        /*[in]*/ VARIANT * MatchControl,
        /*[in]*/ VARIANT * IgnoreSpace,
        /*[in]*/ VARIANT * IgnorePunct,
        /*[in]*/ VARIANT * HanjaPhoneticHangul,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall ClearHitHighlight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Execute2007 (
        /*[in]*/ VARIANT * wordFindText,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * Forward,
        /*[in]*/ VARIANT * Wrap,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ReplaceWith,
        /*[in]*/ VARIANT * Replace,
        /*[in]*/ VARIANT * MatchKashida,
        /*[in]*/ VARIANT * MatchDiacritics,
        /*[in]*/ VARIANT * MatchAlefHamza,
        /*[in]*/ VARIANT * MatchControl,
        /*[in]*/ VARIANT * MatchPrefix,
        /*[in]*/ VARIANT * MatchSuffix,
        /*[in]*/ VARIANT * MatchPhrase,
        /*[in]*/ VARIANT * IgnoreSpace,
        /*[in]*/ VARIANT * IgnorePunct,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HanjaPhoneticHangul (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HanjaPhoneticHangul (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002092b-0000-0000-c000-000000000046"))
Frames : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020928-0000-0000-c000-000000000046"))
FormField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EntryMacro (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EntryMacro (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ExitMacro (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ExitMacro (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_OwnHelp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OwnHelp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OwnStatus (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OwnStatus (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HelpText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_HelpText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_StatusText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_StatusText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Result (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Result (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TextInput (
        /*[out,retval]*/ struct TextInput * * prop ) = 0;
      virtual HRESULT __stdcall get_CheckBox (
        /*[out,retval]*/ struct CheckBox * * prop ) = 0;
      virtual HRESULT __stdcall get_DropDown (
        /*[out,retval]*/ struct DropDown * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct FormField * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct FormField * * prop ) = 0;
      virtual HRESULT __stdcall get_CalculateOnExit (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CalculateOnExit (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020929-0000-0000-c000-000000000046"))
FormFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Shaded (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shaded (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct FormField * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ enum WdFieldType Type,
        /*[out,retval]*/ struct FormField * * prop ) = 0;
};

struct __declspec(uuid("00020921-0000-0000-c000-000000000046"))
TableOfFigures : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeLabel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeLabel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RightAlignPageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RightAlignPageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseHeadingStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHeadingStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LowerHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LowerHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_UpperHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_UpperHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_IncludePageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludePageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_UseFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TableID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TableID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HeadingStyles (
        /*[out,retval]*/ struct HeadingStyles * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall UpdatePageNumbers ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall get_UseHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HidePageNumbersInWeb (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HidePageNumbersInWeb (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002091e-0000-0000-c000-000000000046"))
MailMergeField : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Code (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_Code (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("0002091f-0000-0000-c000-000000000046"))
MailMergeFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddAsk (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Prompt,
        /*[in]*/ VARIANT * DefaultAskText,
        /*[in]*/ VARIANT * AskOnce,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddFillIn (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Prompt,
        /*[in]*/ VARIANT * DefaultFillInText,
        /*[in]*/ VARIANT * AskOnce,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddIf (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR MergeField,
        /*[in]*/ enum WdMailMergeComparison Comparison,
        /*[in]*/ VARIANT * CompareTo,
        /*[in]*/ VARIANT * TrueAutoText,
        /*[in]*/ VARIANT * TrueText,
        /*[in]*/ VARIANT * FalseAutoText,
        /*[in]*/ VARIANT * FalseText,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddMergeRec (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddMergeSeq (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddNext (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddNextIf (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR MergeField,
        /*[in]*/ enum WdMailMergeComparison Comparison,
        /*[in]*/ VARIANT * CompareTo,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddSet (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * ValueText,
        /*[in]*/ VARIANT * ValueAutoText,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall AddSkipIf (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR MergeField,
        /*[in]*/ enum WdMailMergeComparison Comparison,
        /*[in]*/ VARIANT * CompareTo,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
};

struct __declspec(uuid("00020920-0000-0000-c000-000000000046"))
MailMerge : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_MainDocumentType (
        /*[out,retval]*/ enum WdMailMergeMainDocType * prop ) = 0;
      virtual HRESULT __stdcall put_MainDocumentType (
        /*[in]*/ enum WdMailMergeMainDocType prop ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum WdMailMergeState * prop ) = 0;
      virtual HRESULT __stdcall get_Destination (
        /*[out,retval]*/ enum WdMailMergeDestination * prop ) = 0;
      virtual HRESULT __stdcall put_Destination (
        /*[in]*/ enum WdMailMergeDestination prop ) = 0;
      virtual HRESULT __stdcall get_DataSource (
        /*[out,retval]*/ struct MailMergeDataSource * * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct MailMergeFields * * prop ) = 0;
      virtual HRESULT __stdcall get_ViewMailMergeFieldCodes (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ViewMailMergeFieldCodes (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SuppressBlankLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SuppressBlankLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailAsAttachment (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MailAsAttachment (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailAddressFieldName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MailAddressFieldName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MailSubject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MailSubject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall CreateDataSource (
        /*[in]*/ VARIANT * Name = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * HeaderRecord = &vtMissing,
        /*[in]*/ VARIANT * MSQuery = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing ) = 0;
      virtual HRESULT __stdcall CreateHeaderSource (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * HeaderRecord = &vtMissing ) = 0;
      virtual HRESULT __stdcall OpenDataSource2000 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing ) = 0;
      virtual HRESULT __stdcall OpenHeaderSource2000 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing ) = 0;
      virtual HRESULT __stdcall Execute (
        /*[in]*/ VARIANT * Pause = &vtMissing ) = 0;
      virtual HRESULT __stdcall Check ( ) = 0;
      virtual HRESULT __stdcall EditDataSource ( ) = 0;
      virtual HRESULT __stdcall EditHeaderSource ( ) = 0;
      virtual HRESULT __stdcall EditMainDocument ( ) = 0;
      virtual HRESULT __stdcall UseAddressBook (
        /*[in]*/ BSTR Type ) = 0;
      virtual HRESULT __stdcall get_HighlightMergeFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HighlightMergeFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailFormat (
        /*[out,retval]*/ enum WdMailMergeMailFormat * prop ) = 0;
      virtual HRESULT __stdcall put_MailFormat (
        /*[in]*/ enum WdMailMergeMailFormat prop ) = 0;
      virtual HRESULT __stdcall get_ShowSendToCustom (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSendToCustom (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_WizardState (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WizardState (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall OpenDataSource (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing,
        /*[in]*/ VARIANT * OpenExclusive = &vtMissing,
        /*[in]*/ VARIANT * SubType = &vtMissing ) = 0;
      virtual HRESULT __stdcall OpenHeaderSource (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * OpenExclusive = &vtMissing ) = 0;
      virtual HRESULT __stdcall ShowWizard (
        /*[in]*/ VARIANT * InitialState,
        /*[in]*/ VARIANT * ShowDocumentStep = &vtMissing,
        /*[in]*/ VARIANT * ShowTemplateStep = &vtMissing,
        /*[in]*/ VARIANT * ShowDataStep = &vtMissing,
        /*[in]*/ VARIANT * ShowWriteStep = &vtMissing,
        /*[in]*/ VARIANT * ShowPreviewStep = &vtMissing,
        /*[in]*/ VARIANT * ShowMergeStep = &vtMissing ) = 0;
};

struct __declspec(uuid("00020913-0000-0000-c000-000000000046"))
TableOfContents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_UseHeadingStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHeadingStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpperHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_UpperHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LowerHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LowerHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TableID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TableID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HeadingStyles (
        /*[out,retval]*/ struct HeadingStyles * * prop ) = 0;
      virtual HRESULT __stdcall get_RightAlignPageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RightAlignPageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IncludePageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludePageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall UpdatePageNumbers ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall get_UseHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HidePageNumbersInWeb (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HidePageNumbersInWeb (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020911-0000-0000-c000-000000000046"))
TableOfAuthorities : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Passim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Passim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_KeepEntryFormatting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_KeepEntryFormatting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Bookmark (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Bookmark (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeSequenceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeSequenceName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EntrySeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EntrySeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PageRangeSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PageRangeSeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeCategoryHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeCategoryHeader (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PageNumberSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PageNumberSeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
};

struct __declspec(uuid("0002097d-0000-0000-c000-000000000046"))
Index : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HeadingSeparator (
        /*[out,retval]*/ enum WdHeadingSeparator * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingSeparator (
        /*[in]*/ enum WdHeadingSeparator prop ) = 0;
      virtual HRESULT __stdcall get_RightAlignPageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RightAlignPageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdIndexType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdIndexType prop ) = 0;
      virtual HRESULT __stdcall get_NumberOfColumns (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NumberOfColumns (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall get_AccentedLetters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AccentedLetters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SortBy (
        /*[out,retval]*/ enum WdIndexSortBy * prop ) = 0;
      virtual HRESULT __stdcall put_SortBy (
        /*[in]*/ enum WdIndexSortBy prop ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ enum WdIndexFilter * prop ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ enum WdIndexFilter prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall get_IndexLanguage (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_IndexLanguage (
        /*[in]*/ enum WdLanguageID prop ) = 0;
};

struct __declspec(uuid("00020989-0000-0000-c000-000000000046"))
Subdocument : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_HasFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Level (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall Open (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
};

struct __declspec(uuid("00020988-0000-0000-c000-000000000046"))
Subdocuments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Expanded (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Expanded (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Subdocument * * prop ) = 0;
      virtual HRESULT __stdcall AddFromFile (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[out,retval]*/ struct Subdocument * * prop ) = 0;
      virtual HRESULT __stdcall AddFromRange (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct Subdocument * * prop ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ VARIANT * FirstSubdocument = &vtMissing,
        /*[in]*/ VARIANT * LastSubdocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
};

struct __declspec(uuid("0002098c-0000-0000-c000-000000000046"))
StoryRanges : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdStoryType Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("00020991-0000-0000-c000-000000000046"))
ListParagraphs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
};

struct __declspec(uuid("000209bb-0000-0000-c000-000000000046"))
ProofreadingErrors : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdProofreadingErrorType * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("000209e5-0000-0000-c000-000000000046"))
EmailSignatureEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct EmailSignatureEntry * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct EmailSignatureEntry * * prop ) = 0;
};

struct __declspec(uuid("000209dc-0000-0000-c000-000000000046"))
EmailSignature : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_NewMessageSignature (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NewMessageSignature (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ReplyMessageSignature (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ReplyMessageSignature (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EmailSignatureEntries (
        /*[out,retval]*/ struct EmailSignatureEntries * * prop ) = 0;
};

struct __declspec(uuid("79635bf1-bd1d-4b3f-a520-c1106f1aaad8"))
Break : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_PageIndex (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("16be9309-d708-4322-bb1a-b056f58d17ea"))
Breaks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Break * * prop ) = 0;
};

struct __declspec(uuid("dd947d72-f33c-4198-9bdf-f86181d05e41"))
Editor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_NextRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall DeleteAll ( ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
};

struct __declspec(uuid("aed7e08c-14f0-4f33-921d-4c5353137bf6"))
Editors : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Editor * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * EditorID,
        /*[out,retval]*/ struct Editor * * prop ) = 0;
};

struct __declspec(uuid("65e515d5-f50b-4951-8f38-fa6ac8707387"))
OMathBreak : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_AlignAt (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AlignAt (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("e2e0f3a7-204c-40c5-baa5-290f374fdf5a"))
OMathBreaks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathBreak * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct OMathBreak * * prop ) = 0;
};

struct __declspec(uuid("9e6b5ec5-e8e4-40af-9540-6203f71e2823"))
CoAuthUpdate : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("30225cfc-5a71-4fe6-b527-90a52c54ae77"))
CoAuthUpdates : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct CoAuthUpdate * * prop ) = 0;
};

struct __declspec(uuid("000209c0-0000-0000-c000-000000000046"))
ListFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ListLevelNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ListLevelNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_List (
        /*[out,retval]*/ struct List * * prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplate (
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
      virtual HRESULT __stdcall get_ListValue (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_SingleList (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SingleListTemplate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ListType (
        /*[out,retval]*/ enum WdListType * prop ) = 0;
      virtual HRESULT __stdcall get_ListString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall CanContinuePreviousList (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[out,retval]*/ enum WdContinue * prop ) = 0;
      virtual HRESULT __stdcall RemoveNumbers (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall ConvertNumbersToText (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall CountNumberedItems (
        /*[in]*/ VARIANT * NumberType,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall ApplyBulletDefaultOld ( ) = 0;
      virtual HRESULT __stdcall ApplyNumberDefaultOld ( ) = 0;
      virtual HRESULT __stdcall ApplyOutlineNumberDefaultOld ( ) = 0;
      virtual HRESULT __stdcall ApplyListTemplateOld (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * ApplyTo = &vtMissing ) = 0;
      virtual HRESULT __stdcall ListOutdent ( ) = 0;
      virtual HRESULT __stdcall ListIndent ( ) = 0;
      virtual HRESULT __stdcall ApplyBulletDefault (
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall ApplyNumberDefault (
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall ApplyOutlineNumberDefault (
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall ApplyListTemplate (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * ApplyTo = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_ListPictureBullet (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall ApplyListTemplateWithLevel (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * ApplyTo = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing,
        /*[in]*/ VARIANT * ApplyLevel = &vtMissing ) = 0;
};

struct __declspec(uuid("0002095a-0000-0000-c000-000000000046"))
Sections : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Section * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Section * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPageSetup (
        /*[out,retval]*/ struct wordPageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_wordPageSetup (
        /*[in]*/ struct wordPageSetup * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Section * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Range,
        /*[in]*/ VARIANT * Start,
        /*[out,retval]*/ struct Section * * prop ) = 0;
};

struct __declspec(uuid("00020959-0000-0000-c000-000000000046"))
Section : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPageSetup (
        /*[out,retval]*/ struct wordPageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_wordPageSetup (
        /*[in]*/ struct wordPageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_Headers (
        /*[out,retval]*/ struct wordHeadersFooters * * prop ) = 0;
      virtual HRESULT __stdcall get_Footers (
        /*[out,retval]*/ struct wordHeadersFooters * * prop ) = 0;
      virtual HRESULT __stdcall get_ProtectedForForms (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ProtectedForForms (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
};

struct __declspec(uuid("00020951-0000-0000-c000-000000000046"))
wordTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordColumns (
        /*[out,retval]*/ struct wordColumns * * prop ) = 0;
      virtual HRESULT __stdcall get_wordRows (
        /*[out,retval]*/ struct wordRows * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Uniform (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatType (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall SortAscending ( ) = 0;
      virtual HRESULT __stdcall SortDescending ( ) = 0;
      virtual HRESULT __stdcall AutoFormat (
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ApplyBorders = &vtMissing,
        /*[in]*/ VARIANT * ApplyShading = &vtMissing,
        /*[in]*/ VARIANT * ApplyFont = &vtMissing,
        /*[in]*/ VARIANT * ApplyColor = &vtMissing,
        /*[in]*/ VARIANT * ApplyHeadingRows = &vtMissing,
        /*[in]*/ VARIANT * ApplyLastRow = &vtMissing,
        /*[in]*/ VARIANT * ApplyFirstColumn = &vtMissing,
        /*[in]*/ VARIANT * ApplyLastColumn = &vtMissing,
        /*[in]*/ VARIANT * AutoFit = &vtMissing ) = 0;
      virtual HRESULT __stdcall UpdateAutoFormat ( ) = 0;
      virtual HRESULT __stdcall ConvertToTextOld (
        /*[in]*/ VARIANT * Separator,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall wordCell (
        /*[in]*/ long wordRow,
        /*[in]*/ long wordColumn,
        /*[out,retval]*/ struct wordCell * * prop ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ VARIANT * BeforeRow,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall ConvertToText (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NestedTables,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall AutoFitBehavior (
        /*[in]*/ enum WdAutoFitBehavior Behavior ) = 0;
      virtual HRESULT __stdcall Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_AllowPageBreaks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPageBreaks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowAutoFit (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowAutoFit (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum WdTableDirection * prop ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum WdTableDirection prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleHeadingRows (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleHeadingRows (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleLastRow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleLastRow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleFirstColumn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleFirstColumn (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleLastColumn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleLastColumn (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleRowBands (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleRowBands (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleColumnBands (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleColumnBands (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall ApplyStyleDirectFormatting (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Descr (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Descr (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("0002094d-0000-0000-c000-000000000046"))
Tables : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ long NumRows,
        /*[in]*/ long NumColumns,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ long NumRows,
        /*[in]*/ long NumColumns,
        /*[in]*/ VARIANT * DefaultTableBehavior,
        /*[in]*/ VARIANT * AutoFitBehavior,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020950-0000-0000-c000-000000000046"))
wordRow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AllowBreakAcrossPages (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowBreakAcrossPages (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdRowAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdRowAlignment prop ) = 0;
      virtual HRESULT __stdcall get_HeadingFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingFormat (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBetweenColumns (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBetweenColumns (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_IsLast (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_IsFirst (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall SetLeftIndent (
        /*[in]*/ float LeftIndent,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall SetHeight (
        /*[in]*/ float RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall ConvertToTextOld (
        /*[in]*/ VARIANT * Separator,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall ConvertToText (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NestedTables,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("0002094c-0000-0000-c000-000000000046"))
wordRows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_AllowBreakAcrossPages (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowBreakAcrossPages (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdRowAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdRowAlignment prop ) = 0;
      virtual HRESULT __stdcall get_HeadingFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingFormat (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBetweenColumns (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBetweenColumns (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * BeforeRow,
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall SetLeftIndent (
        /*[in]*/ float LeftIndent,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall SetHeight (
        /*[in]*/ float RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall ConvertToTextOld (
        /*[in]*/ VARIANT * Separator,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall DistributeHeight ( ) = 0;
      virtual HRESULT __stdcall ConvertToText (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NestedTables,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_WrapAroundText (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WrapAroundText (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_AllowOverlap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowOverlap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum WdTableDirection * prop ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum WdTableDirection prop ) = 0;
};

struct __declspec(uuid("0002094f-0000-0000-c000-000000000046"))
wordColumn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_IsFirst (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_IsLast (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall AutoFit ( ) = 0;
      virtual HRESULT __stdcall SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("0002094e-0000-0000-c000-000000000046"))
wordCell : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RowIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ColumnIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum WdCellVerticalAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum WdCellVerticalAlignment prop ) = 0;
      virtual HRESULT __stdcall get_wordColumn (
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall get_wordRow (
        /*[out,retval]*/ struct wordRow * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct wordCell * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct wordCell * * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT * ShiftCells = &vtMissing ) = 0;
      virtual HRESULT __stdcall Formula (
        /*[in]*/ VARIANT * Formula = &vtMissing,
        /*[in]*/ VARIANT * NumFormat = &vtMissing ) = 0;
      virtual HRESULT __stdcall SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall SetHeight (
        /*[in]*/ VARIANT * RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ struct wordCell * MergeTo ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ VARIANT * NumRows = &vtMissing,
        /*[in]*/ VARIANT * NumColumns = &vtMissing ) = 0;
      virtual HRESULT __stdcall AutoSum ( ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FitText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FitText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("0002094b-0000-0000-c000-000000000046"))
wordColumns : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * BeforeColumn,
        /*[out,retval]*/ struct wordColumn * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall AutoFit ( ) = 0;
      virtual HRESULT __stdcall DistributeWidth ( ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("0002094a-0000-0000-c000-000000000046"))
Cells : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum WdCellVerticalAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum WdCellVerticalAlignment prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct wordCell * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * BeforeCell,
        /*[out,retval]*/ struct wordCell * * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT * ShiftCells = &vtMissing ) = 0;
      virtual HRESULT __stdcall SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall SetHeight (
        /*[in]*/ VARIANT * RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall Merge ( ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ VARIANT * NumRows = &vtMissing,
        /*[in]*/ VARIANT * NumColumns = &vtMissing,
        /*[in]*/ VARIANT * MergeBeforeSplit = &vtMissing ) = 0;
      virtual HRESULT __stdcall DistributeHeight ( ) = 0;
      virtual HRESULT __stdcall DistributeWidth ( ) = 0;
      virtual HRESULT __stdcall AutoFit ( ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("00020930-0000-0000-c000-000000000046"))
Fields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall ToggleShowCodes ( ) = 0;
      virtual HRESULT __stdcall Update (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Unlink ( ) = 0;
      virtual HRESULT __stdcall UpdateSource ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Type,
        /*[in]*/ VARIANT * Text,
        /*[in]*/ VARIANT * PreserveFormatting,
        /*[out,retval]*/ struct Field * * prop ) = 0;
};

struct __declspec(uuid("0002092f-0000-0000-c000-000000000046"))
Field : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Code (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_Code (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Kind (
        /*[out,retval]*/ enum WdFieldKind * prop ) = 0;
      virtual HRESULT __stdcall get_Result (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_Result (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Data (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Data (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ShowCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordLinkFormat (
        /*[out,retval]*/ struct wordLinkFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordOLEFormat (
        /*[out,retval]*/ struct wordOLEFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_InlineShape (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Update (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Unlink ( ) = 0;
      virtual HRESULT __stdcall UpdateSource ( ) = 0;
      virtual HRESULT __stdcall DoClick ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("00020922-0000-0000-c000-000000000046"))
TablesOfFigures : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdTofFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdTofFormat prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TableOfFigures * * prop ) = 0;
      virtual HRESULT __stdcall AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Caption,
        /*[in]*/ VARIANT * IncludeLabel,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[out,retval]*/ struct TableOfFigures * * prop ) = 0;
      virtual HRESULT __stdcall MarkEntry (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry,
        /*[in]*/ VARIANT * EntryAutoText,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Caption,
        /*[in]*/ VARIANT * IncludeLabel,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[in]*/ VARIANT * UseHyperlinks,
        /*[in]*/ VARIANT * HidePageNumbersInWeb,
        /*[out,retval]*/ struct TableOfFigures * * prop ) = 0;
};

struct __declspec(uuid("00020914-0000-0000-c000-000000000046"))
TablesOfContents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdTocFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdTocFormat prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
      virtual HRESULT __stdcall AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
      virtual HRESULT __stdcall MarkEntry (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry,
        /*[in]*/ VARIANT * EntryAutoText,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall Add2000 (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[in]*/ VARIANT * UseHyperlinks,
        /*[in]*/ VARIANT * HidePageNumbersInWeb,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[in]*/ VARIANT * UseHyperlinks,
        /*[in]*/ VARIANT * HidePageNumbersInWeb,
        /*[in]*/ VARIANT * UseOutlineLevels,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
};

struct __declspec(uuid("00020912-0000-0000-c000-000000000046"))
TablesOfAuthorities : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdToaFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdToaFormat prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TableOfAuthorities * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Category,
        /*[in]*/ VARIANT * Bookmark,
        /*[in]*/ VARIANT * Passim,
        /*[in]*/ VARIANT * KeepEntryFormatting,
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * IncludeSequenceName,
        /*[in]*/ VARIANT * EntrySeparator,
        /*[in]*/ VARIANT * PageRangeSeparator,
        /*[in]*/ VARIANT * IncludeCategoryHeader,
        /*[in]*/ VARIANT * PageNumberSeparator,
        /*[out,retval]*/ struct TableOfAuthorities * * prop ) = 0;
      virtual HRESULT __stdcall NextCitation (
        /*[in]*/ BSTR ShortCitation ) = 0;
      virtual HRESULT __stdcall MarkCitation (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR ShortCitation,
        /*[in]*/ VARIANT * LongCitation,
        /*[in]*/ VARIANT * LongCitationAutoText,
        /*[in]*/ VARIANT * Category,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall MarkAllCitations (
        /*[in]*/ BSTR ShortCitation,
        /*[in]*/ VARIANT * LongCitation = &vtMissing,
        /*[in]*/ VARIANT * LongCitationAutoText = &vtMissing,
        /*[in]*/ VARIANT * Category = &vtMissing ) = 0;
};

struct __declspec(uuid("0002097c-0000-0000-c000-000000000046"))
Indexes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdIndexFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdIndexFormat prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Index * * prop ) = 0;
      virtual HRESULT __stdcall AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * HeadingSeparator,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * Type,
        /*[in]*/ VARIANT * NumberOfColumns,
        /*[in]*/ VARIANT * AccentedLetters,
        /*[out,retval]*/ struct Index * * prop ) = 0;
      virtual HRESULT __stdcall MarkEntry (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry,
        /*[in]*/ VARIANT * EntryAutoText,
        /*[in]*/ VARIANT * CrossReference,
        /*[in]*/ VARIANT * CrossReferenceAutoText,
        /*[in]*/ VARIANT * BookmarkName,
        /*[in]*/ VARIANT * Bold,
        /*[in]*/ VARIANT * Italic,
        /*[in]*/ VARIANT * Reading,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall MarkAllEntries (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry = &vtMissing,
        /*[in]*/ VARIANT * EntryAutoText = &vtMissing,
        /*[in]*/ VARIANT * CrossReference = &vtMissing,
        /*[in]*/ VARIANT * CrossReferenceAutoText = &vtMissing,
        /*[in]*/ VARIANT * BookmarkName = &vtMissing,
        /*[in]*/ VARIANT * Bold = &vtMissing,
        /*[in]*/ VARIANT * Italic = &vtMissing ) = 0;
      virtual HRESULT __stdcall AutoMarkEntries (
        /*[in]*/ BSTR ConcordanceFileName ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * HeadingSeparator,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * Type,
        /*[in]*/ VARIANT * NumberOfColumns,
        /*[in]*/ VARIANT * AccentedLetters,
        /*[in]*/ VARIANT * SortBy,
        /*[in]*/ VARIANT * IndexLanguage,
        /*[out,retval]*/ struct Index * * prop ) = 0;
};

struct __declspec(uuid("0002092d-0000-0000-c000-000000000046"))
Styles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Type,
        /*[out,retval]*/ struct Style * * prop ) = 0;
};

struct __declspec(uuid("0002092c-0000-0000-c000-000000000046"))
Style : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_BaseStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_BaseStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdStyleType * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_NextParagraphStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_NextParagraphStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_InUse (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_AutomaticallyUpdate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutomaticallyUpdate (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplate (
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
      virtual HRESULT __stdcall get_ListLevelNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall LinkToListTemplate (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ListLevelNumber = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LinkStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_LinkStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Visibility (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visibility (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoSpaceBetweenParagraphsOfSameStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoSpaceBetweenParagraphsOfSameStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordTable (
        /*[out,retval]*/ struct wordTableStyle * * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_UnhideWhenUsed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UnhideWhenUsed (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_QuickStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_QuickStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Linked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("00020918-0000-0000-c000-000000000046"))
Envelope : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddress (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultPrintBarCode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultPrintBarCode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultPrintFIMA (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultPrintFIMA (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultHeight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultHeight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DefaultWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DefaultSize (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultSize (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DefaultOmitReturnAddress (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultOmitReturnAddress (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FeedSource (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_FeedSource (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_AddressFromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_AddressFromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_AddressFromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_AddressFromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressFromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddressFromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressFromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddressFromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_AddressStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultOrientation (
        /*[out,retval]*/ enum WdEnvelopeOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultOrientation (
        /*[in]*/ enum WdEnvelopeOrientation prop ) = 0;
      virtual HRESULT __stdcall get_DefaultFaceUp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultFaceUp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall Insert2000 (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing ) = 0;
      virtual HRESULT __stdcall PrintOut2000 (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing ) = 0;
      virtual HRESULT __stdcall UpdateDocument ( ) = 0;
      virtual HRESULT __stdcall wordOptions ( ) = 0;
      virtual HRESULT __stdcall get_Vertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Vertical (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RecipientNamefromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientNamefromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientNamefromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientNamefromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientPostalfromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientPostalfromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientPostalfromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientPostalfromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderNamefromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderNamefromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderNamefromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderNamefromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderPostalfromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderPostalfromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderPostalfromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderPostalfromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostage = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromTop = &vtMissing ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostage = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromTop = &vtMissing ) = 0;
};

struct __declspec(uuid("00020981-0000-0000-c000-000000000046"))
Revision : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdRevisionType * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Accept ( ) = 0;
      virtual HRESULT __stdcall Reject ( ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_FormatDescription (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_MovedRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
};

struct __declspec(uuid("00020980-0000-0000-c000-000000000046"))
Revisions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Revision * * prop ) = 0;
      virtual HRESULT __stdcall AcceptAll ( ) = 0;
      virtual HRESULT __stdcall RejectAll ( ) = 0;
};

struct __declspec(uuid("000209d7-0000-0000-c000-000000000046"))
EmailAuthor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct Style * * prop ) = 0;
};

struct __declspec(uuid("000209db-0000-0000-c000-000000000046"))
EmailOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_UseThemeStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseThemeStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkCommentsWith (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MarkCommentsWith (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MarkComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MarkComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EmailSignature (
        /*[out,retval]*/ struct EmailSignature * * prop ) = 0;
      virtual HRESULT __stdcall get_ComposeStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_ReplyStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_ThemeName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ThemeName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Dummy2 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall get_NewColorOnReply (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NewColorOnReply (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PlainTextStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_UseThemeStyleOnReply (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseThemeStyleOnReply (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyHeadings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyHeadings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBulletedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBulletedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyNumberedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyNumberedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceQuotes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceQuotes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceSymbols (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceSymbols (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceOrdinals (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceOrdinals (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFractions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFractions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDefineStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDefineStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyTables (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyTables (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyFirstIndents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyFirstIndents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyDates (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyDates (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeMatchParentheses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeMatchParentheses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeAutoLetterWizard (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeAutoLetterWizard (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertOvers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertOvers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HTMLFidelity (
        /*[out,retval]*/ enum WdEmailHTMLFidelity * prop ) = 0;
      virtual HRESULT __stdcall put_HTMLFidelity (
        /*[in]*/ enum WdEmailHTMLFidelity prop ) = 0;
      virtual HRESULT __stdcall get_EmbedSmartTag (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedSmartTag (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TabIndentKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TabIndentKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("000209dd-0000-0000-c000-000000000046"))
Email : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CurrentEmailAuthor (
        /*[out,retval]*/ struct EmailAuthor * * prop ) = 0;
};

struct __declspec(uuid("00020975-0000-0000-c000-000000000046"))
wordSelection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormattedText (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_FormattedText (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdSelectionType * prop ) = 0;
      virtual HRESULT __stdcall get_StoryType (
        /*[out,retval]*/ enum WdStoryType * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Words (
        /*[out,retval]*/ struct Words * * prop ) = 0;
      virtual HRESULT __stdcall get_Sentences (
        /*[out,retval]*/ struct Sentences * * prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct Characters * * prop ) = 0;
      virtual HRESULT __stdcall get_Footnotes (
        /*[out,retval]*/ struct Footnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Endnotes (
        /*[out,retval]*/ struct Endnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_wordComments (
        /*[out,retval]*/ struct wordComments * * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * prop ) = 0;
      virtual HRESULT __stdcall get_Paragraphs (
        /*[out,retval]*/ struct Paragraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct Fields * * prop ) = 0;
      virtual HRESULT __stdcall get_FormFields (
        /*[out,retval]*/ struct FormFields * * prop ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ struct Frames * * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_wordPageSetup (
        /*[out,retval]*/ struct wordPageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_wordPageSetup (
        /*[in]*/ struct wordPageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_Bookmarks (
        /*[out,retval]*/ struct Bookmarks * * prop ) = 0;
      virtual HRESULT __stdcall get_StoryLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDOther (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDOther (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_wordHyperlinks (
        /*[out,retval]*/ struct wordHyperlinks * * prop ) = 0;
      virtual HRESULT __stdcall get_wordColumns (
        /*[out,retval]*/ struct wordColumns * * prop ) = 0;
      virtual HRESULT __stdcall get_wordRows (
        /*[out,retval]*/ struct wordRows * * prop ) = 0;
      virtual HRESULT __stdcall get_wordHeaderFooter (
        /*[out,retval]*/ struct wordHeaderFooter * * prop ) = 0;
      virtual HRESULT __stdcall get_IsEndOfRowMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_BookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreviousBookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Find (
        /*[out,retval]*/ struct Find * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Information (
        /*[in]*/ enum WdInformation Type,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Flags (
        /*[out,retval]*/ enum WdSelectionFlags * prop ) = 0;
      virtual HRESULT __stdcall put_Flags (
        /*[in]*/ enum WdSelectionFlags prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_StartIsActive (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StartIsActive (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IPAtEndOfLine (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ExtendMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ExtendMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ColumnSelectMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ColumnSelectMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum WdTextOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum WdTextOrientation prop ) = 0;
      virtual HRESULT __stdcall get_InlineShapes (
        /*[out,retval]*/ struct InlineShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_wordShapeRange (
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall SetRange (
        /*[in]*/ long Start,
        /*[in]*/ long End ) = 0;
      virtual HRESULT __stdcall Collapse (
        /*[in]*/ VARIANT * Direction = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertBefore (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall InsertAfter (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall Next (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Previous (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall StartOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall EndOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveStart (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveEnd (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveStartWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveEndWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveStartUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveEndUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall InsertBreak (
        /*[in]*/ VARIANT * Type = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Attachment = &vtMissing ) = 0;
      virtual HRESULT __stdcall InStory (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall InRange (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Expand (
        /*[in]*/ VARIANT * Unit,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall InsertParagraph ( ) = 0;
      virtual HRESULT __stdcall InsertParagraphAfter ( ) = 0;
      virtual HRESULT __stdcall ConvertToTableOld (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall InsertDateTimeOld (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertSymbol (
        /*[in]*/ long CharacterNumber,
        /*[in]*/ VARIANT * wordFont = &vtMissing,
        /*[in]*/ VARIANT * Unicode = &vtMissing,
        /*[in]*/ VARIANT * Bias = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCrossReference_2002 (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCaptionXP (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing ) = 0;
      virtual HRESULT __stdcall CopyAsPicture ( ) = 0;
      virtual HRESULT __stdcall SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall SortAscending ( ) = 0;
      virtual HRESULT __stdcall SortDescending ( ) = 0;
      virtual HRESULT __stdcall IsEqual (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Calculate (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall GoTo (
        /*[in]*/ VARIANT * What,
        /*[in]*/ VARIANT * Which,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall GoToNext (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall GoToPrevious (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ VARIANT * IconIndex = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Placement = &vtMissing,
        /*[in]*/ VARIANT * DisplayAsIcon = &vtMissing,
        /*[in]*/ VARIANT * DataType = &vtMissing,
        /*[in]*/ VARIANT * IconFileName = &vtMissing,
        /*[in]*/ VARIANT * IconLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall PreviousField (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall NextField (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall InsertParagraphBefore ( ) = 0;
      virtual HRESULT __stdcall InsertCells (
        /*[in]*/ VARIANT * ShiftCells = &vtMissing ) = 0;
      virtual HRESULT __stdcall Extend (
        /*[in]*/ VARIANT * Character = &vtMissing ) = 0;
      virtual HRESULT __stdcall Shrink ( ) = 0;
      virtual HRESULT __stdcall MoveLeft (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveRight (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveUp (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall MoveDown (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall HomeKey (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall EndKey (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall EscapeKey ( ) = 0;
      virtual HRESULT __stdcall TypeText (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall CopyFormat ( ) = 0;
      virtual HRESULT __stdcall PasteFormat ( ) = 0;
      virtual HRESULT __stdcall TypeParagraph ( ) = 0;
      virtual HRESULT __stdcall TypeBackspace ( ) = 0;
      virtual HRESULT __stdcall NextSubdocument ( ) = 0;
      virtual HRESULT __stdcall PreviousSubdocument ( ) = 0;
      virtual HRESULT __stdcall SelectColumn ( ) = 0;
      virtual HRESULT __stdcall SelectCurrentFont ( ) = 0;
      virtual HRESULT __stdcall SelectCurrentAlignment ( ) = 0;
      virtual HRESULT __stdcall SelectCurrentSpacing ( ) = 0;
      virtual HRESULT __stdcall SelectCurrentIndent ( ) = 0;
      virtual HRESULT __stdcall SelectCurrentTabs ( ) = 0;
      virtual HRESULT __stdcall SelectCurrentColor ( ) = 0;
      virtual HRESULT __stdcall CreateTextbox ( ) = 0;
      virtual HRESULT __stdcall WholeStory ( ) = 0;
      virtual HRESULT __stdcall SelectRow ( ) = 0;
      virtual HRESULT __stdcall SplitTable ( ) = 0;
      virtual HRESULT __stdcall InsertRows (
        /*[in]*/ VARIANT * NumRows = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertColumns ( ) = 0;
      virtual HRESULT __stdcall InsertFormula (
        /*[in]*/ VARIANT * Formula = &vtMissing,
        /*[in]*/ VARIANT * NumberFormat = &vtMissing ) = 0;
      virtual HRESULT __stdcall NextRevision (
        /*[in]*/ VARIANT * Wrap,
        /*[out,retval]*/ struct Revision * * prop ) = 0;
      virtual HRESULT __stdcall PreviousRevision (
        /*[in]*/ VARIANT * Wrap,
        /*[out,retval]*/ struct Revision * * prop ) = 0;
      virtual HRESULT __stdcall PasteAsNestedTable ( ) = 0;
      virtual HRESULT __stdcall CreateAutoTextEntry (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR StyleName,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
      virtual HRESULT __stdcall DetectLanguage ( ) = 0;
      virtual HRESULT __stdcall SelectCell ( ) = 0;
      virtual HRESULT __stdcall InsertRowsBelow (
        /*[in]*/ VARIANT * NumRows = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertColumnsRight ( ) = 0;
      virtual HRESULT __stdcall InsertRowsAbove (
        /*[in]*/ VARIANT * NumRows = &vtMissing ) = 0;
      virtual HRESULT __stdcall RtlRun ( ) = 0;
      virtual HRESULT __stdcall LtrRun ( ) = 0;
      virtual HRESULT __stdcall BoldRun ( ) = 0;
      virtual HRESULT __stdcall ItalicRun ( ) = 0;
      virtual HRESULT __stdcall RtlPara ( ) = 0;
      virtual HRESULT __stdcall LtrPara ( ) = 0;
      virtual HRESULT __stdcall InsertDateTime (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing,
        /*[in]*/ VARIANT * DateLanguage = &vtMissing,
        /*[in]*/ VARIANT * CalendarType = &vtMissing ) = 0;
      virtual HRESULT __stdcall Sort2000 (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall ConvertToTable (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[in]*/ VARIANT * AutoFitBehavior,
        /*[in]*/ VARIANT * DefaultTableBehavior,
        /*[out,retval]*/ struct wordTable * * prop ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TopLevelTables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageDetected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageDetected (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FitTextWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FitTextWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall ClearFormatting ( ) = 0;
      virtual HRESULT __stdcall PasteAppendTable ( ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
      virtual HRESULT __stdcall get_ChildShapeRange (
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall get_HasChildShapeRange (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_FootnoteOptions (
        /*[out,retval]*/ struct FootnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_EndnoteOptions (
        /*[out,retval]*/ struct EndnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall ToggleCharacterCode ( ) = 0;
      virtual HRESULT __stdcall PasteAndFormat (
        /*[in]*/ enum WdRecoveryType Type ) = 0;
      virtual HRESULT __stdcall PasteExcelTable (
        /*[in]*/ VARIANT_BOOL LinkedToExcel,
        /*[in]*/ VARIANT_BOOL WordFormatting,
        /*[in]*/ VARIANT_BOOL RTF ) = 0;
      virtual HRESULT __stdcall ShrinkDiscontiguousSelection ( ) = 0;
      virtual HRESULT __stdcall InsertStyleSeparator ( ) = 0;
      virtual HRESULT __stdcall Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing,
        /*[in]*/ VARIANT * SubFieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SubFieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SubFieldNumber3 = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_XMLNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLParentNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Editors (
        /*[out,retval]*/ struct Editors * * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[in]*/ VARIANT_BOOL DataOnly,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_EnhMetaFileBits (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall GoToEditableRange (
        /*[in]*/ VARIANT * EditorID,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall InsertXML (
        /*[in]*/ BSTR XML,
        /*[in]*/ VARIANT * Transform = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCaption (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing,
        /*[in]*/ VARIANT * ExcludeLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall InsertCrossReference (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing,
        /*[in]*/ VARIANT * SeparateNumbers = &vtMissing,
        /*[in]*/ VARIANT * SeparatorString = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_OMaths (
        /*[out,retval]*/ struct OMaths * * prop ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall ClearParagraphStyle ( ) = 0;
      virtual HRESULT __stdcall ClearCharacterAllFormatting ( ) = 0;
      virtual HRESULT __stdcall ClearCharacterStyle ( ) = 0;
      virtual HRESULT __stdcall ClearCharacterDirectFormatting ( ) = 0;
      virtual HRESULT __stdcall get_ContentControls (
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentContentControl (
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall ExportAsFixedFormat (
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum WdExportFormat ExportFormat,
        /*[in]*/ VARIANT_BOOL OpenAfterExport,
        /*[in]*/ enum WdExportOptimizeFor OptimizeFor,
        /*[in]*/ VARIANT_BOOL ExportCurrentPage,
        /*[in]*/ enum WdExportItem Item,
        /*[in]*/ VARIANT_BOOL IncludeDocProps,
        /*[in]*/ VARIANT_BOOL KeepIRM,
        /*[in]*/ enum WdExportCreateBookmarks CreateBookmarks,
        /*[in]*/ VARIANT_BOOL DocStructureTags,
        /*[in]*/ VARIANT_BOOL BitmapMissingFonts,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT * FixedFormatExtClassPtr = &vtMissing ) = 0;
      virtual HRESULT __stdcall ReadingModeGrowFont ( ) = 0;
      virtual HRESULT __stdcall ReadingModeShrinkFont ( ) = 0;
      virtual HRESULT __stdcall ClearParagraphAllFormatting ( ) = 0;
      virtual HRESULT __stdcall ClearParagraphDirectFormatting ( ) = 0;
      virtual HRESULT __stdcall InsertNewPage ( ) = 0;
};

struct __declspec(uuid("000209fe-0001-0000-c000-000000000046"))
IApplicationEvents2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Startup ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall DocumentChange ( ) = 0;
      virtual HRESULT __stdcall DocumentOpen (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall DocumentBeforeClose (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DocumentBeforePrint (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DocumentBeforeSave (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * SaveAsUI,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall NewDocument (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall WindowActivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowDeactivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowSelectionChange (
        /*[in]*/ struct wordSelection * Sel ) = 0;
      virtual HRESULT __stdcall WindowBeforeRightClick (
        /*[in]*/ struct wordSelection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WindowBeforeDoubleClick (
        /*[in]*/ struct wordSelection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
};

struct __declspec(uuid("00020a00-0001-0000-c000-000000000046"))
IApplicationEvents3 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Startup ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall DocumentChange ( ) = 0;
      virtual HRESULT __stdcall DocumentOpen (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall DocumentBeforeClose (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DocumentBeforePrint (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DocumentBeforeSave (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * SaveAsUI,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall NewDocument (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall WindowActivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowDeactivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowSelectionChange (
        /*[in]*/ struct wordSelection * Sel ) = 0;
      virtual HRESULT __stdcall WindowBeforeRightClick (
        /*[in]*/ struct wordSelection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WindowBeforeDoubleClick (
        /*[in]*/ struct wordSelection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall EPostagePropertyDialog (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall EPostageInsert (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeAfterMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct _Document * DocResult ) = 0;
      virtual HRESULT __stdcall MailMergeAfterRecordMerge (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeBeforeMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ long StartRecord,
        /*[in]*/ long EndRecord,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall MailMergeBeforeRecordMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall MailMergeDataSourceLoad (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeDataSourceValidate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall MailMergeWizardSendToCustom (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeWizardStateChange (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ int * FromState,
        /*[in]*/ int * ToState,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall WindowSize (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
};

struct __declspec(uuid("00020984-0000-0000-c000-000000000046"))
wordHeadersFooters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdHeaderFooterIndex Index,
        /*[out,retval]*/ struct wordHeaderFooter * * prop ) = 0;
};

struct __declspec(uuid("00020985-0000-0000-c000-000000000046"))
wordHeaderFooter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ enum WdHeaderFooterIndex * prop ) = 0;
      virtual HRESULT __stdcall get_IsHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Exists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Exists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PageNumbers (
        /*[out,retval]*/ struct PageNumbers * * prop ) = 0;
      virtual HRESULT __stdcall get_LinkToPrevious (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LinkToPrevious (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordShapes (
        /*[out,retval]*/ struct wordShapes * * prop ) = 0;
};

struct __declspec(uuid("0002098d-0000-0000-c000-000000000046"))
ListLevel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TrailingCharacter (
        /*[out,retval]*/ enum WdTrailingCharacter * prop ) = 0;
      virtual HRESULT __stdcall put_TrailingCharacter (
        /*[in]*/ enum WdTrailingCharacter prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdListNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdListNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_NumberPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_NumberPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdListLevelAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdListLevelAlignment prop ) = 0;
      virtual HRESULT __stdcall get_TextPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TextPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TabPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TabPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ResetOnHigherOld (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ResetOnHigherOld (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StartAt (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartAt (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LinkedStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_LinkedStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_wordFont (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_wordFont (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ResetOnHigher (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ResetOnHigher (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PictureBullet (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall ApplyPictureBullet (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
};

struct __declspec(uuid("0002098e-0000-0000-c000-000000000046"))
ListLevels : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ListLevel * * prop ) = 0;
};

struct __declspec(uuid("0002098f-0000-0000-c000-000000000046"))
ListTemplate : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OutlineNumbered (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineNumbered (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ListLevels (
        /*[out,retval]*/ struct ListLevels * * prop ) = 0;
      virtual HRESULT __stdcall Convert (
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
};

struct __declspec(uuid("00020990-0000-0000-c000-000000000046"))
ListTemplates : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * OutlineNumbered,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
};

struct __declspec(uuid("00020992-0000-0000-c000-000000000046"))
List : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ListParagraphs (
        /*[out,retval]*/ struct ListParagraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_SingleListTemplate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall ConvertNumbersToText (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall RemoveNumbers (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall CountNumberedItems (
        /*[in]*/ VARIANT * NumberType,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall ApplyListTemplateOld (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing ) = 0;
      virtual HRESULT __stdcall CanContinuePreviousList (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[out,retval]*/ enum WdContinue * prop ) = 0;
      virtual HRESULT __stdcall ApplyListTemplate (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall ApplyListTemplateWithLevel (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing,
        /*[in]*/ VARIANT * ApplyLevel = &vtMissing ) = 0;
};

struct __declspec(uuid("00020993-0000-0000-c000-000000000046"))
Lists : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct List * * prop ) = 0;
};

struct __declspec(uuid("00020994-0000-0000-c000-000000000046"))
ListGallery : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ListTemplates (
        /*[out,retval]*/ struct ListTemplates * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Modified (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Reset (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("00020995-0000-0000-c000-000000000046"))
ListGalleries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdListGalleryType Index,
        /*[out,retval]*/ struct ListGallery * * prop ) = 0;
};

struct __declspec(uuid("0002099c-0000-0000-c000-000000000046"))
wordHyperlinks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordHyperlink * * prop ) = 0;
      virtual HRESULT __stdcall _Add (
        /*[in]*/ IDispatch * Anchor,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * SubAddress,
        /*[out,retval]*/ struct wordHyperlink * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ IDispatch * Anchor,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * SubAddress,
        /*[in]*/ VARIANT * ScreenTip,
        /*[in]*/ VARIANT * TextToDisplay,
        /*[in]*/ VARIANT * Target,
        /*[out,retval]*/ struct wordHyperlink * * prop ) = 0;
};

struct __declspec(uuid("0002099d-0000-0000-c000-000000000046"))
wordHyperlink : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_AddressOld (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoHyperlinkType * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordShape (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_SubAddressOld (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ExtraInfoRequired (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Follow (
        /*[in]*/ VARIANT * NewWindow = &vtMissing,
        /*[in]*/ VARIANT * AddHistory = &vtMissing,
        /*[in]*/ VARIANT * ExtraInfo = &vtMissing,
        /*[in]*/ VARIANT * Method = &vtMissing,
        /*[in]*/ VARIANT * HeaderInfo = &vtMissing ) = 0;
      virtual HRESULT __stdcall AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall CreateNewDocument (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL EditNow,
        /*[in]*/ VARIANT_BOOL Overwrite ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SubAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SubAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EmailSubject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EmailSubject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ScreenTip (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenTip (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TextToDisplay (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TextToDisplay (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("0002099f-0000-0000-c000-000000000046"))
wordShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddCurve (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * SaveWithDocument,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddPolyline (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddShape (
        /*[in]*/ long Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct wordFreeformBuilder * * prop ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall AddOLEObject (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * DisplayAsIcon,
        /*[in]*/ VARIANT * IconFileName,
        /*[in]*/ VARIANT * IconIndex,
        /*[in]*/ VARIANT * IconLabel,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddOLEControl (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddDiagram (
        /*[in]*/ enum Office::MsoDiagramType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddCanvas (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddChart (
        /*[in]*/ enum Office::XlChartType Type,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddSmartArt (
        /*[in]*/ struct Office::SmartArtLayout * Layout,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
};

struct __declspec(uuid("000209b5-0000-0000-c000-000000000046"))
wordShapeRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordAdjustments (
        /*[out,retval]*/ struct wordAdjustments * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * prop ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType prop ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct wordCalloutFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordConnectorFormat (
        /*[out,retval]*/ struct wordConnectorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct wordGroupShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct wordLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct wordShapeNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_wordPictureFormat (
        /*[out,retval]*/ struct wordPictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct wordShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct wordTextEffectFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordTextFrame (
        /*[out,retval]*/ struct wordTextFrame * * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct wordThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * prop ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordHyperlink (
        /*[out,retval]*/ struct wordHyperlink * * prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_LockAnchor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LockAnchor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WrapFormat (
        /*[out,retval]*/ struct WrapFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Anchor (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall Align (
        /*[in]*/ enum Office::MsoAlignCmd Align,
        /*[in]*/ long RelativeTo ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Distribute (
        /*[in]*/ enum Office::MsoDistributeCmd Distribute,
        /*[in]*/ long RelativeTo ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall PickUp ( ) = 0;
      virtual HRESULT __stdcall Regroup (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT * Replace = &vtMissing ) = 0;
      virtual HRESULT __stdcall SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall ConvertToFrame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall ConvertToInlineShape (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordDiagram (
        /*[out,retval]*/ struct Office::IMsoDiagram * * prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordDiagramNode (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct wordCanvasShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall put_RTF (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LayoutInCell (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LayoutInCell (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LeftRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_WidthRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_WidthRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalSize (
        /*[out,retval]*/ enum WdRelativeHorizontalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalSize (
        /*[in]*/ enum WdRelativeHorizontalSize prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalSize (
        /*[out,retval]*/ enum WdRelativeVerticalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalSize (
        /*[in]*/ enum WdRelativeVerticalSize prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct wordSoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct wordGlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct wordReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame2 (
        /*[out,retval]*/ struct Office::TextFrame2 * * prop ) = 0;
      virtual HRESULT __stdcall get_ShapeStyle (
        /*[out,retval]*/ enum Office::MsoShapeStyleIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ShapeStyle (
        /*[in]*/ enum Office::MsoShapeStyleIndex prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundStyle (
        /*[out,retval]*/ enum Office::MsoBackgroundStyleIndex * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundStyle (
        /*[in]*/ enum Office::MsoBackgroundStyleIndex prop ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209b6-0000-0000-c000-000000000046"))
wordGroupShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
};

struct __declspec(uuid("000209a0-0000-0000-c000-000000000046"))
wordShape : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordAdjustments (
        /*[out,retval]*/ struct wordAdjustments * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * prop ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType prop ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct wordCalloutFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordConnectorFormat (
        /*[out,retval]*/ struct wordConnectorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct wordGroupShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct wordLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct wordShapeNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_wordPictureFormat (
        /*[out,retval]*/ struct wordPictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct wordShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct wordTextEffectFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordTextFrame (
        /*[out,retval]*/ struct wordTextFrame * * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct wordThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * prop ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordHyperlink (
        /*[out,retval]*/ struct wordHyperlink * * prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_LockAnchor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LockAnchor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WrapFormat (
        /*[out,retval]*/ struct WrapFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordOLEFormat (
        /*[out,retval]*/ struct wordOLEFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Anchor (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordLinkFormat (
        /*[out,retval]*/ struct wordLinkFormat * * prop ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall PickUp ( ) = 0;
      virtual HRESULT __stdcall RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT * Replace = &vtMissing ) = 0;
      virtual HRESULT __stdcall SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall ConvertToInlineShape (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall ConvertToFrame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordDiagram (
        /*[out,retval]*/ struct Office::IMsoDiagram * * prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordDiagramNode (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct wordCanvasShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall put_RTF (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LayoutInCell (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LayoutInCell (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HasChart (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordChart (
        /*[out,retval]*/ struct wordChart * * prop ) = 0;
      virtual HRESULT __stdcall get_LeftRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_WidthRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_WidthRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalSize (
        /*[out,retval]*/ enum WdRelativeHorizontalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalSize (
        /*[in]*/ enum WdRelativeHorizontalSize prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalSize (
        /*[out,retval]*/ enum WdRelativeVerticalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalSize (
        /*[in]*/ enum WdRelativeVerticalSize prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct wordSoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct wordGlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct wordReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame2 (
        /*[out,retval]*/ struct Office::TextFrame2 * * prop ) = 0;
      virtual HRESULT __stdcall get_HasSmartArt (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_SmartArt (
        /*[out,retval]*/ struct Office::SmartArt * * prop ) = 0;
      virtual HRESULT __stdcall get_ShapeStyle (
        /*[out,retval]*/ enum Office::MsoShapeStyleIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ShapeStyle (
        /*[in]*/ enum Office::MsoShapeStyleIndex prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundStyle (
        /*[out,retval]*/ enum Office::MsoBackgroundStyleIndex * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundStyle (
        /*[in]*/ enum Office::MsoBackgroundStyleIndex prop ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_AnchorID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_EditID (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("000209b2-0000-0000-c000-000000000046"))
wordTextFrame : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_MarginBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_MarginLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_MarginRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_MarginTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum Office::MsoTextOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum Office::MsoTextOrientation prop ) = 0;
      virtual HRESULT __stdcall get_TextRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContainingRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct wordTextFrame * * prop ) = 0;
      virtual HRESULT __stdcall put_Next (
        /*[in]*/ struct wordTextFrame * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct wordTextFrame * * prop ) = 0;
      virtual HRESULT __stdcall put_Previous (
        /*[in]*/ struct wordTextFrame * prop ) = 0;
      virtual HRESULT __stdcall get_Overflowing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HasText (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall BreakForwardLink ( ) = 0;
      virtual HRESULT __stdcall ValidLinkTarget (
        /*[in]*/ struct wordTextFrame * TargetTextFrame,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAnchor (
        /*[out,retval]*/ enum Office::MsoVerticalAnchor * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAnchor (
        /*[in]*/ enum Office::MsoVerticalAnchor prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalAnchor (
        /*[out,retval]*/ enum Office::MsoHorizontalAnchor * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalAnchor (
        /*[in]*/ enum Office::MsoHorizontalAnchor prop ) = 0;
      virtual HRESULT __stdcall get_PathFormat (
        /*[out,retval]*/ enum Office::MsoPathFormat * prop ) = 0;
      virtual HRESULT __stdcall put_PathFormat (
        /*[in]*/ enum Office::MsoPathFormat prop ) = 0;
      virtual HRESULT __stdcall get_WarpFormat (
        /*[out,retval]*/ enum Office::MsoWarpFormat * prop ) = 0;
      virtual HRESULT __stdcall put_WarpFormat (
        /*[in]*/ enum Office::MsoWarpFormat prop ) = 0;
      virtual HRESULT __stdcall get_wordColumn (
        /*[out,retval]*/ struct Office::TextColumn2 * * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct wordThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_NoTextRotation (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_NoTextRotation (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall DeleteText ( ) = 0;
};

struct __declspec(uuid("000209a8-0000-0000-c000-000000000046"))
InlineShape : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall put_wordBorders (
        /*[in]*/ struct wordBorders * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordLinkFormat (
        /*[out,retval]*/ struct wordLinkFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Field (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall get_wordOLEFormat (
        /*[out,retval]*/ struct wordOLEFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdInlineShapeType * prop ) = 0;
      virtual HRESULT __stdcall get_wordHyperlink (
        /*[out,retval]*/ struct wordHyperlink * * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ScaleHeight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ScaleHeight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ScaleWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ScaleWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct wordLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct wordFillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_wordPictureFormat (
        /*[out,retval]*/ struct wordPictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_wordPictureFormat (
        /*[in]*/ struct wordPictureFormat * prop ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall ConvertToShape (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalLineFormat (
        /*[out,retval]*/ struct HorizontalLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * prop ) = 0;
      virtual HRESULT __stdcall get_OWSAnchor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct wordTextEffectFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_TextEffect (
        /*[in]*/ struct wordTextEffectFormat * prop ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IsPictureBullet (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct wordGroupShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_HasChart (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_wordChart (
        /*[out,retval]*/ struct wordChart * * prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct wordSoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct wordGlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct wordReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct wordShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_HasSmartArt (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_SmartArt (
        /*[out,retval]*/ struct Office::SmartArt * * prop ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_AnchorID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_EditID (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("000209a9-0000-0000-c000-000000000046"))
InlineShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * SaveWithDocument,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddOLEObject (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * DisplayAsIcon,
        /*[in]*/ VARIANT * IconFileName,
        /*[in]*/ VARIANT * IconIndex,
        /*[in]*/ VARIANT * IconLabel,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddOLEControl (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall New (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddHorizontalLine (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddHorizontalLineStandard (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddPictureBullet (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddChart (
        /*[in]*/ enum Office::XlChartType Type,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall AddSmartArt (
        /*[in]*/ struct Office::SmartArtLayout * Layout,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
};

struct __declspec(uuid("000209c7-0000-0000-c000-000000000046"))
wordConnectorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_BeginConnected (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_BeginConnectedShape (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_BeginConnectionSite (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_EndConnected (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_EndConnectedShape (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_EndConnectionSite (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoConnectorType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoConnectorType prop ) = 0;
      virtual HRESULT __stdcall BeginConnect (
        /*[out]*/ struct wordShape * * ConnectedShape,
        /*[in]*/ long ConnectionSite ) = 0;
      virtual HRESULT __stdcall BeginDisconnect ( ) = 0;
      virtual HRESULT __stdcall EndConnect (
        /*[out]*/ struct wordShape * * ConnectedShape,
        /*[in]*/ long ConnectionSite ) = 0;
      virtual HRESULT __stdcall EndDisconnect ( ) = 0;
};

struct __declspec(uuid("000209c9-0000-0000-c000-000000000046"))
wordFreeformBuilder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall AddNodes (
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
      virtual HRESULT __stdcall ConvertToShape (
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
};

struct __declspec(uuid("396f9073-f9fd-11d3-8ea0-0050049a1a01"))
wordCanvasShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddCurve (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * SaveWithDocument,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddPolyline (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddShape (
        /*[in]*/ long Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct wordFreeformBuilder * * prop ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
};

struct __declspec(uuid("000209e7-0000-0000-c000-000000000046"))
HTMLDivision : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordBorders (
        /*[out,retval]*/ struct wordBorders * * prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall HTMLDivisionParent (
        /*[in]*/ VARIANT * LevelsUp,
        /*[out,retval]*/ struct HTMLDivision * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("000209e8-0000-0000-c000-000000000046"))
HTMLDivisions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct HTMLDivision * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct HTMLDivision * * prop ) = 0;
};

struct __declspec(uuid("000209e9-0000-0000-c000-000000000046"))
wordDiagramNode : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ struct wordDiagramNodeChildren * * prop ) = 0;
      virtual HRESULT __stdcall get_wordShape (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall get_Root (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_wordDiagram (
        /*[out,retval]*/ struct wordDiagram * * prop ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ enum Office::MsoOrgChartLayoutType * prop ) = 0;
      virtual HRESULT __stdcall put_Layout (
        /*[in]*/ enum Office::MsoOrgChartLayoutType prop ) = 0;
      virtual HRESULT __stdcall get_TextShape (
        /*[out,retval]*/ struct wordShape * * prop ) = 0;
      virtual HRESULT __stdcall AddNode (
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos,
        /*[in]*/ enum Office::MsoDiagramNodeType NodeType,
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall MoveNode (
        /*[out]*/ struct wordDiagramNode * * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos ) = 0;
      virtual HRESULT __stdcall ReplaceNode (
        /*[out]*/ struct wordDiagramNode * * TargetNode ) = 0;
      virtual HRESULT __stdcall SwapNode (
        /*[out]*/ struct wordDiagramNode * * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos ) = 0;
      virtual HRESULT __stdcall CloneNode (
        /*[in]*/ VARIANT_BOOL copyChildren,
        /*[out]*/ struct wordDiagramNode * * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos,
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall TransferChildren (
        /*[out]*/ struct wordDiagramNode * * ReceivingNode ) = 0;
      virtual HRESULT __stdcall NextNode (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall PrevNode (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
};

struct __declspec(uuid("000209ea-0000-0000-c000-000000000046"))
wordDiagramNodeChildren : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_FirstChild (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_LastChild (
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall AddNode (
        /*[in]*/ VARIANT * Index,
        /*[in]*/ enum Office::MsoDiagramNodeType NodeType,
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
};

struct __declspec(uuid("000209eb-0000-0000-c000-000000000046"))
wordDiagramNodes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct wordDiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
};

struct __declspec(uuid("000209ec-0000-0000-c000-000000000046"))
wordDiagram : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct wordDiagramNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoDiagramType * prop ) = 0;
      virtual HRESULT __stdcall get_AutoLayout (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_AutoLayout (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Reverse (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Reverse (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormat (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormat (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall Convert (
        /*[in]*/ enum Office::MsoDiagramType Type ) = 0;
      virtual HRESULT __stdcall FitText ( ) = 0;
};

struct __declspec(uuid("000209ed-0000-0000-c000-000000000046"))
SmartTag : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_DownloadURL (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct CustomProperties * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_SmartTagActions (
        /*[out,retval]*/ struct SmartTagActions * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
};

struct __declspec(uuid("000209ee-0000-0000-c000-000000000046"))
SmartTags : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTag * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Range,
        /*[in]*/ VARIANT * Properties,
        /*[out,retval]*/ struct SmartTag * * prop ) = 0;
      virtual HRESULT __stdcall SmartTagsByType (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
};

struct __declspec(uuid("ae6ce2f5-b9d3-407d-85a8-0f10c63289a4"))
Line : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_LineType (
        /*[out,retval]*/ enum WdLineType * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Rectangles (
        /*[out,retval]*/ struct Rectangles * * prop ) = 0;
};

struct __declspec(uuid("e2e8a400-0615-427d-adcc-cad39ffebd42"))
Lines : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Line * * prop ) = 0;
};

struct __declspec(uuid("add4edf3-2f33-4734-9ce6-d476097c5ada"))
Rectangle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RectangleType (
        /*[out,retval]*/ enum WdRectangleType * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Lines (
        /*[out,retval]*/ struct Lines * * prop ) = 0;
};

struct __declspec(uuid("7d0f7985-68d9-4d93-91cb-8109280e76cc"))
Rectangles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Rectangle * * prop ) = 0;
};

struct __declspec(uuid("352840a9-af7d-4ca4-87fc-21c68fdab3e4"))
Page : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Rectangles (
        /*[out,retval]*/ struct Rectangles * * prop ) = 0;
      virtual HRESULT __stdcall get_Breaks (
        /*[out,retval]*/ struct Breaks * * prop ) = 0;
      virtual HRESULT __stdcall get_EnhMetaFileBits (
        /*[out,retval]*/ VARIANT * prop ) = 0;
};

struct __declspec(uuid("91807402-6c6f-47cd-b8fa-c42fee8ee924"))
wordPages : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Page * * prop ) = 0;
};

struct __declspec(uuid("09760240-0b89-49f7-a79d-479f24723f56"))
XMLNode : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BaseName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[in]*/ VARIANT_BOOL DataOnly,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_NextSibling (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_PreviousSibling (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstChild (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_LastChild (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_OwnerDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_NodeType (
        /*[out,retval]*/ enum WdXMLNodeType * prop ) = 0;
      virtual HRESULT __stdcall get_ChildNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Attributes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_NodeValue (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NodeValue (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HasChildNodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall SelectSingleNode (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall SelectNodes (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_ChildNodeSuggestions (
        /*[out,retval]*/ struct XMLChildNodeSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall get_Level (
        /*[out,retval]*/ enum WdXMLNodeLevel * prop ) = 0;
      virtual HRESULT __stdcall get_ValidationStatus (
        /*[out,retval]*/ enum WdXMLValidationStatus * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTag (
        /*[out,retval]*/ struct SmartTag * * prop ) = 0;
      virtual HRESULT __stdcall get_ValidationErrorText (
        /*[in]*/ VARIANT_BOOL Advanced,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PlaceholderText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PlaceholderText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall RemoveChild (
        /*[in]*/ struct XMLNode * ChildElement ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Validate ( ) = 0;
      virtual HRESULT __stdcall SetValidationError (
        /*[in]*/ enum WdXMLValidationStatus Status,
        /*[in]*/ VARIANT * ErrorText,
        /*[in]*/ VARIANT_BOOL ClearedAutomatically ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("d36c1f42-7044-4b9e-9ca3-85919454db04"))
XMLNodes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Namespace,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
};

struct __declspec(uuid("a87e00e9-3ac3-4b53-abe3-7379653d0e82"))
XMLChildNodeSuggestion : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BaseName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_XMLSchemaReference (
        /*[out,retval]*/ struct XMLSchemaReference * * prop ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
};

struct __declspec(uuid("de63b5ac-ca4f-46fe-9184-a5719ab9ed5b"))
XMLChildNodeSuggestions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XMLChildNodeSuggestion * * prop ) = 0;
};

struct __declspec(uuid("00020a01-0001-0000-c000-000000000046"))
IApplicationEvents4 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Startup ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall DocumentChange ( ) = 0;
      virtual HRESULT __stdcall DocumentOpen (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall DocumentBeforeClose (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DocumentBeforePrint (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall DocumentBeforeSave (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * SaveAsUI,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall NewDocument (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall WindowActivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowDeactivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall WindowSelectionChange (
        /*[in]*/ struct wordSelection * Sel ) = 0;
      virtual HRESULT __stdcall WindowBeforeRightClick (
        /*[in]*/ struct wordSelection * Sel,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WindowBeforeDoubleClick (
        /*[in]*/ struct wordSelection * Sel,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall EPostagePropertyDialog (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall EPostageInsert (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeAfterMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct _Document * DocResult ) = 0;
      virtual HRESULT __stdcall MailMergeAfterRecordMerge (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeBeforeMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ long StartRecord,
        /*[in]*/ long EndRecord,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall MailMergeBeforeRecordMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall MailMergeDataSourceLoad (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeDataSourceValidate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall MailMergeWizardSendToCustom (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall MailMergeWizardStateChange (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ int * FromState,
        /*[in]*/ int * ToState,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall WindowSize (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall XMLSelectionChange (
        /*[in]*/ struct wordSelection * Sel,
        /*[in]*/ struct XMLNode * OldXMLNode,
        /*[in]*/ struct XMLNode * NewXMLNode,
        /*[in]*/ long * Reason ) = 0;
      virtual HRESULT __stdcall XMLValidationError (
        /*[in]*/ struct XMLNode * XMLNode ) = 0;
      virtual HRESULT __stdcall DocumentSync (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ enum Office::MsoSyncEventType SyncEventType ) = 0;
      virtual HRESULT __stdcall EPostageInsertEx (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ int cpDeliveryAddrStart,
        /*[in]*/ int cpDeliveryAddrEnd,
        /*[in]*/ int cpReturnAddrStart,
        /*[in]*/ int cpReturnAddrEnd,
        /*[in]*/ int xaWidth,
        /*[in]*/ int yaHeight,
        /*[in]*/ BSTR bstrPrinterName,
        /*[in]*/ BSTR bstrPaperFeed,
        /*[in]*/ VARIANT_BOOL fPrint,
        /*[in,out]*/ VARIANT_BOOL * fCancel ) = 0;
      virtual HRESULT __stdcall MailMergeDataSourceValidate2 (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall ProtectedViewWindowOpen (
        /*[in]*/ struct wordProtectedViewWindow * PvWindow ) = 0;
      virtual HRESULT __stdcall ProtectedViewWindowBeforeEdit (
        /*[in]*/ struct wordProtectedViewWindow * PvWindow,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall ProtectedViewWindowBeforeClose (
        /*[in]*/ struct wordProtectedViewWindow * PvWindow,
        /*[in]*/ int CloseReason,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall ProtectedViewWindowSize (
        /*[in]*/ struct wordProtectedViewWindow * PvWindow ) = 0;
      virtual HRESULT __stdcall ProtectedViewWindowActivate (
        /*[in]*/ struct wordProtectedViewWindow * PvWindow ) = 0;
      virtual HRESULT __stdcall ProtectedViewWindowDeactivate (
        /*[in]*/ struct wordProtectedViewWindow * PvWindow ) = 0;
};

struct __declspec(uuid("873e774b-926a-4cb1-878d-635a45187595"))
OMaths : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall Linearize ( ) = 0;
      virtual HRESULT __stdcall BuildUp ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("e4442a83-f623-459c-8e95-8bfb44dcf23a"))
OMath : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Functions (
        /*[out,retval]*/ struct OMathFunctions * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdOMathType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdOMathType prop ) = 0;
      virtual HRESULT __stdcall get_ParentOMath (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentFunction (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentRow (
        /*[out,retval]*/ struct OMathMatRow * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentCol (
        /*[out,retval]*/ struct OMathMatCol * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentArg (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_ArgIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ArgSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ArgSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Breaks (
        /*[out,retval]*/ struct OMathBreaks * * prop ) = 0;
      virtual HRESULT __stdcall get_Justification (
        /*[out,retval]*/ enum WdOMathJc * prop ) = 0;
      virtual HRESULT __stdcall put_Justification (
        /*[in]*/ enum WdOMathJc prop ) = 0;
      virtual HRESULT __stdcall get_AlignPoint (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AlignPoint (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Linearize ( ) = 0;
      virtual HRESULT __stdcall BuildUp ( ) = 0;
      virtual HRESULT __stdcall Remove ( ) = 0;
      virtual HRESULT __stdcall ConvertToMathText ( ) = 0;
      virtual HRESULT __stdcall ConvertToNormalText ( ) = 0;
      virtual HRESULT __stdcall ConvertToLiteralText ( ) = 0;
};

struct __declspec(uuid("8245795b-9aed-4943-a16d-e586ed8180d1"))
OMathArgs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * BeforeArg,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("f258de05-c41b-4c33-a778-f0d3f98ceeb3"))
OMathAcc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Char (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Char (
        /*[in]*/ short prop ) = 0;
};

struct __declspec(uuid("f08b45f1-8f23-4156-9d63-1820c0ed229a"))
OMathBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_BarTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BarTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("842c37fe-c76f-4b2b-9b60-c408cb5e838e"))
OMathBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_OpEmu (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OpEmu (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoBreak (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoBreak (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Diff (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Diff (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("2503b6ee-0889-44df-b920-6d6f9659dea3"))
OMathBorderBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_HideTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideBot (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideBot (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideLeft (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideLeft (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideRight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideRight (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeH (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeH (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeV (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeV (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeBLTR (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeBLTR (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeTLBR (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeTLBR (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("c94688a6-a2a7-4133-a26d-726cd569d5f3"))
OMathDelim : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_BegChar (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_BegChar (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_SepChar (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_SepChar (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_EndChar (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_EndChar (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_Grow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Grow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_wordShape (
        /*[out,retval]*/ enum WdOMathShapeType * prop ) = 0;
      virtual HRESULT __stdcall put_wordShape (
        /*[in]*/ enum WdOMathShapeType prop ) = 0;
      virtual HRESULT __stdcall get_NoLeftChar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoLeftChar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoRightChar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoRightChar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("1f998a61-71c6-44c2-a0f2-1d66169b47cb"))
OMathEqArray : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_MaxDist (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MaxDist (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ObjDist (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ObjDist (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum WdOMathVertAlignType * prop ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum WdOMathVertAlignType prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacingRule (
        /*[out,retval]*/ enum WdOMathSpacingRule * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacingRule (
        /*[in]*/ enum WdOMathSpacingRule prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacing (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("50209974-ba32-4a03-8fa6-bac56cc056fd"))
OMathFrac : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Num (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Den (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdOMathFracType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdOMathFracType prop ) = 0;
};

struct __declspec(uuid("0d951adf-10a6-4c9b-bcd9-0fb8cbad9a87"))
OMathFunc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_FName (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("02b17cb4-7d55-4b34-b38b-10381433441f"))
OMathGroupChar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Char (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Char (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_CharTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CharTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AlignTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlignTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("5daa8bb6-054e-48f6-beac-eaad02be0cc7"))
OMathMatRow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Args (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_RowIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("1b426348-607d-433c-9216-c5d2bf0ef31f"))
OMathMatRows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathMatRow * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * BeforeRow,
        /*[out,retval]*/ struct OMathMatRow * * prop ) = 0;
};

struct __declspec(uuid("cae36175-3818-4c60-bcbf-0645d51eb33b"))
OMathMatCol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Args (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_ColIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum WdOMathHorizAlignType * prop ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum WdOMathHorizAlignType prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("efc71f9c-7f42-4cd4-a7a7-970d7a48cd27"))
OMathMatCols : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathMatCol * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT * BeforeCol,
        /*[out,retval]*/ struct OMathMatCol * * prop ) = 0;
};

struct __declspec(uuid("3e061a7e-67ad-4eaa-bc1e-55057d5e596f"))
OMathMat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_wordRows (
        /*[out,retval]*/ struct OMathMatRows * * prop ) = 0;
      virtual HRESULT __stdcall get_Cols (
        /*[out,retval]*/ struct OMathMatCols * * prop ) = 0;
      virtual HRESULT __stdcall get_wordCell (
        /*[in]*/ long wordRow,
        /*[in]*/ long Col,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum WdOMathVertAlignType * prop ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum WdOMathVertAlignType prop ) = 0;
      virtual HRESULT __stdcall get_PlcHoldHidden (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PlcHoldHidden (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacingRule (
        /*[out,retval]*/ enum WdOMathSpacingRule * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacingRule (
        /*[in]*/ enum WdOMathSpacingRule prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ColSpacing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColGapRule (
        /*[out,retval]*/ enum WdOMathSpacingRule * prop ) = 0;
      virtual HRESULT __stdcall put_ColGapRule (
        /*[in]*/ enum WdOMathSpacingRule prop ) = 0;
      virtual HRESULT __stdcall get_ColGap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ColGap (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("cebd4184-4e6d-4fc6-a42d-2142b1b76af5"))
OMathNary : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Char (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Char (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_Grow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Grow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SubSupLim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SubSupLim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideSub (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideSub (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideSup (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideSup (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("db77d541-85c3-42e8-8649-afbd7cf87866"))
OMathPhantom : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Show (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Show (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ZeroWid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ZeroWid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ZeroAsc (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ZeroAsc (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ZeroDesc (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ZeroDesc (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Transp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Transp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Smash (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Smash (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("67a7eec5-285d-4024-b071-bd6b33b88547"))
OMathRad : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Deg (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_HideDeg (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideDeg (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("98dfbd12-96cb-4f07-90ea-749ff1d6b89d"))
OMathScrSub : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("d0a95726-678a-4b9d-8103-1e2b86735ae7"))
OMathScrSup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("497142a4-16fd-42c6-bc58-15d89345fc21"))
OMathFunctions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ enum WdOMathFunctionType Type,
        /*[in]*/ VARIANT * NumArgs,
        /*[in]*/ VARIANT * NumCols,
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("f1f37152-1db1-4901-ad9a-c740f99464b4"))
OMathFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdOMathFunctionType * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Args (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_Acc (
        /*[out,retval]*/ struct OMathAcc * * prop ) = 0;
      virtual HRESULT __stdcall get_Bar (
        /*[out,retval]*/ struct OMathBar * * prop ) = 0;
      virtual HRESULT __stdcall get_Box (
        /*[out,retval]*/ struct OMathBox * * prop ) = 0;
      virtual HRESULT __stdcall get_BorderBox (
        /*[out,retval]*/ struct OMathBorderBox * * prop ) = 0;
      virtual HRESULT __stdcall get_Delim (
        /*[out,retval]*/ struct OMathDelim * * prop ) = 0;
      virtual HRESULT __stdcall get_EqArray (
        /*[out,retval]*/ struct OMathEqArray * * prop ) = 0;
      virtual HRESULT __stdcall get_Frac (
        /*[out,retval]*/ struct OMathFrac * * prop ) = 0;
      virtual HRESULT __stdcall get_Func (
        /*[out,retval]*/ struct OMathFunc * * prop ) = 0;
      virtual HRESULT __stdcall get_GroupChar (
        /*[out,retval]*/ struct OMathGroupChar * * prop ) = 0;
      virtual HRESULT __stdcall get_LimLow (
        /*[out,retval]*/ struct OMathLimLow * * prop ) = 0;
      virtual HRESULT __stdcall get_LimUpp (
        /*[out,retval]*/ struct OMathLimUpp * * prop ) = 0;
      virtual HRESULT __stdcall get_Mat (
        /*[out,retval]*/ struct OMathMat * * prop ) = 0;
      virtual HRESULT __stdcall get_Nary (
        /*[out,retval]*/ struct OMathNary * * prop ) = 0;
      virtual HRESULT __stdcall get_Phantom (
        /*[out,retval]*/ struct OMathPhantom * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrPre (
        /*[out,retval]*/ struct OMathScrPre * * prop ) = 0;
      virtual HRESULT __stdcall get_Rad (
        /*[out,retval]*/ struct OMathRad * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrSub (
        /*[out,retval]*/ struct OMathScrSub * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrSubSup (
        /*[out,retval]*/ struct OMathScrSubSup * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrSup (
        /*[out,retval]*/ struct OMathScrSup * * prop ) = 0;
      virtual HRESULT __stdcall get_OMath (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("74de9576-8e99-4e28-912b-cb30747c60ce"))
OMathLimLow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Lim (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall ToLimUpp (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("fc9086c6-0287-4997-b2e1-816c334a22f8"))
OMathLimUpp : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Lim (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall ToLimLow (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("afaf0c0e-8603-40f6-8fd1-42726cac21e3"))
OMathScrPre : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall ToScrSubSup (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("dc489ad4-23c4-4f4b-990f-45a51c7c0c4f"))
OMathScrSubSup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_AlignScripts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlignScripts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall RemoveSub (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall RemoveSup (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall ToScrPre (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("804cd967-f83b-432d-9446-c61a45cfeff0"))
ContentControls : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum WdContentControlType Type,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
};

struct __declspec(uuid("ee95afe3-3026-4172-b078-0e79dab5cc3d"))
ContentControl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_LockContentControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockContentControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LockContents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockContents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLMapping (
        /*[out,retval]*/ struct XMLMapping * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdContentControlType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdContentControlType prop ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT_BOOL DeleteContents ) = 0;
      virtual HRESULT __stdcall get_DropdownListEntries (
        /*[out,retval]*/ struct ContentControlListEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_PlaceholderText (
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
      virtual HRESULT __stdcall SetPlaceholderText (
        /*[in]*/ struct BuildingBlock * BuildingBlock,
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DateDisplayFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DateDisplayFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ParentContentControl (
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall get_Temporary (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Temporary (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ShowingPlaceholderText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DateStorageFormat (
        /*[out,retval]*/ enum WdContentControlDateStorageFormat * prop ) = 0;
      virtual HRESULT __stdcall put_DateStorageFormat (
        /*[in]*/ enum WdContentControlDateStorageFormat prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockType (
        /*[out,retval]*/ enum WdBuildingBlockTypes * prop ) = 0;
      virtual HRESULT __stdcall put_BuildingBlockType (
        /*[in]*/ enum WdBuildingBlockTypes prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockCategory (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BuildingBlockCategory (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DateDisplayLocale (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_DateDisplayLocale (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall Ungroup ( ) = 0;
      virtual HRESULT __stdcall get_DefaultTextStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTextStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_DateCalendarType (
        /*[out,retval]*/ enum WdCalendarType * prop ) = 0;
      virtual HRESULT __stdcall put_DateCalendarType (
        /*[in]*/ enum WdCalendarType prop ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Checked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Checked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall SetCheckedSymbol (
        /*[in]*/ long CharacterNumber,
        /*[in]*/ BSTR wordFont ) = 0;
      virtual HRESULT __stdcall SetUncheckedSymbol (
        /*[in]*/ long CharacterNumber,
        /*[in]*/ BSTR wordFont ) = 0;
};

struct __declspec(uuid("b5828b50-0e3d-448a-962d-a40702a5868d"))
BuildingBlockTypes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum WdBuildingBlockTypes Index,
        /*[out,retval]*/ struct BuildingBlockType * * prop ) = 0;
};

struct __declspec(uuid("817f99fa-ccc4-4971-8e9d-1238f735aaff"))
BuildingBlockType : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ struct Categories * * prop ) = 0;
};

struct __declspec(uuid("6e47678b-a879-4e56-8698-3b7cf169fad4"))
Categories : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Category * * prop ) = 0;
};

struct __declspec(uuid("ecfbdb5e-acd2-4530-ad79-4560b7ff055c"))
Category : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlocks (
        /*[out,retval]*/ struct BuildingBlocks * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ struct BuildingBlockType * * prop ) = 0;
};

struct __declspec(uuid("bfd3fc23-f763-4ff8-826e-1afbf598a4e7"))
BuildingBlock : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ struct BuildingBlockType * * prop ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ struct Category * * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_InsertOptions (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_InsertOptions (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ struct Range * Where,
        /*[in]*/ VARIANT * RichText,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("c6d50987-25d7-408a-bff2-90bf86a24e93"))
BuildingBlocks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Description,
        /*[in]*/ enum WdDocPartInsertOptions InsertOptions,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
};

struct __declspec(uuid("39709229-56a0-4e29-9112-b31dd067ebfd"))
BuildingBlockEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdBuildingBlockTypes Type,
        /*[in]*/ BSTR Category,
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Description,
        /*[in]*/ enum WdDocPartInsertOptions InsertOptions,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
};

struct __declspec(uuid("99755f80-fe96-4f7d-b636-b8e800e54f44"))
CoAuthLock : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdLockType * prop ) = 0;
      virtual HRESULT __stdcall get_Owner (
        /*[out,retval]*/ struct CoAuthor * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_wordHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall Unlock ( ) = 0;
};

struct __declspec(uuid("dff99ac2-cd2a-43ad-91b1-a2be40bc7146"))
CoAuthLocks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct CoAuthLock * * prop ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Range,
        /*[in]*/ enum WdLockType Type,
        /*[out,retval]*/ struct CoAuthLock * * prop ) = 0;
      virtual HRESULT __stdcall RemoveEphemeralLocks ( ) = 0;
};

struct __declspec(uuid("e59544d5-c299-46a0-84c1-c51ab38f9759"))
CoAuthor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_IsMe (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Locks (
        /*[out,retval]*/ struct CoAuthLocks * * prop ) = 0;
      virtual HRESULT __stdcall get_EmailAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("256b6aba-6a38-4d39-971c-91fda9922814"))
CoAuthors : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CoAuthor * * prop ) = 0;
};

struct __declspec(uuid("65df9f31-b1e3-4651-87e8-51d55f302161"))
CoAuthoring : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_wordApplication (
        /*[out,retval]*/ struct _wordApplication * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Authors (
        /*[out,retval]*/ struct CoAuthors * * prop ) = 0;
      virtual HRESULT __stdcall get_Me (
        /*[out,retval]*/ struct CoAuthor * * prop ) = 0;
      virtual HRESULT __stdcall get_PendingUpdates (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Locks (
        /*[out,retval]*/ struct CoAuthLocks * * prop ) = 0;
      virtual HRESULT __stdcall get_Updates (
        /*[out,retval]*/ struct CoAuthUpdates * * prop ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * prop ) = 0;
      virtual HRESULT __stdcall get_CanShare (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_CanMerge (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_Word =
    {0x00020905,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__OLEControl =
    {0x000209a4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_wordApplicationEvents =
    {0x000209f7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_wordGlobal =
    {0x000209f0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_wordApplication =
    {0x000209ff,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordFontNames =
    {0x0002096f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_RoutingSlip =
    {0x00020969,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Variable =
    {0x00020966,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Variables =
    {0x00020965,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_DropCap =
    {0x00020956,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordTabStop =
    {0x00020954,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordTabStops =
    {0x00020955,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_FirstLetterException =
    {0x00020945,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_FirstLetterExceptions =
    {0x00020946,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TwoInitialCapsException =
    {0x00020943,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TwoInitialCapsExceptions =
    {0x00020944,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TextRetrievalMode =
    {0x00020939,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_System =
    {0x00020935,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordOLEFormat =
    {0x00020933,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordLinkFormat =
    {0x00020931,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Browser =
    {0x0002092e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TextInput =
    {0x00020927,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CheckBox =
    {0x00020926,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListEntry =
    {0x00020923,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListEntries =
    {0x00020924,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_DropDown =
    {0x00020925,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMergeFieldName =
    {0x0002091b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMergeFieldNames =
    {0x0002091c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMergeDataField =
    {0x00020919,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMergeDataFields =
    {0x0002091a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CustomLabel =
    {0x00020915,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CustomLabels =
    {0x00020916,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Dialog =
    {0x000209b8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Dialogs =
    {0x00020910,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_LineNumbering =
    {0x00020972,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TextColumn =
    {0x00020974,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TableOfAuthoritiesCategory =
    {0x00020977,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TablesOfAuthoritiesCategories =
    {0x00020976,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CaptionLabel =
    {0x00020979,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CaptionLabels =
    {0x00020978,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_AutoCaption =
    {0x0002097b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_AutoCaptions =
    {0x0002097a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordAddIn =
    {0x0002097e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordAddIns =
    {0x0002097f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Task =
    {0x00020982,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Tasks =
    {0x00020983,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_PageNumber =
    {0x00020987,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_PageNumbers =
    {0x00020986,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HeadingStyle =
    {0x0002098b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HeadingStyles =
    {0x0002098a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_KeyBinding =
    {0x00020998,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_KeyBindings =
    {0x00020996,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_KeysBoundTo =
    {0x00020997,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordFileConverters =
    {0x0002099a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_SynonymInfo =
    {0x0002099b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Zoom =
    {0x000209a6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Zooms =
    {0x000209a7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_SpellingSuggestion =
    {0x000209ab,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_SpellingSuggestions =
    {0x000209aa,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Dictionary =
    {0x000209ad,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Language =
    {0x0002096d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Languages =
    {0x0002096e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Dictionaries =
    {0x000209ac,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HangulHanjaConversionDictionaries =
    {0x000209e0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ReadabilityStatistic =
    {0x000209af,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ReadabilityStatistics =
    {0x000209ae,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMessage =
    {0x000209ba,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Mailer =
    {0x000209bd,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_WrapFormat =
    {0x000209c3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HangulAndAlphabetException =
    {0x000209d2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HangulAndAlphabetExceptions =
    {0x000209d1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordAdjustments =
    {0x000209c4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordCalloutFormat =
    {0x000209c5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordPictureFormat =
    {0x000209cb,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordShapeNode =
    {0x000209cd,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordShapeNodes =
    {0x000209ce,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordTextEffectFormat =
    {0x000209cf,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DocumentEvents =
    {0x000209f6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_Document =
    {0x00020906,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Documents =
    {0x0002096c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_RecentFile =
    {0x00020964,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_RecentFiles =
    {0x00020963,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailingLabel =
    {0x00020917,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Version =
    {0x000209b4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Versions =
    {0x000209b3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_wordFont =
    {0x000209f5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_ParagraphFormat =
    {0x000209f4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_OCXEvents =
    {0x000209f3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_wordOLEControl =
    {0x000209f2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_LetterContent =
    {0x000209f1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__LetterContent =
    {0x000209a1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IApplicationEvents =
    {0x000209f7,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_ApplicationEvents2 =
    {0x000209fe,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TextColumns =
    {0x00020973,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordPageSetup =
    {0x00020971,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Border =
    {0x0002093b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordBorders =
    {0x0002093c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Shading =
    {0x0002093a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HorizontalLineFormat =
    {0x000209de,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Frameset =
    {0x000209e2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordDefaultWebOptions =
    {0x000209e3,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordWebOptions =
    {0x000209e4,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_OtherCorrectionsException =
    {0x000209e1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_OtherCorrectionsExceptions =
    {0x000209df,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_EmailSignatureEntry =
    {0x000209e6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_CustomProperty =
    {0xb923fde0,0xf08c,0x11d3,{0x91,0xb0,0x00,0x10,0x5a,0x0a,0x19,0xfd}};
extern "C" const GUID __declspec(selectany) IID_CustomProperties =
    {0xb923fde1,0xf08c,0x11d3,{0x91,0xb0,0x00,0x10,0x5a,0x0a,0x19,0xfd}};
extern "C" const GUID __declspec(selectany) IID_MappedDataField =
    {0x5d311669,0xea51,0x11d3,{0x87,0xcc,0x00,0x10,0x5a,0xa3,0x1a,0x34}};
extern "C" const GUID __declspec(selectany) IID_ConditionalStyle =
    {0x1498f56d,0xed33,0x41f9,{0xb3,0x7b,0xef,0x30,0xe5,0x0b,0x08,0xac}};
extern "C" const GUID __declspec(selectany) IID_FootnoteOptions =
    {0xbea85a24,0xd7da,0x4f3d,{0xb5,0x8c,0xed,0x90,0xfb,0x01,0xd6,0x15}};
extern "C" const GUID __declspec(selectany) IID_EndnoteOptions =
    {0xbf043168,0xf4de,0x4e7c,{0xb2,0x06,0x74,0x1a,0x8b,0x3e,0xf7,0x1a}};
extern "C" const GUID __declspec(selectany) IID_Reviewer =
    {0x47cef4ae,0xdc32,0x4220,{0x8a,0xa5,0x19,0xcc,0xc0,0xe6,0x63,0x3a}};
extern "C" const GUID __declspec(selectany) IID_Reviewers =
    {0x12dcdc9a,0x5418,0x48a3,{0xbb,0xe6,0xeb,0x57,0xba,0xe2,0x75,0xe8}};
extern "C" const GUID __declspec(selectany) IID_TaskPane =
    {0xb9f1a4e2,0x0d0a,0x43b7,{0x84,0x95,0x13,0x9e,0x7a,0xcb,0xd8,0x40}};
extern "C" const GUID __declspec(selectany) DIID_ApplicationEvents3 =
    {0x00020a00,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_StyleSheet =
    {0x000209ef,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_StyleSheets =
    {0x07b7cc7e,0xe66c,0x11d3,{0x94,0x54,0x00,0x10,0x5a,0xa3,0x1a,0x08}};
extern "C" const GUID __declspec(selectany) IID_MappedDataFields =
    {0x799a6814,0xea41,0x11d3,{0x87,0xcc,0x00,0x10,0x5a,0xa3,0x1a,0x34}};
extern "C" const GUID __declspec(selectany) IID_MailMergeDataSource =
    {0x0002091d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordTableStyle =
    {0xb7564e97,0x0519,0x4c68,{0xb4,0x00,0x38,0x03,0xe7,0xc6,0x32,0x42}};
extern "C" const GUID __declspec(selectany) IID_TaskPanes =
    {0xe6aaec05,0xe543,0x4085,{0xba,0x92,0x9b,0xf7,0xd2,0x47,0x4f,0x5c}};
extern "C" const GUID __declspec(selectany) IID_SmartTagRecognizer =
    {0x15ebe471,0x0182,0x4cce,{0x98,0xd0,0xb6,0x61,0x4d,0x1c,0x32,0xa1}};
extern "C" const GUID __declspec(selectany) IID_SmartTagRecognizers =
    {0xf2b60a10,0xded5,0x46fb,{0xa9,0x14,0x3c,0x6f,0x4e,0xbb,0x64,0x51}};
extern "C" const GUID __declspec(selectany) IID_XMLSchemaReference =
    {0xfe0971f0,0x5e60,0x4985,{0xbc,0xda,0x95,0xcb,0x0b,0x8e,0x03,0x08}};
extern "C" const GUID __declspec(selectany) IID_XMLSchemaReferences =
    {0x356b06ec,0x4908,0x42a4,{0x81,0xfc,0x4b,0x5a,0x51,0xf3,0x48,0x3b}};
extern "C" const GUID __declspec(selectany) IID_XSLTransform =
    {0xe3124493,0x7d6a,0x410f,{0x9a,0x48,0xcc,0x82,0x2c,0x03,0x3c,0xec}};
extern "C" const GUID __declspec(selectany) IID_XSLTransforms =
    {0xc774f5ea,0xa539,0x4284,{0xa1,0xbe,0x30,0xae,0xc0,0x52,0xd8,0x99}};
extern "C" const GUID __declspec(selectany) IID_XMLNamespace =
    {0xb140a023,0x4850,0x4da6,{0xbc,0x5f,0xcc,0x45,0x9c,0x45,0x07,0xbc}};
extern "C" const GUID __declspec(selectany) IID_XMLNamespaces =
    {0x656bbed7,0xe82d,0x4b0a,{0x8f,0x97,0xec,0x74,0x2b,0xa1,0x1f,0xfa}};
extern "C" const GUID __declspec(selectany) DIID_ApplicationEvents4 =
    {0x00020a01,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) DIID_DocumentEvents2 =
    {0x00020a02,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_SmartTagAction =
    {0xdfb6aa6c,0x1068,0x420f,{0x96,0x9d,0x01,0x28,0x0f,0xcc,0x16,0x30}};
extern "C" const GUID __declspec(selectany) IID_SmartTagActions =
    {0xcde12cd8,0x767b,0x4757,{0x8a,0x31,0x13,0x02,0x9a,0x08,0x63,0x05}};
extern "C" const GUID __declspec(selectany) IID_SmartTagType =
    {0x5e9a888c,0xe5dc,0x4dcb,{0x83,0x08,0x3c,0x91,0xfb,0x61,0xe6,0xf4}};
extern "C" const GUID __declspec(selectany) IID_SmartTagTypes =
    {0xdb8e3072,0xe106,0x4453,{0x8e,0x7c,0x53,0x05,0x6f,0x1d,0x30,0xdc}};
extern "C" const GUID __declspec(selectany) IID_Source =
    {0x4a6ae865,0x199d,0x4ea3,{0x9f,0x6b,0x12,0x5b,0xd9,0xc4,0x0e,0xdf}};
extern "C" const GUID __declspec(selectany) IID_Sources =
    {0xfa02a26b,0x6550,0x45c5,{0xb6,0xf0,0x80,0xe7,0x57,0xcd,0x34,0x82}};
extern "C" const GUID __declspec(selectany) IID_Bibliography =
    {0x3834f60f,0xee8c,0x455d,{0xa4,0x41,0xd7,0x66,0x67,0x5d,0x6d,0x3b}};
extern "C" const GUID __declspec(selectany) IID_OMathAutoCorrectEntry =
    {0xd8779f01,0x4869,0x4403,{0xb3,0x34,0xd6,0x0c,0x5f,0x9c,0x91,0x75}};
extern "C" const GUID __declspec(selectany) IID_OMathAutoCorrectEntries =
    {0x18cd5ec8,0x8b7b,0x42c8,{0x99,0x2a,0x2a,0x40,0x74,0x68,0x64,0x2c}};
extern "C" const GUID __declspec(selectany) IID_OMathRecognizedFunction =
    {0x5c04bd93,0x2f3f,0x4668,{0x91,0x8d,0x97,0x38,0xec,0x90,0x10,0x39}};
extern "C" const GUID __declspec(selectany) IID_OMathRecognizedFunctions =
    {0x44fee887,0x6600,0x41ab,{0x95,0xa5,0xde,0x33,0xc6,0x05,0x11,0x6c}};
extern "C" const GUID __declspec(selectany) IID_OMathAutoCorrect =
    {0x6f9d1f68,0x06f7,0x49ef,{0x89,0x02,0x18,0x5e,0x54,0xeb,0x5e,0x87}};
extern "C" const GUID __declspec(selectany) IID_XMLMapping =
    {0x0c1fabe7,0xf737,0x406f,{0x9c,0xa3,0xb0,0x76,0x61,0xf9,0xd1,0xa2}};
extern "C" const GUID __declspec(selectany) IID_ContentControlListEntry =
    {0x0c6fa8ca,0xe65f,0x4fc7,{0xab,0x8f,0x20,0x72,0x9e,0xec,0xbb,0x14}};
extern "C" const GUID __declspec(selectany) IID_ContentControlListEntries =
    {0x54f46dc4,0xf6a6,0x48cc,{0xbd,0x66,0x46,0xc1,0xdd,0xea,0xdd,0x22}};
extern "C" const GUID __declspec(selectany) IID_wordResearch =
    {0xe6aaec05,0xe543,0x4085,{0xba,0x92,0x9b,0xf7,0xd2,0x47,0x4f,0x51}};
extern "C" const GUID __declspec(selectany) IID_wordSoftEdgeFormat =
    {0xd040daf9,0x6ce4,0x4be8,{0x83,0x9d,0xf4,0x53,0x8a,0x43,0x01,0xcf}};
extern "C" const GUID __declspec(selectany) IID_wordReflectionFormat =
    {0xf01943ff,0x1985,0x445e,{0x86,0x02,0x8f,0xb8,0xf3,0x9c,0xca,0x75}};
extern "C" const GUID __declspec(selectany) IID_wordView =
    {0x000209a5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__ParagraphFormat =
    {0x00020953,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordColorFormat =
    {0x000209c6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordFillFormat =
    {0x000209c8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordLineFormat =
    {0x000209ca,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordShadowFormat =
    {0x000209cc,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordThreeDFormat =
    {0x000209d0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordGlowFormat =
    {0xf1b14f40,0x5c32,0x4c8c,{0xb5,0xb2,0xde,0x53,0x7b,0xb6,0xb8,0x9d}};
extern "C" const GUID __declspec(selectany) IID_wordChartData =
    {0x4a304b59,0x31ff,0x42dd,{0xb4,0x36,0x7f,0xc9,0xc5,0xdb,0x75,0x59}};
extern "C" const GUID __declspec(selectany) IID_wordCorners =
    {0xae6d45e5,0x981e,0x4547,{0x87,0x52,0x67,0x4b,0xb5,0x54,0x20,0xa5}};
extern "C" const GUID __declspec(selectany) IID_wordChartBorder =
    {0xab0d33a3,0xc9ea,0x485b,{0x94,0x43,0x4c,0x1b,0xb3,0x65,0x6c,0xea}};
extern "C" const GUID __declspec(selectany) IID_wordInterior =
    {0xb184502b,0x587a,0x4c6a,{0x8d,0xc4,0xec,0xe4,0x35,0x48,0x83,0xc6}};
extern "C" const GUID __declspec(selectany) IID_wordChartFont =
    {0xcdb0ff41,0xe862,0x47bb,{0xae,0x77,0x3f,0xa7,0xb1,0xae,0x31,0x89}};
extern "C" const GUID __declspec(selectany) IID_wordChartColorFormat =
    {0xdd8f80b8,0x9b80,0x4e89,{0x9b,0xec,0xf1,0x2d,0xf3,0x5e,0x43,0xb3}};
extern "C" const GUID __declspec(selectany) IID_wordChartFillFormat =
    {0xf152d349,0x7d20,0x4c01,{0xa4,0x2b,0x2d,0x6d,0xe4,0xf3,0x89,0x1c}};
extern "C" const GUID __declspec(selectany) IID_wordChartCharacters =
    {0xff06fef2,0xda89,0x41c0,{0xa0,0xa8,0x5c,0xd4,0x34,0xe2,0x10,0xad}};
extern "C" const GUID __declspec(selectany) IID_wordChartFormat =
    {0xb66d3c1a,0x4541,0x4961,{0xb3,0x5b,0xa3,0x53,0xc0,0x3f,0x6a,0x99}};
extern "C" const GUID __declspec(selectany) IID_wordWalls =
    {0xa2e94180,0x7564,0x4d97,{0x80,0x6b,0xbb,0xc0,0xd0,0xa1,0x35,0x0c}};
extern "C" const GUID __declspec(selectany) IID_wordFloor =
    {0x7e64d2be,0x2818,0x48cb,{0x8f,0x8a,0xcc,0x7b,0x61,0xd9,0xe8,0x60}};
extern "C" const GUID __declspec(selectany) IID_wordChartArea =
    {0xc75ad98a,0x74e9,0x49fe,{0x8b,0xf1,0x54,0x48,0x39,0xcc,0x08,0xa5}};
extern "C" const GUID __declspec(selectany) IID_wordSeriesLines =
    {0x5d7f6c15,0x36ce,0x44cc,{0x96,0x92,0x5a,0x1f,0x8b,0x8c,0x90,0x6d}};
extern "C" const GUID __declspec(selectany) IID_wordLeaderLines =
    {0x36162c62,0xb59a,0x4278,{0xaf,0x3d,0xf2,0xac,0x1e,0xb9,0x99,0xd9}};
extern "C" const GUID __declspec(selectany) IID_wordGridlines =
    {0xfc9090af,0x0ddb,0x4ec1,{0x86,0xe8,0x87,0x51,0xf2,0x19,0x9f,0x2c}};
extern "C" const GUID __declspec(selectany) IID_wordUpBars =
    {0x86905ac9,0x33f3,0x4a88,{0x96,0xc8,0xb2,0x89,0xb0,0x39,0x0b,0xca}};
extern "C" const GUID __declspec(selectany) IID_wordDownBars =
    {0x84a6a663,0xaef4,0x4fcd,{0x83,0xfd,0x9b,0xb7,0x07,0xf1,0x57,0xca}};
extern "C" const GUID __declspec(selectany) IID_wordDataTable =
    {0xdce9f2c4,0x4c02,0x43ba,{0x84,0x0e,0xb4,0x27,0x65,0x50,0xef,0x79}};
extern "C" const GUID __declspec(selectany) IID_wordDropLines =
    {0x9f1df642,0x3cce,0x4d83,{0xa7,0x70,0xd2,0x63,0x4a,0x05,0xd2,0x78}};
extern "C" const GUID __declspec(selectany) IID_wordHiLoLines =
    {0x7a1bce11,0x5783,0x4c7d,{0xbd,0x02,0xf3,0xd8,0x4a,0xb4,0x0e,0x7f}};
extern "C" const GUID __declspec(selectany) IID_wordLegend =
    {0xb3a1e8c6,0xe1ce,0x4a46,{0x8d,0x12,0xe0,0x17,0x15,0x7b,0x03,0xd7}};
extern "C" const GUID __declspec(selectany) IID_wordLegendKey =
    {0xdf076fde,0x8781,0x4051,{0xa5,0xbc,0x99,0xf6,0xb7,0xdc,0x04,0xd4}};
extern "C" const GUID __declspec(selectany) IID_wordLegendEntry =
    {0xc4a02049,0x024c,0x4273,{0x89,0x34,0xe4,0x8c,0xc2,0x14,0x79,0xa9}};
extern "C" const GUID __declspec(selectany) IID_wordLegendEntries =
    {0xb6511068,0x70bf,0x4751,{0xa7,0x41,0x55,0xc1,0xd4,0x1a,0xd9,0x6f}};
extern "C" const GUID __declspec(selectany) IID_wordErrorBars =
    {0x194f8476,0xb79d,0x4572,{0xa6,0x09,0x29,0x42,0x07,0xde,0x77,0xc1}};
extern "C" const GUID __declspec(selectany) IID_wordSeries =
    {0x40810760,0x068a,0x4486,{0xbe,0xc9,0x8e,0xa5,0x8c,0x70,0x29,0xf5}};
extern "C" const GUID __declspec(selectany) IID_wordSeriesCollection =
    {0x8feb78f7,0x35c6,0x4871,{0x91,0x8c,0x19,0x3c,0x3c,0xdd,0x88,0x6d}};
extern "C" const GUID __declspec(selectany) IID_wordTickLabels =
    {0x935d59f5,0xe365,0x4f92,{0xb7,0xf5,0x1c,0x49,0x9a,0x63,0xec,0xa8}};
extern "C" const GUID __declspec(selectany) IID_wordChartGroup =
    {0x86488fb4,0x9633,0x4c93,{0x80,0x57,0xfc,0x1f,0xa7,0xa8,0x47,0xae}};
extern "C" const GUID __declspec(selectany) IID_wordChartGroups =
    {0xf8ddb497,0xca6c,0x4711,{0x9b,0xa4,0x27,0x18,0xfa,0x3b,0xb6,0xfe}};
extern "C" const GUID __declspec(selectany) IID_wordDataLabel =
    {0x1fd94df1,0x3569,0x4465,{0x94,0xff,0xe8,0xb2,0x2d,0x28,0xee,0xb0}};
extern "C" const GUID __declspec(selectany) IID_wordTrendline =
    {0x91c46192,0x3124,0x4346,{0xa8,0x15,0x10,0xb8,0x87,0x3f,0x5a,0x06}};
extern "C" const GUID __declspec(selectany) IID_wordTrendlines =
    {0x54b7061a,0xd56c,0x40e5,{0xb8,0x5b,0x58,0x14,0x64,0x46,0xc7,0x82}};
extern "C" const GUID __declspec(selectany) IID_wordDataLabels =
    {0xd8252c5e,0xeb9f,0x4d74,{0xaa,0x72,0xc1,0x78,0xb1,0x28,0xfa,0xc4}};
extern "C" const GUID __declspec(selectany) IID_wordPlotArea =
    {0x56afd330,0x440c,0x4f4c,{0xa3,0x9c,0xed,0x30,0x6d,0x08,0x4d,0x5f}};
extern "C" const GUID __declspec(selectany) IID_wordChartTitle =
    {0xc1ad33e4,0xf088,0x40a9,{0x9d,0x2f,0xd9,0x40,0x17,0xd1,0x15,0xc4}};
extern "C" const GUID __declspec(selectany) IID_wordChart =
    {0x6ffa84bb,0xa350,0x4442,{0xbb,0x53,0xa4,0x36,0x53,0x45,0x9a,0x84}};
extern "C" const GUID __declspec(selectany) IID_wordAxisTitle =
    {0x8b0e45db,0x3a7b,0x42ee,{0x9d,0x17,0xa9,0x2a,0xf6,0x9b,0x79,0xc1}};
extern "C" const GUID __declspec(selectany) IID_wordDisplayUnitLabel =
    {0xc04865a3,0x9f8a,0x486c,{0xbb,0x58,0xb4,0xc3,0xe6,0x56,0x31,0x36}};
extern "C" const GUID __declspec(selectany) IID_wordAxis =
    {0x7ebc66bd,0xf788,0x42c3,{0x91,0xf4,0xe8,0xc8,0x41,0xa6,0x90,0x05}};
extern "C" const GUID __declspec(selectany) IID_wordAxes =
    {0x354ab591,0xa217,0x48b4,{0x99,0xe4,0x14,0xf5,0x8f,0x15,0x66,0x7d}};
extern "C" const GUID __declspec(selectany) IID_UndoRecord =
    {0xe598e358,0x2852,0x42d4,{0x87,0x75,0x16,0x0b,0xd9,0x1b,0x72,0x44}};
extern "C" const GUID __declspec(selectany) IID_wordProtectedViewWindow =
    {0xf743edd0,0x9b97,0x4b09,{0x89,0xcc,0x77,0xbe,0x19,0xb5,0x14,0x81}};
extern "C" const GUID __declspec(selectany) IID_wordProtectedViewWindows =
    {0xfd0a74e8,0xc719,0x49f6,{0xba,0x1b,0xf6,0xd9,0x83,0x9d,0x1a,0xb9}};
extern "C" const GUID __declspec(selectany) IID__Font =
    {0x00020952,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordPoint =
    {0x8a342fa0,0x5831,0x4b5e,{0x82,0xe1,0x00,0x3d,0x0a,0x0c,0x63,0x5d}};
extern "C" const GUID __declspec(selectany) IID_wordPoints =
    {0xc1a870a0,0x850e,0x4d38,{0x98,0xa7,0x74,0x1c,0xb8,0xc3,0xbc,0xa4}};
extern "C" const GUID __declspec(selectany) IID_wordOptions =
    {0x000209b7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__wordApplication =
    {0x00020970,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__wordGlobal =
    {0x000209b9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID__Document =
    {0x0002096b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Template =
    {0x0002096a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Templates =
    {0x000209a2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Bookmark =
    {0x00020968,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Bookmarks =
    {0x00020967,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Window =
    {0x00020962,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Windows =
    {0x00020961,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordPane =
    {0x00020960,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordPanes =
    {0x0002095f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Range =
    {0x0002095e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Characters =
    {0x0002095d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Words =
    {0x0002095c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Sentences =
    {0x0002095b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Paragraph =
    {0x00020957,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Paragraphs =
    {0x00020958,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_AutoCorrectEntry =
    {0x00020947,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_AutoCorrectEntries =
    {0x00020948,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordAutoCorrect =
    {0x00020949,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Footnote =
    {0x0002093f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Footnotes =
    {0x00020942,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Endnote =
    {0x0002093e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Endnotes =
    {0x00020941,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordComment =
    {0x0002093d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordComments =
    {0x00020940,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_AutoTextEntry =
    {0x00020936,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_AutoTextEntries =
    {0x00020937,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Frame =
    {0x0002092a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Replacement =
    {0x000209b1,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Find =
    {0x000209b0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Frames =
    {0x0002092b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_FormField =
    {0x00020928,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_FormFields =
    {0x00020929,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TableOfFigures =
    {0x00020921,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMergeField =
    {0x0002091e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMergeFields =
    {0x0002091f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_MailMerge =
    {0x00020920,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TableOfContents =
    {0x00020913,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TableOfAuthorities =
    {0x00020911,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Index =
    {0x0002097d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Subdocument =
    {0x00020989,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Subdocuments =
    {0x00020988,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_StoryRanges =
    {0x0002098c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListParagraphs =
    {0x00020991,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ProofreadingErrors =
    {0x000209bb,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_EmailSignatureEntries =
    {0x000209e5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_EmailSignature =
    {0x000209dc,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Break =
    {0x79635bf1,0xbd1d,0x4b3f,{0xa5,0x20,0xc1,0x10,0x6f,0x1a,0xaa,0xd8}};
extern "C" const GUID __declspec(selectany) IID_Breaks =
    {0x16be9309,0xd708,0x4322,{0xbb,0x1a,0xb0,0x56,0xf5,0x8d,0x17,0xea}};
extern "C" const GUID __declspec(selectany) IID_Editor =
    {0xdd947d72,0xf33c,0x4198,{0x9b,0xdf,0xf8,0x61,0x81,0xd0,0x5e,0x41}};
extern "C" const GUID __declspec(selectany) IID_Editors =
    {0xaed7e08c,0x14f0,0x4f33,{0x92,0x1d,0x4c,0x53,0x53,0x13,0x7b,0xf6}};
extern "C" const GUID __declspec(selectany) IID_OMathBreak =
    {0x65e515d5,0xf50b,0x4951,{0x8f,0x38,0xfa,0x6a,0xc8,0x70,0x73,0x87}};
extern "C" const GUID __declspec(selectany) IID_OMathBreaks =
    {0xe2e0f3a7,0x204c,0x40c5,{0xba,0xa5,0x29,0x0f,0x37,0x4f,0xdf,0x5a}};
extern "C" const GUID __declspec(selectany) IID_CoAuthUpdate =
    {0x9e6b5ec5,0xe8e4,0x40af,{0x95,0x40,0x62,0x03,0xf7,0x1e,0x28,0x23}};
extern "C" const GUID __declspec(selectany) IID_CoAuthUpdates =
    {0x30225cfc,0x5a71,0x4fe6,{0xb5,0x27,0x90,0xa5,0x2c,0x54,0xae,0x77}};
extern "C" const GUID __declspec(selectany) IID_ListFormat =
    {0x000209c0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Sections =
    {0x0002095a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Section =
    {0x00020959,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordTable =
    {0x00020951,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Tables =
    {0x0002094d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordRow =
    {0x00020950,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordRows =
    {0x0002094c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordColumn =
    {0x0002094f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordCell =
    {0x0002094e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordColumns =
    {0x0002094b,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Cells =
    {0x0002094a,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Fields =
    {0x00020930,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Field =
    {0x0002092f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TablesOfFigures =
    {0x00020922,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TablesOfContents =
    {0x00020914,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_TablesOfAuthorities =
    {0x00020912,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Indexes =
    {0x0002097c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Styles =
    {0x0002092d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Style =
    {0x0002092c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Envelope =
    {0x00020918,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Revision =
    {0x00020981,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Revisions =
    {0x00020980,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_EmailAuthor =
    {0x000209d7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_EmailOptions =
    {0x000209db,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Email =
    {0x000209dd,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordSelection =
    {0x00020975,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IApplicationEvents2 =
    {0x000209fe,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_IApplicationEvents3 =
    {0x00020a00,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordHeadersFooters =
    {0x00020984,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordHeaderFooter =
    {0x00020985,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListLevel =
    {0x0002098d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListLevels =
    {0x0002098e,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListTemplate =
    {0x0002098f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListTemplates =
    {0x00020990,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_List =
    {0x00020992,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Lists =
    {0x00020993,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListGallery =
    {0x00020994,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_ListGalleries =
    {0x00020995,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordHyperlinks =
    {0x0002099c,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordHyperlink =
    {0x0002099d,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordShapes =
    {0x0002099f,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordShapeRange =
    {0x000209b5,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordGroupShapes =
    {0x000209b6,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordShape =
    {0x000209a0,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordTextFrame =
    {0x000209b2,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_InlineShape =
    {0x000209a8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_InlineShapes =
    {0x000209a9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordConnectorFormat =
    {0x000209c7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordFreeformBuilder =
    {0x000209c9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordCanvasShapes =
    {0x396f9073,0xf9fd,0x11d3,{0x8e,0xa0,0x00,0x50,0x04,0x9a,0x1a,0x01}};
extern "C" const GUID __declspec(selectany) IID_HTMLDivision =
    {0x000209e7,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_HTMLDivisions =
    {0x000209e8,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordDiagramNode =
    {0x000209e9,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordDiagramNodeChildren =
    {0x000209ea,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordDiagramNodes =
    {0x000209eb,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_wordDiagram =
    {0x000209ec,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_SmartTag =
    {0x000209ed,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_SmartTags =
    {0x000209ee,0x0000,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_Line =
    {0xae6ce2f5,0xb9d3,0x407d,{0x85,0xa8,0x0f,0x10,0xc6,0x32,0x89,0xa4}};
extern "C" const GUID __declspec(selectany) IID_Lines =
    {0xe2e8a400,0x0615,0x427d,{0xad,0xcc,0xca,0xd3,0x9f,0xfe,0xbd,0x42}};
extern "C" const GUID __declspec(selectany) IID_Rectangle =
    {0xadd4edf3,0x2f33,0x4734,{0x9c,0xe6,0xd4,0x76,0x09,0x7c,0x5a,0xda}};
extern "C" const GUID __declspec(selectany) IID_Rectangles =
    {0x7d0f7985,0x68d9,0x4d93,{0x91,0xcb,0x81,0x09,0x28,0x0e,0x76,0xcc}};
extern "C" const GUID __declspec(selectany) IID_Page =
    {0x352840a9,0xaf7d,0x4ca4,{0x87,0xfc,0x21,0xc6,0x8f,0xda,0xb3,0xe4}};
extern "C" const GUID __declspec(selectany) IID_wordPages =
    {0x91807402,0x6c6f,0x47cd,{0xb8,0xfa,0xc4,0x2f,0xee,0x8e,0xe9,0x24}};
extern "C" const GUID __declspec(selectany) IID_XMLNode =
    {0x09760240,0x0b89,0x49f7,{0xa7,0x9d,0x47,0x9f,0x24,0x72,0x3f,0x56}};
extern "C" const GUID __declspec(selectany) IID_XMLNodes =
    {0xd36c1f42,0x7044,0x4b9e,{0x9c,0xa3,0x85,0x91,0x94,0x54,0xdb,0x04}};
extern "C" const GUID __declspec(selectany) IID_XMLChildNodeSuggestion =
    {0xa87e00e9,0x3ac3,0x4b53,{0xab,0xe3,0x73,0x79,0x65,0x3d,0x0e,0x82}};
extern "C" const GUID __declspec(selectany) IID_XMLChildNodeSuggestions =
    {0xde63b5ac,0xca4f,0x46fe,{0x91,0x84,0xa5,0x71,0x9a,0xb9,0xed,0x5b}};
extern "C" const GUID __declspec(selectany) IID_IApplicationEvents4 =
    {0x00020a01,0x0001,0x0000,{0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46}};
extern "C" const GUID __declspec(selectany) IID_OMaths =
    {0x873e774b,0x926a,0x4cb1,{0x87,0x8d,0x63,0x5a,0x45,0x18,0x75,0x95}};
extern "C" const GUID __declspec(selectany) IID_OMath =
    {0xe4442a83,0xf623,0x459c,{0x8e,0x95,0x8b,0xfb,0x44,0xdc,0xf2,0x3a}};
extern "C" const GUID __declspec(selectany) IID_OMathArgs =
    {0x8245795b,0x9aed,0x4943,{0xa1,0x6d,0xe5,0x86,0xed,0x81,0x80,0xd1}};
extern "C" const GUID __declspec(selectany) IID_OMathAcc =
    {0xf258de05,0xc41b,0x4c33,{0xa7,0x78,0xf0,0xd3,0xf9,0x8c,0xee,0xb3}};
extern "C" const GUID __declspec(selectany) IID_OMathBar =
    {0xf08b45f1,0x8f23,0x4156,{0x9d,0x63,0x18,0x20,0xc0,0xed,0x22,0x9a}};
extern "C" const GUID __declspec(selectany) IID_OMathBox =
    {0x842c37fe,0xc76f,0x4b2b,{0x9b,0x60,0xc4,0x08,0xcb,0x5e,0x83,0x8e}};
extern "C" const GUID __declspec(selectany) IID_OMathBorderBox =
    {0x2503b6ee,0x0889,0x44df,{0xb9,0x20,0x6d,0x6f,0x96,0x59,0xde,0xa3}};
extern "C" const GUID __declspec(selectany) IID_OMathDelim =
    {0xc94688a6,0xa2a7,0x4133,{0xa2,0x6d,0x72,0x6c,0xd5,0x69,0xd5,0xf3}};
extern "C" const GUID __declspec(selectany) IID_OMathEqArray =
    {0x1f998a61,0x71c6,0x44c2,{0xa0,0xf2,0x1d,0x66,0x16,0x9b,0x47,0xcb}};
extern "C" const GUID __declspec(selectany) IID_OMathFrac =
    {0x50209974,0xba32,0x4a03,{0x8f,0xa6,0xba,0xc5,0x6c,0xc0,0x56,0xfd}};
extern "C" const GUID __declspec(selectany) IID_OMathFunc =
    {0x0d951adf,0x10a6,0x4c9b,{0xbc,0xd9,0x0f,0xb8,0xcb,0xad,0x9a,0x87}};
extern "C" const GUID __declspec(selectany) IID_OMathGroupChar =
    {0x02b17cb4,0x7d55,0x4b34,{0xb3,0x8b,0x10,0x38,0x14,0x33,0x44,0x1f}};
extern "C" const GUID __declspec(selectany) IID_OMathMatRow =
    {0x5daa8bb6,0x054e,0x48f6,{0xbe,0xac,0xea,0xad,0x02,0xbe,0x0c,0xc7}};
extern "C" const GUID __declspec(selectany) IID_OMathMatRows =
    {0x1b426348,0x607d,0x433c,{0x92,0x16,0xc5,0xd2,0xbf,0x0e,0xf3,0x1f}};
extern "C" const GUID __declspec(selectany) IID_OMathMatCol =
    {0xcae36175,0x3818,0x4c60,{0xbc,0xbf,0x06,0x45,0xd5,0x1e,0xb3,0x3b}};
extern "C" const GUID __declspec(selectany) IID_OMathMatCols =
    {0xefc71f9c,0x7f42,0x4cd4,{0xa7,0xa7,0x97,0x0d,0x7a,0x48,0xcd,0x27}};
extern "C" const GUID __declspec(selectany) IID_OMathMat =
    {0x3e061a7e,0x67ad,0x4eaa,{0xbc,0x1e,0x55,0x05,0x7d,0x5e,0x59,0x6f}};
extern "C" const GUID __declspec(selectany) IID_OMathNary =
    {0xcebd4184,0x4e6d,0x4fc6,{0xa4,0x2d,0x21,0x42,0xb1,0xb7,0x6a,0xf5}};
extern "C" const GUID __declspec(selectany) IID_OMathPhantom =
    {0xdb77d541,0x85c3,0x42e8,{0x86,0x49,0xaf,0xbd,0x7c,0xf8,0x78,0x66}};
extern "C" const GUID __declspec(selectany) IID_OMathRad =
    {0x67a7eec5,0x285d,0x4024,{0xb0,0x71,0xbd,0x6b,0x33,0xb8,0x85,0x47}};
extern "C" const GUID __declspec(selectany) IID_OMathScrSub =
    {0x98dfbd12,0x96cb,0x4f07,{0x90,0xea,0x74,0x9f,0xf1,0xd6,0xb8,0x9d}};
extern "C" const GUID __declspec(selectany) IID_OMathScrSup =
    {0xd0a95726,0x678a,0x4b9d,{0x81,0x03,0x1e,0x2b,0x86,0x73,0x5a,0xe7}};
extern "C" const GUID __declspec(selectany) IID_OMathFunctions =
    {0x497142a4,0x16fd,0x42c6,{0xbc,0x58,0x15,0xd8,0x93,0x45,0xfc,0x21}};
extern "C" const GUID __declspec(selectany) IID_OMathFunction =
    {0xf1f37152,0x1db1,0x4901,{0xad,0x9a,0xc7,0x40,0xf9,0x94,0x64,0xb4}};
extern "C" const GUID __declspec(selectany) IID_OMathLimLow =
    {0x74de9576,0x8e99,0x4e28,{0x91,0x2b,0xcb,0x30,0x74,0x7c,0x60,0xce}};
extern "C" const GUID __declspec(selectany) IID_OMathLimUpp =
    {0xfc9086c6,0x0287,0x4997,{0xb2,0xe1,0x81,0x6c,0x33,0x4a,0x22,0xf8}};
extern "C" const GUID __declspec(selectany) IID_OMathScrPre =
    {0xafaf0c0e,0x8603,0x40f6,{0x8f,0xd1,0x42,0x72,0x6c,0xac,0x21,0xe3}};
extern "C" const GUID __declspec(selectany) IID_OMathScrSubSup =
    {0xdc489ad4,0x23c4,0x4f4b,{0x99,0x0f,0x45,0xa5,0x1c,0x7c,0x0c,0x4f}};
extern "C" const GUID __declspec(selectany) IID_ContentControls =
    {0x804cd967,0xf83b,0x432d,{0x94,0x46,0xc6,0x1a,0x45,0xcf,0xef,0xf0}};
extern "C" const GUID __declspec(selectany) IID_ContentControl =
    {0xee95afe3,0x3026,0x4172,{0xb0,0x78,0x0e,0x79,0xda,0xb5,0xcc,0x3d}};
extern "C" const GUID __declspec(selectany) IID_BuildingBlockTypes =
    {0xb5828b50,0x0e3d,0x448a,{0x96,0x2d,0xa4,0x07,0x02,0xa5,0x86,0x8d}};
extern "C" const GUID __declspec(selectany) IID_BuildingBlockType =
    {0x817f99fa,0xccc4,0x4971,{0x8e,0x9d,0x12,0x38,0xf7,0x35,0xaa,0xff}};
extern "C" const GUID __declspec(selectany) IID_Categories =
    {0x6e47678b,0xa879,0x4e56,{0x86,0x98,0x3b,0x7c,0xf1,0x69,0xfa,0xd4}};
extern "C" const GUID __declspec(selectany) IID_Category =
    {0xecfbdb5e,0xacd2,0x4530,{0xad,0x79,0x45,0x60,0xb7,0xff,0x05,0x5c}};
extern "C" const GUID __declspec(selectany) IID_BuildingBlock =
    {0xbfd3fc23,0xf763,0x4ff8,{0x82,0x6e,0x1a,0xfb,0xf5,0x98,0xa4,0xe7}};
extern "C" const GUID __declspec(selectany) IID_BuildingBlocks =
    {0xc6d50987,0x25d7,0x408a,{0xbf,0xf2,0x90,0xbf,0x86,0xa2,0x4e,0x93}};
extern "C" const GUID __declspec(selectany) IID_BuildingBlockEntries =
    {0x39709229,0x56a0,0x4e29,{0x91,0x12,0xb3,0x1d,0xd0,0x67,0xeb,0xfd}};
extern "C" const GUID __declspec(selectany) IID_CoAuthLock =
    {0x99755f80,0xfe96,0x4f7d,{0xb6,0x36,0xb8,0xe8,0x00,0xe5,0x4f,0x44}};
extern "C" const GUID __declspec(selectany) IID_CoAuthLocks =
    {0xdff99ac2,0xcd2a,0x43ad,{0x91,0xb1,0xa2,0xbe,0x40,0xbc,0x71,0x46}};
extern "C" const GUID __declspec(selectany) IID_CoAuthor =
    {0xe59544d5,0xc299,0x46a0,{0x84,0xc1,0xc5,0x1a,0xb3,0x8f,0x97,0x59}};
extern "C" const GUID __declspec(selectany) IID_CoAuthors =
    {0x256b6aba,0x6a38,0x4d39,{0x97,0x1c,0x91,0xfd,0xa9,0x92,0x28,0x14}};
extern "C" const GUID __declspec(selectany) IID_CoAuthoring =
    {0x65df9f31,0xb1e3,0x4651,{0x87,0xe8,0x51,0xd5,0x5f,0x30,0x21,0x61}};

} // namespace Word

#pragma pack(pop)
