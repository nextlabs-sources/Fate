#include "Setup.h"  
#include "ifx.h" 
#include "include/servicecontrol.h" 
#include "include/logging.h"
#include "include/common.h"

///////////////////////////////////////////////////////////////////////////////
//                                                                           
// Function:  ValidateUninstallPassword
//                                                                           
//  Purpose:  Attempts to shutdown the agent service and displays a UI if necessary.
//			  This function is used only in the UI sequence.
//
//  Returns: 0 if sucessful
//           1 if password is incorrect
//           2 if some other fatal error occured
//                                                                           
///////////////////////////////////////////////////////////////////////////////
function INT ValidateAdministrationPassword(hMSI)
	INT result; 
    STRING resultAsString;  
    STRING UNINSTALL_PASSWORD;
begin    
	WriteToLogFile(hMSI, "Begin ValidateAdministrationPassword()");  
	UNINSTALL_PASSWORD=GetProperty(hMSI,"UNINSTALL_PASSWORD");
	if (UNINSTALL_PASSWORD = "") then
		MessageBox("Please input password !!", INFORMATION);
	    DenyNextDialog(hMSI);
	    return ERROR_SUCCESS;
	endif;
	
 	result = StopService(hMSI);             
    
 	switch (result)
		case ERROR_INCORRECT_PASSWORD:			
 			DenyNextDialog(hMSI);
			MessageBox("Invalid Password ! \nThe password you have entered is invalid. Please check your password and try again.", SEVERE);
	 	case ERROR_AGENT_NOT_STOPPED:                            
	 		DenyNextDialog(hMSI);
	 		MessageBox("An unexpected error occured. The Policy Controller service could not be stopped.", SEVERE);
	 		return result;	 
		case ERROR_SUCCESS:      
			AllowNextDialog(hMSI);                      
	 	default:
	 		DenyNextDialog(hMSI);
	 		MessageBox("An unexpected error occured. The Policy Controller service could not be stopped.", SEVERE);	  
	 		return result;                                          				
	 endswitch;
	 
	 return ERROR_SUCCESS;
end;                    

function INT InsertDeleteInRunonce(hMSI)

  	string Installdir;
  	NUMBER pathSize;  
  	INT nResult;   
  	STRING szKey;
  	STRING szNumName;
  	STRING szNumValue;
  	INT nSize;
  	INT nType;

begin               
	REGDB_OPTIONS = REGDB_OPTIONS | REGDB_OPTION_WOW64_64KEY ;
	WriteToLogFile(hMSI, "Writing runonce registry");                          
 	MsiGetProperty(hMSI, "CustomActionData",Installdir, pathSize); 
 	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);  
	szKey = "SOFTWARE\\MICROSOFT\\WINDOWS\\CurrentVersion\\Runonce";
	if (RegDBCreateKeyEx (szKey, "") < 0) then 
        MessageBox ("RegDBCreateKeyEx failed.", SEVERE); 
    endif; 
    szNumName  = "DeleteNE"; 
    szNumValue = "cmd /c rmdir \""+Installdir + "Network Enforcer\" /s /q";  
    WriteToLogFile(hMSI,szNumValue);
    nType      = REGDB_STRING; 
    nSize      = -1;      
    nResult = RegDBSetKeyValueEx (szKey, szNumName, nType, szNumValue, nSize); 
    if ( nResult < 0) then 
        MessageBox ("RegDBSetKeyValueEx failed.", SEVERE); 
		WriteToLogFile(hMSI, "Unable to create registry!");
		
	endif;  
	

	
	return nResult;

end;                         

function INT InsertDateToRegistry(hMSI)
    NUMBER nvResult;
    STRING svResult;                                            
    STRING sKey;
    LIST ListID;  
    STRING sMonth;
    STRING sYear;
    STRING sDate;
    
begin
	WriteToLogFile(hMSI, "Inserting date into registry ... ");
    if (GetSystemInfo (DATE, nvResult, svResult) < 0) then 
        WriteToLogFile(hMSI,"Unable to retrieve system date !");
    else    
 		ListID = ListCreate (STRINGLIST); 
        nvResult = StrGetTokens (ListID, svResult, "-");
        ListGetFirstString(ListID, sMonth);
        ListGetNextString(ListID, sDate);
        ListGetNextString(ListID, sYear); 
        WriteToLogFile(hMSI, "Date retrieved : " + sMonth+"/"+sDate+"/"+sYear);
        if (StrLength(sDate) < 2) then
        	sDate="0"+sDate;
        endif;
        if (StrLength(sMonth) < 2) then
        	sMonth="0"+sMonth;
        endif; 
        svResult = sMonth+"/"+sDate+"/"+sYear;
        
    	ListDestroy (ListID); 
     	REGDB_OPTIONS = REGDB_OPTIONS | REGDB_OPTION_WOW64_64KEY;   
    	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
    	sKey = "SOFTWARE\\NextLabs\\Enterprise DLP\\Network Enforcer";
    	nvResult = RegDBSetKeyValueEx(sKey, "LastUpdated", REGDB_STRING, svResult, -1);
    	if (nvResult < 0) then
    		WriteToLogFile(hMSI, "Unable to create date registry key!");
    	endif;
    	
    endif; 
    return ERROR_SUCCESS;
end;
