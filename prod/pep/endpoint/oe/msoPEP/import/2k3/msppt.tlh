// Created by Microsoft (R) C/C++ Compiler Version 14.00.50727.762 (b2a1525e).
//
// d:\nextlabs projects\enforcers\platforms\win32\modules\msopep-- old\2k3release\msppt.tlh
//
// C++ source equivalent of Win32 type library .\import\2k3\MSPPT.OLB
// compiler-generated file created 04/03/08 at 10:55:02 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace PPT {

//
// Forward references and typedefs
//

struct __declspec(uuid("91493440-5a91-11cf-8700-00aa0060263b"))
/* LIBID */ __PowerPoint;
enum PpWindowState;
enum PpArrangeStyle;
enum PpViewType;
enum PpColorSchemeIndex;
enum PpSlideSizeType;
enum PpSaveAsFileType;
enum PpTextStyleType;
enum PpSlideLayout;
enum PpEntryEffect;
enum PpTextLevelEffect;
enum PpTextUnitEffect;
enum PpChartUnitEffect;
enum PpAfterEffect;
enum PpAdvanceMode;
enum PpSoundEffectType;
enum PpFollowColors;
enum PpUpdateOption;
enum PpParagraphAlignment;
enum PpBaselineAlignment;
enum PpTabStopType;
enum PpIndentControl;
enum PpChangeCase;
enum PpSlideShowPointerType;
enum PpSlideShowState;
enum PpSlideShowAdvanceMode;
enum PpFileDialogType;
enum PpPrintOutputType;
enum PpPrintHandoutOrder;
enum PpPrintColorType;
enum PpSelectionType;
enum PpDirection;
enum PpDateTimeFormat;
enum PpTransitionSpeed;
enum PpMouseActivation;
enum PpActionType;
enum PpPlaceholderType;
enum PpSlideShowType;
enum PpPrintRangeType;
enum PpAutoSize;
enum PpMediaType;
enum PpSoundFormatType;
enum PpFarEastLineBreakLevel;
enum PpSlideShowRangeType;
enum PpFrameColors;
struct __declspec(uuid("91493450-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Collection;
struct __declspec(uuid("91493442-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ _pptApplication;
struct __declspec(uuid("91493451-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ _pptGlobal;
struct /* coclass */ pptApplication;
struct /* coclass */ pptGlobal;
struct __declspec(uuid("91493452-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptColorFormat;
struct __declspec(uuid("91493453-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SlideShowWindow;
struct __declspec(uuid("91493454-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptSelection;
struct __declspec(uuid("91493455-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ DocumentWindows;
struct __declspec(uuid("91493456-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SlideShowWindows;
struct __declspec(uuid("91493457-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ DocumentWindow;
struct __declspec(uuid("91493458-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptView;
struct __declspec(uuid("91493459-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SlideShowView;
struct __declspec(uuid("9149345a-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SlideShowSettings;
struct __declspec(uuid("9149345b-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ NamedSlideShows;
struct __declspec(uuid("9149345c-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ NamedSlideShow;
struct __declspec(uuid("9149345d-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PrintOptions;
struct __declspec(uuid("9149345e-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PrintRanges;
struct __declspec(uuid("9149345f-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PrintRange;
struct __declspec(uuid("91493460-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptAddIns;
struct __declspec(uuid("91493461-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptAddIn;
struct __declspec(uuid("91493462-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Presentations;
struct __declspec(uuid("91493463-5a91-11cf-8700-00aa0060263b"))
/* interface */ PresEvents;
struct /* coclass */ Presentation;
struct __declspec(uuid("91493464-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptHyperlinks;
struct __declspec(uuid("91493465-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptHyperlink;
struct __declspec(uuid("91493466-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptPageSetup;
struct __declspec(uuid("91493467-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Fonts;
struct __declspec(uuid("91493468-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ExtraColors;
struct __declspec(uuid("91493469-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Slides;
struct __declspec(uuid("9149346a-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ _Slide;
struct __declspec(uuid("9149346b-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SlideRange;
struct __declspec(uuid("9149346c-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ _Master;
struct __declspec(uuid("9149346d-5a91-11cf-8700-00aa0060263b"))
/* interface */ SldEvents;
struct /* coclass */ Slide;
struct __declspec(uuid("9149346e-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ColorSchemes;
struct __declspec(uuid("9149346f-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ColorScheme;
struct __declspec(uuid("91493470-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ RGBColor;
struct __declspec(uuid("91493471-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SlideShowTransition;
struct __declspec(uuid("91493472-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SoundEffect;
struct __declspec(uuid("91493473-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SoundFormat;
struct __declspec(uuid("91493474-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptHeadersFooters;
struct __declspec(uuid("91493475-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptShapes;
struct __declspec(uuid("91493476-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Placeholders;
struct __declspec(uuid("91493477-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PlaceholderFormat;
struct __declspec(uuid("91493478-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptFreeformBuilder;
struct __declspec(uuid("91493479-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptShape;
struct __declspec(uuid("9149347a-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptShapeRange;
struct __declspec(uuid("9149347b-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptGroupShapes;
struct __declspec(uuid("9149347c-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptAdjustments;
struct __declspec(uuid("9149347d-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptPictureFormat;
struct __declspec(uuid("9149347e-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptFillFormat;
struct __declspec(uuid("9149347f-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptLineFormat;
struct __declspec(uuid("91493480-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptShadowFormat;
struct __declspec(uuid("91493481-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptConnectorFormat;
struct __declspec(uuid("91493482-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptTextEffectFormat;
struct __declspec(uuid("91493483-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptThreeDFormat;
struct __declspec(uuid("91493484-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptTextFrame;
struct __declspec(uuid("91493485-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptCalloutFormat;
struct __declspec(uuid("91493486-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptShapeNodes;
struct __declspec(uuid("91493487-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptShapeNode;
struct __declspec(uuid("91493488-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptOLEFormat;
struct __declspec(uuid("91493489-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptLinkFormat;
struct __declspec(uuid("9149348a-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ObjectVerbs;
struct __declspec(uuid("9149348b-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ AnimationSettings;
struct __declspec(uuid("9149348c-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ActionSettings;
struct __declspec(uuid("9149348d-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ActionSetting;
struct __declspec(uuid("9149348e-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PlaySettings;
struct __declspec(uuid("9149348f-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ TextRange;
struct __declspec(uuid("91493490-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Ruler;
struct __declspec(uuid("91493491-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ RulerLevels;
struct __declspec(uuid("91493492-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ RulerLevel;
struct __declspec(uuid("91493493-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptTabStops;
struct __declspec(uuid("91493494-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptTabStop;
struct __declspec(uuid("91493495-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptFont;
struct __declspec(uuid("91493496-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ParagraphFormat;
struct __declspec(uuid("91493497-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ BulletFormat;
struct __declspec(uuid("91493498-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ TextStyles;
struct __declspec(uuid("91493499-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ TextStyle;
struct __declspec(uuid("9149349a-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ TextStyleLevels;
struct __declspec(uuid("9149349b-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ TextStyleLevel;
struct __declspec(uuid("9149349c-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptHeaderFooter;
struct __declspec(uuid("9149349d-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ _Presentation;
struct __declspec(uuid("914934b9-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Tags;
struct __declspec(uuid("914934be-5a91-11cf-8700-00aa0060263b"))
/* interface */ MouseTracker;
struct __declspec(uuid("914934bf-5a91-11cf-8700-00aa0060263b"))
/* interface */ MouseDownHandler;
struct __declspec(uuid("914934c0-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ OCXExtender;
struct __declspec(uuid("914934c1-5a91-11cf-8700-00aa0060263b"))
/* interface */ OCXExtenderEvents;
struct /* coclass */ pptOLEControl;
enum PpBorderType;
enum PpHTMLVersion;
enum PpPublishSourceType;
enum PpBulletType;
enum PpNumberedBulletStyle;
enum PpShapeFormat;
enum PpExportMode;
struct __declspec(uuid("914934c2-5a91-11cf-8700-00aa0060263b"))
/* interface */ EApplication;
struct __declspec(uuid("914934c3-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptTable;
struct __declspec(uuid("914934c4-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptColumns;
struct __declspec(uuid("914934c5-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptColumn;
struct __declspec(uuid("914934c6-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptRows;
struct __declspec(uuid("914934c7-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptRow;
struct __declspec(uuid("914934c8-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ CellRange;
struct __declspec(uuid("914934c9-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptCell;
struct __declspec(uuid("914934ca-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptBorders;
struct __declspec(uuid("914934cb-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptPanes;
struct __declspec(uuid("914934cc-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Pane;
struct __declspec(uuid("914934cd-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptDefaultWebOptions;
struct __declspec(uuid("914934ce-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptWebOptions;
struct __declspec(uuid("914934cf-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PublishObjects;
struct __declspec(uuid("914934d0-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptPublishObject;
struct __declspec(uuid("914934d2-5a91-11cf-8700-00aa0060263b"))
/* interface */ MasterEvents;
struct /* coclass */ Master;
enum PpPasteDataType;
struct __declspec(uuid("914934d3-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ _PowerRex;
struct /* coclass */ PowerRex;
struct __declspec(uuid("914934d4-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptComments;
struct __declspec(uuid("914934d5-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptComment;
struct __declspec(uuid("914934d6-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Designs;
struct __declspec(uuid("914934d7-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Design;
struct __declspec(uuid("914934d8-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptDiagramNode;
struct __declspec(uuid("914934d9-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptDiagramNodeChildren;
struct __declspec(uuid("914934da-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptDiagramNodes;
struct __declspec(uuid("914934db-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptDiagram;
struct __declspec(uuid("914934dc-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ TimeLine;
struct __declspec(uuid("914934dd-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Sequences;
enum MsoAnimEffect;
enum MsoAnimateByLevel;
enum MsoAnimTriggerType;
enum MsoAnimAfterEffect;
enum MsoAnimTextUnitEffect;
struct __declspec(uuid("914934de-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Sequence;
enum MsoAnimEffectRestart;
enum MsoAnimEffectAfter;
struct __declspec(uuid("914934df-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Effect;
struct __declspec(uuid("914934e0-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ Timing;
enum MsoAnimDirection;
struct __declspec(uuid("914934e1-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ EffectParameters;
struct __declspec(uuid("914934e2-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ EffectInformation;
enum MsoAnimType;
struct __declspec(uuid("914934e3-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ AnimationBehaviors;
enum MsoAnimAdditive;
enum MsoAnimAccumulate;
struct __declspec(uuid("914934e4-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ AnimationBehavior;
struct __declspec(uuid("914934e5-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ MotionEffect;
struct __declspec(uuid("914934e6-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ColorEffect;
struct __declspec(uuid("914934e7-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ ScaleEffect;
struct __declspec(uuid("914934e8-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ RotationEffect;
enum MsoAnimProperty;
struct __declspec(uuid("914934e9-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ PropertyEffect;
struct __declspec(uuid("914934ea-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ AnimationPoints;
struct __declspec(uuid("914934eb-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ AnimationPoint;
enum PpAlertLevel;
struct __declspec(uuid("914934ec-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptCanvasShapes;
enum PpRevisionInfo;
struct __declspec(uuid("914934ed-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptAutoCorrect;
struct __declspec(uuid("914934ee-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ pptOptions;
enum MsoAnimCommandType;
struct __declspec(uuid("914934ef-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ CommandEffect;
enum MsoAnimFilterEffectType;
enum MsoAnimFilterEffectSubtype;
struct __declspec(uuid("914934f0-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ FilterEffect;
struct __declspec(uuid("914934f1-5a91-11cf-8700-00aa0060263b"))
/* dual interface */ SetEffect;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(Collection, __uuidof(Collection));
_COM_SMARTPTR_TYPEDEF(pptColorFormat, __uuidof(pptColorFormat));
_COM_SMARTPTR_TYPEDEF(NamedSlideShow, __uuidof(NamedSlideShow));
_COM_SMARTPTR_TYPEDEF(NamedSlideShows, __uuidof(NamedSlideShows));
_COM_SMARTPTR_TYPEDEF(PrintRange, __uuidof(PrintRange));
_COM_SMARTPTR_TYPEDEF(PrintRanges, __uuidof(PrintRanges));
_COM_SMARTPTR_TYPEDEF(PrintOptions, __uuidof(PrintOptions));
_COM_SMARTPTR_TYPEDEF(pptAddIn, __uuidof(pptAddIn));
_COM_SMARTPTR_TYPEDEF(pptAddIns, __uuidof(pptAddIns));
_COM_SMARTPTR_TYPEDEF(PresEvents, __uuidof(PresEvents));
_COM_SMARTPTR_TYPEDEF(Presentations, __uuidof(Presentations));
_COM_SMARTPTR_TYPEDEF(pptHyperlink, __uuidof(pptHyperlink));
_COM_SMARTPTR_TYPEDEF(pptHyperlinks, __uuidof(pptHyperlinks));
_COM_SMARTPTR_TYPEDEF(pptPageSetup, __uuidof(pptPageSetup));
_COM_SMARTPTR_TYPEDEF(ExtraColors, __uuidof(ExtraColors));
_COM_SMARTPTR_TYPEDEF(SldEvents, __uuidof(SldEvents));
_COM_SMARTPTR_TYPEDEF(RGBColor, __uuidof(RGBColor));
_COM_SMARTPTR_TYPEDEF(ColorScheme, __uuidof(ColorScheme));
_COM_SMARTPTR_TYPEDEF(ColorSchemes, __uuidof(ColorSchemes));
_COM_SMARTPTR_TYPEDEF(SoundEffect, __uuidof(SoundEffect));
_COM_SMARTPTR_TYPEDEF(SlideShowTransition, __uuidof(SlideShowTransition));
_COM_SMARTPTR_TYPEDEF(SoundFormat, __uuidof(SoundFormat));
_COM_SMARTPTR_TYPEDEF(PlaceholderFormat, __uuidof(PlaceholderFormat));
_COM_SMARTPTR_TYPEDEF(pptAdjustments, __uuidof(pptAdjustments));
_COM_SMARTPTR_TYPEDEF(pptPictureFormat, __uuidof(pptPictureFormat));
_COM_SMARTPTR_TYPEDEF(pptFillFormat, __uuidof(pptFillFormat));
_COM_SMARTPTR_TYPEDEF(pptLineFormat, __uuidof(pptLineFormat));
_COM_SMARTPTR_TYPEDEF(pptShadowFormat, __uuidof(pptShadowFormat));
_COM_SMARTPTR_TYPEDEF(pptTextEffectFormat, __uuidof(pptTextEffectFormat));
_COM_SMARTPTR_TYPEDEF(pptThreeDFormat, __uuidof(pptThreeDFormat));
_COM_SMARTPTR_TYPEDEF(pptCalloutFormat, __uuidof(pptCalloutFormat));
_COM_SMARTPTR_TYPEDEF(pptShapeNode, __uuidof(pptShapeNode));
_COM_SMARTPTR_TYPEDEF(pptShapeNodes, __uuidof(pptShapeNodes));
_COM_SMARTPTR_TYPEDEF(pptLinkFormat, __uuidof(pptLinkFormat));
_COM_SMARTPTR_TYPEDEF(ObjectVerbs, __uuidof(ObjectVerbs));
_COM_SMARTPTR_TYPEDEF(pptOLEFormat, __uuidof(pptOLEFormat));
_COM_SMARTPTR_TYPEDEF(ActionSetting, __uuidof(ActionSetting));
_COM_SMARTPTR_TYPEDEF(ActionSettings, __uuidof(ActionSettings));
_COM_SMARTPTR_TYPEDEF(PlaySettings, __uuidof(PlaySettings));
_COM_SMARTPTR_TYPEDEF(AnimationSettings, __uuidof(AnimationSettings));
_COM_SMARTPTR_TYPEDEF(RulerLevel, __uuidof(RulerLevel));
_COM_SMARTPTR_TYPEDEF(RulerLevels, __uuidof(RulerLevels));
_COM_SMARTPTR_TYPEDEF(pptTabStop, __uuidof(pptTabStop));
_COM_SMARTPTR_TYPEDEF(pptTabStops, __uuidof(pptTabStops));
_COM_SMARTPTR_TYPEDEF(Ruler, __uuidof(Ruler));
_COM_SMARTPTR_TYPEDEF(pptFont, __uuidof(pptFont));
_COM_SMARTPTR_TYPEDEF(Fonts, __uuidof(Fonts));
_COM_SMARTPTR_TYPEDEF(pptHeaderFooter, __uuidof(pptHeaderFooter));
_COM_SMARTPTR_TYPEDEF(pptHeadersFooters, __uuidof(pptHeadersFooters));
_COM_SMARTPTR_TYPEDEF(Tags, __uuidof(Tags));
_COM_SMARTPTR_TYPEDEF(MouseTracker, __uuidof(MouseTracker));
_COM_SMARTPTR_TYPEDEF(SlideShowView, __uuidof(SlideShowView));
_COM_SMARTPTR_TYPEDEF(SlideShowWindow, __uuidof(SlideShowWindow));
_COM_SMARTPTR_TYPEDEF(SlideShowWindows, __uuidof(SlideShowWindows));
_COM_SMARTPTR_TYPEDEF(SlideShowSettings, __uuidof(SlideShowSettings));
_COM_SMARTPTR_TYPEDEF(MouseDownHandler, __uuidof(MouseDownHandler));
_COM_SMARTPTR_TYPEDEF(OCXExtender, __uuidof(OCXExtender));
_COM_SMARTPTR_TYPEDEF(OCXExtenderEvents, __uuidof(OCXExtenderEvents));
_COM_SMARTPTR_TYPEDEF(BulletFormat, __uuidof(BulletFormat));
_COM_SMARTPTR_TYPEDEF(ParagraphFormat, __uuidof(ParagraphFormat));
_COM_SMARTPTR_TYPEDEF(TextStyleLevel, __uuidof(TextStyleLevel));
_COM_SMARTPTR_TYPEDEF(TextStyleLevels, __uuidof(TextStyleLevels));
_COM_SMARTPTR_TYPEDEF(pptBorders, __uuidof(pptBorders));
_COM_SMARTPTR_TYPEDEF(Pane, __uuidof(Pane));
_COM_SMARTPTR_TYPEDEF(pptPanes, __uuidof(pptPanes));
_COM_SMARTPTR_TYPEDEF(pptDefaultWebOptions, __uuidof(pptDefaultWebOptions));
_COM_SMARTPTR_TYPEDEF(pptWebOptions, __uuidof(pptWebOptions));
_COM_SMARTPTR_TYPEDEF(pptPublishObject, __uuidof(pptPublishObject));
_COM_SMARTPTR_TYPEDEF(PublishObjects, __uuidof(PublishObjects));
_COM_SMARTPTR_TYPEDEF(MasterEvents, __uuidof(MasterEvents));
_COM_SMARTPTR_TYPEDEF(pptView, __uuidof(pptView));
_COM_SMARTPTR_TYPEDEF(TextRange, __uuidof(TextRange));
_COM_SMARTPTR_TYPEDEF(pptTextFrame, __uuidof(pptTextFrame));
_COM_SMARTPTR_TYPEDEF(TextStyle, __uuidof(TextStyle));
_COM_SMARTPTR_TYPEDEF(TextStyles, __uuidof(TextStyles));
_COM_SMARTPTR_TYPEDEF(_PowerRex, __uuidof(_PowerRex));
_COM_SMARTPTR_TYPEDEF(pptComment, __uuidof(pptComment));
_COM_SMARTPTR_TYPEDEF(pptComments, __uuidof(pptComments));
_COM_SMARTPTR_TYPEDEF(EffectParameters, __uuidof(EffectParameters));
_COM_SMARTPTR_TYPEDEF(EffectInformation, __uuidof(EffectInformation));
_COM_SMARTPTR_TYPEDEF(MotionEffect, __uuidof(MotionEffect));
_COM_SMARTPTR_TYPEDEF(ColorEffect, __uuidof(ColorEffect));
_COM_SMARTPTR_TYPEDEF(ScaleEffect, __uuidof(ScaleEffect));
_COM_SMARTPTR_TYPEDEF(RotationEffect, __uuidof(RotationEffect));
_COM_SMARTPTR_TYPEDEF(AnimationPoint, __uuidof(AnimationPoint));
_COM_SMARTPTR_TYPEDEF(AnimationPoints, __uuidof(AnimationPoints));
_COM_SMARTPTR_TYPEDEF(PropertyEffect, __uuidof(PropertyEffect));
_COM_SMARTPTR_TYPEDEF(pptAutoCorrect, __uuidof(pptAutoCorrect));
_COM_SMARTPTR_TYPEDEF(pptOptions, __uuidof(pptOptions));
_COM_SMARTPTR_TYPEDEF(CommandEffect, __uuidof(CommandEffect));
_COM_SMARTPTR_TYPEDEF(FilterEffect, __uuidof(FilterEffect));
_COM_SMARTPTR_TYPEDEF(SetEffect, __uuidof(SetEffect));
_COM_SMARTPTR_TYPEDEF(_pptApplication, __uuidof(_pptApplication));
_COM_SMARTPTR_TYPEDEF(_pptGlobal, __uuidof(_pptGlobal));
_COM_SMARTPTR_TYPEDEF(pptSelection, __uuidof(pptSelection));
_COM_SMARTPTR_TYPEDEF(DocumentWindow, __uuidof(DocumentWindow));
_COM_SMARTPTR_TYPEDEF(DocumentWindows, __uuidof(DocumentWindows));
_COM_SMARTPTR_TYPEDEF(Slides, __uuidof(Slides));
_COM_SMARTPTR_TYPEDEF(_Slide, __uuidof(_Slide));
_COM_SMARTPTR_TYPEDEF(SlideRange, __uuidof(SlideRange));
_COM_SMARTPTR_TYPEDEF(_Master, __uuidof(_Master));
_COM_SMARTPTR_TYPEDEF(Design, __uuidof(Design));
_COM_SMARTPTR_TYPEDEF(Designs, __uuidof(Designs));
_COM_SMARTPTR_TYPEDEF(pptShapes, __uuidof(pptShapes));
_COM_SMARTPTR_TYPEDEF(Placeholders, __uuidof(Placeholders));
_COM_SMARTPTR_TYPEDEF(pptFreeformBuilder, __uuidof(pptFreeformBuilder));
_COM_SMARTPTR_TYPEDEF(pptShape, __uuidof(pptShape));
_COM_SMARTPTR_TYPEDEF(pptConnectorFormat, __uuidof(pptConnectorFormat));
_COM_SMARTPTR_TYPEDEF(_Presentation, __uuidof(_Presentation));
_COM_SMARTPTR_TYPEDEF(pptCell, __uuidof(pptCell));
_COM_SMARTPTR_TYPEDEF(CellRange, __uuidof(CellRange));
_COM_SMARTPTR_TYPEDEF(pptColumn, __uuidof(pptColumn));
_COM_SMARTPTR_TYPEDEF(pptColumns, __uuidof(pptColumns));
_COM_SMARTPTR_TYPEDEF(pptRow, __uuidof(pptRow));
_COM_SMARTPTR_TYPEDEF(pptRows, __uuidof(pptRows));
_COM_SMARTPTR_TYPEDEF(pptTable, __uuidof(pptTable));
_COM_SMARTPTR_TYPEDEF(Timing, __uuidof(Timing));
_COM_SMARTPTR_TYPEDEF(AnimationBehavior, __uuidof(AnimationBehavior));
_COM_SMARTPTR_TYPEDEF(AnimationBehaviors, __uuidof(AnimationBehaviors));
_COM_SMARTPTR_TYPEDEF(Effect, __uuidof(Effect));
_COM_SMARTPTR_TYPEDEF(EApplication, __uuidof(EApplication));
_COM_SMARTPTR_TYPEDEF(Sequence, __uuidof(Sequence));
_COM_SMARTPTR_TYPEDEF(Sequences, __uuidof(Sequences));
_COM_SMARTPTR_TYPEDEF(TimeLine, __uuidof(TimeLine));
_COM_SMARTPTR_TYPEDEF(pptShapeRange, __uuidof(pptShapeRange));
_COM_SMARTPTR_TYPEDEF(pptGroupShapes, __uuidof(pptGroupShapes));
_COM_SMARTPTR_TYPEDEF(pptCanvasShapes, __uuidof(pptCanvasShapes));
_COM_SMARTPTR_TYPEDEF(pptDiagramNode, __uuidof(pptDiagramNode));
_COM_SMARTPTR_TYPEDEF(pptDiagramNodeChildren, __uuidof(pptDiagramNodeChildren));
_COM_SMARTPTR_TYPEDEF(pptDiagramNodes, __uuidof(pptDiagramNodes));
_COM_SMARTPTR_TYPEDEF(pptDiagram, __uuidof(pptDiagram));

//
// Type library items
//

enum PpWindowState
{
    ppWindowNormal = 1,
    ppWindowMinimized = 2,
    ppWindowMaximized = 3
};

enum PpArrangeStyle
{
    ppArrangeTiled = 1,
    ppArrangeCascade = 2
};

enum PpViewType
{
    ppViewSlide = 1,
    ppViewSlideMaster = 2,
    ppViewNotesPage = 3,
    ppViewHandoutMaster = 4,
    ppViewNotesMaster = 5,
    ppViewOutline = 6,
    ppViewSlideSorter = 7,
    ppViewTitleMaster = 8,
    ppViewNormal = 9,
    ppViewPrintPreview = 10,
    ppViewThumbnails = 11,
    ppViewMasterThumbnails = 12
};

enum PpColorSchemeIndex
{
    ppSchemeColorMixed = -2,
    ppNotSchemeColor = 0,
    ppBackground = 1,
    ppForeground = 2,
    ppShadow = 3,
    ppTitle = 4,
    ppFill = 5,
    ppAccent1 = 6,
    ppAccent2 = 7,
    ppAccent3 = 8
};

enum PpSlideSizeType
{
    ppSlideSizeOnScreen = 1,
    ppSlideSizeLetterPaper = 2,
    ppSlideSizeA4Paper = 3,
    ppSlideSize35MM = 4,
    ppSlideSizeOverhead = 5,
    ppSlideSizeBanner = 6,
    ppSlideSizeCustom = 7,
    ppSlideSizeLedgerPaper = 8,
    ppSlideSizeA3Paper = 9,
    ppSlideSizeB4ISOPaper = 10,
    ppSlideSizeB5ISOPaper = 11,
    ppSlideSizeB4JISPaper = 12,
    ppSlideSizeB5JISPaper = 13,
    ppSlideSizeHagakiCard = 14
};

enum PpSaveAsFileType
{
    ppSaveAsPresentation = 1,
    ppSaveAsPowerPoint7 = 2,
    ppSaveAsPowerPoint4 = 3,
    ppSaveAsPowerPoint3 = 4,
    ppSaveAsTemplate = 5,
    ppSaveAsRTF = 6,
    ppSaveAsShow = 7,
    ppSaveAsAddIn = 8,
    ppSaveAsPowerPoint4FarEast = 10,
    ppSaveAsDefault = 11,
    ppSaveAsHTML = 12,
    ppSaveAsHTMLv3 = 13,
    ppSaveAsHTMLDual = 14,
    ppSaveAsMetaFile = 15,
    ppSaveAsGIF = 16,
    ppSaveAsJPG = 17,
    ppSaveAsPNG = 18,
    ppSaveAsBMP = 19,
    ppSaveAsWebArchive = 20,
    ppSaveAsTIF = 21,
    ppSaveAsPresForReview = 22,
    ppSaveAsEMF = 23
};

enum PpTextStyleType
{
    ppDefaultStyle = 1,
    ppTitleStyle = 2,
    ppBodyStyle = 3
};

enum PpSlideLayout
{
    ppLayoutMixed = -2,
    ppLayoutTitle = 1,
    ppLayoutText = 2,
    ppLayoutTwoColumnText = 3,
    ppLayoutTable = 4,
    ppLayoutTextAndChart = 5,
    ppLayoutChartAndText = 6,
    ppLayoutOrgchart = 7,
    ppLayoutChart = 8,
    ppLayoutTextAndClipart = 9,
    ppLayoutClipartAndText = 10,
    ppLayoutTitleOnly = 11,
    ppLayoutBlank = 12,
    ppLayoutTextAndObject = 13,
    ppLayoutObjectAndText = 14,
    ppLayoutLargeObject = 15,
    ppLayoutObject = 16,
    ppLayoutTextAndMediaClip = 17,
    ppLayoutMediaClipAndText = 18,
    ppLayoutObjectOverText = 19,
    ppLayoutTextOverObject = 20,
    ppLayoutTextAndTwoObjects = 21,
    ppLayoutTwoObjectsAndText = 22,
    ppLayoutTwoObjectsOverText = 23,
    ppLayoutFourObjects = 24,
    ppLayoutVerticalText = 25,
    ppLayoutClipArtAndVerticalText = 26,
    ppLayoutVerticalTitleAndText = 27,
    ppLayoutVerticalTitleAndTextOverChart = 28,
    ppLayoutTwoObjects = 29,
    ppLayoutObjectAndTwoObjects = 30,
    ppLayoutTwoObjectsAndObject = 31
};

enum PpEntryEffect
{
    ppEffectMixed = -2,
    ppEffectNone = 0,
    ppEffectCut = 257,
    ppEffectCutThroughBlack = 258,
    ppEffectRandom = 513,
    ppEffectBlindsHorizontal = 769,
    ppEffectBlindsVertical = 770,
    ppEffectCheckerboardAcross = 1025,
    ppEffectCheckerboardDown = 1026,
    ppEffectCoverLeft = 1281,
    ppEffectCoverUp = 1282,
    ppEffectCoverRight = 1283,
    ppEffectCoverDown = 1284,
    ppEffectCoverLeftUp = 1285,
    ppEffectCoverRightUp = 1286,
    ppEffectCoverLeftDown = 1287,
    ppEffectCoverRightDown = 1288,
    ppEffectDissolve = 1537,
    ppEffectFade = 1793,
    ppEffectUncoverLeft = 2049,
    ppEffectUncoverUp = 2050,
    ppEffectUncoverRight = 2051,
    ppEffectUncoverDown = 2052,
    ppEffectUncoverLeftUp = 2053,
    ppEffectUncoverRightUp = 2054,
    ppEffectUncoverLeftDown = 2055,
    ppEffectUncoverRightDown = 2056,
    ppEffectRandomBarsHorizontal = 2305,
    ppEffectRandomBarsVertical = 2306,
    ppEffectStripsUpLeft = 2561,
    ppEffectStripsUpRight = 2562,
    ppEffectStripsDownLeft = 2563,
    ppEffectStripsDownRight = 2564,
    ppEffectStripsLeftUp = 2565,
    ppEffectStripsRightUp = 2566,
    ppEffectStripsLeftDown = 2567,
    ppEffectStripsRightDown = 2568,
    ppEffectWipeLeft = 2817,
    ppEffectWipeUp = 2818,
    ppEffectWipeRight = 2819,
    ppEffectWipeDown = 2820,
    ppEffectBoxOut = 3073,
    ppEffectBoxIn = 3074,
    ppEffectFlyFromLeft = 3329,
    ppEffectFlyFromTop = 3330,
    ppEffectFlyFromRight = 3331,
    ppEffectFlyFromBottom = 3332,
    ppEffectFlyFromTopLeft = 3333,
    ppEffectFlyFromTopRight = 3334,
    ppEffectFlyFromBottomLeft = 3335,
    ppEffectFlyFromBottomRight = 3336,
    ppEffectPeekFromLeft = 3337,
    ppEffectPeekFromDown = 3338,
    ppEffectPeekFromRight = 3339,
    ppEffectPeekFromUp = 3340,
    ppEffectCrawlFromLeft = 3341,
    ppEffectCrawlFromUp = 3342,
    ppEffectCrawlFromRight = 3343,
    ppEffectCrawlFromDown = 3344,
    ppEffectZoomIn = 3345,
    ppEffectZoomInSlightly = 3346,
    ppEffectZoomOut = 3347,
    ppEffectZoomOutSlightly = 3348,
    ppEffectZoomCenter = 3349,
    ppEffectZoomBottom = 3350,
    ppEffectStretchAcross = 3351,
    ppEffectStretchLeft = 3352,
    ppEffectStretchUp = 3353,
    ppEffectStretchRight = 3354,
    ppEffectStretchDown = 3355,
    ppEffectSwivel = 3356,
    ppEffectSpiral = 3357,
    ppEffectSplitHorizontalOut = 3585,
    ppEffectSplitHorizontalIn = 3586,
    ppEffectSplitVerticalOut = 3587,
    ppEffectSplitVerticalIn = 3588,
    ppEffectFlashOnceFast = 3841,
    ppEffectFlashOnceMedium = 3842,
    ppEffectFlashOnceSlow = 3843,
    ppEffectAppear = 3844,
    ppEffectCircleOut = 3845,
    ppEffectDiamondOut = 3846,
    ppEffectCombHorizontal = 3847,
    ppEffectCombVertical = 3848,
    ppEffectFadeSmoothly = 3849,
    ppEffectNewsflash = 3850,
    ppEffectPlusOut = 3851,
    ppEffectPushDown = 3852,
    ppEffectPushLeft = 3853,
    ppEffectPushRight = 3854,
    ppEffectPushUp = 3855,
    ppEffectWedge = 3856,
    ppEffectWheel1Spoke = 3857,
    ppEffectWheel2Spokes = 3858,
    ppEffectWheel3Spokes = 3859,
    ppEffectWheel4Spokes = 3860,
    ppEffectWheel8Spokes = 3861
};

enum PpTextLevelEffect
{
    ppAnimateLevelMixed = -2,
    ppAnimateLevelNone = 0,
    ppAnimateByFirstLevel = 1,
    ppAnimateBySecondLevel = 2,
    ppAnimateByThirdLevel = 3,
    ppAnimateByFourthLevel = 4,
    ppAnimateByFifthLevel = 5,
    ppAnimateByAllLevels = 16
};

enum PpTextUnitEffect
{
    ppAnimateUnitMixed = -2,
    ppAnimateByParagraph = 0,
    ppAnimateByWord = 1,
    ppAnimateByCharacter = 2
};

enum PpChartUnitEffect
{
    ppAnimateChartMixed = -2,
    ppAnimateBySeries = 1,
    ppAnimateByCategory = 2,
    ppAnimateBySeriesElements = 3,
    ppAnimateByCategoryElements = 4,
    ppAnimateChartAllAtOnce = 5
};

enum PpAfterEffect
{
    ppAfterEffectMixed = -2,
    ppAfterEffectNothing = 0,
    ppAfterEffectHide = 1,
    ppAfterEffectDim = 2,
    ppAfterEffectHideOnClick = 3
};

enum PpAdvanceMode
{
    ppAdvanceModeMixed = -2,
    ppAdvanceOnClick = 1,
    ppAdvanceOnTime = 2
};

enum PpSoundEffectType
{
    ppSoundEffectsMixed = -2,
    ppSoundNone = 0,
    ppSoundStopPrevious = 1,
    ppSoundFile = 2
};

enum PpFollowColors
{
    ppFollowColorsMixed = -2,
    ppFollowColorsNone = 0,
    ppFollowColorsScheme = 1,
    ppFollowColorsTextAndBackground = 2
};

enum PpUpdateOption
{
    ppUpdateOptionMixed = -2,
    ppUpdateOptionManual = 1,
    ppUpdateOptionAutomatic = 2
};

enum PpParagraphAlignment
{
    ppAlignmentMixed = -2,
    ppAlignLeft = 1,
    ppAlignCenter = 2,
    ppAlignRight = 3,
    ppAlignJustify = 4,
    ppAlignDistribute = 5,
    ppAlignThaiDistribute = 6,
    ppAlignJustifyLow = 7
};

enum PpBaselineAlignment
{
    ppBaselineAlignMixed = -2,
    ppBaselineAlignBaseline = 1,
    ppBaselineAlignTop = 2,
    ppBaselineAlignCenter = 3,
    ppBaselineAlignFarEast50 = 4
};

enum PpTabStopType
{
    ppTabStopMixed = -2,
    ppTabStopLeft = 1,
    ppTabStopCenter = 2,
    ppTabStopRight = 3,
    ppTabStopDecimal = 4
};

enum PpIndentControl
{
    ppIndentControlMixed = -2,
    ppIndentReplaceAttr = 1,
    ppIndentKeepAttr = 2
};

enum PpChangeCase
{
    ppCaseSentence = 1,
    ppCaseLower = 2,
    ppCaseUpper = 3,
    ppCaseTitle = 4,
    ppCaseToggle = 5
};

enum PpSlideShowPointerType
{
    ppSlideShowPointerNone = 0,
    ppSlideShowPointerArrow = 1,
    ppSlideShowPointerPen = 2,
    ppSlideShowPointerAlwaysHidden = 3,
    ppSlideShowPointerAutoArrow = 4,
    ppSlideShowPointerEraser = 5
};

enum PpSlideShowState
{
    ppSlideShowRunning = 1,
    ppSlideShowPaused = 2,
    ppSlideShowBlackScreen = 3,
    ppSlideShowWhiteScreen = 4,
    ppSlideShowDone = 5
};

enum PpSlideShowAdvanceMode
{
    ppSlideShowManualAdvance = 1,
    ppSlideShowUseSlideTimings = 2,
    ppSlideShowRehearseNewTimings = 3
};

enum PpFileDialogType
{
    ppFileDialogOpen = 1,
    ppFileDialogSave = 2
};

enum PpPrintOutputType
{
    ppPrintOutputSlides = 1,
    ppPrintOutputTwoSlideHandouts = 2,
    ppPrintOutputThreeSlideHandouts = 3,
    ppPrintOutputSixSlideHandouts = 4,
    ppPrintOutputNotesPages = 5,
    ppPrintOutputOutline = 6,
    ppPrintOutputBuildSlides = 7,
    ppPrintOutputFourSlideHandouts = 8,
    ppPrintOutputNineSlideHandouts = 9,
    ppPrintOutputOneSlideHandouts = 10
};

enum PpPrintHandoutOrder
{
    ppPrintHandoutVerticalFirst = 1,
    ppPrintHandoutHorizontalFirst = 2
};

enum PpPrintColorType
{
    ppPrintColor = 1,
    ppPrintBlackAndWhite = 2,
    ppPrintPureBlackAndWhite = 3
};

enum PpSelectionType
{
    ppSelectionNone = 0,
    ppSelectionSlides = 1,
    ppSelectionShapes = 2,
    ppSelectionText = 3
};

enum PpDirection
{
    ppDirectionMixed = -2,
    ppDirectionLeftToRight = 1,
    ppDirectionRightToLeft = 2
};

enum PpDateTimeFormat
{
    ppDateTimeFormatMixed = -2,
    ppDateTimeMdyy = 1,
    ppDateTimeddddMMMMddyyyy = 2,
    ppDateTimedMMMMyyyy = 3,
    ppDateTimeMMMMdyyyy = 4,
    ppDateTimedMMMyy = 5,
    ppDateTimeMMMMyy = 6,
    ppDateTimeMMyy = 7,
    ppDateTimeMMddyyHmm = 8,
    ppDateTimeMMddyyhmmAMPM = 9,
    ppDateTimeHmm = 10,
    ppDateTimeHmmss = 11,
    ppDateTimehmmAMPM = 12,
    ppDateTimehmmssAMPM = 13,
    ppDateTimeFigureOut = 14
};

enum PpTransitionSpeed
{
    ppTransitionSpeedMixed = -2,
    ppTransitionSpeedSlow = 1,
    ppTransitionSpeedMedium = 2,
    ppTransitionSpeedFast = 3
};

enum PpMouseActivation
{
    ppMouseClick = 1,
    ppMouseOver = 2
};

enum PpActionType
{
    ppActionMixed = -2,
    ppActionNone = 0,
    ppActionNextSlide = 1,
    ppActionPreviousSlide = 2,
    ppActionFirstSlide = 3,
    ppActionLastSlide = 4,
    ppActionLastSlideViewed = 5,
    ppActionEndShow = 6,
    ppActionHyperlink = 7,
    ppActionRunMacro = 8,
    ppActionRunProgram = 9,
    ppActionNamedSlideShow = 10,
    ppActionOLEVerb = 11,
    ppActionPlay = 12
};

enum PpPlaceholderType
{
    ppPlaceholderMixed = -2,
    ppPlaceholderTitle = 1,
    ppPlaceholderBody = 2,
    ppPlaceholderCenterTitle = 3,
    ppPlaceholderSubtitle = 4,
    ppPlaceholderVerticalTitle = 5,
    ppPlaceholderVerticalBody = 6,
    ppPlaceholderObject = 7,
    ppPlaceholderChart = 8,
    ppPlaceholderBitmap = 9,
    ppPlaceholderMediaClip = 10,
    ppPlaceholderOrgChart = 11,
    ppPlaceholderTable = 12,
    ppPlaceholderSlideNumber = 13,
    ppPlaceholderHeader = 14,
    ppPlaceholderFooter = 15,
    ppPlaceholderDate = 16
};

enum PpSlideShowType
{
    ppShowTypeSpeaker = 1,
    ppShowTypeWindow = 2,
    ppShowTypeKiosk = 3
};

enum PpPrintRangeType
{
    ppPrintAll = 1,
    ppPrintSelection = 2,
    ppPrintCurrent = 3,
    ppPrintSlideRange = 4,
    ppPrintNamedSlideShow = 5
};

enum PpAutoSize
{
    ppAutoSizeMixed = -2,
    ppAutoSizeNone = 0,
    ppAutoSizeShapeToFitText = 1
};

enum PpMediaType
{
    ppMediaTypeMixed = -2,
    ppMediaTypeOther = 1,
    ppMediaTypeSound = 2,
    ppMediaTypeMovie = 3
};

enum PpSoundFormatType
{
    ppSoundFormatMixed = -2,
    ppSoundFormatNone = 0,
    ppSoundFormatWAV = 1,
    ppSoundFormatMIDI = 2,
    ppSoundFormatCDAudio = 3
};

enum PpFarEastLineBreakLevel
{
    ppFarEastLineBreakLevelNormal = 1,
    ppFarEastLineBreakLevelStrict = 2,
    ppFarEastLineBreakLevelCustom = 3
};

enum PpSlideShowRangeType
{
    ppShowAll = 1,
    ppShowSlideRange = 2,
    ppShowNamedSlideShow = 3
};

enum PpFrameColors
{
    ppFrameColorsBrowserColors = 1,
    ppFrameColorsPresentationSchemeTextColor = 2,
    ppFrameColorsPresentationSchemeAccentColor = 3,
    ppFrameColorsWhiteTextOnBlack = 4,
    ppFrameColorsBlackTextOnWhite = 5
};

struct __declspec(uuid("91493450-5a91-11cf-8700-00aa0060263b"))
Collection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall _Index (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * _Index ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
};

struct __declspec(uuid("91493441-5a91-11cf-8700-00aa0060263b"))
pptApplication;
    // [ default ] interface _pptApplication
    // [ default, source ] interface EApplication

struct __declspec(uuid("91493443-5a91-11cf-8700-00aa0060263b"))
pptGlobal;
    // [ default ] interface _pptGlobal

struct __declspec(uuid("91493452-5a91-11cf-8700-00aa0060263b"))
pptColorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptRGB (
        /*[out,retval]*/ Office::MsoRGBType * pptRGB ) = 0;
      virtual HRESULT __stdcall put_pptRGB (
        /*[in]*/ Office::MsoRGBType pptRGB ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoColorType * Type ) = 0;
      virtual HRESULT __stdcall get_SchemeColor (
        /*[out,retval]*/ enum PpColorSchemeIndex * SchemeColor ) = 0;
      virtual HRESULT __stdcall put_SchemeColor (
        /*[in]*/ enum PpColorSchemeIndex SchemeColor ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ float * pValue ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ float pValue ) = 0;
};

struct __declspec(uuid("9149345c-5a91-11cf-8700-00aa0060263b"))
NamedSlideShow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_SlideIDs (
        /*[out,retval]*/ VARIANT * SlideIDs ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
};

struct __declspec(uuid("9149345b-5a91-11cf-8700-00aa0060263b"))
NamedSlideShows : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct NamedSlideShow * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT safeArrayOfSlideIDs,
        /*[out,retval]*/ struct NamedSlideShow * * Add ) = 0;
};

struct __declspec(uuid("9149345f-5a91-11cf-8700-00aa0060263b"))
PrintRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ int * Start ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ int * End ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("9149345e-5a91-11cf-8700-00aa0060263b"))
PrintRanges : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Add (
        /*[in]*/ int Start,
        /*[in]*/ int End,
        /*[out,retval]*/ struct PrintRange * * Add ) = 0;
      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct PrintRange * * Item ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("9149345d-5a91-11cf-8700-00aa0060263b"))
PrintOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_PrintColorType (
        /*[out,retval]*/ enum PpPrintColorType * PrintColorType ) = 0;
      virtual HRESULT __stdcall put_PrintColorType (
        /*[in]*/ enum PpPrintColorType PrintColorType ) = 0;
      virtual HRESULT __stdcall get_Collate (
        /*[out,retval]*/ enum Office::MsoTriState * Collate ) = 0;
      virtual HRESULT __stdcall put_Collate (
        /*[in]*/ enum Office::MsoTriState Collate ) = 0;
      virtual HRESULT __stdcall get_FitToPage (
        /*[out,retval]*/ enum Office::MsoTriState * FitToPage ) = 0;
      virtual HRESULT __stdcall put_FitToPage (
        /*[in]*/ enum Office::MsoTriState FitToPage ) = 0;
      virtual HRESULT __stdcall get_FrameSlides (
        /*[out,retval]*/ enum Office::MsoTriState * FrameSlides ) = 0;
      virtual HRESULT __stdcall put_FrameSlides (
        /*[in]*/ enum Office::MsoTriState FrameSlides ) = 0;
      virtual HRESULT __stdcall get_NumberOfCopies (
        /*[out,retval]*/ int * NumberOfCopies ) = 0;
      virtual HRESULT __stdcall put_NumberOfCopies (
        /*[in]*/ int NumberOfCopies ) = 0;
      virtual HRESULT __stdcall get_OutputType (
        /*[out,retval]*/ enum PpPrintOutputType * OutputType ) = 0;
      virtual HRESULT __stdcall put_OutputType (
        /*[in]*/ enum PpPrintOutputType OutputType ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_PrintHiddenSlides (
        /*[out,retval]*/ enum Office::MsoTriState * PrintHiddenSlides ) = 0;
      virtual HRESULT __stdcall put_PrintHiddenSlides (
        /*[in]*/ enum Office::MsoTriState PrintHiddenSlides ) = 0;
      virtual HRESULT __stdcall get_PrintInBackground (
        /*[out,retval]*/ enum Office::MsoTriState * PrintInBackground ) = 0;
      virtual HRESULT __stdcall put_PrintInBackground (
        /*[in]*/ enum Office::MsoTriState PrintInBackground ) = 0;
      virtual HRESULT __stdcall get_RangeType (
        /*[out,retval]*/ enum PpPrintRangeType * RangeType ) = 0;
      virtual HRESULT __stdcall put_RangeType (
        /*[in]*/ enum PpPrintRangeType RangeType ) = 0;
      virtual HRESULT __stdcall get_Ranges (
        /*[out,retval]*/ struct PrintRanges * * Ranges ) = 0;
      virtual HRESULT __stdcall get_PrintFontsAsGraphics (
        /*[out,retval]*/ enum Office::MsoTriState * PrintFontsAsGraphics ) = 0;
      virtual HRESULT __stdcall put_PrintFontsAsGraphics (
        /*[in]*/ enum Office::MsoTriState PrintFontsAsGraphics ) = 0;
      virtual HRESULT __stdcall get_SlideShowName (
        /*[out,retval]*/ BSTR * SlideShowName ) = 0;
      virtual HRESULT __stdcall put_SlideShowName (
        /*[in]*/ BSTR SlideShowName ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * ActivePrinter ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR ActivePrinter ) = 0;
      virtual HRESULT __stdcall get_HandoutOrder (
        /*[out,retval]*/ enum PpPrintHandoutOrder * HandoutOrder ) = 0;
      virtual HRESULT __stdcall put_HandoutOrder (
        /*[in]*/ enum PpPrintHandoutOrder HandoutOrder ) = 0;
      virtual HRESULT __stdcall get_PrintComments (
        /*[out,retval]*/ enum Office::MsoTriState * PrintComments ) = 0;
      virtual HRESULT __stdcall put_PrintComments (
        /*[in]*/ enum Office::MsoTriState PrintComments ) = 0;
};

struct __declspec(uuid("91493461-5a91-11cf-8700-00aa0060263b"))
pptAddIn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall get_Registered (
        /*[out,retval]*/ enum Office::MsoTriState * Registered ) = 0;
      virtual HRESULT __stdcall put_Registered (
        /*[in]*/ enum Office::MsoTriState Registered ) = 0;
      virtual HRESULT __stdcall get_AutoLoad (
        /*[out,retval]*/ enum Office::MsoTriState * AutoLoad ) = 0;
      virtual HRESULT __stdcall put_AutoLoad (
        /*[in]*/ enum Office::MsoTriState AutoLoad ) = 0;
      virtual HRESULT __stdcall get_Loaded (
        /*[out,retval]*/ enum Office::MsoTriState * Loaded ) = 0;
      virtual HRESULT __stdcall put_Loaded (
        /*[in]*/ enum Office::MsoTriState Loaded ) = 0;
      virtual HRESULT __stdcall get_DisplayAlerts (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayAlerts ) = 0;
      virtual HRESULT __stdcall put_DisplayAlerts (
        /*[in]*/ enum Office::MsoTriState DisplayAlerts ) = 0;
      virtual HRESULT __stdcall get_RegisteredInHKLM (
        /*[out,retval]*/ enum Office::MsoTriState * RegisteredInHKLM ) = 0;
};

struct __declspec(uuid("91493460-5a91-11cf-8700-00aa0060263b"))
pptAddIns : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct pptAddIn * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct pptAddIn * * Add ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ VARIANT * Index ) = 0;
};

struct __declspec(uuid("91493463-5a91-11cf-8700-00aa0060263b"))
PresEvents : IUnknown
{};

struct __declspec(uuid("91493444-5a91-11cf-8700-00aa0060263b"))
Presentation;
    // [ default ] interface _Presentation
    // [ default, source ] interface PresEvents

struct __declspec(uuid("91493462-5a91-11cf-8700-00aa0060263b"))
Presentations : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Presentation * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum Office::MsoTriState WithWindow,
        /*[out,retval]*/ struct _Presentation * * Add ) = 0;
      virtual HRESULT __stdcall OpenOld (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum Office::MsoTriState ReadOnly,
        /*[in]*/ enum Office::MsoTriState Untitled,
        /*[in]*/ enum Office::MsoTriState WithWindow,
        /*[out,retval]*/ struct _Presentation * * OpenOld ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum Office::MsoTriState ReadOnly,
        /*[in]*/ enum Office::MsoTriState Untitled,
        /*[in]*/ enum Office::MsoTriState WithWindow,
        /*[out,retval]*/ struct _Presentation * * Open ) = 0;
      virtual HRESULT __stdcall CheckOut (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall CanCheckOut (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * CanCheckOut ) = 0;
};

struct __declspec(uuid("91493465-5a91-11cf-8700-00aa0060263b"))
pptHyperlink : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoHyperlinkType * Type ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * Address ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR Address ) = 0;
      virtual HRESULT __stdcall get_SubAddress (
        /*[out,retval]*/ BSTR * SubAddress ) = 0;
      virtual HRESULT __stdcall put_SubAddress (
        /*[in]*/ BSTR SubAddress ) = 0;
      virtual HRESULT __stdcall AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall get_EmailSubject (
        /*[out,retval]*/ BSTR * EmailSubject ) = 0;
      virtual HRESULT __stdcall put_EmailSubject (
        /*[in]*/ BSTR EmailSubject ) = 0;
      virtual HRESULT __stdcall get_ScreenTip (
        /*[out,retval]*/ BSTR * ScreenTip ) = 0;
      virtual HRESULT __stdcall put_ScreenTip (
        /*[in]*/ BSTR ScreenTip ) = 0;
      virtual HRESULT __stdcall get_TextToDisplay (
        /*[out,retval]*/ BSTR * TextToDisplay ) = 0;
      virtual HRESULT __stdcall put_TextToDisplay (
        /*[in]*/ BSTR TextToDisplay ) = 0;
      virtual HRESULT __stdcall get_ShowAndReturn (
        /*[out,retval]*/ enum Office::MsoTriState * ShowAndReturn ) = 0;
      virtual HRESULT __stdcall put_ShowAndReturn (
        /*[in]*/ enum Office::MsoTriState ShowAndReturn ) = 0;
      virtual HRESULT __stdcall Follow ( ) = 0;
      virtual HRESULT __stdcall CreateNewDocument (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum Office::MsoTriState EditNow,
        /*[in]*/ enum Office::MsoTriState Overwrite ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("91493464-5a91-11cf-8700-00aa0060263b"))
pptHyperlinks : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptHyperlink * * Item ) = 0;
};

struct __declspec(uuid("91493466-5a91-11cf-8700-00aa0060263b"))
pptPageSetup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_FirstSlideNumber (
        /*[out,retval]*/ int * FirstSlideNumber ) = 0;
      virtual HRESULT __stdcall put_FirstSlideNumber (
        /*[in]*/ int FirstSlideNumber ) = 0;
      virtual HRESULT __stdcall get_SlideHeight (
        /*[out,retval]*/ float * SlideHeight ) = 0;
      virtual HRESULT __stdcall put_SlideHeight (
        /*[in]*/ float SlideHeight ) = 0;
      virtual HRESULT __stdcall get_SlideWidth (
        /*[out,retval]*/ float * SlideWidth ) = 0;
      virtual HRESULT __stdcall put_SlideWidth (
        /*[in]*/ float SlideWidth ) = 0;
      virtual HRESULT __stdcall get_SlideSize (
        /*[out,retval]*/ enum PpSlideSizeType * SlideSize ) = 0;
      virtual HRESULT __stdcall put_SlideSize (
        /*[in]*/ enum PpSlideSizeType SlideSize ) = 0;
      virtual HRESULT __stdcall get_NotesOrientation (
        /*[out,retval]*/ enum Office::MsoOrientation * NotesOrientation ) = 0;
      virtual HRESULT __stdcall put_NotesOrientation (
        /*[in]*/ enum Office::MsoOrientation NotesOrientation ) = 0;
      virtual HRESULT __stdcall get_SlideOrientation (
        /*[out,retval]*/ enum Office::MsoOrientation * SlideOrientation ) = 0;
      virtual HRESULT __stdcall put_SlideOrientation (
        /*[in]*/ enum Office::MsoOrientation SlideOrientation ) = 0;
};

struct __declspec(uuid("91493468-5a91-11cf-8700-00aa0060263b"))
ExtraColors : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ Office::MsoRGBType * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ Office::MsoRGBType Type ) = 0;
};

struct __declspec(uuid("9149346d-5a91-11cf-8700-00aa0060263b"))
SldEvents : IUnknown
{};

struct __declspec(uuid("91493445-5a91-11cf-8700-00aa0060263b"))
Slide;
    // [ default ] interface _Slide
    // [ default, source ] interface SldEvents

struct __declspec(uuid("91493470-5a91-11cf-8700-00aa0060263b"))
RGBColor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptRGB (
        /*[out,retval]*/ Office::MsoRGBType * pptRGB ) = 0;
      virtual HRESULT __stdcall put_pptRGB (
        /*[in]*/ Office::MsoRGBType pptRGB ) = 0;
};

struct __declspec(uuid("9149346f-5a91-11cf-8700-00aa0060263b"))
ColorScheme : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Colors (
        /*[in]*/ enum PpColorSchemeIndex SchemeColor,
        /*[out,retval]*/ struct RGBColor * * Colors ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("9149346e-5a91-11cf-8700-00aa0060263b"))
ColorSchemes : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct ColorScheme * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct ColorScheme * Scheme,
        /*[out,retval]*/ struct ColorScheme * * Add ) = 0;
};

struct __declspec(uuid("91493472-5a91-11cf-8700-00aa0060263b"))
SoundEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpSoundEffectType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum PpSoundEffectType Type ) = 0;
      virtual HRESULT __stdcall ImportFromFile (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall Play ( ) = 0;
};

struct __declspec(uuid("91493471-5a91-11cf-8700-00aa0060263b"))
SlideShowTransition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AdvanceOnClick (
        /*[out,retval]*/ enum Office::MsoTriState * AdvanceOnClick ) = 0;
      virtual HRESULT __stdcall put_AdvanceOnClick (
        /*[in]*/ enum Office::MsoTriState AdvanceOnClick ) = 0;
      virtual HRESULT __stdcall get_AdvanceOnTime (
        /*[out,retval]*/ enum Office::MsoTriState * AdvanceOnTime ) = 0;
      virtual HRESULT __stdcall put_AdvanceOnTime (
        /*[in]*/ enum Office::MsoTriState AdvanceOnTime ) = 0;
      virtual HRESULT __stdcall get_AdvanceTime (
        /*[out,retval]*/ float * AdvanceTime ) = 0;
      virtual HRESULT __stdcall put_AdvanceTime (
        /*[in]*/ float AdvanceTime ) = 0;
      virtual HRESULT __stdcall get_EntryEffect (
        /*[out,retval]*/ enum PpEntryEffect * EntryEffect ) = 0;
      virtual HRESULT __stdcall put_EntryEffect (
        /*[in]*/ enum PpEntryEffect EntryEffect ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ enum Office::MsoTriState * Hidden ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ enum Office::MsoTriState Hidden ) = 0;
      virtual HRESULT __stdcall get_LoopSoundUntilNext (
        /*[out,retval]*/ enum Office::MsoTriState * LoopSoundUntilNext ) = 0;
      virtual HRESULT __stdcall put_LoopSoundUntilNext (
        /*[in]*/ enum Office::MsoTriState LoopSoundUntilNext ) = 0;
      virtual HRESULT __stdcall get_SoundEffect (
        /*[out,retval]*/ struct SoundEffect * * SoundEffect ) = 0;
      virtual HRESULT __stdcall get_Speed (
        /*[out,retval]*/ enum PpTransitionSpeed * Speed ) = 0;
      virtual HRESULT __stdcall put_Speed (
        /*[in]*/ enum PpTransitionSpeed Speed ) = 0;
};

struct __declspec(uuid("91493473-5a91-11cf-8700-00aa0060263b"))
SoundFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Play ( ) = 0;
      virtual HRESULT __stdcall Import (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ enum PpSoundFormatType * Export ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpSoundFormatType * Type ) = 0;
      virtual HRESULT __stdcall get_SourceFullName (
        /*[out,retval]*/ BSTR * SourceFullName ) = 0;
};

struct __declspec(uuid("91493477-5a91-11cf-8700-00aa0060263b"))
PlaceholderFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpPlaceholderType * Type ) = 0;
};

struct __declspec(uuid("9149347c-5a91-11cf-8700-00aa0060263b"))
pptAdjustments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ float * Val ) = 0;
      virtual HRESULT __stdcall put_Item (
        /*[in]*/ int Index,
        /*[in]*/ float Val ) = 0;
};

struct __declspec(uuid("9149347d-5a91-11cf-8700-00aa0060263b"))
pptPictureFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall IncrementBrightness (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementContrast (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ float * Brightness ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ float Brightness ) = 0;
      virtual HRESULT __stdcall get_ColorType (
        /*[out,retval]*/ enum Office::MsoPictureColorType * ColorType ) = 0;
      virtual HRESULT __stdcall put_ColorType (
        /*[in]*/ enum Office::MsoPictureColorType ColorType ) = 0;
      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ float * Contrast ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ float Contrast ) = 0;
      virtual HRESULT __stdcall get_CropBottom (
        /*[out,retval]*/ float * CropBottom ) = 0;
      virtual HRESULT __stdcall put_CropBottom (
        /*[in]*/ float CropBottom ) = 0;
      virtual HRESULT __stdcall get_CropLeft (
        /*[out,retval]*/ float * CropLeft ) = 0;
      virtual HRESULT __stdcall put_CropLeft (
        /*[in]*/ float CropLeft ) = 0;
      virtual HRESULT __stdcall get_CropRight (
        /*[out,retval]*/ float * CropRight ) = 0;
      virtual HRESULT __stdcall put_CropRight (
        /*[in]*/ float CropRight ) = 0;
      virtual HRESULT __stdcall get_CropTop (
        /*[out,retval]*/ float * CropTop ) = 0;
      virtual HRESULT __stdcall put_CropTop (
        /*[in]*/ float CropTop ) = 0;
      virtual HRESULT __stdcall get_TransparencyColor (
        /*[out,retval]*/ Office::MsoRGBType * TransparencyColor ) = 0;
      virtual HRESULT __stdcall put_TransparencyColor (
        /*[in]*/ Office::MsoRGBType TransparencyColor ) = 0;
      virtual HRESULT __stdcall get_TransparentBackground (
        /*[out,retval]*/ enum Office::MsoTriState * TransparentBackground ) = 0;
      virtual HRESULT __stdcall put_TransparentBackground (
        /*[in]*/ enum Office::MsoTriState TransparentBackground ) = 0;
};

struct __declspec(uuid("9149347e-5a91-11cf-8700-00aa0060263b"))
pptFillFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Background ( ) = 0;
      virtual HRESULT __stdcall OneColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ int Variant,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall Patterned (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall PresetGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ int Variant,
        /*[in]*/ enum Office::MsoPresetGradientType PresetGradientType ) = 0;
      virtual HRESULT __stdcall PresetTextured (
        /*[in]*/ enum Office::MsoPresetTexture PresetTexture ) = 0;
      virtual HRESULT __stdcall Solid ( ) = 0;
      virtual HRESULT __stdcall TwoColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ int Variant ) = 0;
      virtual HRESULT __stdcall UserPicture (
        /*[in]*/ BSTR PictureFile ) = 0;
      virtual HRESULT __stdcall UserTextured (
        /*[in]*/ BSTR TextureFile ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct pptColorFormat * * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ struct pptColorFormat * BackColor ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct pptColorFormat * * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ struct pptColorFormat * ForeColor ) = 0;
      virtual HRESULT __stdcall get_GradientColorType (
        /*[out,retval]*/ enum Office::MsoGradientColorType * GradientColorType ) = 0;
      virtual HRESULT __stdcall get_GradientDegree (
        /*[out,retval]*/ float * GradientDegree ) = 0;
      virtual HRESULT __stdcall get_GradientStyle (
        /*[out,retval]*/ enum Office::MsoGradientStyle * GradientStyle ) = 0;
      virtual HRESULT __stdcall get_GradientVariant (
        /*[out,retval]*/ int * GradientVariant ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * Pattern ) = 0;
      virtual HRESULT __stdcall get_PresetGradientType (
        /*[out,retval]*/ enum Office::MsoPresetGradientType * PresetGradientType ) = 0;
      virtual HRESULT __stdcall get_PresetTexture (
        /*[out,retval]*/ enum Office::MsoPresetTexture * PresetTexture ) = 0;
      virtual HRESULT __stdcall get_TextureName (
        /*[out,retval]*/ BSTR * TextureName ) = 0;
      virtual HRESULT __stdcall get_TextureType (
        /*[out,retval]*/ enum Office::MsoTextureType * TextureType ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float Transparency ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoFillType * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
};

struct __declspec(uuid("9149347f-5a91-11cf-8700-00aa0060263b"))
pptLineFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct pptColorFormat * * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ struct pptColorFormat * BackColor ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * BeginArrowheadLength ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength BeginArrowheadLength ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * BeginArrowheadStyle ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle BeginArrowheadStyle ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * BeginArrowheadWidth ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth BeginArrowheadWidth ) = 0;
      virtual HRESULT __stdcall get_DashStyle (
        /*[out,retval]*/ enum Office::MsoLineDashStyle * DashStyle ) = 0;
      virtual HRESULT __stdcall put_DashStyle (
        /*[in]*/ enum Office::MsoLineDashStyle DashStyle ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * EndArrowheadLength ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength EndArrowheadLength ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * EndArrowheadStyle ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle EndArrowheadStyle ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * EndArrowheadWidth ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth EndArrowheadWidth ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct pptColorFormat * * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ struct pptColorFormat * ForeColor ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * Pattern ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoLineStyle * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoLineStyle Style ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float Transparency ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ float * Weight ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ float Weight ) = 0;
      virtual HRESULT __stdcall get_InsetPen (
        /*[out,retval]*/ enum Office::MsoTriState * InsetPen ) = 0;
      virtual HRESULT __stdcall put_InsetPen (
        /*[in]*/ enum Office::MsoTriState InsetPen ) = 0;
};

struct __declspec(uuid("91493480-5a91-11cf-8700-00aa0060263b"))
pptShadowFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall IncrementOffsetX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementOffsetY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct pptColorFormat * * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ struct pptColorFormat * ForeColor ) = 0;
      virtual HRESULT __stdcall get_Obscured (
        /*[out,retval]*/ enum Office::MsoTriState * Obscured ) = 0;
      virtual HRESULT __stdcall put_Obscured (
        /*[in]*/ enum Office::MsoTriState Obscured ) = 0;
      virtual HRESULT __stdcall get_OffsetX (
        /*[out,retval]*/ float * OffsetX ) = 0;
      virtual HRESULT __stdcall put_OffsetX (
        /*[in]*/ float OffsetX ) = 0;
      virtual HRESULT __stdcall get_OffsetY (
        /*[out,retval]*/ float * OffsetY ) = 0;
      virtual HRESULT __stdcall put_OffsetY (
        /*[in]*/ float OffsetY ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float Transparency ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShadowType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoShadowType Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
};

struct __declspec(uuid("91493482-5a91-11cf-8700-00aa0060263b"))
pptTextEffectFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall ToggleVerticalText ( ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum Office::MsoTextEffectAlignment * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum Office::MsoTextEffectAlignment Alignment ) = 0;
      virtual HRESULT __stdcall get_FontBold (
        /*[out,retval]*/ enum Office::MsoTriState * FontBold ) = 0;
      virtual HRESULT __stdcall put_FontBold (
        /*[in]*/ enum Office::MsoTriState FontBold ) = 0;
      virtual HRESULT __stdcall get_FontItalic (
        /*[out,retval]*/ enum Office::MsoTriState * FontItalic ) = 0;
      virtual HRESULT __stdcall put_FontItalic (
        /*[in]*/ enum Office::MsoTriState FontItalic ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_FontSize (
        /*[out,retval]*/ float * FontSize ) = 0;
      virtual HRESULT __stdcall put_FontSize (
        /*[in]*/ float FontSize ) = 0;
      virtual HRESULT __stdcall get_KernedPairs (
        /*[out,retval]*/ enum Office::MsoTriState * KernedPairs ) = 0;
      virtual HRESULT __stdcall put_KernedPairs (
        /*[in]*/ enum Office::MsoTriState KernedPairs ) = 0;
      virtual HRESULT __stdcall get_NormalizedHeight (
        /*[out,retval]*/ enum Office::MsoTriState * NormalizedHeight ) = 0;
      virtual HRESULT __stdcall put_NormalizedHeight (
        /*[in]*/ enum Office::MsoTriState NormalizedHeight ) = 0;
      virtual HRESULT __stdcall get_PresetShape (
        /*[out,retval]*/ enum Office::MsoPresetTextEffectShape * PresetShape ) = 0;
      virtual HRESULT __stdcall put_PresetShape (
        /*[in]*/ enum Office::MsoPresetTextEffectShape PresetShape ) = 0;
      virtual HRESULT __stdcall get_PresetTextEffect (
        /*[out,retval]*/ enum Office::MsoPresetTextEffect * Preset ) = 0;
      virtual HRESULT __stdcall put_PresetTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect Preset ) = 0;
      virtual HRESULT __stdcall get_RotatedChars (
        /*[out,retval]*/ enum Office::MsoTriState * RotatedChars ) = 0;
      virtual HRESULT __stdcall put_RotatedChars (
        /*[in]*/ enum Office::MsoTriState RotatedChars ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Tracking (
        /*[out,retval]*/ float * Tracking ) = 0;
      virtual HRESULT __stdcall put_Tracking (
        /*[in]*/ float Tracking ) = 0;
};

struct __declspec(uuid("91493483-5a91-11cf-8700-00aa0060263b"))
pptThreeDFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall IncrementRotationX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotationY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall ResetRotation ( ) = 0;
      virtual HRESULT __stdcall SetThreeDFormat (
        /*[in]*/ enum Office::MsoPresetThreeDFormat PresetThreeDFormat ) = 0;
      virtual HRESULT __stdcall SetExtrusionDirection (
        /*[in]*/ enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ float * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ float Depth ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColor (
        /*[out,retval]*/ struct pptColorFormat * * ExtrusionColor ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColorType (
        /*[out,retval]*/ enum Office::MsoExtrusionColorType * ExtrusionColorType ) = 0;
      virtual HRESULT __stdcall put_ExtrusionColorType (
        /*[in]*/ enum Office::MsoExtrusionColorType ExtrusionColorType ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[out,retval]*/ enum Office::MsoTriState * Perspective ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in]*/ enum Office::MsoTriState Perspective ) = 0;
      virtual HRESULT __stdcall get_PresetExtrusionDirection (
        /*[out,retval]*/ enum Office::MsoPresetExtrusionDirection * PresetExtrusionDirection ) = 0;
      virtual HRESULT __stdcall get_PresetLightingDirection (
        /*[out,retval]*/ enum Office::MsoPresetLightingDirection * PresetLightingDirection ) = 0;
      virtual HRESULT __stdcall put_PresetLightingDirection (
        /*[in]*/ enum Office::MsoPresetLightingDirection PresetLightingDirection ) = 0;
      virtual HRESULT __stdcall get_PresetLightingSoftness (
        /*[out,retval]*/ enum Office::MsoPresetLightingSoftness * PresetLightingSoftness ) = 0;
      virtual HRESULT __stdcall put_PresetLightingSoftness (
        /*[in]*/ enum Office::MsoPresetLightingSoftness PresetLightingSoftness ) = 0;
      virtual HRESULT __stdcall get_PresetMaterial (
        /*[out,retval]*/ enum Office::MsoPresetMaterial * PresetMaterial ) = 0;
      virtual HRESULT __stdcall put_PresetMaterial (
        /*[in]*/ enum Office::MsoPresetMaterial PresetMaterial ) = 0;
      virtual HRESULT __stdcall get_PresetThreeDFormat (
        /*[out,retval]*/ enum Office::MsoPresetThreeDFormat * PresetThreeDFormat ) = 0;
      virtual HRESULT __stdcall get_RotationX (
        /*[out,retval]*/ float * RotationX ) = 0;
      virtual HRESULT __stdcall put_RotationX (
        /*[in]*/ float RotationX ) = 0;
      virtual HRESULT __stdcall get_RotationY (
        /*[out,retval]*/ float * RotationY ) = 0;
      virtual HRESULT __stdcall put_RotationY (
        /*[in]*/ float RotationY ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
};

struct __declspec(uuid("91493485-5a91-11cf-8700-00aa0060263b"))
pptCalloutFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall AutomaticLength ( ) = 0;
      virtual HRESULT __stdcall CustomDrop (
        /*[in]*/ float Drop ) = 0;
      virtual HRESULT __stdcall CustomLength (
        /*[in]*/ float Length ) = 0;
      virtual HRESULT __stdcall PresetDrop (
        /*[in]*/ enum Office::MsoCalloutDropType DropType ) = 0;
      virtual HRESULT __stdcall get_Accent (
        /*[out,retval]*/ enum Office::MsoTriState * Accent ) = 0;
      virtual HRESULT __stdcall put_Accent (
        /*[in]*/ enum Office::MsoTriState Accent ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ enum Office::MsoCalloutAngleType * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ enum Office::MsoCalloutAngleType Angle ) = 0;
      virtual HRESULT __stdcall get_AutoAttach (
        /*[out,retval]*/ enum Office::MsoTriState * AutoAttach ) = 0;
      virtual HRESULT __stdcall put_AutoAttach (
        /*[in]*/ enum Office::MsoTriState AutoAttach ) = 0;
      virtual HRESULT __stdcall get_AutoLength (
        /*[out,retval]*/ enum Office::MsoTriState * AutoLength ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ enum Office::MsoTriState * Border ) = 0;
      virtual HRESULT __stdcall put_Border (
        /*[in]*/ enum Office::MsoTriState Border ) = 0;
      virtual HRESULT __stdcall get_Drop (
        /*[out,retval]*/ float * Drop ) = 0;
      virtual HRESULT __stdcall get_DropType (
        /*[out,retval]*/ enum Office::MsoCalloutDropType * DropType ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ float * Gap ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ float Gap ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ float * Length ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoCalloutType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoCalloutType Type ) = 0;
};

struct __declspec(uuid("91493487-5a91-11cf-8700-00aa0060263b"))
pptShapeNode : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_EditingType (
        /*[out,retval]*/ enum Office::MsoEditingType * EditingType ) = 0;
      virtual HRESULT __stdcall get_Points (
        /*[out,retval]*/ VARIANT * Points ) = 0;
      virtual HRESULT __stdcall get_SegmentType (
        /*[out,retval]*/ enum Office::MsoSegmentType * SegmentType ) = 0;
};

struct __declspec(uuid("91493486-5a91-11cf-8700-00aa0060263b"))
pptShapeNodes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShapeNode * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
      virtual HRESULT __stdcall SetEditingType (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoEditingType EditingType ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ int Index,
        /*[in]*/ float X1,
        /*[in]*/ float Y1 ) = 0;
      virtual HRESULT __stdcall SetSegmentType (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType ) = 0;
};

struct __declspec(uuid("91493489-5a91-11cf-8700-00aa0060263b"))
pptLinkFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_SourceFullName (
        /*[out,retval]*/ BSTR * SourceFullName ) = 0;
      virtual HRESULT __stdcall put_SourceFullName (
        /*[in]*/ BSTR SourceFullName ) = 0;
      virtual HRESULT __stdcall get_AutoUpdate (
        /*[out,retval]*/ enum PpUpdateOption * AutoUpdate ) = 0;
      virtual HRESULT __stdcall put_AutoUpdate (
        /*[in]*/ enum PpUpdateOption AutoUpdate ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
};

struct __declspec(uuid("9149348a-5a91-11cf-8700-00aa0060263b"))
ObjectVerbs : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ BSTR * Item ) = 0;
};

struct __declspec(uuid("91493488-5a91-11cf-8700-00aa0060263b"))
pptOLEFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ObjectVerbs (
        /*[out,retval]*/ struct ObjectVerbs * * ObjectVerbs ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * ProgID ) = 0;
      virtual HRESULT __stdcall get_FollowColors (
        /*[out,retval]*/ enum PpFollowColors * FollowColors ) = 0;
      virtual HRESULT __stdcall put_FollowColors (
        /*[in]*/ enum PpFollowColors FollowColors ) = 0;
      virtual HRESULT __stdcall DoVerb (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
};

struct __declspec(uuid("9149348d-5a91-11cf-8700-00aa0060263b"))
ActionSetting : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Action (
        /*[out,retval]*/ enum PpActionType * Action ) = 0;
      virtual HRESULT __stdcall put_Action (
        /*[in]*/ enum PpActionType Action ) = 0;
      virtual HRESULT __stdcall get_ActionVerb (
        /*[out,retval]*/ BSTR * ActionVerb ) = 0;
      virtual HRESULT __stdcall put_ActionVerb (
        /*[in]*/ BSTR ActionVerb ) = 0;
      virtual HRESULT __stdcall get_AnimateAction (
        /*[out,retval]*/ enum Office::MsoTriState * AnimateAction ) = 0;
      virtual HRESULT __stdcall put_AnimateAction (
        /*[in]*/ enum Office::MsoTriState AnimateAction ) = 0;
      virtual HRESULT __stdcall get_Run (
        /*[out,retval]*/ BSTR * Run ) = 0;
      virtual HRESULT __stdcall put_Run (
        /*[in]*/ BSTR Run ) = 0;
      virtual HRESULT __stdcall get_SlideShowName (
        /*[out,retval]*/ BSTR * SlideShowName ) = 0;
      virtual HRESULT __stdcall put_SlideShowName (
        /*[in]*/ BSTR SlideShowName ) = 0;
      virtual HRESULT __stdcall get_pptHyperlink (
        /*[out,retval]*/ struct pptHyperlink * * pptHyperlink ) = 0;
      virtual HRESULT __stdcall get_SoundEffect (
        /*[out,retval]*/ struct SoundEffect * * SoundEffect ) = 0;
      virtual HRESULT __stdcall get_ShowAndReturn (
        /*[out,retval]*/ enum Office::MsoTriState * ShowAndReturn ) = 0;
      virtual HRESULT __stdcall put_ShowAndReturn (
        /*[in]*/ enum Office::MsoTriState ShowAndReturn ) = 0;
};

struct __declspec(uuid("9149348c-5a91-11cf-8700-00aa0060263b"))
ActionSettings : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum PpMouseActivation Index,
        /*[out,retval]*/ struct ActionSetting * * Item ) = 0;
};

struct __declspec(uuid("9149348e-5a91-11cf-8700-00aa0060263b"))
PlaySettings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ActionVerb (
        /*[out,retval]*/ BSTR * ActionVerb ) = 0;
      virtual HRESULT __stdcall put_ActionVerb (
        /*[in]*/ BSTR ActionVerb ) = 0;
      virtual HRESULT __stdcall get_HideWhileNotPlaying (
        /*[out,retval]*/ enum Office::MsoTriState * HideWhileNotPlaying ) = 0;
      virtual HRESULT __stdcall put_HideWhileNotPlaying (
        /*[in]*/ enum Office::MsoTriState HideWhileNotPlaying ) = 0;
      virtual HRESULT __stdcall get_LoopUntilStopped (
        /*[out,retval]*/ enum Office::MsoTriState * LoopUntilStopped ) = 0;
      virtual HRESULT __stdcall put_LoopUntilStopped (
        /*[in]*/ enum Office::MsoTriState LoopUntilStopped ) = 0;
      virtual HRESULT __stdcall get_PlayOnEntry (
        /*[out,retval]*/ enum Office::MsoTriState * PlayOnEntry ) = 0;
      virtual HRESULT __stdcall put_PlayOnEntry (
        /*[in]*/ enum Office::MsoTriState PlayOnEntry ) = 0;
      virtual HRESULT __stdcall get_RewindMovie (
        /*[out,retval]*/ enum Office::MsoTriState * RewindMovie ) = 0;
      virtual HRESULT __stdcall put_RewindMovie (
        /*[in]*/ enum Office::MsoTriState RewindMovie ) = 0;
      virtual HRESULT __stdcall get_PauseAnimation (
        /*[out,retval]*/ enum Office::MsoTriState * PauseAnimation ) = 0;
      virtual HRESULT __stdcall put_PauseAnimation (
        /*[in]*/ enum Office::MsoTriState PauseAnimation ) = 0;
      virtual HRESULT __stdcall get_StopAfterSlides (
        /*[out,retval]*/ int * StopAfterSlides ) = 0;
      virtual HRESULT __stdcall put_StopAfterSlides (
        /*[in]*/ int StopAfterSlides ) = 0;
};

struct __declspec(uuid("9149348b-5a91-11cf-8700-00aa0060263b"))
AnimationSettings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DimColor (
        /*[out,retval]*/ struct pptColorFormat * * DimColor ) = 0;
      virtual HRESULT __stdcall get_SoundEffect (
        /*[out,retval]*/ struct SoundEffect * * SoundEffect ) = 0;
      virtual HRESULT __stdcall get_EntryEffect (
        /*[out,retval]*/ enum PpEntryEffect * EntryEffect ) = 0;
      virtual HRESULT __stdcall put_EntryEffect (
        /*[in]*/ enum PpEntryEffect EntryEffect ) = 0;
      virtual HRESULT __stdcall get_AfterEffect (
        /*[out,retval]*/ enum PpAfterEffect * AfterEffect ) = 0;
      virtual HRESULT __stdcall put_AfterEffect (
        /*[in]*/ enum PpAfterEffect AfterEffect ) = 0;
      virtual HRESULT __stdcall get_AnimationOrder (
        /*[out,retval]*/ int * AnimationOrder ) = 0;
      virtual HRESULT __stdcall put_AnimationOrder (
        /*[in]*/ int AnimationOrder ) = 0;
      virtual HRESULT __stdcall get_AdvanceMode (
        /*[out,retval]*/ enum PpAdvanceMode * AdvanceMode ) = 0;
      virtual HRESULT __stdcall put_AdvanceMode (
        /*[in]*/ enum PpAdvanceMode AdvanceMode ) = 0;
      virtual HRESULT __stdcall get_AdvanceTime (
        /*[out,retval]*/ float * AdvanceTime ) = 0;
      virtual HRESULT __stdcall put_AdvanceTime (
        /*[in]*/ float AdvanceTime ) = 0;
      virtual HRESULT __stdcall get_PlaySettings (
        /*[out,retval]*/ struct PlaySettings * * PlaySettings ) = 0;
      virtual HRESULT __stdcall get_TextLevelEffect (
        /*[out,retval]*/ enum PpTextLevelEffect * TextLevelEffect ) = 0;
      virtual HRESULT __stdcall put_TextLevelEffect (
        /*[in]*/ enum PpTextLevelEffect TextLevelEffect ) = 0;
      virtual HRESULT __stdcall get_TextUnitEffect (
        /*[out,retval]*/ enum PpTextUnitEffect * TextUnitEffect ) = 0;
      virtual HRESULT __stdcall put_TextUnitEffect (
        /*[in]*/ enum PpTextUnitEffect TextUnitEffect ) = 0;
      virtual HRESULT __stdcall get_Animate (
        /*[out,retval]*/ enum Office::MsoTriState * Animate ) = 0;
      virtual HRESULT __stdcall put_Animate (
        /*[in]*/ enum Office::MsoTriState Animate ) = 0;
      virtual HRESULT __stdcall get_AnimateBackground (
        /*[out,retval]*/ enum Office::MsoTriState * AnimateBackground ) = 0;
      virtual HRESULT __stdcall put_AnimateBackground (
        /*[in]*/ enum Office::MsoTriState AnimateBackground ) = 0;
      virtual HRESULT __stdcall get_AnimateTextInReverse (
        /*[out,retval]*/ enum Office::MsoTriState * AnimateTextInReverse ) = 0;
      virtual HRESULT __stdcall put_AnimateTextInReverse (
        /*[in]*/ enum Office::MsoTriState AnimateTextInReverse ) = 0;
      virtual HRESULT __stdcall get_ChartUnitEffect (
        /*[out,retval]*/ enum PpChartUnitEffect * ChartUnitEffect ) = 0;
      virtual HRESULT __stdcall put_ChartUnitEffect (
        /*[in]*/ enum PpChartUnitEffect ChartUnitEffect ) = 0;
};

struct __declspec(uuid("91493492-5a91-11cf-8700-00aa0060263b"))
RulerLevel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_FirstMargin (
        /*[out,retval]*/ float * FirstMargin ) = 0;
      virtual HRESULT __stdcall put_FirstMargin (
        /*[in]*/ float FirstMargin ) = 0;
      virtual HRESULT __stdcall get_LeftMargin (
        /*[out,retval]*/ float * LeftMargin ) = 0;
      virtual HRESULT __stdcall put_LeftMargin (
        /*[in]*/ float LeftMargin ) = 0;
};

struct __declspec(uuid("91493491-5a91-11cf-8700-00aa0060263b"))
RulerLevels : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct RulerLevel * * Item ) = 0;
};

struct __declspec(uuid("91493494-5a91-11cf-8700-00aa0060263b"))
pptTabStop : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpTabStopType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum PpTabStopType Type ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ float * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ float Position ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("91493493-5a91-11cf-8700-00aa0060263b"))
pptTabStops : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptTabStop * * Item ) = 0;
      virtual HRESULT __stdcall get_DefaultSpacing (
        /*[out,retval]*/ float * DefaultSpacing ) = 0;
      virtual HRESULT __stdcall put_DefaultSpacing (
        /*[in]*/ float DefaultSpacing ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum PpTabStopType Type,
        /*[in]*/ float Position,
        /*[out,retval]*/ struct pptTabStop * * Add ) = 0;
};

struct __declspec(uuid("91493490-5a91-11cf-8700-00aa0060263b"))
Ruler : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptTabStops (
        /*[out,retval]*/ struct pptTabStops * * pptTabStops ) = 0;
      virtual HRESULT __stdcall get_Levels (
        /*[out,retval]*/ struct RulerLevels * * Levels ) = 0;
};

struct __declspec(uuid("91493495-5a91-11cf-8700-00aa0060263b"))
pptFont : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ struct pptColorFormat * * Color ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ enum Office::MsoTriState * Bold ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ enum Office::MsoTriState Bold ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ enum Office::MsoTriState * Italic ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ enum Office::MsoTriState Italic ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ enum Office::MsoTriState * Shadow ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ enum Office::MsoTriState Shadow ) = 0;
      virtual HRESULT __stdcall get_Emboss (
        /*[out,retval]*/ enum Office::MsoTriState * Emboss ) = 0;
      virtual HRESULT __stdcall put_Emboss (
        /*[in]*/ enum Office::MsoTriState Emboss ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ enum Office::MsoTriState * Underline ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ enum Office::MsoTriState Underline ) = 0;
      virtual HRESULT __stdcall get_Subscript (
        /*[out,retval]*/ enum Office::MsoTriState * Subscript ) = 0;
      virtual HRESULT __stdcall put_Subscript (
        /*[in]*/ enum Office::MsoTriState Subscript ) = 0;
      virtual HRESULT __stdcall get_Superscript (
        /*[out,retval]*/ enum Office::MsoTriState * Superscript ) = 0;
      virtual HRESULT __stdcall put_Superscript (
        /*[in]*/ enum Office::MsoTriState Superscript ) = 0;
      virtual HRESULT __stdcall get_BaselineOffset (
        /*[out,retval]*/ float * BaselineOffset ) = 0;
      virtual HRESULT __stdcall put_BaselineOffset (
        /*[in]*/ float BaselineOffset ) = 0;
      virtual HRESULT __stdcall get_Embedded (
        /*[out,retval]*/ enum Office::MsoTriState * Embedded ) = 0;
      virtual HRESULT __stdcall get_Embeddable (
        /*[out,retval]*/ enum Office::MsoTriState * Embeddable ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * Size ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float Size ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_NameFarEast (
        /*[out,retval]*/ BSTR * NameFarEast ) = 0;
      virtual HRESULT __stdcall put_NameFarEast (
        /*[in]*/ BSTR NameFarEast ) = 0;
      virtual HRESULT __stdcall get_NameAscii (
        /*[out,retval]*/ BSTR * NameAscii ) = 0;
      virtual HRESULT __stdcall put_NameAscii (
        /*[in]*/ BSTR NameAscii ) = 0;
      virtual HRESULT __stdcall get_AutoRotateNumbers (
        /*[out,retval]*/ enum Office::MsoTriState * AutoRotateNumbers ) = 0;
      virtual HRESULT __stdcall put_AutoRotateNumbers (
        /*[in]*/ enum Office::MsoTriState AutoRotateNumbers ) = 0;
      virtual HRESULT __stdcall get_NameOther (
        /*[out,retval]*/ BSTR * NameOther ) = 0;
      virtual HRESULT __stdcall put_NameOther (
        /*[in]*/ BSTR NameOther ) = 0;
      virtual HRESULT __stdcall get_NameComplexScript (
        /*[out,retval]*/ BSTR * NameComplexScript ) = 0;
      virtual HRESULT __stdcall put_NameComplexScript (
        /*[in]*/ BSTR NameComplexScript ) = 0;
};

struct __declspec(uuid("91493467-5a91-11cf-8700-00aa0060263b"))
Fonts : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptFont * * Item ) = 0;
      virtual HRESULT __stdcall Replace (
        /*[in]*/ BSTR Original,
        /*[in]*/ BSTR Replacement ) = 0;
};

struct __declspec(uuid("9149349c-5a91-11cf-8700-00aa0060263b"))
pptHeaderFooter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_UseFormat (
        /*[out,retval]*/ enum Office::MsoTriState * UseFormat ) = 0;
      virtual HRESULT __stdcall put_UseFormat (
        /*[in]*/ enum Office::MsoTriState UseFormat ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum PpDateTimeFormat * Format ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum PpDateTimeFormat Format ) = 0;
};

struct __declspec(uuid("91493474-5a91-11cf-8700-00aa0060263b"))
pptHeadersFooters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DateAndTime (
        /*[out,retval]*/ struct pptHeaderFooter * * DateAndTime ) = 0;
      virtual HRESULT __stdcall get_SlideNumber (
        /*[out,retval]*/ struct pptHeaderFooter * * SlideNumber ) = 0;
      virtual HRESULT __stdcall get_Header (
        /*[out,retval]*/ struct pptHeaderFooter * * Header ) = 0;
      virtual HRESULT __stdcall get_Footer (
        /*[out,retval]*/ struct pptHeaderFooter * * Footer ) = 0;
      virtual HRESULT __stdcall get_DisplayOnTitleSlide (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayOnTitleSlide ) = 0;
      virtual HRESULT __stdcall put_DisplayOnTitleSlide (
        /*[in]*/ enum Office::MsoTriState DisplayOnTitleSlide ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("914934b9-5a91-11cf-8700-00aa0060263b"))
Tags : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ BSTR * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall AddBinary (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR FilePath ) = 0;
      virtual HRESULT __stdcall BinaryValue (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ long * BinaryValue ) = 0;
      virtual HRESULT __stdcall Name (
        /*[in]*/ int Index,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall Value (
        /*[in]*/ int Index,
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("914934be-5a91-11cf-8700-00aa0060263b"))
MouseTracker : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnTrack (
        /*[in]*/ float X,
        /*[in]*/ float Y ) = 0;
      virtual HRESULT __stdcall EndTrack (
        /*[in]*/ float X,
        /*[in]*/ float Y ) = 0;
};

struct __declspec(uuid("91493459-5a91-11cf-8700-00aa0060263b"))
SlideShowView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ int * Zoom ) = 0;
      virtual HRESULT __stdcall get_Slide (
        /*[out,retval]*/ struct _Slide * * Slide ) = 0;
      virtual HRESULT __stdcall get_PointerType (
        /*[out,retval]*/ enum PpSlideShowPointerType * PointerType ) = 0;
      virtual HRESULT __stdcall put_PointerType (
        /*[in]*/ enum PpSlideShowPointerType PointerType ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum PpSlideShowState * State ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum PpSlideShowState State ) = 0;
      virtual HRESULT __stdcall get_AcceleratorsEnabled (
        /*[out,retval]*/ enum Office::MsoTriState * AcceleratorsEnabled ) = 0;
      virtual HRESULT __stdcall put_AcceleratorsEnabled (
        /*[in]*/ enum Office::MsoTriState AcceleratorsEnabled ) = 0;
      virtual HRESULT __stdcall get_PresentationElapsedTime (
        /*[out,retval]*/ float * PresentationElapsedTime ) = 0;
      virtual HRESULT __stdcall get_SlideElapsedTime (
        /*[out,retval]*/ float * SlideElapsedTime ) = 0;
      virtual HRESULT __stdcall put_SlideElapsedTime (
        /*[in]*/ float SlideElapsedTime ) = 0;
      virtual HRESULT __stdcall get_LastSlideViewed (
        /*[out,retval]*/ struct _Slide * * LastSlideViewed ) = 0;
      virtual HRESULT __stdcall get_AdvanceMode (
        /*[out,retval]*/ enum PpSlideShowAdvanceMode * AdvanceMode ) = 0;
      virtual HRESULT __stdcall get_PointerColor (
        /*[out,retval]*/ struct pptColorFormat * * PointerColor ) = 0;
      virtual HRESULT __stdcall get_IsNamedShow (
        /*[out,retval]*/ enum Office::MsoTriState * IsNamedShow ) = 0;
      virtual HRESULT __stdcall get_SlideShowName (
        /*[out,retval]*/ BSTR * SlideShowName ) = 0;
      virtual HRESULT __stdcall DrawLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY ) = 0;
      virtual HRESULT __stdcall EraseDrawing ( ) = 0;
      virtual HRESULT __stdcall First ( ) = 0;
      virtual HRESULT __stdcall Last ( ) = 0;
      virtual HRESULT __stdcall Next ( ) = 0;
      virtual HRESULT __stdcall Previous ( ) = 0;
      virtual HRESULT __stdcall GotoSlide (
        /*[in]*/ int Index,
        /*[in]*/ enum Office::MsoTriState ResetSlide ) = 0;
      virtual HRESULT __stdcall GotoNamedShow (
        /*[in]*/ BSTR SlideShowName ) = 0;
      virtual HRESULT __stdcall EndNamedShow ( ) = 0;
      virtual HRESULT __stdcall ResetSlideTime ( ) = 0;
      virtual HRESULT __stdcall Exit ( ) = 0;
      virtual HRESULT __stdcall InstallTracker (
        /*[in]*/ struct MouseTracker * pTracker,
        /*[in]*/ enum Office::MsoTriState Presenter ) = 0;
      virtual HRESULT __stdcall get_CurrentShowPosition (
        /*[out,retval]*/ int * CurrentShowPosition ) = 0;
};

struct __declspec(uuid("91493453-5a91-11cf-8700-00aa0060263b"))
SlideShowWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptView (
        /*[out,retval]*/ struct SlideShowView * * pptView ) = 0;
      virtual HRESULT __stdcall get_Presentation (
        /*[out,retval]*/ struct _Presentation * * Presentation ) = 0;
      virtual HRESULT __stdcall get_IsFullScreen (
        /*[out,retval]*/ enum Office::MsoTriState * IsFullScreen ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float Left ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float Top ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
      virtual HRESULT __stdcall get_HWND (
        /*[out,retval]*/ long * HWND ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ enum Office::MsoTriState * Active ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
};

struct __declspec(uuid("91493456-5a91-11cf-8700-00aa0060263b"))
SlideShowWindows : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct SlideShowWindow * * Item ) = 0;
};

struct __declspec(uuid("9149345a-5a91-11cf-8700-00aa0060263b"))
SlideShowSettings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_PointerColor (
        /*[out,retval]*/ struct pptColorFormat * * PointerColor ) = 0;
      virtual HRESULT __stdcall get_NamedSlideShows (
        /*[out,retval]*/ struct NamedSlideShows * * NamedSlideShows ) = 0;
      virtual HRESULT __stdcall get_StartingSlide (
        /*[out,retval]*/ int * StartingSlide ) = 0;
      virtual HRESULT __stdcall put_StartingSlide (
        /*[in]*/ int StartingSlide ) = 0;
      virtual HRESULT __stdcall get_EndingSlide (
        /*[out,retval]*/ int * EndingSlide ) = 0;
      virtual HRESULT __stdcall put_EndingSlide (
        /*[in]*/ int EndingSlide ) = 0;
      virtual HRESULT __stdcall get_AdvanceMode (
        /*[out,retval]*/ enum PpSlideShowAdvanceMode * AdvanceMode ) = 0;
      virtual HRESULT __stdcall put_AdvanceMode (
        /*[in]*/ enum PpSlideShowAdvanceMode AdvanceMode ) = 0;
      virtual HRESULT __stdcall Run (
        /*[out,retval]*/ struct SlideShowWindow * * Run ) = 0;
      virtual HRESULT __stdcall get_LoopUntilStopped (
        /*[out,retval]*/ enum Office::MsoTriState * LoopUntilStopped ) = 0;
      virtual HRESULT __stdcall put_LoopUntilStopped (
        /*[in]*/ enum Office::MsoTriState LoopUntilStopped ) = 0;
      virtual HRESULT __stdcall get_ShowType (
        /*[out,retval]*/ enum PpSlideShowType * ShowType ) = 0;
      virtual HRESULT __stdcall put_ShowType (
        /*[in]*/ enum PpSlideShowType ShowType ) = 0;
      virtual HRESULT __stdcall get_ShowWithNarration (
        /*[out,retval]*/ enum Office::MsoTriState * ShowWithNarration ) = 0;
      virtual HRESULT __stdcall put_ShowWithNarration (
        /*[in]*/ enum Office::MsoTriState ShowWithNarration ) = 0;
      virtual HRESULT __stdcall get_ShowWithAnimation (
        /*[out,retval]*/ enum Office::MsoTriState * ShowWithAnimation ) = 0;
      virtual HRESULT __stdcall put_ShowWithAnimation (
        /*[in]*/ enum Office::MsoTriState ShowWithAnimation ) = 0;
      virtual HRESULT __stdcall get_SlideShowName (
        /*[out,retval]*/ BSTR * SlideShowName ) = 0;
      virtual HRESULT __stdcall put_SlideShowName (
        /*[in]*/ BSTR SlideShowName ) = 0;
      virtual HRESULT __stdcall get_RangeType (
        /*[out,retval]*/ enum PpSlideShowRangeType * RangeType ) = 0;
      virtual HRESULT __stdcall put_RangeType (
        /*[in]*/ enum PpSlideShowRangeType RangeType ) = 0;
      virtual HRESULT __stdcall get_ShowScrollbar (
        /*[out,retval]*/ enum Office::MsoTriState * ShowScrollbar ) = 0;
      virtual HRESULT __stdcall put_ShowScrollbar (
        /*[in]*/ enum Office::MsoTriState ShowScrollbar ) = 0;
};

struct __declspec(uuid("914934bf-5a91-11cf-8700-00aa0060263b"))
MouseDownHandler : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnMouseDown (
        /*[in]*/ IUnknown * activeWin ) = 0;
};

struct __declspec(uuid("914934c0-5a91-11cf-8700-00aa0060263b"))
OCXExtender : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float Left ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float Top ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ int * ZOrderPosition ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_AltHTML (
        /*[out,retval]*/ BSTR * AltHTML ) = 0;
      virtual HRESULT __stdcall put_AltHTML (
        /*[in]*/ BSTR AltHTML ) = 0;
};

struct __declspec(uuid("914934c1-5a91-11cf-8700-00aa0060263b"))
OCXExtenderEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GotFocus ( ) = 0;
      virtual HRESULT __stdcall LostFocus ( ) = 0;
};

struct __declspec(uuid("91493446-5a91-11cf-8700-00aa0060263b"))
pptOLEControl;
    // [ default ] interface OCXExtender
    // [ default, source ] interface OCXExtenderEvents

enum PpBorderType
{
    ppBorderTop = 1,
    ppBorderLeft = 2,
    ppBorderBottom = 3,
    ppBorderRight = 4,
    ppBorderDiagonalDown = 5,
    ppBorderDiagonalUp = 6
};

enum PpHTMLVersion
{
    ppHTMLv3 = 1,
    ppHTMLv4 = 2,
    ppHTMLDual = 3,
    ppHTMLAutodetect = 4
};

enum PpPublishSourceType
{
    ppPublishAll = 1,
    ppPublishSlideRange = 2,
    ppPublishNamedSlideShow = 3
};

enum PpBulletType
{
    ppBulletMixed = -2,
    ppBulletNone = 0,
    ppBulletUnnumbered = 1,
    ppBulletNumbered = 2,
    ppBulletPicture = 3
};

enum PpNumberedBulletStyle
{
    ppBulletStyleMixed = -2,
    ppBulletAlphaLCPeriod = 0,
    ppBulletAlphaUCPeriod = 1,
    ppBulletArabicParenRight = 2,
    ppBulletArabicPeriod = 3,
    ppBulletRomanLCParenBoth = 4,
    ppBulletRomanLCParenRight = 5,
    ppBulletRomanLCPeriod = 6,
    ppBulletRomanUCPeriod = 7,
    ppBulletAlphaLCParenBoth = 8,
    ppBulletAlphaLCParenRight = 9,
    ppBulletAlphaUCParenBoth = 10,
    ppBulletAlphaUCParenRight = 11,
    ppBulletArabicParenBoth = 12,
    ppBulletArabicPlain = 13,
    ppBulletRomanUCParenBoth = 14,
    ppBulletRomanUCParenRight = 15,
    ppBulletSimpChinPlain = 16,
    ppBulletSimpChinPeriod = 17,
    ppBulletCircleNumDBPlain = 18,
    ppBulletCircleNumWDWhitePlain = 19,
    ppBulletCircleNumWDBlackPlain = 20,
    ppBulletTradChinPlain = 21,
    ppBulletTradChinPeriod = 22,
    ppBulletArabicAlphaDash = 23,
    ppBulletArabicAbjadDash = 24,
    ppBulletHebrewAlphaDash = 25,
    ppBulletKanjiKoreanPlain = 26,
    ppBulletKanjiKoreanPeriod = 27,
    ppBulletArabicDBPlain = 28,
    ppBulletArabicDBPeriod = 29,
    ppBulletThaiAlphaPeriod = 30,
    ppBulletThaiAlphaParenRight = 31,
    ppBulletThaiAlphaParenBoth = 32,
    ppBulletThaiNumPeriod = 33,
    ppBulletThaiNumParenRight = 34,
    ppBulletThaiNumParenBoth = 35,
    ppBulletHindiAlphaPeriod = 36,
    ppBulletHindiNumPeriod = 37,
    ppBulletKanjiSimpChinDBPeriod = 38,
    ppBulletHindiNumParenRight = 39,
    ppBulletHindiAlpha1Period = 40
};

struct __declspec(uuid("91493497-5a91-11cf-8700-00aa0060263b"))
BulletFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Character (
        /*[out,retval]*/ int * Character ) = 0;
      virtual HRESULT __stdcall put_Character (
        /*[in]*/ int Character ) = 0;
      virtual HRESULT __stdcall get_RelativeSize (
        /*[out,retval]*/ float * RelativeSize ) = 0;
      virtual HRESULT __stdcall put_RelativeSize (
        /*[in]*/ float RelativeSize ) = 0;
      virtual HRESULT __stdcall get_UseTextColor (
        /*[out,retval]*/ enum Office::MsoTriState * UseTextColor ) = 0;
      virtual HRESULT __stdcall put_UseTextColor (
        /*[in]*/ enum Office::MsoTriState UseTextColor ) = 0;
      virtual HRESULT __stdcall get_UseTextFont (
        /*[out,retval]*/ enum Office::MsoTriState * UseTextFont ) = 0;
      virtual HRESULT __stdcall put_UseTextFont (
        /*[in]*/ enum Office::MsoTriState UseTextFont ) = 0;
      virtual HRESULT __stdcall get_pptFont (
        /*[out,retval]*/ struct pptFont * * pptFont ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpBulletType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum PpBulletType Type ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum PpNumberedBulletStyle * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum PpNumberedBulletStyle Style ) = 0;
      virtual HRESULT __stdcall get_StartValue (
        /*[out,retval]*/ int * StartValue ) = 0;
      virtual HRESULT __stdcall put_StartValue (
        /*[in]*/ int StartValue ) = 0;
      virtual HRESULT __stdcall Picture (
        /*[in]*/ BSTR Picture ) = 0;
      virtual HRESULT __stdcall get_Number (
        /*[out,retval]*/ int * Number ) = 0;
};

struct __declspec(uuid("91493496-5a91-11cf-8700-00aa0060263b"))
ParagraphFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum PpParagraphAlignment * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum PpParagraphAlignment Alignment ) = 0;
      virtual HRESULT __stdcall get_Bullet (
        /*[out,retval]*/ struct BulletFormat * * Bullet ) = 0;
      virtual HRESULT __stdcall get_LineRuleBefore (
        /*[out,retval]*/ enum Office::MsoTriState * LineRuleBefore ) = 0;
      virtual HRESULT __stdcall put_LineRuleBefore (
        /*[in]*/ enum Office::MsoTriState LineRuleBefore ) = 0;
      virtual HRESULT __stdcall get_LineRuleAfter (
        /*[out,retval]*/ enum Office::MsoTriState * LineRuleAfter ) = 0;
      virtual HRESULT __stdcall put_LineRuleAfter (
        /*[in]*/ enum Office::MsoTriState LineRuleAfter ) = 0;
      virtual HRESULT __stdcall get_LineRuleWithin (
        /*[out,retval]*/ enum Office::MsoTriState * LineRuleWithin ) = 0;
      virtual HRESULT __stdcall put_LineRuleWithin (
        /*[in]*/ enum Office::MsoTriState LineRuleWithin ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * SpaceBefore ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float SpaceBefore ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * SpaceAfter ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float SpaceAfter ) = 0;
      virtual HRESULT __stdcall get_SpaceWithin (
        /*[out,retval]*/ float * SpaceWithin ) = 0;
      virtual HRESULT __stdcall put_SpaceWithin (
        /*[in]*/ float SpaceWithin ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum PpBaselineAlignment * BaseLineAlignment ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum PpBaselineAlignment BaseLineAlignment ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ enum Office::MsoTriState * FarEastLineBreakControl ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ enum Office::MsoTriState FarEastLineBreakControl ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ enum Office::MsoTriState * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ enum Office::MsoTriState WordWrap ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ enum Office::MsoTriState * HangingPunctuation ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ enum Office::MsoTriState HangingPunctuation ) = 0;
      virtual HRESULT __stdcall get_TextDirection (
        /*[out,retval]*/ enum PpDirection * TextDirection ) = 0;
      virtual HRESULT __stdcall put_TextDirection (
        /*[in]*/ enum PpDirection TextDirection ) = 0;
};

struct __declspec(uuid("9149349b-5a91-11cf-8700-00aa0060263b"))
TextStyleLevel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct ParagraphFormat * * ParagraphFormat ) = 0;
      virtual HRESULT __stdcall get_pptFont (
        /*[out,retval]*/ struct pptFont * * pptFont ) = 0;
};

struct __declspec(uuid("9149349a-5a91-11cf-8700-00aa0060263b"))
TextStyleLevels : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Level,
        /*[out,retval]*/ struct TextStyleLevel * * Item ) = 0;
};

enum PpShapeFormat
{
    ppShapeFormatGIF = 0,
    ppShapeFormatJPG = 1,
    ppShapeFormatPNG = 2,
    ppShapeFormatBMP = 3,
    ppShapeFormatWMF = 4,
    ppShapeFormatEMF = 5
};

enum PpExportMode
{
    ppRelativeToSlide = 1,
    ppClipRelativeToSlide = 2,
    ppScaleToFit = 3,
    ppScaleXY = 4
};

struct __declspec(uuid("914934ca-5a91-11cf-8700-00aa0060263b"))
pptBorders : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum PpBorderType BorderType,
        /*[out,retval]*/ struct pptLineFormat * * Item ) = 0;
};

struct __declspec(uuid("914934cc-5a91-11cf-8700-00aa0060263b"))
Pane : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ enum Office::MsoTriState * Active ) = 0;
      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum PpViewType * ViewType ) = 0;
};

struct __declspec(uuid("914934cb-5a91-11cf-8700-00aa0060263b"))
pptPanes : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Pane * * Item ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("914934cd-5a91-11cf-8700-00aa0060263b"))
pptDefaultWebOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IncludeNavigation (
        /*[out,retval]*/ enum Office::MsoTriState * IncludeNavigation ) = 0;
      virtual HRESULT __stdcall put_IncludeNavigation (
        /*[in]*/ enum Office::MsoTriState IncludeNavigation ) = 0;
      virtual HRESULT __stdcall get_FrameColors (
        /*[out,retval]*/ enum PpFrameColors * FrameColors ) = 0;
      virtual HRESULT __stdcall put_FrameColors (
        /*[in]*/ enum PpFrameColors FrameColors ) = 0;
      virtual HRESULT __stdcall get_ResizeGraphics (
        /*[out,retval]*/ enum Office::MsoTriState * ResizeGraphics ) = 0;
      virtual HRESULT __stdcall put_ResizeGraphics (
        /*[in]*/ enum Office::MsoTriState ResizeGraphics ) = 0;
      virtual HRESULT __stdcall get_ShowSlideAnimation (
        /*[out,retval]*/ enum Office::MsoTriState * ShowSlideAnimation ) = 0;
      virtual HRESULT __stdcall put_ShowSlideAnimation (
        /*[in]*/ enum Office::MsoTriState ShowSlideAnimation ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ enum Office::MsoTriState * OrganizeInFolder ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ enum Office::MsoTriState OrganizeInFolder ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ enum Office::MsoTriState * UseLongFileNames ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ enum Office::MsoTriState UseLongFileNames ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ enum Office::MsoTriState * RelyOnVML ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ enum Office::MsoTriState RelyOnVML ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ enum Office::MsoTriState * AllowPNG ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ enum Office::MsoTriState AllowPNG ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * ScreenSize ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize ScreenSize ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * Encoding ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding Encoding ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksOnSave (
        /*[out,retval]*/ enum Office::MsoTriState * UpdateLinksOnSave ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksOnSave (
        /*[in]*/ enum Office::MsoTriState UpdateLinksOnSave ) = 0;
      virtual HRESULT __stdcall get_CheckIfOfficeIsHTMLEditor (
        /*[out,retval]*/ enum Office::MsoTriState * CheckIfOfficeIsHTMLEditor ) = 0;
      virtual HRESULT __stdcall put_CheckIfOfficeIsHTMLEditor (
        /*[in]*/ enum Office::MsoTriState CheckIfOfficeIsHTMLEditor ) = 0;
      virtual HRESULT __stdcall get_AlwaysSaveInDefaultEncoding (
        /*[out,retval]*/ enum Office::MsoTriState * AlwaysSaveInDefaultEncoding ) = 0;
      virtual HRESULT __stdcall put_AlwaysSaveInDefaultEncoding (
        /*[in]*/ enum Office::MsoTriState AlwaysSaveInDefaultEncoding ) = 0;
      virtual HRESULT __stdcall get_Fonts (
        /*[out,retval]*/ struct Office::WebPageFonts * * Fonts ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * FolderSuffix ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * TargetBrowser ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser TargetBrowser ) = 0;
      virtual HRESULT __stdcall get_SaveNewWebPagesAsWebArchives (
        /*[out,retval]*/ enum Office::MsoTriState * SaveNewWebPagesAsWebArchives ) = 0;
      virtual HRESULT __stdcall put_SaveNewWebPagesAsWebArchives (
        /*[in]*/ enum Office::MsoTriState SaveNewWebPagesAsWebArchives ) = 0;
      virtual HRESULT __stdcall get_HTMLVersion (
        /*[out,retval]*/ enum PpHTMLVersion * HTMLVersion ) = 0;
      virtual HRESULT __stdcall put_HTMLVersion (
        /*[in]*/ enum PpHTMLVersion HTMLVersion ) = 0;
};

struct __declspec(uuid("914934ce-5a91-11cf-8700-00aa0060263b"))
pptWebOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IncludeNavigation (
        /*[out,retval]*/ enum Office::MsoTriState * IncludeNavigation ) = 0;
      virtual HRESULT __stdcall put_IncludeNavigation (
        /*[in]*/ enum Office::MsoTriState IncludeNavigation ) = 0;
      virtual HRESULT __stdcall get_FrameColors (
        /*[out,retval]*/ enum PpFrameColors * FrameColors ) = 0;
      virtual HRESULT __stdcall put_FrameColors (
        /*[in]*/ enum PpFrameColors FrameColors ) = 0;
      virtual HRESULT __stdcall get_ResizeGraphics (
        /*[out,retval]*/ enum Office::MsoTriState * ResizeGraphics ) = 0;
      virtual HRESULT __stdcall put_ResizeGraphics (
        /*[in]*/ enum Office::MsoTriState ResizeGraphics ) = 0;
      virtual HRESULT __stdcall get_ShowSlideAnimation (
        /*[out,retval]*/ enum Office::MsoTriState * ShowSlideAnimation ) = 0;
      virtual HRESULT __stdcall put_ShowSlideAnimation (
        /*[in]*/ enum Office::MsoTriState ShowSlideAnimation ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ enum Office::MsoTriState * OrganizeInFolder ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ enum Office::MsoTriState OrganizeInFolder ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ enum Office::MsoTriState * UseLongFileNames ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ enum Office::MsoTriState UseLongFileNames ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ enum Office::MsoTriState * RelyOnVML ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ enum Office::MsoTriState RelyOnVML ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ enum Office::MsoTriState * AllowPNG ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ enum Office::MsoTriState AllowPNG ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * ScreenSize ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize ScreenSize ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * Encoding ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding Encoding ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * FolderSuffix ) = 0;
      virtual HRESULT __stdcall UseDefaultFolderSuffix ( ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * TargetBrowser ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser TargetBrowser ) = 0;
      virtual HRESULT __stdcall get_HTMLVersion (
        /*[out,retval]*/ enum PpHTMLVersion * HTMLVersion ) = 0;
      virtual HRESULT __stdcall put_HTMLVersion (
        /*[in]*/ enum PpHTMLVersion HTMLVersion ) = 0;
};

struct __declspec(uuid("914934d0-5a91-11cf-8700-00aa0060263b"))
pptPublishObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_HTMLVersion (
        /*[out,retval]*/ enum PpHTMLVersion * HTMLVersion ) = 0;
      virtual HRESULT __stdcall put_HTMLVersion (
        /*[in]*/ enum PpHTMLVersion HTMLVersion ) = 0;
      virtual HRESULT __stdcall get_SourceType (
        /*[out,retval]*/ enum PpPublishSourceType * SourceType ) = 0;
      virtual HRESULT __stdcall put_SourceType (
        /*[in]*/ enum PpPublishSourceType SourceType ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ int * RangeStart ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ int RangeStart ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ int * RangeEnd ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ int RangeEnd ) = 0;
      virtual HRESULT __stdcall get_SlideShowName (
        /*[out,retval]*/ BSTR * SlideShowName ) = 0;
      virtual HRESULT __stdcall put_SlideShowName (
        /*[in]*/ BSTR SlideShowName ) = 0;
      virtual HRESULT __stdcall get_SpeakerNotes (
        /*[out,retval]*/ enum Office::MsoTriState * SpeakerNotes ) = 0;
      virtual HRESULT __stdcall put_SpeakerNotes (
        /*[in]*/ enum Office::MsoTriState SpeakerNotes ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_FileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall Publish ( ) = 0;
};

struct __declspec(uuid("914934cf-5a91-11cf-8700-00aa0060263b"))
PublishObjects : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptPublishObject * * Item ) = 0;
};

struct __declspec(uuid("914934d2-5a91-11cf-8700-00aa0060263b"))
MasterEvents : IUnknown
{};

struct __declspec(uuid("91493447-5a91-11cf-8700-00aa0060263b"))
Master;
    // [ default ] interface _Master
    // [ default, source ] interface MasterEvents

enum PpPasteDataType
{
    ppPasteDefault = 0,
    ppPasteBitmap = 1,
    ppPasteEnhancedMetafile = 2,
    ppPasteMetafilePicture = 3,
    ppPasteGIF = 4,
    ppPasteJPG = 5,
    ppPastePNG = 6,
    ppPasteText = 7,
    ppPasteHTML = 8,
    ppPasteRTF = 9,
    ppPasteOLEObject = 10,
    ppPasteShape = 11
};

struct __declspec(uuid("91493458-5a91-11cf-8700-00aa0060263b"))
pptView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpViewType * Type ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ int * Zoom ) = 0;
      virtual HRESULT __stdcall put_Zoom (
        /*[in]*/ int Zoom ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall get_Slide (
        /*[out,retval]*/ IDispatch * * Slide ) = 0;
      virtual HRESULT __stdcall put_Slide (
        /*[in]*/ IDispatch * Slide ) = 0;
      virtual HRESULT __stdcall GotoSlide (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall get_DisplaySlideMiniature (
        /*[out,retval]*/ enum Office::MsoTriState * DisplaySlideMiniature ) = 0;
      virtual HRESULT __stdcall put_DisplaySlideMiniature (
        /*[in]*/ enum Office::MsoTriState DisplaySlideMiniature ) = 0;
      virtual HRESULT __stdcall get_ZoomToFit (
        /*[out,retval]*/ enum Office::MsoTriState * ZoomToFit ) = 0;
      virtual HRESULT __stdcall put_ZoomToFit (
        /*[in]*/ enum Office::MsoTriState ZoomToFit ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ enum PpPasteDataType DataType,
        /*[in]*/ enum Office::MsoTriState DisplayAsIcon,
        /*[in]*/ BSTR IconFileName,
        /*[in]*/ int IconIndex,
        /*[in]*/ BSTR IconLabel,
        /*[in]*/ enum Office::MsoTriState Link ) = 0;
      virtual HRESULT __stdcall get_PrintOptions (
        /*[out,retval]*/ struct PrintOptions * * PrintOptions ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ int From,
        /*[in]*/ int To,
        /*[in]*/ BSTR PrintToFile,
        /*[in]*/ int Copies,
        /*[in]*/ enum Office::MsoTriState Collate ) = 0;
};

struct __declspec(uuid("9149348f-5a91-11cf-8700-00aa0060263b"))
TextRange : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ActionSettings (
        /*[out,retval]*/ struct ActionSettings * * ActionSettings ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * Start ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ long * Length ) = 0;
      virtual HRESULT __stdcall get_BoundLeft (
        /*[out,retval]*/ float * BoundLeft ) = 0;
      virtual HRESULT __stdcall get_BoundTop (
        /*[out,retval]*/ float * BoundTop ) = 0;
      virtual HRESULT __stdcall get_BoundWidth (
        /*[out,retval]*/ float * BoundWidth ) = 0;
      virtual HRESULT __stdcall get_BoundHeight (
        /*[out,retval]*/ float * BoundHeight ) = 0;
      virtual HRESULT __stdcall Paragraphs (
        /*[in]*/ int Start,
        /*[in]*/ int Length,
        /*[out,retval]*/ struct TextRange * * Paragraphs ) = 0;
      virtual HRESULT __stdcall Sentences (
        /*[in]*/ int Start,
        /*[in]*/ int Length,
        /*[out,retval]*/ struct TextRange * * Sentences ) = 0;
      virtual HRESULT __stdcall Words (
        /*[in]*/ int Start,
        /*[in]*/ int Length,
        /*[out,retval]*/ struct TextRange * * Words ) = 0;
      virtual HRESULT __stdcall Characters (
        /*[in]*/ int Start,
        /*[in]*/ int Length,
        /*[out,retval]*/ struct TextRange * * Characters ) = 0;
      virtual HRESULT __stdcall Lines (
        /*[in]*/ int Start,
        /*[in]*/ int Length,
        /*[out,retval]*/ struct TextRange * * Lines ) = 0;
      virtual HRESULT __stdcall Runs (
        /*[in]*/ int Start,
        /*[in]*/ int Length,
        /*[out,retval]*/ struct TextRange * * Runs ) = 0;
      virtual HRESULT __stdcall TrimText (
        /*[out,retval]*/ struct TextRange * * TrimText ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall InsertAfter (
        /*[in]*/ BSTR NewText,
        /*[out,retval]*/ struct TextRange * * After ) = 0;
      virtual HRESULT __stdcall InsertBefore (
        /*[in]*/ BSTR NewText,
        /*[out,retval]*/ struct TextRange * * Before ) = 0;
      virtual HRESULT __stdcall InsertDateTime (
        /*[in]*/ enum PpDateTimeFormat DateTimeFormat,
        /*[in]*/ enum Office::MsoTriState InsertAsField,
        /*[out,retval]*/ struct TextRange * * DateTime ) = 0;
      virtual HRESULT __stdcall InsertSlideNumber (
        /*[out,retval]*/ struct TextRange * * SlideNumber ) = 0;
      virtual HRESULT __stdcall InsertSymbol (
        /*[in]*/ BSTR FontName,
        /*[in]*/ int CharNumber,
        /*[in]*/ enum Office::MsoTriState Unicode,
        /*[out,retval]*/ struct TextRange * * Symbol ) = 0;
      virtual HRESULT __stdcall get_pptFont (
        /*[out,retval]*/ struct pptFont * * pptFont ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct ParagraphFormat * * ParagraphFormat ) = 0;
      virtual HRESULT __stdcall get_IndentLevel (
        /*[out,retval]*/ int * IndentLevel ) = 0;
      virtual HRESULT __stdcall put_IndentLevel (
        /*[in]*/ int IndentLevel ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[out,retval]*/ struct TextRange * * Paste ) = 0;
      virtual HRESULT __stdcall ChangeCase (
        /*[in]*/ enum PpChangeCase Type ) = 0;
      virtual HRESULT __stdcall AddPeriods ( ) = 0;
      virtual HRESULT __stdcall RemovePeriods ( ) = 0;
      virtual HRESULT __stdcall Find (
        /*[in]*/ BSTR FindWhat,
        /*[in]*/ int After,
        /*[in]*/ enum Office::MsoTriState MatchCase,
        /*[in]*/ enum Office::MsoTriState WholeWords,
        /*[out,retval]*/ struct TextRange * * Find ) = 0;
      virtual HRESULT __stdcall Replace (
        /*[in]*/ BSTR FindWhat,
        /*[in]*/ BSTR ReplaceWhat,
        /*[in]*/ int After,
        /*[in]*/ enum Office::MsoTriState MatchCase,
        /*[in]*/ enum Office::MsoTriState WholeWords,
        /*[out,retval]*/ struct TextRange * * Replace ) = 0;
      virtual HRESULT __stdcall RotatedBounds (
        /*[out]*/ float * X1,
        /*[out]*/ float * Y1,
        /*[out]*/ float * X2,
        /*[out]*/ float * Y2,
        /*[out]*/ float * X3,
        /*[out]*/ float * Y3,
        /*[out]*/ float * x4,
        /*[out]*/ float * y4 ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum Office::MsoLanguageID * LanguageID ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum Office::MsoLanguageID LanguageID ) = 0;
      virtual HRESULT __stdcall RtlRun ( ) = 0;
      virtual HRESULT __stdcall LtrRun ( ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ enum PpPasteDataType DataType,
        /*[in]*/ enum Office::MsoTriState DisplayAsIcon,
        /*[in]*/ BSTR IconFileName,
        /*[in]*/ int IconIndex,
        /*[in]*/ BSTR IconLabel,
        /*[in]*/ enum Office::MsoTriState Link,
        /*[out,retval]*/ struct TextRange * * PasteSpecial ) = 0;
};

struct __declspec(uuid("91493484-5a91-11cf-8700-00aa0060263b"))
pptTextFrame : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_MarginBottom (
        /*[out,retval]*/ float * MarginBottom ) = 0;
      virtual HRESULT __stdcall put_MarginBottom (
        /*[in]*/ float MarginBottom ) = 0;
      virtual HRESULT __stdcall get_MarginLeft (
        /*[out,retval]*/ float * MarginLeft ) = 0;
      virtual HRESULT __stdcall put_MarginLeft (
        /*[in]*/ float MarginLeft ) = 0;
      virtual HRESULT __stdcall get_MarginRight (
        /*[out,retval]*/ float * MarginRight ) = 0;
      virtual HRESULT __stdcall put_MarginRight (
        /*[in]*/ float MarginRight ) = 0;
      virtual HRESULT __stdcall get_MarginTop (
        /*[out,retval]*/ float * MarginTop ) = 0;
      virtual HRESULT __stdcall put_MarginTop (
        /*[in]*/ float MarginTop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum Office::MsoTextOrientation * Orientation ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum Office::MsoTextOrientation Orientation ) = 0;
      virtual HRESULT __stdcall get_HasText (
        /*[out,retval]*/ enum Office::MsoTriState * HasText ) = 0;
      virtual HRESULT __stdcall get_TextRange (
        /*[out,retval]*/ struct TextRange * * TextRange ) = 0;
      virtual HRESULT __stdcall get_Ruler (
        /*[out,retval]*/ struct Ruler * * Ruler ) = 0;
      virtual HRESULT __stdcall get_HorizontalAnchor (
        /*[out,retval]*/ enum Office::MsoHorizontalAnchor * HorizontalAnchor ) = 0;
      virtual HRESULT __stdcall put_HorizontalAnchor (
        /*[in]*/ enum Office::MsoHorizontalAnchor HorizontalAnchor ) = 0;
      virtual HRESULT __stdcall get_VerticalAnchor (
        /*[out,retval]*/ enum Office::MsoVerticalAnchor * VerticalAnchor ) = 0;
      virtual HRESULT __stdcall put_VerticalAnchor (
        /*[in]*/ enum Office::MsoVerticalAnchor VerticalAnchor ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ enum PpAutoSize * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ enum PpAutoSize AutoSize ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ enum Office::MsoTriState * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ enum Office::MsoTriState WordWrap ) = 0;
      virtual HRESULT __stdcall DeleteText ( ) = 0;
};

struct __declspec(uuid("91493499-5a91-11cf-8700-00aa0060263b"))
TextStyle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Ruler (
        /*[out,retval]*/ struct Ruler * * Ruler ) = 0;
      virtual HRESULT __stdcall get_pptTextFrame (
        /*[out,retval]*/ struct pptTextFrame * * pptTextFrame ) = 0;
      virtual HRESULT __stdcall get_Levels (
        /*[out,retval]*/ struct TextStyleLevels * * Levels ) = 0;
};

struct __declspec(uuid("91493498-5a91-11cf-8700-00aa0060263b"))
TextStyles : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ enum PpTextStyleType Type,
        /*[out,retval]*/ struct TextStyle * * Item ) = 0;
};

struct __declspec(uuid("914934d3-5a91-11cf-8700-00aa0060263b"))
_PowerRex : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnAsfEncoderEvent (
        /*[in]*/ VARIANT erorCode,
        /*[in]*/ VARIANT bstrErrorDesc ) = 0;
};

struct __declspec(uuid("91493448-5a91-11cf-8700-00aa0060263b"))
PowerRex;
    // [ default ] interface _PowerRex

struct __declspec(uuid("914934d5-5a91-11cf-8700-00aa0060263b"))
pptComment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * Author ) = 0;
      virtual HRESULT __stdcall get_AuthorInitials (
        /*[out,retval]*/ BSTR * AuthorInitials ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall get_DateTime (
        /*[out,retval]*/ DATE * DateTime ) = 0;
      virtual HRESULT __stdcall get_AuthorIndex (
        /*[out,retval]*/ int * AuthorIndex ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("914934d4-5a91-11cf-8700-00aa0060263b"))
pptComments : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptComment * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ BSTR Author,
        /*[in]*/ BSTR AuthorInitials,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct pptComment * * Add ) = 0;
};

enum MsoAnimEffect
{
    msoAnimEffectCustom = 0,
    msoAnimEffectAppear = 1,
    msoAnimEffectFly = 2,
    msoAnimEffectBlinds = 3,
    msoAnimEffectBox = 4,
    msoAnimEffectCheckerboard = 5,
    msoAnimEffectCircle = 6,
    msoAnimEffectCrawl = 7,
    msoAnimEffectDiamond = 8,
    msoAnimEffectDissolve = 9,
    msoAnimEffectFade = 10,
    msoAnimEffectFlashOnce = 11,
    msoAnimEffectPeek = 12,
    msoAnimEffectPlus = 13,
    msoAnimEffectRandomBars = 14,
    msoAnimEffectSpiral = 15,
    msoAnimEffectSplit = 16,
    msoAnimEffectStretch = 17,
    msoAnimEffectStrips = 18,
    msoAnimEffectSwivel = 19,
    msoAnimEffectWedge = 20,
    msoAnimEffectWheel = 21,
    msoAnimEffectWipe = 22,
    msoAnimEffectZoom = 23,
    msoAnimEffectRandomEffects = 24,
    msoAnimEffectBoomerang = 25,
    msoAnimEffectBounce = 26,
    msoAnimEffectColorReveal = 27,
    msoAnimEffectCredits = 28,
    msoAnimEffectEaseIn = 29,
    msoAnimEffectFloat = 30,
    msoAnimEffectGrowAndTurn = 31,
    msoAnimEffectLightSpeed = 32,
    msoAnimEffectPinwheel = 33,
    msoAnimEffectRiseUp = 34,
    msoAnimEffectSwish = 35,
    msoAnimEffectThinLine = 36,
    msoAnimEffectUnfold = 37,
    msoAnimEffectWhip = 38,
    msoAnimEffectAscend = 39,
    msoAnimEffectCenterRevolve = 40,
    msoAnimEffectFadedSwivel = 41,
    msoAnimEffectDescend = 42,
    msoAnimEffectSling = 43,
    msoAnimEffectSpinner = 44,
    msoAnimEffectStretchy = 45,
    msoAnimEffectZip = 46,
    msoAnimEffectArcUp = 47,
    msoAnimEffectFadedZoom = 48,
    msoAnimEffectGlide = 49,
    msoAnimEffectExpand = 50,
    msoAnimEffectFlip = 51,
    msoAnimEffectShimmer = 52,
    msoAnimEffectFold = 53,
    msoAnimEffectChangeFillColor = 54,
    msoAnimEffectChangeFont = 55,
    msoAnimEffectChangeFontColor = 56,
    msoAnimEffectChangeFontSize = 57,
    msoAnimEffectChangeFontStyle = 58,
    msoAnimEffectGrowShrink = 59,
    msoAnimEffectChangeLineColor = 60,
    msoAnimEffectSpin = 61,
    msoAnimEffectTransparency = 62,
    msoAnimEffectBoldFlash = 63,
    msoAnimEffectBlast = 64,
    msoAnimEffectBoldReveal = 65,
    msoAnimEffectBrushOnColor = 66,
    msoAnimEffectBrushOnUnderline = 67,
    msoAnimEffectColorBlend = 68,
    msoAnimEffectColorWave = 69,
    msoAnimEffectComplementaryColor = 70,
    msoAnimEffectComplementaryColor2 = 71,
    msoAnimEffectContrastingColor = 72,
    msoAnimEffectDarken = 73,
    msoAnimEffectDesaturate = 74,
    msoAnimEffectFlashBulb = 75,
    msoAnimEffectFlicker = 76,
    msoAnimEffectGrowWithColor = 77,
    msoAnimEffectLighten = 78,
    msoAnimEffectStyleEmphasis = 79,
    msoAnimEffectTeeter = 80,
    msoAnimEffectVerticalGrow = 81,
    msoAnimEffectWave = 82,
    msoAnimEffectMediaPlay = 83,
    msoAnimEffectMediaPause = 84,
    msoAnimEffectMediaStop = 85,
    msoAnimEffectPathCircle = 86,
    msoAnimEffectPathRightTriangle = 87,
    msoAnimEffectPathDiamond = 88,
    msoAnimEffectPathHexagon = 89,
    msoAnimEffectPath5PointStar = 90,
    msoAnimEffectPathCrescentMoon = 91,
    msoAnimEffectPathSquare = 92,
    msoAnimEffectPathTrapezoid = 93,
    msoAnimEffectPathHeart = 94,
    msoAnimEffectPathOctagon = 95,
    msoAnimEffectPath6PointStar = 96,
    msoAnimEffectPathFootball = 97,
    msoAnimEffectPathEqualTriangle = 98,
    msoAnimEffectPathParallelogram = 99,
    msoAnimEffectPathPentagon = 100,
    msoAnimEffectPath4PointStar = 101,
    msoAnimEffectPath8PointStar = 102,
    msoAnimEffectPathTeardrop = 103,
    msoAnimEffectPathPointyStar = 104,
    msoAnimEffectPathCurvedSquare = 105,
    msoAnimEffectPathCurvedX = 106,
    msoAnimEffectPathVerticalFigure8 = 107,
    msoAnimEffectPathCurvyStar = 108,
    msoAnimEffectPathLoopdeLoop = 109,
    msoAnimEffectPathBuzzsaw = 110,
    msoAnimEffectPathHorizontalFigure8 = 111,
    msoAnimEffectPathPeanut = 112,
    msoAnimEffectPathFigure8Four = 113,
    msoAnimEffectPathNeutron = 114,
    msoAnimEffectPathSwoosh = 115,
    msoAnimEffectPathBean = 116,
    msoAnimEffectPathPlus = 117,
    msoAnimEffectPathInvertedTriangle = 118,
    msoAnimEffectPathInvertedSquare = 119,
    msoAnimEffectPathLeft = 120,
    msoAnimEffectPathTurnRight = 121,
    msoAnimEffectPathArcDown = 122,
    msoAnimEffectPathZigzag = 123,
    msoAnimEffectPathSCurve2 = 124,
    msoAnimEffectPathSineWave = 125,
    msoAnimEffectPathBounceLeft = 126,
    msoAnimEffectPathDown = 127,
    msoAnimEffectPathTurnUp = 128,
    msoAnimEffectPathArcUp = 129,
    msoAnimEffectPathHeartbeat = 130,
    msoAnimEffectPathSpiralRight = 131,
    msoAnimEffectPathWave = 132,
    msoAnimEffectPathCurvyLeft = 133,
    msoAnimEffectPathDiagonalDownRight = 134,
    msoAnimEffectPathTurnDown = 135,
    msoAnimEffectPathArcLeft = 136,
    msoAnimEffectPathFunnel = 137,
    msoAnimEffectPathSpring = 138,
    msoAnimEffectPathBounceRight = 139,
    msoAnimEffectPathSpiralLeft = 140,
    msoAnimEffectPathDiagonalUpRight = 141,
    msoAnimEffectPathTurnUpRight = 142,
    msoAnimEffectPathArcRight = 143,
    msoAnimEffectPathSCurve1 = 144,
    msoAnimEffectPathDecayingWave = 145,
    msoAnimEffectPathCurvyRight = 146,
    msoAnimEffectPathStairsDown = 147,
    msoAnimEffectPathUp = 148,
    msoAnimEffectPathRight = 149
};

enum MsoAnimateByLevel
{
    msoAnimateLevelMixed = -1,
    msoAnimateLevelNone = 0,
    msoAnimateTextByAllLevels = 1,
    msoAnimateTextByFirstLevel = 2,
    msoAnimateTextBySecondLevel = 3,
    msoAnimateTextByThirdLevel = 4,
    msoAnimateTextByFourthLevel = 5,
    msoAnimateTextByFifthLevel = 6,
    msoAnimateChartAllAtOnce = 7,
    msoAnimateChartByCategory = 8,
    msoAnimateChartByCategoryElements = 9,
    msoAnimateChartBySeries = 10,
    msoAnimateChartBySeriesElements = 11,
    msoAnimateDiagramAllAtOnce = 12,
    msoAnimateDiagramDepthByNode = 13,
    msoAnimateDiagramDepthByBranch = 14,
    msoAnimateDiagramBreadthByNode = 15,
    msoAnimateDiagramBreadthByLevel = 16,
    msoAnimateDiagramClockwise = 17,
    msoAnimateDiagramClockwiseIn = 18,
    msoAnimateDiagramClockwiseOut = 19,
    msoAnimateDiagramCounterClockwise = 20,
    msoAnimateDiagramCounterClockwiseIn = 21,
    msoAnimateDiagramCounterClockwiseOut = 22,
    msoAnimateDiagramInByRing = 23,
    msoAnimateDiagramOutByRing = 24,
    msoAnimateDiagramUp = 25,
    msoAnimateDiagramDown = 26
};

enum MsoAnimTriggerType
{
    msoAnimTriggerMixed = -1,
    msoAnimTriggerNone = 0,
    msoAnimTriggerOnPageClick = 1,
    msoAnimTriggerWithPrevious = 2,
    msoAnimTriggerAfterPrevious = 3,
    msoAnimTriggerOnShapeClick = 4
};

enum MsoAnimAfterEffect
{
    msoAnimAfterEffectMixed = -1,
    msoAnimAfterEffectNone = 0,
    msoAnimAfterEffectDim = 1,
    msoAnimAfterEffectHide = 2,
    msoAnimAfterEffectHideOnNextClick = 3
};

enum MsoAnimTextUnitEffect
{
    msoAnimTextUnitEffectMixed = -1,
    msoAnimTextUnitEffectByParagraph = 0,
    msoAnimTextUnitEffectByCharacter = 1,
    msoAnimTextUnitEffectByWord = 2
};

enum MsoAnimEffectRestart
{
    msoAnimEffectRestartAlways = 1,
    msoAnimEffectRestartWhenOff = 2,
    msoAnimEffectRestartNever = 3
};

enum MsoAnimEffectAfter
{
    msoAnimEffectAfterFreeze = 1,
    msoAnimEffectAfterRemove = 2,
    msoAnimEffectAfterHold = 3,
    msoAnimEffectAfterTransition = 4
};

enum MsoAnimDirection
{
    msoAnimDirectionNone = 0,
    msoAnimDirectionUp = 1,
    msoAnimDirectionRight = 2,
    msoAnimDirectionDown = 3,
    msoAnimDirectionLeft = 4,
    msoAnimDirectionOrdinalMask = 5,
    msoAnimDirectionUpLeft = 6,
    msoAnimDirectionUpRight = 7,
    msoAnimDirectionDownRight = 8,
    msoAnimDirectionDownLeft = 9,
    msoAnimDirectionTop = 10,
    msoAnimDirectionBottom = 11,
    msoAnimDirectionTopLeft = 12,
    msoAnimDirectionTopRight = 13,
    msoAnimDirectionBottomRight = 14,
    msoAnimDirectionBottomLeft = 15,
    msoAnimDirectionHorizontal = 16,
    msoAnimDirectionVertical = 17,
    msoAnimDirectionAcross = 18,
    msoAnimDirectionIn = 19,
    msoAnimDirectionOut = 20,
    msoAnimDirectionClockwise = 21,
    msoAnimDirectionCounterclockwise = 22,
    msoAnimDirectionHorizontalIn = 23,
    msoAnimDirectionHorizontalOut = 24,
    msoAnimDirectionVerticalIn = 25,
    msoAnimDirectionVerticalOut = 26,
    msoAnimDirectionSlightly = 27,
    msoAnimDirectionCenter = 28,
    msoAnimDirectionInSlightly = 29,
    msoAnimDirectionInCenter = 30,
    msoAnimDirectionInBottom = 31,
    msoAnimDirectionOutSlightly = 32,
    msoAnimDirectionOutCenter = 33,
    msoAnimDirectionOutBottom = 34,
    msoAnimDirectionFontBold = 35,
    msoAnimDirectionFontItalic = 36,
    msoAnimDirectionFontUnderline = 37,
    msoAnimDirectionFontStrikethrough = 38,
    msoAnimDirectionFontShadow = 39,
    msoAnimDirectionFontAllCaps = 40,
    msoAnimDirectionInstant = 41,
    msoAnimDirectionGradual = 42,
    msoAnimDirectionCycleClockwise = 43,
    msoAnimDirectionCycleCounterclockwise = 44
};

struct __declspec(uuid("914934e1-5a91-11cf-8700-00aa0060263b"))
EffectParameters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum MsoAnimDirection * Direction ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ enum MsoAnimDirection Direction ) = 0;
      virtual HRESULT __stdcall get_Amount (
        /*[out,retval]*/ float * Amount ) = 0;
      virtual HRESULT __stdcall put_Amount (
        /*[in]*/ float Amount ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * Size ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float Size ) = 0;
      virtual HRESULT __stdcall get_Color2 (
        /*[out,retval]*/ struct pptColorFormat * * Color2 ) = 0;
      virtual HRESULT __stdcall get_Relative (
        /*[out,retval]*/ enum Office::MsoTriState * Relative ) = 0;
      virtual HRESULT __stdcall put_Relative (
        /*[in]*/ enum Office::MsoTriState Relative ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR FontName ) = 0;
};

struct __declspec(uuid("914934e2-5a91-11cf-8700-00aa0060263b"))
EffectInformation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AfterEffect (
        /*[out,retval]*/ enum MsoAnimAfterEffect * AfterEffect ) = 0;
      virtual HRESULT __stdcall get_AnimateBackground (
        /*[out,retval]*/ enum Office::MsoTriState * AnimateBackground ) = 0;
      virtual HRESULT __stdcall get_AnimateTextInReverse (
        /*[out,retval]*/ enum Office::MsoTriState * AnimateTextInReverse ) = 0;
      virtual HRESULT __stdcall get_BuildByLevelEffect (
        /*[out,retval]*/ enum MsoAnimateByLevel * BuildByLevelEffect ) = 0;
      virtual HRESULT __stdcall get_Dim (
        /*[out,retval]*/ struct pptColorFormat * * Dim ) = 0;
      virtual HRESULT __stdcall get_PlaySettings (
        /*[out,retval]*/ struct PlaySettings * * PlaySettings ) = 0;
      virtual HRESULT __stdcall get_SoundEffect (
        /*[out,retval]*/ struct SoundEffect * * SoundEffect ) = 0;
      virtual HRESULT __stdcall get_TextUnitEffect (
        /*[out,retval]*/ enum MsoAnimTextUnitEffect * TextUnitEffect ) = 0;
};

enum MsoAnimType
{
    msoAnimTypeMixed = -2,
    msoAnimTypeNone = 0,
    msoAnimTypeMotion = 1,
    msoAnimTypeColor = 2,
    msoAnimTypeScale = 3,
    msoAnimTypeRotation = 4,
    msoAnimTypeProperty = 5,
    msoAnimTypeCommand = 6,
    msoAnimTypeFilter = 7,
    msoAnimTypeSet = 8
};

enum MsoAnimAdditive
{
    msoAnimAdditiveAddBase = 1,
    msoAnimAdditiveAddSum = 2
};

enum MsoAnimAccumulate
{
    msoAnimAccumulateNone = 1,
    msoAnimAccumulateAlways = 2
};

struct __declspec(uuid("914934e5-5a91-11cf-8700-00aa0060263b"))
MotionEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ByX (
        /*[out,retval]*/ float * ByX ) = 0;
      virtual HRESULT __stdcall put_ByX (
        /*[in]*/ float ByX ) = 0;
      virtual HRESULT __stdcall get_ByY (
        /*[out,retval]*/ float * ByY ) = 0;
      virtual HRESULT __stdcall put_ByY (
        /*[in]*/ float ByY ) = 0;
      virtual HRESULT __stdcall get_FromX (
        /*[out,retval]*/ float * FromX ) = 0;
      virtual HRESULT __stdcall put_FromX (
        /*[in]*/ float FromX ) = 0;
      virtual HRESULT __stdcall get_FromY (
        /*[out,retval]*/ float * FromY ) = 0;
      virtual HRESULT __stdcall put_FromY (
        /*[in]*/ float FromY ) = 0;
      virtual HRESULT __stdcall get_ToX (
        /*[out,retval]*/ float * ToX ) = 0;
      virtual HRESULT __stdcall put_ToX (
        /*[in]*/ float ToX ) = 0;
      virtual HRESULT __stdcall get_ToY (
        /*[out,retval]*/ float * ToY ) = 0;
      virtual HRESULT __stdcall put_ToY (
        /*[in]*/ float ToY ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_Path (
        /*[in]*/ BSTR Path ) = 0;
};

struct __declspec(uuid("914934e6-5a91-11cf-8700-00aa0060263b"))
ColorEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_By (
        /*[out,retval]*/ struct pptColorFormat * * By ) = 0;
      virtual HRESULT __stdcall get_From (
        /*[out,retval]*/ struct pptColorFormat * * From ) = 0;
      virtual HRESULT __stdcall get_To (
        /*[out,retval]*/ struct pptColorFormat * * To ) = 0;
};

struct __declspec(uuid("914934e7-5a91-11cf-8700-00aa0060263b"))
ScaleEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ByX (
        /*[out,retval]*/ float * ByX ) = 0;
      virtual HRESULT __stdcall put_ByX (
        /*[in]*/ float ByX ) = 0;
      virtual HRESULT __stdcall get_ByY (
        /*[out,retval]*/ float * ByY ) = 0;
      virtual HRESULT __stdcall put_ByY (
        /*[in]*/ float ByY ) = 0;
      virtual HRESULT __stdcall get_FromX (
        /*[out,retval]*/ float * FromX ) = 0;
      virtual HRESULT __stdcall put_FromX (
        /*[in]*/ float FromX ) = 0;
      virtual HRESULT __stdcall get_FromY (
        /*[out,retval]*/ float * FromY ) = 0;
      virtual HRESULT __stdcall put_FromY (
        /*[in]*/ float FromY ) = 0;
      virtual HRESULT __stdcall get_ToX (
        /*[out,retval]*/ float * ToX ) = 0;
      virtual HRESULT __stdcall put_ToX (
        /*[in]*/ float ToX ) = 0;
      virtual HRESULT __stdcall get_ToY (
        /*[out,retval]*/ float * ToY ) = 0;
      virtual HRESULT __stdcall put_ToY (
        /*[in]*/ float ToY ) = 0;
};

struct __declspec(uuid("914934e8-5a91-11cf-8700-00aa0060263b"))
RotationEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_By (
        /*[out,retval]*/ float * By ) = 0;
      virtual HRESULT __stdcall put_By (
        /*[in]*/ float By ) = 0;
      virtual HRESULT __stdcall get_From (
        /*[out,retval]*/ float * From ) = 0;
      virtual HRESULT __stdcall put_From (
        /*[in]*/ float From ) = 0;
      virtual HRESULT __stdcall get_To (
        /*[out,retval]*/ float * To ) = 0;
      virtual HRESULT __stdcall put_To (
        /*[in]*/ float To ) = 0;
};

enum MsoAnimProperty
{
    msoAnimNone = 0,
    msoAnimX = 1,
    msoAnimY = 2,
    msoAnimWidth = 3,
    msoAnimHeight = 4,
    msoAnimOpacity = 5,
    msoAnimRotation = 6,
    msoAnimColor = 7,
    msoAnimVisibility = 8,
    msoAnimTextFontBold = 100,
    msoAnimTextFontColor = 101,
    msoAnimTextFontEmboss = 102,
    msoAnimTextFontItalic = 103,
    msoAnimTextFontName = 104,
    msoAnimTextFontShadow = 105,
    msoAnimTextFontSize = 106,
    msoAnimTextFontSubscript = 107,
    msoAnimTextFontSuperscript = 108,
    msoAnimTextFontUnderline = 109,
    msoAnimTextFontStrikeThrough = 110,
    msoAnimTextBulletCharacter = 111,
    msoAnimTextBulletFontName = 112,
    msoAnimTextBulletNumber = 113,
    msoAnimTextBulletColor = 114,
    msoAnimTextBulletRelativeSize = 115,
    msoAnimTextBulletStyle = 116,
    msoAnimTextBulletType = 117,
    msoAnimShapePictureContrast = 1000,
    msoAnimShapePictureBrightness = 1001,
    msoAnimShapePictureGamma = 1002,
    msoAnimShapePictureGrayscale = 1003,
    msoAnimShapeFillOn = 1004,
    msoAnimShapeFillColor = 1005,
    msoAnimShapeFillOpacity = 1006,
    msoAnimShapeFillBackColor = 1007,
    msoAnimShapeLineOn = 1008,
    msoAnimShapeLineColor = 1009,
    msoAnimShapeShadowOn = 1010,
    msoAnimShapeShadowType = 1011,
    msoAnimShapeShadowColor = 1012,
    msoAnimShapeShadowOpacity = 1013,
    msoAnimShapeShadowOffsetX = 1014,
    msoAnimShapeShadowOffsetY = 1015
};

struct __declspec(uuid("914934eb-5a91-11cf-8700-00aa0060263b"))
AnimationPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ float * Time ) = 0;
      virtual HRESULT __stdcall put_Time (
        /*[in]*/ float Time ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * Formula ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR Formula ) = 0;
};

struct __declspec(uuid("914934ea-5a91-11cf-8700-00aa0060263b"))
AnimationPoints : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct AnimationPoint * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct AnimationPoint * * Add ) = 0;
      virtual HRESULT __stdcall get_Smooth (
        /*[out,retval]*/ enum Office::MsoTriState * Smooth ) = 0;
      virtual HRESULT __stdcall put_Smooth (
        /*[in]*/ enum Office::MsoTriState Smooth ) = 0;
};

struct __declspec(uuid("914934e9-5a91-11cf-8700-00aa0060263b"))
PropertyEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Property (
        /*[out,retval]*/ enum MsoAnimProperty * Property ) = 0;
      virtual HRESULT __stdcall put_Property (
        /*[in]*/ enum MsoAnimProperty Property ) = 0;
      virtual HRESULT __stdcall get_Points (
        /*[out,retval]*/ struct AnimationPoints * * Points ) = 0;
      virtual HRESULT __stdcall get_From (
        /*[out,retval]*/ VARIANT * From ) = 0;
      virtual HRESULT __stdcall put_From (
        /*[in]*/ VARIANT From ) = 0;
      virtual HRESULT __stdcall get_To (
        /*[out,retval]*/ VARIANT * To ) = 0;
      virtual HRESULT __stdcall put_To (
        /*[in]*/ VARIANT To ) = 0;
};

enum PpAlertLevel
{
    ppAlertsNone = 1,
    ppAlertsAll = 2
};

enum PpRevisionInfo
{
    ppRevisionInfoNone = 0,
    ppRevisionInfoBaseline = 1,
    ppRevisionInfoMerged = 2
};

struct __declspec(uuid("914934ed-5a91-11cf-8700-00aa0060263b"))
pptAutoCorrect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayAutoCorrectOptions (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAutoCorrectOptions ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoCorrectOptions (
        /*[in]*/ VARIANT_BOOL DisplayAutoCorrectOptions ) = 0;
      virtual HRESULT __stdcall get_DisplayAutoLayoutOptions (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAutoLayoutOptions ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoLayoutOptions (
        /*[in]*/ VARIANT_BOOL DisplayAutoLayoutOptions ) = 0;
};

struct __declspec(uuid("914934ee-5a91-11cf-8700-00aa0060263b"))
pptOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayPasteOptions (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayPasteOptions ) = 0;
      virtual HRESULT __stdcall put_DisplayPasteOptions (
        /*[in]*/ enum Office::MsoTriState DisplayPasteOptions ) = 0;
};

enum MsoAnimCommandType
{
    msoAnimCommandTypeEvent = 0,
    msoAnimCommandTypeCall = 1,
    msoAnimCommandTypeVerb = 2
};

struct __declspec(uuid("914934ef-5a91-11cf-8700-00aa0060263b"))
CommandEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum MsoAnimCommandType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum MsoAnimCommandType Type ) = 0;
      virtual HRESULT __stdcall get_Command (
        /*[out,retval]*/ BSTR * Command ) = 0;
      virtual HRESULT __stdcall put_Command (
        /*[in]*/ BSTR Command ) = 0;
};

enum MsoAnimFilterEffectType
{
    msoAnimFilterEffectTypeNone = 0,
    msoAnimFilterEffectTypeBarn = 1,
    msoAnimFilterEffectTypeBlinds = 2,
    msoAnimFilterEffectTypeBox = 3,
    msoAnimFilterEffectTypeCheckerboard = 4,
    msoAnimFilterEffectTypeCircle = 5,
    msoAnimFilterEffectTypeDiamond = 6,
    msoAnimFilterEffectTypeDissolve = 7,
    msoAnimFilterEffectTypeFade = 8,
    msoAnimFilterEffectTypeImage = 9,
    msoAnimFilterEffectTypePixelate = 10,
    msoAnimFilterEffectTypePlus = 11,
    msoAnimFilterEffectTypeRandomBar = 12,
    msoAnimFilterEffectTypeSlide = 13,
    msoAnimFilterEffectTypeStretch = 14,
    msoAnimFilterEffectTypeStrips = 15,
    msoAnimFilterEffectTypeWedge = 16,
    msoAnimFilterEffectTypeWheel = 17,
    msoAnimFilterEffectTypeWipe = 18
};

enum MsoAnimFilterEffectSubtype
{
    msoAnimFilterEffectSubtypeNone = 0,
    msoAnimFilterEffectSubtypeInVertical = 1,
    msoAnimFilterEffectSubtypeOutVertical = 2,
    msoAnimFilterEffectSubtypeInHorizontal = 3,
    msoAnimFilterEffectSubtypeOutHorizontal = 4,
    msoAnimFilterEffectSubtypeHorizontal = 5,
    msoAnimFilterEffectSubtypeVertical = 6,
    msoAnimFilterEffectSubtypeIn = 7,
    msoAnimFilterEffectSubtypeOut = 8,
    msoAnimFilterEffectSubtypeAcross = 9,
    msoAnimFilterEffectSubtypeFromLeft = 10,
    msoAnimFilterEffectSubtypeFromRight = 11,
    msoAnimFilterEffectSubtypeFromTop = 12,
    msoAnimFilterEffectSubtypeFromBottom = 13,
    msoAnimFilterEffectSubtypeDownLeft = 14,
    msoAnimFilterEffectSubtypeUpLeft = 15,
    msoAnimFilterEffectSubtypeDownRight = 16,
    msoAnimFilterEffectSubtypeUpRight = 17,
    msoAnimFilterEffectSubtypeSpokes1 = 18,
    msoAnimFilterEffectSubtypeSpokes2 = 19,
    msoAnimFilterEffectSubtypeSpokes3 = 20,
    msoAnimFilterEffectSubtypeSpokes4 = 21,
    msoAnimFilterEffectSubtypeSpokes8 = 22,
    msoAnimFilterEffectSubtypeLeft = 23,
    msoAnimFilterEffectSubtypeRight = 24,
    msoAnimFilterEffectSubtypeDown = 25,
    msoAnimFilterEffectSubtypeUp = 26
};

struct __declspec(uuid("914934f0-5a91-11cf-8700-00aa0060263b"))
FilterEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum MsoAnimFilterEffectType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum MsoAnimFilterEffectType Type ) = 0;
      virtual HRESULT __stdcall get_Subtype (
        /*[out,retval]*/ enum MsoAnimFilterEffectSubtype * Subtype ) = 0;
      virtual HRESULT __stdcall put_Subtype (
        /*[in]*/ enum MsoAnimFilterEffectSubtype Subtype ) = 0;
      virtual HRESULT __stdcall get_Reveal (
        /*[out,retval]*/ enum Office::MsoTriState * Reveal ) = 0;
      virtual HRESULT __stdcall put_Reveal (
        /*[in]*/ enum Office::MsoTriState Reveal ) = 0;
};

struct __declspec(uuid("914934f1-5a91-11cf-8700-00aa0060263b"))
SetEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Property (
        /*[out,retval]*/ enum MsoAnimProperty * Property ) = 0;
      virtual HRESULT __stdcall put_Property (
        /*[in]*/ enum MsoAnimProperty Property ) = 0;
      virtual HRESULT __stdcall get_To (
        /*[out,retval]*/ VARIANT * To ) = 0;
      virtual HRESULT __stdcall put_To (
        /*[in]*/ VARIANT To ) = 0;
};

struct __declspec(uuid("91493442-5a91-11cf-8700-00aa0060263b"))
_pptApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Presentations (
        /*[out,retval]*/ struct Presentations * * Presentations ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct DocumentWindows * * Windows ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ IUnknown * * Dialogs ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct DocumentWindow * * ActiveWindow ) = 0;
      virtual HRESULT __stdcall get_ActivePresentation (
        /*[out,retval]*/ struct _Presentation * * ActivePresentation ) = 0;
      virtual HRESULT __stdcall get_SlideShowWindows (
        /*[out,retval]*/ struct SlideShowWindows * * SlideShowWindows ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * CommandBars ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * Assistant ) = 0;
      virtual HRESULT __stdcall get_FileSearch (
        /*[out,retval]*/ struct Office::FileSearch * * FileSearch ) = 0;
      virtual HRESULT __stdcall get_FileFind (
        /*[out,retval]*/ struct Office::IFind * * FileFind ) = 0;
      virtual HRESULT __stdcall get_Build (
        /*[out,retval]*/ BSTR * Build ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall get_OperatingSystem (
        /*[out,retval]*/ BSTR * OperatingSystem ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * ActivePrinter ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * Creator ) = 0;
      virtual HRESULT __stdcall get_pptAddIns (
        /*[out,retval]*/ struct pptAddIns * * pptAddIns ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ struct VBE6::VBE * * VBE ) = 0;
      virtual HRESULT __stdcall Help (
        /*[in]*/ BSTR HelpFile,
        /*[in]*/ int ContextID ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall Run (
        /*[in]*/ BSTR MacroName,
        /*[in]*/ SAFEARRAY * * safeArrayOfParams,
        /*[out,retval]*/ VARIANT * Run ) = 0;
      virtual HRESULT __stdcall PPFileDialog (
        /*[in]*/ enum PpFileDialogType Type,
        /*[out,retval]*/ IUnknown * * PPFileDialog ) = 0;
      virtual HRESULT __stdcall LaunchSpelling (
        /*[in]*/ struct DocumentWindow * pWindow ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float Left ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float Top ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum PpWindowState * WindowState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum PpWindowState WindowState ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_HWND (
        /*[out,retval]*/ long * HWND ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ enum Office::MsoTriState * Active ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * AnswerWizard ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ struct Office::COMAddIns * * COMAddIns ) = 0;
      virtual HRESULT __stdcall get_ProductCode (
        /*[out,retval]*/ BSTR * ProductCode ) = 0;
      virtual HRESULT __stdcall get_pptDefaultWebOptions (
        /*[out,retval]*/ struct pptDefaultWebOptions * * pptDefaultWebOptions ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * LanguageSettings ) = 0;
      virtual HRESULT __stdcall get_MsoDebugOptions (
        /*[out,retval]*/ struct Office::MsoDebugOptions * * MsoDebugOptions ) = 0;
      virtual HRESULT __stdcall get_ShowWindowsInTaskbar (
        /*[out,retval]*/ enum Office::MsoTriState * ShowWindowsInTaskbar ) = 0;
      virtual HRESULT __stdcall put_ShowWindowsInTaskbar (
        /*[in]*/ enum Office::MsoTriState ShowWindowsInTaskbar ) = 0;
      virtual HRESULT __stdcall get_Marker (
        /*[out,retval]*/ IUnknown * * Marker ) = 0;
      virtual HRESULT __stdcall get_FeatureInstall (
        /*[out,retval]*/ enum Office::MsoFeatureInstall * FeatureInstall ) = 0;
      virtual HRESULT __stdcall put_FeatureInstall (
        /*[in]*/ enum Office::MsoFeatureInstall FeatureInstall ) = 0;
      virtual HRESULT __stdcall GetOptionFlag (
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL Persist,
        /*[out,retval]*/ VARIANT_BOOL * GetOptionFlag ) = 0;
      virtual HRESULT __stdcall SetOptionFlag (
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL State,
        /*[in]*/ VARIANT_BOOL Persist ) = 0;
      virtual HRESULT __stdcall get_FileDialog (
        /*[in]*/ enum Office::MsoFileDialogType Type,
        /*[out,retval]*/ struct Office::FileDialog * * FileDialog ) = 0;
      virtual HRESULT __stdcall get_DisplayGridLines (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayGridLines ) = 0;
      virtual HRESULT __stdcall put_DisplayGridLines (
        /*[in]*/ enum Office::MsoTriState DisplayGridLines ) = 0;
      virtual HRESULT __stdcall get_AutomationSecurity (
        /*[out,retval]*/ enum Office::MsoAutomationSecurity * AutomationSecurity ) = 0;
      virtual HRESULT __stdcall put_AutomationSecurity (
        /*[in]*/ enum Office::MsoAutomationSecurity AutomationSecurity ) = 0;
      virtual HRESULT __stdcall get_NewPresentation (
        /*[out,retval]*/ struct Office::NewFile * * NewPresentation ) = 0;
      virtual HRESULT __stdcall get_DisplayAlerts (
        /*[out,retval]*/ enum PpAlertLevel * DisplayAlerts ) = 0;
      virtual HRESULT __stdcall put_DisplayAlerts (
        /*[in]*/ enum PpAlertLevel DisplayAlerts ) = 0;
      virtual HRESULT __stdcall get_ShowStartupDialog (
        /*[out,retval]*/ enum Office::MsoTriState * ShowStartupDialog ) = 0;
      virtual HRESULT __stdcall put_ShowStartupDialog (
        /*[in]*/ enum Office::MsoTriState ShowStartupDialog ) = 0;
      virtual HRESULT __stdcall SetPerfMarker (
        /*[in]*/ int Marker ) = 0;
      virtual HRESULT __stdcall get_pptAutoCorrect (
        /*[out,retval]*/ struct pptAutoCorrect * * pptAutoCorrect ) = 0;
      virtual HRESULT __stdcall get_pptOptions (
        /*[out,retval]*/ struct pptOptions * * pptOptions ) = 0;
};

struct __declspec(uuid("91493451-5a91-11cf-8700-00aa0060263b"))
_pptGlobal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ActivePresentation (
        /*[out,retval]*/ struct _Presentation * * ActivePresentation ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct DocumentWindow * * ActiveWindow ) = 0;
      virtual HRESULT __stdcall get_pptAddIns (
        /*[out,retval]*/ struct pptAddIns * * pptAddIns ) = 0;
      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * Assistant ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ IUnknown * * Dialogs ) = 0;
      virtual HRESULT __stdcall get_Presentations (
        /*[out,retval]*/ struct Presentations * * Presentations ) = 0;
      virtual HRESULT __stdcall get_SlideShowWindows (
        /*[out,retval]*/ struct SlideShowWindows * * SlideShowWindows ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct DocumentWindows * * Windows ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * CommandBars ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * AnswerWizard ) = 0;
};

struct __declspec(uuid("91493454-5a91-11cf-8700-00aa0060263b"))
pptSelection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Unselect ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum PpSelectionType * Type ) = 0;
      virtual HRESULT __stdcall get_SlideRange (
        /*[out,retval]*/ struct SlideRange * * SlideRange ) = 0;
      virtual HRESULT __stdcall get_pptShapeRange (
        /*[out,retval]*/ struct pptShapeRange * * pptShapeRange ) = 0;
      virtual HRESULT __stdcall get_TextRange (
        /*[out,retval]*/ struct TextRange * * TextRange ) = 0;
      virtual HRESULT __stdcall get_ChildShapeRange (
        /*[out,retval]*/ struct pptShapeRange * * ChildShapeRange ) = 0;
      virtual HRESULT __stdcall get_HasChildShapeRange (
        /*[out,retval]*/ VARIANT_BOOL * HasChildShapeRange ) = 0;
};

struct __declspec(uuid("91493457-5a91-11cf-8700-00aa0060263b"))
DocumentWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptSelection (
        /*[out,retval]*/ struct pptSelection * * pptSelection ) = 0;
      virtual HRESULT __stdcall get_pptView (
        /*[out,retval]*/ struct pptView * * pptView ) = 0;
      virtual HRESULT __stdcall get_Presentation (
        /*[out,retval]*/ struct _Presentation * * Presentation ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum PpViewType * ViewType ) = 0;
      virtual HRESULT __stdcall put_ViewType (
        /*[in]*/ enum PpViewType ViewType ) = 0;
      virtual HRESULT __stdcall get_BlackAndWhite (
        /*[out,retval]*/ enum Office::MsoTriState * BlackAndWhite ) = 0;
      virtual HRESULT __stdcall put_BlackAndWhite (
        /*[in]*/ enum Office::MsoTriState BlackAndWhite ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ enum Office::MsoTriState * Active ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum PpWindowState * WindowState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum PpWindowState WindowState ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float Left ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float Top ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
      virtual HRESULT __stdcall FitToPage ( ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall LargeScroll (
        /*[in]*/ int Down,
        /*[in]*/ int Up,
        /*[in]*/ int ToRight,
        /*[in]*/ int ToLeft ) = 0;
      virtual HRESULT __stdcall SmallScroll (
        /*[in]*/ int Down,
        /*[in]*/ int Up,
        /*[in]*/ int ToRight,
        /*[in]*/ int ToLeft ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[out,retval]*/ struct DocumentWindow * * NewWindow ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall get_HWND (
        /*[out,retval]*/ long * HWND ) = 0;
      virtual HRESULT __stdcall get_ActivePane (
        /*[out,retval]*/ struct Pane * * ActivePane ) = 0;
      virtual HRESULT __stdcall get_pptPanes (
        /*[out,retval]*/ struct pptPanes * * pptPanes ) = 0;
      virtual HRESULT __stdcall get_SplitVertical (
        /*[out,retval]*/ long * SplitVertical ) = 0;
      virtual HRESULT __stdcall put_SplitVertical (
        /*[in]*/ long SplitVertical ) = 0;
      virtual HRESULT __stdcall get_SplitHorizontal (
        /*[out,retval]*/ long * SplitHorizontal ) = 0;
      virtual HRESULT __stdcall put_SplitHorizontal (
        /*[in]*/ long SplitHorizontal ) = 0;
      virtual HRESULT __stdcall RangeFromPoint (
        /*[in]*/ int X,
        /*[in]*/ int Y,
        /*[out,retval]*/ IDispatch * * RangeFromPoint ) = 0;
      virtual HRESULT __stdcall PointsToScreenPixelsX (
        /*[in]*/ float Points,
        /*[out,retval]*/ int * PointsToScreenPixelsX ) = 0;
      virtual HRESULT __stdcall PointsToScreenPixelsY (
        /*[in]*/ float Points,
        /*[out,retval]*/ int * PointsToScreenPixelsY ) = 0;
      virtual HRESULT __stdcall ScrollIntoView (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ enum Office::MsoTriState Start ) = 0;
};

struct __declspec(uuid("91493455-5a91-11cf-8700-00aa0060263b"))
DocumentWindows : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct DocumentWindow * * Item ) = 0;
      virtual HRESULT __stdcall Arrange (
        /*[in]*/ enum PpArrangeStyle arrangeStyle ) = 0;
};

struct __declspec(uuid("91493469-5a91-11cf-8700-00aa0060263b"))
Slides : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Slide * * Item ) = 0;
      virtual HRESULT __stdcall FindBySlideID (
        /*[in]*/ long SlideID,
        /*[out,retval]*/ struct _Slide * * FindBySlideID ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ int Index,
        /*[in]*/ enum PpSlideLayout Layout,
        /*[out,retval]*/ struct _Slide * * Add ) = 0;
      virtual HRESULT __stdcall InsertFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ int Index,
        /*[in]*/ int SlideStart,
        /*[in]*/ int SlideEnd,
        /*[out,retval]*/ int * FromFile ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SlideRange * * Range ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct SlideRange * * Paste ) = 0;
};

struct __declspec(uuid("9149346a-5a91-11cf-8700-00aa0060263b"))
_Slide : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptShapes (
        /*[out,retval]*/ struct pptShapes * * pptShapes ) = 0;
      virtual HRESULT __stdcall get_pptHeadersFooters (
        /*[out,retval]*/ struct pptHeadersFooters * * pptHeadersFooters ) = 0;
      virtual HRESULT __stdcall get_SlideShowTransition (
        /*[out,retval]*/ struct SlideShowTransition * * SlideShowTransition ) = 0;
      virtual HRESULT __stdcall get_ColorScheme (
        /*[out,retval]*/ struct ColorScheme * * ColorScheme ) = 0;
      virtual HRESULT __stdcall put_ColorScheme (
        /*[in]*/ struct ColorScheme * ColorScheme ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct pptShapeRange * * Background ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SlideID (
        /*[out,retval]*/ long * SlideID ) = 0;
      virtual HRESULT __stdcall get_PrintSteps (
        /*[out,retval]*/ int * PrintSteps ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ enum PpSlideLayout * Layout ) = 0;
      virtual HRESULT __stdcall put_Layout (
        /*[in]*/ enum PpSlideLayout Layout ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct SlideRange * * Duplicate ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Tags (
        /*[out,retval]*/ struct Tags * * Tags ) = 0;
      virtual HRESULT __stdcall get_SlideIndex (
        /*[out,retval]*/ int * SlideIndex ) = 0;
      virtual HRESULT __stdcall get_SlideNumber (
        /*[out,retval]*/ int * SlideNumber ) = 0;
      virtual HRESULT __stdcall get_DisplayMasterShapes (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayMasterShapes ) = 0;
      virtual HRESULT __stdcall put_DisplayMasterShapes (
        /*[in]*/ enum Office::MsoTriState DisplayMasterShapes ) = 0;
      virtual HRESULT __stdcall get_FollowMasterBackground (
        /*[out,retval]*/ enum Office::MsoTriState * FollowMasterBackground ) = 0;
      virtual HRESULT __stdcall put_FollowMasterBackground (
        /*[in]*/ enum Office::MsoTriState FollowMasterBackground ) = 0;
      virtual HRESULT __stdcall get_NotesPage (
        /*[out,retval]*/ struct SlideRange * * NotesPage ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct _Master * * Master ) = 0;
      virtual HRESULT __stdcall get_pptHyperlinks (
        /*[out,retval]*/ struct pptHyperlinks * * pptHyperlinks ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR FilterName,
        /*[in]*/ int ScaleWidth,
        /*[in]*/ int ScaleHeight ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * Scripts ) = 0;
      virtual HRESULT __stdcall get_pptComments (
        /*[out,retval]*/ struct pptComments * * pptComments ) = 0;
      virtual HRESULT __stdcall get_Design (
        /*[out,retval]*/ struct Design * * Design ) = 0;
      virtual HRESULT __stdcall put_Design (
        /*[in]*/ struct Design * Design ) = 0;
      virtual HRESULT __stdcall MoveTo (
        /*[in]*/ int toPos ) = 0;
      virtual HRESULT __stdcall get_TimeLine (
        /*[out,retval]*/ struct TimeLine * * TimeLine ) = 0;
      virtual HRESULT __stdcall ApplyTemplate (
        /*[in]*/ BSTR FileName ) = 0;
};

struct __declspec(uuid("9149346b-5a91-11cf-8700-00aa0060263b"))
SlideRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptShapes (
        /*[out,retval]*/ struct pptShapes * * pptShapes ) = 0;
      virtual HRESULT __stdcall get_pptHeadersFooters (
        /*[out,retval]*/ struct pptHeadersFooters * * pptHeadersFooters ) = 0;
      virtual HRESULT __stdcall get_SlideShowTransition (
        /*[out,retval]*/ struct SlideShowTransition * * SlideShowTransition ) = 0;
      virtual HRESULT __stdcall get_ColorScheme (
        /*[out,retval]*/ struct ColorScheme * * ColorScheme ) = 0;
      virtual HRESULT __stdcall put_ColorScheme (
        /*[in]*/ struct ColorScheme * ColorScheme ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct pptShapeRange * * Background ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SlideID (
        /*[out,retval]*/ long * SlideID ) = 0;
      virtual HRESULT __stdcall get_PrintSteps (
        /*[out,retval]*/ int * PrintSteps ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ enum PpSlideLayout * Layout ) = 0;
      virtual HRESULT __stdcall put_Layout (
        /*[in]*/ enum PpSlideLayout Layout ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct SlideRange * * Duplicate ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Tags (
        /*[out,retval]*/ struct Tags * * Tags ) = 0;
      virtual HRESULT __stdcall get_SlideIndex (
        /*[out,retval]*/ int * SlideIndex ) = 0;
      virtual HRESULT __stdcall get_SlideNumber (
        /*[out,retval]*/ int * SlideNumber ) = 0;
      virtual HRESULT __stdcall get_DisplayMasterShapes (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayMasterShapes ) = 0;
      virtual HRESULT __stdcall put_DisplayMasterShapes (
        /*[in]*/ enum Office::MsoTriState DisplayMasterShapes ) = 0;
      virtual HRESULT __stdcall get_FollowMasterBackground (
        /*[out,retval]*/ enum Office::MsoTriState * FollowMasterBackground ) = 0;
      virtual HRESULT __stdcall put_FollowMasterBackground (
        /*[in]*/ enum Office::MsoTriState FollowMasterBackground ) = 0;
      virtual HRESULT __stdcall get_NotesPage (
        /*[out,retval]*/ struct SlideRange * * NotesPage ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct _Master * * Master ) = 0;
      virtual HRESULT __stdcall get_pptHyperlinks (
        /*[out,retval]*/ struct pptHyperlinks * * pptHyperlinks ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR FilterName,
        /*[in]*/ int ScaleWidth,
        /*[in]*/ int ScaleHeight ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Slide * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall _Index (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * _Index ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * Scripts ) = 0;
      virtual HRESULT __stdcall get_pptComments (
        /*[out,retval]*/ struct pptComments * * pptComments ) = 0;
      virtual HRESULT __stdcall get_Design (
        /*[out,retval]*/ struct Design * * Design ) = 0;
      virtual HRESULT __stdcall put_Design (
        /*[in]*/ struct Design * Design ) = 0;
      virtual HRESULT __stdcall MoveTo (
        /*[in]*/ int toPos ) = 0;
      virtual HRESULT __stdcall get_TimeLine (
        /*[out,retval]*/ struct TimeLine * * TimeLine ) = 0;
      virtual HRESULT __stdcall ApplyTemplate (
        /*[in]*/ BSTR FileName ) = 0;
};

struct __declspec(uuid("9149346c-5a91-11cf-8700-00aa0060263b"))
_Master : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptShapes (
        /*[out,retval]*/ struct pptShapes * * pptShapes ) = 0;
      virtual HRESULT __stdcall get_pptHeadersFooters (
        /*[out,retval]*/ struct pptHeadersFooters * * pptHeadersFooters ) = 0;
      virtual HRESULT __stdcall get_ColorScheme (
        /*[out,retval]*/ struct ColorScheme * * ColorScheme ) = 0;
      virtual HRESULT __stdcall put_ColorScheme (
        /*[in]*/ struct ColorScheme * ColorScheme ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct pptShapeRange * * Background ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall get_TextStyles (
        /*[out,retval]*/ struct TextStyles * * TextStyles ) = 0;
      virtual HRESULT __stdcall get_pptHyperlinks (
        /*[out,retval]*/ struct pptHyperlinks * * pptHyperlinks ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * Scripts ) = 0;
      virtual HRESULT __stdcall get_Design (
        /*[out,retval]*/ struct Design * * Design ) = 0;
      virtual HRESULT __stdcall get_TimeLine (
        /*[out,retval]*/ struct TimeLine * * TimeLine ) = 0;
      virtual HRESULT __stdcall get_SlideShowTransition (
        /*[out,retval]*/ struct SlideShowTransition * * SlideShowTransition ) = 0;
};

struct __declspec(uuid("914934d7-5a91-11cf-8700-00aa0060263b"))
Design : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_SlideMaster (
        /*[out,retval]*/ struct _Master * * SlideMaster ) = 0;
      virtual HRESULT __stdcall get_TitleMaster (
        /*[out,retval]*/ struct _Master * * TitleMaster ) = 0;
      virtual HRESULT __stdcall get_HasTitleMaster (
        /*[out,retval]*/ enum Office::MsoTriState * HasTitleMaster ) = 0;
      virtual HRESULT __stdcall AddTitleMaster (
        /*[out,retval]*/ struct _Master * * TitleMaster ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Preserved (
        /*[out,retval]*/ enum Office::MsoTriState * Preserved ) = 0;
      virtual HRESULT __stdcall put_Preserved (
        /*[in]*/ enum Office::MsoTriState Preserved ) = 0;
      virtual HRESULT __stdcall MoveTo (
        /*[in]*/ int toPos ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("914934d6-5a91-11cf-8700-00aa0060263b"))
Designs : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Design * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR designName,
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Design * * Add ) = 0;
      virtual HRESULT __stdcall Load (
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Design * * Load ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[in]*/ struct Design * pOriginal,
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Design * * Clone ) = 0;
};

struct __declspec(uuid("91493475-5a91-11cf-8700-00aa0060263b"))
pptShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShape * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Callout ) = 0;
      virtual HRESULT __stdcall AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct pptShape * * Connector ) = 0;
      virtual HRESULT __stdcall AddCurve (
        /*[in]*/ VARIANT SafeArrayOfPoints,
        /*[out,retval]*/ struct pptShape * * Curve ) = 0;
      virtual HRESULT __stdcall AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Label ) = 0;
      virtual HRESULT __stdcall AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct pptShape * * Line ) = 0;
      virtual HRESULT __stdcall AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum Office::MsoTriState LinkToFile,
        /*[in]*/ enum Office::MsoTriState SaveWithDocument,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Picture ) = 0;
      virtual HRESULT __stdcall AddPolyline (
        /*[in]*/ VARIANT SafeArrayOfPoints,
        /*[out,retval]*/ struct pptShape * * Polyline ) = 0;
      virtual HRESULT __stdcall AddShape (
        /*[in]*/ enum Office::MsoAutoShapeType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
      virtual HRESULT __stdcall AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[out,retval]*/ struct pptShape * * TextEffect ) = 0;
      virtual HRESULT __stdcall AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Textbox ) = 0;
      virtual HRESULT __stdcall BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct pptFreeformBuilder * * pptFreeformBuilder ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShapeRange * * Range ) = 0;
      virtual HRESULT __stdcall get_HasTitle (
        /*[out,retval]*/ enum Office::MsoTriState * HasTitle ) = 0;
      virtual HRESULT __stdcall AddTitle (
        /*[out,retval]*/ struct pptShape * * Title ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ struct pptShape * * Title ) = 0;
      virtual HRESULT __stdcall get_Placeholders (
        /*[out,retval]*/ struct Placeholders * * Placeholders ) = 0;
      virtual HRESULT __stdcall AddOLEObject (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ BSTR ClassName,
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum Office::MsoTriState DisplayAsIcon,
        /*[in]*/ BSTR IconFileName,
        /*[in]*/ int IconIndex,
        /*[in]*/ BSTR IconLabel,
        /*[in]*/ enum Office::MsoTriState Link,
        /*[out,retval]*/ struct pptShape * * OLEObject ) = 0;
      virtual HRESULT __stdcall AddComment (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * pptComment ) = 0;
      virtual HRESULT __stdcall AddPlaceholder (
        /*[in]*/ enum PpPlaceholderType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Placeholder ) = 0;
      virtual HRESULT __stdcall AddMediaObject (
        /*[in]*/ BSTR FileName,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * MediaObject ) = 0;
      virtual HRESULT __stdcall Paste (
        /*[out,retval]*/ struct pptShapeRange * * Paste ) = 0;
      virtual HRESULT __stdcall AddTable (
        /*[in]*/ int NumRows,
        /*[in]*/ int NumColumns,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * pptTable ) = 0;
      virtual HRESULT __stdcall PasteSpecial (
        /*[in]*/ enum PpPasteDataType DataType,
        /*[in]*/ enum Office::MsoTriState DisplayAsIcon,
        /*[in]*/ BSTR IconFileName,
        /*[in]*/ int IconIndex,
        /*[in]*/ BSTR IconLabel,
        /*[in]*/ enum Office::MsoTriState Link,
        /*[out,retval]*/ struct pptShapeRange * * PasteSpecial ) = 0;
      virtual HRESULT __stdcall AddDiagram (
        /*[in]*/ enum Office::MsoDiagramType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * pptDiagram ) = 0;
      virtual HRESULT __stdcall AddCanvas (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
};

struct __declspec(uuid("91493476-5a91-11cf-8700-00aa0060263b"))
Placeholders : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptShape * * Item ) = 0;
};

struct __declspec(uuid("91493478-5a91-11cf-8700-00aa0060263b"))
pptFreeformBuilder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall AddNodes (
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
      virtual HRESULT __stdcall ConvertToShape (
        /*[out,retval]*/ struct pptShape * * Freeform ) = 0;
};

struct __declspec(uuid("91493479-5a91-11cf-8700-00aa0060263b"))
pptShape : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall PickUp ( ) = 0;
      virtual HRESULT __stdcall RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom fScale ) = 0;
      virtual HRESULT __stdcall ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom fScale ) = 0;
      virtual HRESULT __stdcall SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ struct pptShapeRange * * Ungroup ) = 0;
      virtual HRESULT __stdcall ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall get_pptAdjustments (
        /*[out,retval]*/ struct pptAdjustments * * pptAdjustments ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * AutoShapeType ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType AutoShapeType ) = 0;
      virtual HRESULT __stdcall get_BlackWhiteMode (
        /*[out,retval]*/ enum Office::MsoBlackWhiteMode * BlackWhiteMode ) = 0;
      virtual HRESULT __stdcall put_BlackWhiteMode (
        /*[in]*/ enum Office::MsoBlackWhiteMode BlackWhiteMode ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct pptCalloutFormat * * Callout ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ int * ConnectionSiteCount ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * Connector ) = 0;
      virtual HRESULT __stdcall get_pptConnectorFormat (
        /*[out,retval]*/ struct pptConnectorFormat * * pptConnectorFormat ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct pptFillFormat * * Fill ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct pptGroupShapes * * GroupItems ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * HorizontalFlip ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float Left ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct pptLineFormat * * Line ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * LockAspectRatio ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState LockAspectRatio ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct pptShapeNodes * * Nodes ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * Rotation ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float Rotation ) = 0;
      virtual HRESULT __stdcall get_pptPictureFormat (
        /*[out,retval]*/ struct pptPictureFormat * * Picture ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct pptShadowFormat * * Shadow ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct pptTextEffectFormat * * TextEffect ) = 0;
      virtual HRESULT __stdcall get_pptTextFrame (
        /*[out,retval]*/ struct pptTextFrame * * pptTextFrame ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct pptThreeDFormat * * ThreeD ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float Top ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * Type ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * VerticalFlip ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * Vertices ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ int * ZOrderPosition ) = 0;
      virtual HRESULT __stdcall get_pptOLEFormat (
        /*[out,retval]*/ struct pptOLEFormat * * pptOLEFormat ) = 0;
      virtual HRESULT __stdcall get_pptLinkFormat (
        /*[out,retval]*/ struct pptLinkFormat * * pptLinkFormat ) = 0;
      virtual HRESULT __stdcall get_PlaceholderFormat (
        /*[out,retval]*/ struct PlaceholderFormat * * PlaceholderFormat ) = 0;
      virtual HRESULT __stdcall get_AnimationSettings (
        /*[out,retval]*/ struct AnimationSettings * * AnimationSettings ) = 0;
      virtual HRESULT __stdcall get_ActionSettings (
        /*[out,retval]*/ struct ActionSettings * * ActionSettings ) = 0;
      virtual HRESULT __stdcall get_Tags (
        /*[out,retval]*/ struct Tags * * Tags ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ enum Office::MsoTriState Replace ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct pptShapeRange * * Duplicate ) = 0;
      virtual HRESULT __stdcall get_MediaType (
        /*[out,retval]*/ enum PpMediaType * MediaType ) = 0;
      virtual HRESULT __stdcall get_HasTextFrame (
        /*[out,retval]*/ enum Office::MsoTriState * HasTextFrame ) = 0;
      virtual HRESULT __stdcall get_SoundFormat (
        /*[out,retval]*/ struct SoundFormat * * SoundFormat ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * Script ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * AlternativeText ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR AlternativeText ) = 0;
      virtual HRESULT __stdcall get_HasTable (
        /*[out,retval]*/ enum Office::MsoTriState * HasTable ) = 0;
      virtual HRESULT __stdcall get_pptTable (
        /*[out,retval]*/ struct pptTable * * pptTable ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR PathName,
        /*[in]*/ enum PpShapeFormat Filter,
        /*[in]*/ int ScaleWidth,
        /*[in]*/ int ScaleHeight,
        /*[in]*/ enum PpExportMode ExportMode ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * pHasDiagram ) = 0;
      virtual HRESULT __stdcall get_pptDiagram (
        /*[out,retval]*/ struct pptDiagram * * pptDiagram ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * pHasDiagram ) = 0;
      virtual HRESULT __stdcall get_pptDiagramNode (
        /*[out,retval]*/ struct pptDiagramNode * * pptDiagramNode ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * Child ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct pptShape * * Parent ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct pptCanvasShapes * * pptCanvasShapes ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ int * pid ) = 0;
      virtual HRESULT __stdcall CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall put_RTF (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("91493481-5a91-11cf-8700-00aa0060263b"))
pptConnectorFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall BeginConnect (
        /*[in]*/ struct pptShape * ConnectedShape,
        /*[in]*/ int ConnectionSite ) = 0;
      virtual HRESULT __stdcall BeginDisconnect ( ) = 0;
      virtual HRESULT __stdcall EndConnect (
        /*[in]*/ struct pptShape * ConnectedShape,
        /*[in]*/ int ConnectionSite ) = 0;
      virtual HRESULT __stdcall EndDisconnect ( ) = 0;
      virtual HRESULT __stdcall get_BeginConnected (
        /*[out,retval]*/ enum Office::MsoTriState * BeginConnected ) = 0;
      virtual HRESULT __stdcall get_BeginConnectedShape (
        /*[out,retval]*/ struct pptShape * * BeginConnectedShape ) = 0;
      virtual HRESULT __stdcall get_BeginConnectionSite (
        /*[out,retval]*/ int * BeginConnectionSite ) = 0;
      virtual HRESULT __stdcall get_EndConnected (
        /*[out,retval]*/ enum Office::MsoTriState * EndConnected ) = 0;
      virtual HRESULT __stdcall get_EndConnectedShape (
        /*[out,retval]*/ struct pptShape * * EndConnectedShape ) = 0;
      virtual HRESULT __stdcall get_EndConnectionSite (
        /*[out,retval]*/ int * EndConnectionSite ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoConnectorType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoConnectorType Type ) = 0;
};

struct __declspec(uuid("9149349d-5a91-11cf-8700-00aa0060263b"))
_Presentation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_SlideMaster (
        /*[out,retval]*/ struct _Master * * SlideMaster ) = 0;
      virtual HRESULT __stdcall get_TitleMaster (
        /*[out,retval]*/ struct _Master * * TitleMaster ) = 0;
      virtual HRESULT __stdcall get_HasTitleMaster (
        /*[out,retval]*/ enum Office::MsoTriState * HasTitleMaster ) = 0;
      virtual HRESULT __stdcall AddTitleMaster (
        /*[out,retval]*/ struct _Master * * TitleMaster ) = 0;
      virtual HRESULT __stdcall ApplyTemplate (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_TemplateName (
        /*[out,retval]*/ BSTR * TemplateName ) = 0;
      virtual HRESULT __stdcall get_NotesMaster (
        /*[out,retval]*/ struct _Master * * NotesMaster ) = 0;
      virtual HRESULT __stdcall get_HandoutMaster (
        /*[out,retval]*/ struct _Master * * HandoutMaster ) = 0;
      virtual HRESULT __stdcall get_Slides (
        /*[out,retval]*/ struct Slides * * Slides ) = 0;
      virtual HRESULT __stdcall get_pptPageSetup (
        /*[out,retval]*/ struct pptPageSetup * * pptPageSetup ) = 0;
      virtual HRESULT __stdcall get_ColorSchemes (
        /*[out,retval]*/ struct ColorSchemes * * ColorSchemes ) = 0;
      virtual HRESULT __stdcall get_ExtraColors (
        /*[out,retval]*/ struct ExtraColors * * ExtraColors ) = 0;
      virtual HRESULT __stdcall get_SlideShowSettings (
        /*[out,retval]*/ struct SlideShowSettings * * SlideShowSettings ) = 0;
      virtual HRESULT __stdcall get_Fonts (
        /*[out,retval]*/ struct Fonts * * Fonts ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct DocumentWindows * * Windows ) = 0;
      virtual HRESULT __stdcall get_Tags (
        /*[out,retval]*/ struct Tags * * Tags ) = 0;
      virtual HRESULT __stdcall get_DefaultShape (
        /*[out,retval]*/ struct pptShape * * DefaultShape ) = 0;
      virtual HRESULT __stdcall get_BuiltInDocumentProperties (
        /*[out,retval]*/ IDispatch * * BuiltInDocumentProperties ) = 0;
      virtual HRESULT __stdcall get_CustomDocumentProperties (
        /*[out,retval]*/ IDispatch * * CustomDocumentProperties ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ struct VBE6::_VBProject * * VBProject ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ enum Office::MsoTriState * ReadOnly ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ enum Office::MsoTriState * Saved ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in]*/ enum Office::MsoTriState Saved ) = 0;
      virtual HRESULT __stdcall get_LayoutDirection (
        /*[out,retval]*/ enum PpDirection * LayoutDirection ) = 0;
      virtual HRESULT __stdcall put_LayoutDirection (
        /*[in]*/ enum PpDirection LayoutDirection ) = 0;
      virtual HRESULT __stdcall NewWindow (
        /*[out,retval]*/ struct DocumentWindow * * NewWindow ) = 0;
      virtual HRESULT __stdcall FollowHyperlink (
        /*[in]*/ BSTR Address,
        /*[in]*/ BSTR SubAddress,
        /*[in]*/ VARIANT_BOOL NewWindow,
        /*[in]*/ VARIANT_BOOL AddHistory,
        /*[in]*/ BSTR ExtraInfo,
        /*[in]*/ enum Office::MsoExtraInfoMethod Method,
        /*[in]*/ BSTR HeaderInfo ) = 0;
      virtual HRESULT __stdcall AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall Unused ( ) = 0;
      virtual HRESULT __stdcall get_PrintOptions (
        /*[out,retval]*/ struct PrintOptions * * PrintOptions ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ int From,
        /*[in]*/ int To,
        /*[in]*/ BSTR PrintToFile,
        /*[in]*/ int Copies,
        /*[in]*/ enum Office::MsoTriState Collate ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum PpSaveAsFileType FileFormat,
        /*[in]*/ enum Office::MsoTriState EmbedTrueTypeFonts ) = 0;
      virtual HRESULT __stdcall SaveCopyAs (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum PpSaveAsFileType FileFormat,
        /*[in]*/ enum Office::MsoTriState EmbedTrueTypeFonts ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR Path,
        /*[in]*/ BSTR FilterName,
        /*[in]*/ int ScaleWidth,
        /*[in]*/ int ScaleHeight ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall SetUndoText (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Container (
        /*[out,retval]*/ IDispatch * * Container ) = 0;
      virtual HRESULT __stdcall get_DisplayComments (
        /*[out,retval]*/ enum Office::MsoTriState * DisplayComments ) = 0;
      virtual HRESULT __stdcall put_DisplayComments (
        /*[in]*/ enum Office::MsoTriState DisplayComments ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLevel (
        /*[out,retval]*/ enum PpFarEastLineBreakLevel * FarEastLineBreakLevel ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLevel (
        /*[in]*/ enum PpFarEastLineBreakLevel FarEastLineBreakLevel ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakBefore (
        /*[out,retval]*/ BSTR * NoLineBreakBefore ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakBefore (
        /*[in]*/ BSTR NoLineBreakBefore ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakAfter (
        /*[out,retval]*/ BSTR * NoLineBreakAfter ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakAfter (
        /*[in]*/ BSTR NoLineBreakAfter ) = 0;
      virtual HRESULT __stdcall UpdateLinks ( ) = 0;
      virtual HRESULT __stdcall get_SlideShowWindow (
        /*[out,retval]*/ struct SlideShowWindow * * SlideShowWindow ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLanguage (
        /*[out,retval]*/ enum Office::MsoFarEastLineBreakLanguageID * FarEastLineBreakLanguage ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLanguage (
        /*[in]*/ enum Office::MsoFarEastLineBreakLanguageID FarEastLineBreakLanguage ) = 0;
      virtual HRESULT __stdcall WebPagePreview ( ) = 0;
      virtual HRESULT __stdcall get_DefaultLanguageID (
        /*[out,retval]*/ enum Office::MsoLanguageID * DefaultLanguageID ) = 0;
      virtual HRESULT __stdcall put_DefaultLanguageID (
        /*[in]*/ enum Office::MsoLanguageID DefaultLanguageID ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * CommandBars ) = 0;
      virtual HRESULT __stdcall get_PublishObjects (
        /*[out,retval]*/ struct PublishObjects * * PublishObjects ) = 0;
      virtual HRESULT __stdcall get_pptWebOptions (
        /*[out,retval]*/ struct pptWebOptions * * pptWebOptions ) = 0;
      virtual HRESULT __stdcall get_HTMLProject (
        /*[out,retval]*/ struct Office::HTMLProject * * HTMLProject ) = 0;
      virtual HRESULT __stdcall ReloadAs (
        /*[in]*/ enum Office::MsoEncoding cp ) = 0;
      virtual HRESULT __stdcall MakeIntoTemplate (
        /*[in]*/ enum Office::MsoTriState IsDesignTemplate ) = 0;
      virtual HRESULT __stdcall get_EnvelopeVisible (
        /*[out,retval]*/ enum Office::MsoTriState * EnvelopeVisible ) = 0;
      virtual HRESULT __stdcall put_EnvelopeVisible (
        /*[in]*/ enum Office::MsoTriState EnvelopeVisible ) = 0;
      virtual HRESULT __stdcall sblt (
        /*[in]*/ BSTR s ) = 0;
      virtual HRESULT __stdcall get_VBASigned (
        /*[out,retval]*/ enum Office::MsoTriState * VBASigned ) = 0;
      virtual HRESULT __stdcall get_SnapToGrid (
        /*[out,retval]*/ enum Office::MsoTriState * SnapToGrid ) = 0;
      virtual HRESULT __stdcall put_SnapToGrid (
        /*[in]*/ enum Office::MsoTriState SnapToGrid ) = 0;
      virtual HRESULT __stdcall get_GridDistance (
        /*[out,retval]*/ float * GridDistance ) = 0;
      virtual HRESULT __stdcall put_GridDistance (
        /*[in]*/ float GridDistance ) = 0;
      virtual HRESULT __stdcall get_Designs (
        /*[out,retval]*/ struct Designs * * Designs ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall CheckIn (
        /*[in]*/ VARIANT_BOOL SaveChanges,
        /*[in]*/ VARIANT pptComments = vtMissing,
        /*[in]*/ VARIANT MakePublic = vtMissing ) = 0;
      virtual HRESULT __stdcall CanCheckIn (
        /*[out,retval]*/ VARIANT_BOOL * CanCheckIn ) = 0;
      virtual HRESULT __stdcall get_Signatures (
        /*[out,retval]*/ struct Office::SignatureSet * * Signatures ) = 0;
      virtual HRESULT __stdcall get_RemovePersonalInformation (
        /*[out,retval]*/ enum Office::MsoTriState * RemovePersonalInformation ) = 0;
      virtual HRESULT __stdcall put_RemovePersonalInformation (
        /*[in]*/ enum Office::MsoTriState RemovePersonalInformation ) = 0;
      virtual HRESULT __stdcall SendForReview (
        /*[in]*/ BSTR Recipients,
        /*[in]*/ BSTR Subject,
        /*[in]*/ VARIANT_BOOL ShowMessage,
        /*[in]*/ VARIANT IncludeAttachment = vtMissing ) = 0;
      virtual HRESULT __stdcall ReplyWithChanges (
        /*[in]*/ VARIANT_BOOL ShowMessage ) = 0;
      virtual HRESULT __stdcall EndReview ( ) = 0;
      virtual HRESULT __stdcall get_HasRevisionInfo (
        /*[out,retval]*/ enum PpRevisionInfo * HasRevisionInfo ) = 0;
      virtual HRESULT __stdcall AddBaseline (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall RemoveBaseline ( ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionProvider (
        /*[out,retval]*/ BSTR * PasswordEncryptionProvider ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionAlgorithm (
        /*[out,retval]*/ BSTR * PasswordEncryptionAlgorithm ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionKeyLength (
        /*[out,retval]*/ int * PasswordEncryptionKeyLength ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionFileProperties (
        /*[out,retval]*/ VARIANT_BOOL * PasswordEncryptionFileProperties ) = 0;
      virtual HRESULT __stdcall SetPasswordEncryptionOptions (
        /*[in]*/ BSTR PasswordEncryptionProvider,
        /*[in]*/ BSTR PasswordEncryptionAlgorithm,
        /*[in]*/ int PasswordEncryptionKeyLength,
        /*[in]*/ VARIANT_BOOL PasswordEncryptionFileProperties ) = 0;
      virtual HRESULT __stdcall get_Password (
        /*[out,retval]*/ BSTR * Password ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall get_WritePassword (
        /*[out,retval]*/ BSTR * WritePassword ) = 0;
      virtual HRESULT __stdcall put_WritePassword (
        /*[in]*/ BSTR WritePassword ) = 0;
      virtual HRESULT __stdcall get_Permission (
        /*[out,retval]*/ struct Office::Permission * * Permission ) = 0;
      virtual HRESULT __stdcall get_SharedWorkspace (
        /*[out,retval]*/ struct Office::SharedWorkspace * * SharedWorkspace ) = 0;
      virtual HRESULT __stdcall get_Sync (
        /*[out,retval]*/ struct Office::Sync * * Sync ) = 0;
      virtual HRESULT __stdcall SendFaxOverInternet (
        /*[in]*/ BSTR Recipients,
        /*[in]*/ BSTR Subject,
        /*[in]*/ VARIANT_BOOL ShowMessage ) = 0;
      virtual HRESULT __stdcall get_DocumentLibraryVersions (
        /*[out,retval]*/ struct Office::DocumentLibraryVersions * * DocumentLibraryVersions ) = 0;
};

struct __declspec(uuid("914934c9-5a91-11cf-8700-00aa0060263b"))
pptCell : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptShape (
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
      virtual HRESULT __stdcall get_pptBorders (
        /*[out,retval]*/ struct pptBorders * * pptBorders ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ struct pptCell * MergeTo ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ int NumRows,
        /*[in]*/ int NumColumns ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall get_Selected (
        /*[out,retval]*/ VARIANT_BOOL * Selected ) = 0;
};

struct __declspec(uuid("914934c8-5a91-11cf-8700-00aa0060263b"))
CellRange : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptCell * * Item ) = 0;
      virtual HRESULT __stdcall get_pptBorders (
        /*[out,retval]*/ struct pptBorders * * pptBorders ) = 0;
};

struct __declspec(uuid("914934c5-5a91-11cf-8700-00aa0060263b"))
pptColumn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct CellRange * * Cells ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
};

struct __declspec(uuid("914934c4-5a91-11cf-8700-00aa0060263b"))
pptColumns : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptColumn * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ int BeforeColumn,
        /*[out,retval]*/ struct pptColumn * * Add ) = 0;
};

struct __declspec(uuid("914934c7-5a91-11cf-8700-00aa0060263b"))
pptRow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct CellRange * * Cells ) = 0;
      virtual HRESULT __stdcall Select ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
};

struct __declspec(uuid("914934c6-5a91-11cf-8700-00aa0060263b"))
pptRows : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct pptRow * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ int BeforeRow,
        /*[out,retval]*/ struct pptRow * * Add ) = 0;
};

struct __declspec(uuid("914934c3-5a91-11cf-8700-00aa0060263b"))
pptTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptColumns (
        /*[out,retval]*/ struct pptColumns * * pptColumns ) = 0;
      virtual HRESULT __stdcall get_pptRows (
        /*[out,retval]*/ struct pptRows * * pptRows ) = 0;
      virtual HRESULT __stdcall pptCell (
        /*[in]*/ int pptRow,
        /*[in]*/ int pptColumn,
        /*[out,retval]*/ struct pptCell * * pptCell ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum PpDirection * TableDirection ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum PpDirection TableDirection ) = 0;
      virtual HRESULT __stdcall MergeBorders ( ) = 0;
};

struct __declspec(uuid("914934e0-5a91-11cf-8700-00aa0060263b"))
Timing : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Duration (
        /*[out,retval]*/ float * Duration ) = 0;
      virtual HRESULT __stdcall put_Duration (
        /*[in]*/ float Duration ) = 0;
      virtual HRESULT __stdcall get_TriggerType (
        /*[out,retval]*/ enum MsoAnimTriggerType * TriggerType ) = 0;
      virtual HRESULT __stdcall put_TriggerType (
        /*[in]*/ enum MsoAnimTriggerType TriggerType ) = 0;
      virtual HRESULT __stdcall get_TriggerDelayTime (
        /*[out,retval]*/ float * TriggerDelayTime ) = 0;
      virtual HRESULT __stdcall put_TriggerDelayTime (
        /*[in]*/ float TriggerDelayTime ) = 0;
      virtual HRESULT __stdcall get_TriggerShape (
        /*[out,retval]*/ struct pptShape * * TriggerShape ) = 0;
      virtual HRESULT __stdcall put_TriggerShape (
        /*[in]*/ struct pptShape * TriggerShape ) = 0;
      virtual HRESULT __stdcall get_RepeatCount (
        /*[out,retval]*/ int * RepeatCount ) = 0;
      virtual HRESULT __stdcall put_RepeatCount (
        /*[in]*/ int RepeatCount ) = 0;
      virtual HRESULT __stdcall get_RepeatDuration (
        /*[out,retval]*/ float * RepeatDuration ) = 0;
      virtual HRESULT __stdcall put_RepeatDuration (
        /*[in]*/ float RepeatDuration ) = 0;
      virtual HRESULT __stdcall get_Speed (
        /*[out,retval]*/ float * Speed ) = 0;
      virtual HRESULT __stdcall put_Speed (
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall get_Accelerate (
        /*[out,retval]*/ float * Accelerate ) = 0;
      virtual HRESULT __stdcall put_Accelerate (
        /*[in]*/ float Accelerate ) = 0;
      virtual HRESULT __stdcall get_Decelerate (
        /*[out,retval]*/ float * Decelerate ) = 0;
      virtual HRESULT __stdcall put_Decelerate (
        /*[in]*/ float Decelerate ) = 0;
      virtual HRESULT __stdcall get_AutoReverse (
        /*[out,retval]*/ enum Office::MsoTriState * AutoReverse ) = 0;
      virtual HRESULT __stdcall put_AutoReverse (
        /*[in]*/ enum Office::MsoTriState AutoReverse ) = 0;
      virtual HRESULT __stdcall get_SmoothStart (
        /*[out,retval]*/ enum Office::MsoTriState * SmoothStart ) = 0;
      virtual HRESULT __stdcall put_SmoothStart (
        /*[in]*/ enum Office::MsoTriState SmoothStart ) = 0;
      virtual HRESULT __stdcall get_SmoothEnd (
        /*[out,retval]*/ enum Office::MsoTriState * SmoothEnd ) = 0;
      virtual HRESULT __stdcall put_SmoothEnd (
        /*[in]*/ enum Office::MsoTriState SmoothEnd ) = 0;
      virtual HRESULT __stdcall get_RewindAtEnd (
        /*[out,retval]*/ enum Office::MsoTriState * RewindAtEnd ) = 0;
      virtual HRESULT __stdcall put_RewindAtEnd (
        /*[in]*/ enum Office::MsoTriState RewindAtEnd ) = 0;
      virtual HRESULT __stdcall get_Restart (
        /*[out,retval]*/ enum MsoAnimEffectRestart * Restart ) = 0;
      virtual HRESULT __stdcall put_Restart (
        /*[in]*/ enum MsoAnimEffectRestart Restart ) = 0;
};

struct __declspec(uuid("914934e4-5a91-11cf-8700-00aa0060263b"))
AnimationBehavior : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Additive (
        /*[out,retval]*/ enum MsoAnimAdditive * Additive ) = 0;
      virtual HRESULT __stdcall put_Additive (
        /*[in]*/ enum MsoAnimAdditive Additive ) = 0;
      virtual HRESULT __stdcall get_Accumulate (
        /*[out,retval]*/ enum MsoAnimAccumulate * Accumulate ) = 0;
      virtual HRESULT __stdcall put_Accumulate (
        /*[in]*/ enum MsoAnimAccumulate Accumulate ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum MsoAnimType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum MsoAnimType Type ) = 0;
      virtual HRESULT __stdcall get_MotionEffect (
        /*[out,retval]*/ struct MotionEffect * * MotionEffect ) = 0;
      virtual HRESULT __stdcall get_ColorEffect (
        /*[out,retval]*/ struct ColorEffect * * ColorEffect ) = 0;
      virtual HRESULT __stdcall get_ScaleEffect (
        /*[out,retval]*/ struct ScaleEffect * * ScaleEffect ) = 0;
      virtual HRESULT __stdcall get_RotationEffect (
        /*[out,retval]*/ struct RotationEffect * * RotationEffect ) = 0;
      virtual HRESULT __stdcall get_PropertyEffect (
        /*[out,retval]*/ struct PropertyEffect * * PropertyEffect ) = 0;
      virtual HRESULT __stdcall get_Timing (
        /*[out,retval]*/ struct Timing * * Timing ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_CommandEffect (
        /*[out,retval]*/ struct CommandEffect * * CommandEffect ) = 0;
      virtual HRESULT __stdcall get_FilterEffect (
        /*[out,retval]*/ struct FilterEffect * * FilterEffect ) = 0;
      virtual HRESULT __stdcall get_SetEffect (
        /*[out,retval]*/ struct SetEffect * * SetEffect ) = 0;
};

struct __declspec(uuid("914934e3-5a91-11cf-8700-00aa0060263b"))
AnimationBehaviors : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct AnimationBehavior * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ enum MsoAnimType Type,
        /*[in]*/ int Index,
        /*[out,retval]*/ struct AnimationBehavior * * Add ) = 0;
};

struct __declspec(uuid("914934df-5a91-11cf-8700-00aa0060263b"))
Effect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_pptShape (
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
      virtual HRESULT __stdcall put_pptShape (
        /*[in]*/ struct pptShape * pptShape ) = 0;
      virtual HRESULT __stdcall MoveTo (
        /*[in]*/ int toPos ) = 0;
      virtual HRESULT __stdcall MoveBefore (
        /*[in]*/ struct Effect * Effect ) = 0;
      virtual HRESULT __stdcall MoveAfter (
        /*[in]*/ struct Effect * Effect ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall get_Timing (
        /*[out,retval]*/ struct Timing * * Timing ) = 0;
      virtual HRESULT __stdcall get_EffectType (
        /*[out,retval]*/ enum MsoAnimEffect * EffectType ) = 0;
      virtual HRESULT __stdcall put_EffectType (
        /*[in]*/ enum MsoAnimEffect EffectType ) = 0;
      virtual HRESULT __stdcall get_EffectParameters (
        /*[out,retval]*/ struct EffectParameters * * EffectParameters ) = 0;
      virtual HRESULT __stdcall get_TextRangeStart (
        /*[out,retval]*/ int * TextRangeStart ) = 0;
      virtual HRESULT __stdcall get_TextRangeLength (
        /*[out,retval]*/ int * TextRangeLength ) = 0;
      virtual HRESULT __stdcall get_Paragraph (
        /*[out,retval]*/ int * Paragraph ) = 0;
      virtual HRESULT __stdcall put_Paragraph (
        /*[in]*/ int Paragraph ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall get_Exit (
        /*[out,retval]*/ enum Office::MsoTriState * Exit ) = 0;
      virtual HRESULT __stdcall put_Exit (
        /*[in]*/ enum Office::MsoTriState Exit ) = 0;
      virtual HRESULT __stdcall get_Behaviors (
        /*[out,retval]*/ struct AnimationBehaviors * * Behaviors ) = 0;
      virtual HRESULT __stdcall get_EffectInformation (
        /*[out,retval]*/ struct EffectInformation * * EffectInformation ) = 0;
};

struct __declspec(uuid("914934c2-5a91-11cf-8700-00aa0060263b"))
EApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WindowSelectionChange (
        /*[in]*/ struct pptSelection * Sel ) = 0;
      virtual HRESULT __stdcall WindowBeforeRightClick (
        /*[in]*/ struct pptSelection * Sel,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall WindowBeforeDoubleClick (
        /*[in]*/ struct pptSelection * Sel,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall PresentationClose (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall PresentationSave (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall PresentationOpen (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall NewPresentation (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall PresentationNewSlide (
        /*[in]*/ struct _Slide * Sld ) = 0;
      virtual HRESULT __stdcall WindowActivate (
        /*[in]*/ struct _Presentation * Pres,
        /*[in]*/ struct DocumentWindow * Wn ) = 0;
      virtual HRESULT __stdcall WindowDeactivate (
        /*[in]*/ struct _Presentation * Pres,
        /*[in]*/ struct DocumentWindow * Wn ) = 0;
      virtual HRESULT __stdcall SlideShowBegin (
        /*[in]*/ struct SlideShowWindow * Wn ) = 0;
      virtual HRESULT __stdcall SlideShowNextBuild (
        /*[in]*/ struct SlideShowWindow * Wn ) = 0;
      virtual HRESULT __stdcall SlideShowNextSlide (
        /*[in]*/ struct SlideShowWindow * Wn ) = 0;
      virtual HRESULT __stdcall SlideShowEnd (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall PresentationPrint (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall SlideSelectionChanged (
        /*[in]*/ struct SlideRange * SldRange ) = 0;
      virtual HRESULT __stdcall ColorSchemeChanged (
        /*[in]*/ struct SlideRange * SldRange ) = 0;
      virtual HRESULT __stdcall PresentationBeforeSave (
        /*[in]*/ struct _Presentation * Pres,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall SlideShowNextClick (
        /*[in]*/ struct SlideShowWindow * Wn,
        /*[in]*/ struct Effect * nEffect ) = 0;
      virtual HRESULT __stdcall AfterNewPresentation (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall AfterPresentationOpen (
        /*[in]*/ struct _Presentation * Pres ) = 0;
      virtual HRESULT __stdcall PresentationSync (
        /*[in]*/ struct _Presentation * Pres,
        /*[in]*/ enum Office::MsoSyncEventType SyncEventType ) = 0;
};

struct __declspec(uuid("914934de-5a91-11cf-8700-00aa0060263b"))
Sequence : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Effect * * Item ) = 0;
      virtual HRESULT __stdcall AddEffect (
        /*[in]*/ struct pptShape * pptShape,
        /*[in]*/ enum MsoAnimEffect effectId,
        /*[in]*/ enum MsoAnimateByLevel Level,
        /*[in]*/ enum MsoAnimTriggerType trigger,
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Effect * * Effect ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[in]*/ struct Effect * Effect,
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Effect * * Clone ) = 0;
      virtual HRESULT __stdcall FindFirstAnimationFor (
        /*[in]*/ struct pptShape * pptShape,
        /*[out,retval]*/ struct Effect * * FindFirstAnimationFor ) = 0;
      virtual HRESULT __stdcall FindFirstAnimationForClick (
        /*[in]*/ int click,
        /*[out,retval]*/ struct Effect * * FindFirstAnimationForClick ) = 0;
      virtual HRESULT __stdcall ConvertToBuildLevel (
        /*[in]*/ struct Effect * Effect,
        /*[in]*/ enum MsoAnimateByLevel Level,
        /*[out,retval]*/ struct Effect * * ConvertToBuildLevel ) = 0;
      virtual HRESULT __stdcall ConvertToAfterEffect (
        /*[in]*/ struct Effect * Effect,
        /*[in]*/ enum MsoAnimAfterEffect After,
        /*[in]*/ Office::MsoRGBType DimColor,
        /*[in]*/ enum PpColorSchemeIndex DimSchemeColor,
        /*[out,retval]*/ struct Effect * * ConvertToAfterEffect ) = 0;
      virtual HRESULT __stdcall ConvertToAnimateBackground (
        /*[in]*/ struct Effect * Effect,
        /*[in]*/ enum Office::MsoTriState AnimateBackground,
        /*[out,retval]*/ struct Effect * * ConvertToAnimateBackground ) = 0;
      virtual HRESULT __stdcall ConvertToAnimateInReverse (
        /*[in]*/ struct Effect * Effect,
        /*[in]*/ enum Office::MsoTriState animateInReverse,
        /*[out,retval]*/ struct Effect * * ConvertToAnimateInReverse ) = 0;
      virtual HRESULT __stdcall ConvertToTextUnitEffect (
        /*[in]*/ struct Effect * Effect,
        /*[in]*/ enum MsoAnimTextUnitEffect unitEffect,
        /*[out,retval]*/ struct Effect * * ConvertToTextUnitEffect ) = 0;
};

struct __declspec(uuid("914934dd-5a91-11cf-8700-00aa0060263b"))
Sequences : Collection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Sequence * * Item ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct Sequence * * Add ) = 0;
};

struct __declspec(uuid("914934dc-5a91-11cf-8700-00aa0060263b"))
TimeLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ struct _pptApplication * * pptApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_MainSequence (
        /*[out,retval]*/ struct Sequence * * MainSequence ) = 0;
      virtual HRESULT __stdcall get_InteractiveSequences (
        /*[out,retval]*/ struct Sequences * * InteractiveSequences ) = 0;
};

struct __declspec(uuid("9149347a-5a91-11cf-8700-00aa0060263b"))
pptShapeRange : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall Apply ( ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall PickUp ( ) = 0;
      virtual HRESULT __stdcall RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom fScale ) = 0;
      virtual HRESULT __stdcall ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom fScale ) = 0;
      virtual HRESULT __stdcall SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall Ungroup (
        /*[out,retval]*/ struct pptShapeRange * * Ungroup ) = 0;
      virtual HRESULT __stdcall ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall get_pptAdjustments (
        /*[out,retval]*/ struct pptAdjustments * * pptAdjustments ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * AutoShapeType ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType AutoShapeType ) = 0;
      virtual HRESULT __stdcall get_BlackWhiteMode (
        /*[out,retval]*/ enum Office::MsoBlackWhiteMode * BlackWhiteMode ) = 0;
      virtual HRESULT __stdcall put_BlackWhiteMode (
        /*[in]*/ enum Office::MsoBlackWhiteMode BlackWhiteMode ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct pptCalloutFormat * * Callout ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ int * ConnectionSiteCount ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * Connector ) = 0;
      virtual HRESULT __stdcall get_pptConnectorFormat (
        /*[out,retval]*/ struct pptConnectorFormat * * pptConnectorFormat ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct pptFillFormat * * Fill ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct pptGroupShapes * * GroupItems ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float Height ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * HorizontalFlip ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float Left ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct pptLineFormat * * Line ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * LockAspectRatio ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState LockAspectRatio ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct pptShapeNodes * * Nodes ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * Rotation ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float Rotation ) = 0;
      virtual HRESULT __stdcall get_pptPictureFormat (
        /*[out,retval]*/ struct pptPictureFormat * * Picture ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct pptShadowFormat * * Shadow ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct pptTextEffectFormat * * TextEffect ) = 0;
      virtual HRESULT __stdcall get_pptTextFrame (
        /*[out,retval]*/ struct pptTextFrame * * pptTextFrame ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct pptThreeDFormat * * ThreeD ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float Top ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * Type ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * VerticalFlip ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * Vertices ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState Visible ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float Width ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ int * ZOrderPosition ) = 0;
      virtual HRESULT __stdcall get_pptOLEFormat (
        /*[out,retval]*/ struct pptOLEFormat * * pptOLEFormat ) = 0;
      virtual HRESULT __stdcall get_pptLinkFormat (
        /*[out,retval]*/ struct pptLinkFormat * * pptLinkFormat ) = 0;
      virtual HRESULT __stdcall get_PlaceholderFormat (
        /*[out,retval]*/ struct PlaceholderFormat * * PlaceholderFormat ) = 0;
      virtual HRESULT __stdcall get_AnimationSettings (
        /*[out,retval]*/ struct AnimationSettings * * AnimationSettings ) = 0;
      virtual HRESULT __stdcall get_ActionSettings (
        /*[out,retval]*/ struct ActionSettings * * ActionSettings ) = 0;
      virtual HRESULT __stdcall get_Tags (
        /*[out,retval]*/ struct Tags * * Tags ) = 0;
      virtual HRESULT __stdcall Cut ( ) = 0;
      virtual HRESULT __stdcall Copy ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ enum Office::MsoTriState Replace ) = 0;
      virtual HRESULT __stdcall Duplicate (
        /*[out,retval]*/ struct pptShapeRange * * Duplicate ) = 0;
      virtual HRESULT __stdcall get_MediaType (
        /*[out,retval]*/ enum PpMediaType * MediaType ) = 0;
      virtual HRESULT __stdcall get_HasTextFrame (
        /*[out,retval]*/ enum Office::MsoTriState * HasTextFrame ) = 0;
      virtual HRESULT __stdcall get_SoundFormat (
        /*[out,retval]*/ struct SoundFormat * * SoundFormat ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShape * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall _Index (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * _Index ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall Group (
        /*[out,retval]*/ struct pptShape * * Group ) = 0;
      virtual HRESULT __stdcall Regroup (
        /*[out,retval]*/ struct pptShape * * Regroup ) = 0;
      virtual HRESULT __stdcall Align (
        /*[in]*/ enum Office::MsoAlignCmd AlignCmd,
        /*[in]*/ enum Office::MsoTriState RelativeTo ) = 0;
      virtual HRESULT __stdcall Distribute (
        /*[in]*/ enum Office::MsoDistributeCmd DistributeCmd,
        /*[in]*/ enum Office::MsoTriState RelativeTo ) = 0;
      virtual HRESULT __stdcall GetPolygonalRepresentation (
        /*[in]*/ unsigned long maxPointsInBuffer,
        /*[in]*/ float * pPoints,
        /*[out]*/ unsigned long * numPointsInPolygon,
        /*[out]*/ enum Office::MsoTriState * IsOpen ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * Script ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * AlternativeText ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR AlternativeText ) = 0;
      virtual HRESULT __stdcall get_HasTable (
        /*[out,retval]*/ enum Office::MsoTriState * HasTable ) = 0;
      virtual HRESULT __stdcall get_pptTable (
        /*[out,retval]*/ struct pptTable * * pptTable ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR PathName,
        /*[in]*/ enum PpShapeFormat Filter,
        /*[in]*/ int ScaleWidth,
        /*[in]*/ int ScaleHeight,
        /*[in]*/ enum PpExportMode ExportMode ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * pHasDiagram ) = 0;
      virtual HRESULT __stdcall get_pptDiagram (
        /*[out,retval]*/ struct pptDiagram * * pptDiagram ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * pHasDiagram ) = 0;
      virtual HRESULT __stdcall get_pptDiagramNode (
        /*[out,retval]*/ struct pptDiagramNode * * pptDiagramNode ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * Child ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct pptShape * * Parent ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct pptCanvasShapes * * pptCanvasShapes ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ int * pid ) = 0;
      virtual HRESULT __stdcall CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall put_RTF (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("9149347b-5a91-11cf-8700-00aa0060263b"))
pptGroupShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * pnShapes ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShape * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppienum ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShapeRange * * Range ) = 0;
};

struct __declspec(uuid("914934ec-5a91-11cf-8700-00aa0060263b"))
pptCanvasShapes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShape * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * _NewEnum ) = 0;
      virtual HRESULT __stdcall AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Callout ) = 0;
      virtual HRESULT __stdcall AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct pptShape * * Connector ) = 0;
      virtual HRESULT __stdcall AddCurve (
        /*[in]*/ VARIANT SafeArrayOfPoints,
        /*[out,retval]*/ struct pptShape * * Curve ) = 0;
      virtual HRESULT __stdcall AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Label ) = 0;
      virtual HRESULT __stdcall AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct pptShape * * Line ) = 0;
      virtual HRESULT __stdcall AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum Office::MsoTriState LinkToFile,
        /*[in]*/ enum Office::MsoTriState SaveWithDocument,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Picture ) = 0;
      virtual HRESULT __stdcall AddPolyline (
        /*[in]*/ VARIANT SafeArrayOfPoints,
        /*[out,retval]*/ struct pptShape * * Polyline ) = 0;
      virtual HRESULT __stdcall AddShape (
        /*[in]*/ enum Office::MsoAutoShapeType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
      virtual HRESULT __stdcall AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[out,retval]*/ struct pptShape * * TextEffect ) = 0;
      virtual HRESULT __stdcall AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct pptShape * * Textbox ) = 0;
      virtual HRESULT __stdcall BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct pptFreeformBuilder * * pptFreeformBuilder ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptShapeRange * * Range ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct pptShape * * Background ) = 0;
};

struct __declspec(uuid("914934d8-5a91-11cf-8700-00aa0060263b"))
pptDiagramNode : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall AddNode (
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos,
        /*[in]*/ enum Office::MsoDiagramNodeType NodeType,
        /*[out,retval]*/ struct pptDiagramNode * * NewNode ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall MoveNode (
        /*[in]*/ struct pptDiagramNode * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos ) = 0;
      virtual HRESULT __stdcall ReplaceNode (
        /*[in]*/ struct pptDiagramNode * TargetNode ) = 0;
      virtual HRESULT __stdcall SwapNode (
        /*[in]*/ struct pptDiagramNode * TargetNode,
        /*[in]*/ VARIANT_BOOL SwapChildren ) = 0;
      virtual HRESULT __stdcall CloneNode (
        /*[in]*/ VARIANT_BOOL CopyChildren,
        /*[in]*/ struct pptDiagramNode * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos,
        /*[out,retval]*/ struct pptDiagramNode * * Node ) = 0;
      virtual HRESULT __stdcall TransferChildren (
        /*[in]*/ struct pptDiagramNode * ReceivingNode ) = 0;
      virtual HRESULT __stdcall NextNode (
        /*[out,retval]*/ struct pptDiagramNode * * NextNode ) = 0;
      virtual HRESULT __stdcall PrevNode (
        /*[out,retval]*/ struct pptDiagramNode * * PrevNode ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ struct pptDiagramNodeChildren * * Children ) = 0;
      virtual HRESULT __stdcall get_pptShape (
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
      virtual HRESULT __stdcall get_Root (
        /*[out,retval]*/ struct pptDiagramNode * * Root ) = 0;
      virtual HRESULT __stdcall get_pptDiagram (
        /*[out,retval]*/ struct pptDiagram * * pptDiagram ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ enum Office::MsoOrgChartLayoutType * Type ) = 0;
      virtual HRESULT __stdcall put_Layout (
        /*[in]*/ enum Office::MsoOrgChartLayoutType Type ) = 0;
      virtual HRESULT __stdcall get_TextShape (
        /*[out,retval]*/ struct pptShape * * pptShape ) = 0;
};

struct __declspec(uuid("914934d9-5a91-11cf-8700-00aa0060263b"))
pptDiagramNodeChildren : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppunkEnum ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptDiagramNode * * Node ) = 0;
      virtual HRESULT __stdcall AddNode (
        /*[in]*/ VARIANT Index,
        /*[in]*/ enum Office::MsoDiagramNodeType NodeType,
        /*[out,retval]*/ struct pptDiagramNode * * NewNode ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * iDiagramNodes ) = 0;
      virtual HRESULT __stdcall get_FirstChild (
        /*[out,retval]*/ struct pptDiagramNode * * First ) = 0;
      virtual HRESULT __stdcall get_LastChild (
        /*[out,retval]*/ struct pptDiagramNode * * Last ) = 0;
};

struct __declspec(uuid("914934da-5a91-11cf-8700-00aa0060263b"))
pptDiagramNodes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppunkEnum ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct pptDiagramNode * * ppdn ) = 0;
      virtual HRESULT __stdcall SelectAll ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ int * iDiagramNodes ) = 0;
};

struct __declspec(uuid("914934db-5a91-11cf-8700-00aa0060263b"))
pptDiagram : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_pptApplication (
        /*[out,retval]*/ IDispatch * * ppidisp ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * plCreator ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct pptDiagramNodes * * Nodes ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoDiagramType * Type ) = 0;
      virtual HRESULT __stdcall get_AutoLayout (
        /*[out,retval]*/ enum Office::MsoTriState * AutoLayout ) = 0;
      virtual HRESULT __stdcall put_AutoLayout (
        /*[in]*/ enum Office::MsoTriState AutoLayout ) = 0;
      virtual HRESULT __stdcall get_Reverse (
        /*[out,retval]*/ enum Office::MsoTriState * Reverse ) = 0;
      virtual HRESULT __stdcall put_Reverse (
        /*[in]*/ enum Office::MsoTriState Reverse ) = 0;
      virtual HRESULT __stdcall get_AutoFormat (
        /*[out,retval]*/ enum Office::MsoTriState * AutoFormat ) = 0;
      virtual HRESULT __stdcall put_AutoFormat (
        /*[in]*/ enum Office::MsoTriState AutoFormat ) = 0;
      virtual HRESULT __stdcall Convert (
        /*[in]*/ enum Office::MsoDiagramType Type ) = 0;
      virtual HRESULT __stdcall FitText ( ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_PPT =
    {0x91493440,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Collection =
    {0x91493450,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_pptApplication =
    {0x91493441,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_pptGlobal =
    {0x91493443,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptColorFormat =
    {0x91493452,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_NamedSlideShow =
    {0x9149345c,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_NamedSlideShows =
    {0x9149345b,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PrintRange =
    {0x9149345f,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PrintRanges =
    {0x9149345e,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PrintOptions =
    {0x9149345d,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptAddIn =
    {0x91493461,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptAddIns =
    {0x91493460,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PresEvents =
    {0x91493463,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_Presentation =
    {0x91493444,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Presentations =
    {0x91493462,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptHyperlink =
    {0x91493465,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptHyperlinks =
    {0x91493464,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptPageSetup =
    {0x91493466,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ExtraColors =
    {0x91493468,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SldEvents =
    {0x9149346d,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_Slide =
    {0x91493445,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_RGBColor =
    {0x91493470,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ColorScheme =
    {0x9149346f,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ColorSchemes =
    {0x9149346e,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SoundEffect =
    {0x91493472,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SlideShowTransition =
    {0x91493471,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SoundFormat =
    {0x91493473,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PlaceholderFormat =
    {0x91493477,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptAdjustments =
    {0x9149347c,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptPictureFormat =
    {0x9149347d,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptFillFormat =
    {0x9149347e,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptLineFormat =
    {0x9149347f,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptShadowFormat =
    {0x91493480,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptTextEffectFormat =
    {0x91493482,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptThreeDFormat =
    {0x91493483,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptCalloutFormat =
    {0x91493485,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptShapeNode =
    {0x91493487,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptShapeNodes =
    {0x91493486,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptLinkFormat =
    {0x91493489,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ObjectVerbs =
    {0x9149348a,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptOLEFormat =
    {0x91493488,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ActionSetting =
    {0x9149348d,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ActionSettings =
    {0x9149348c,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PlaySettings =
    {0x9149348e,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_AnimationSettings =
    {0x9149348b,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_RulerLevel =
    {0x91493492,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_RulerLevels =
    {0x91493491,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptTabStop =
    {0x91493494,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptTabStops =
    {0x91493493,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Ruler =
    {0x91493490,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptFont =
    {0x91493495,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Fonts =
    {0x91493467,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptHeaderFooter =
    {0x9149349c,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptHeadersFooters =
    {0x91493474,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Tags =
    {0x914934b9,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_MouseTracker =
    {0x914934be,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SlideShowView =
    {0x91493459,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SlideShowWindow =
    {0x91493453,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SlideShowWindows =
    {0x91493456,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SlideShowSettings =
    {0x9149345a,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_MouseDownHandler =
    {0x914934bf,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_OCXExtender =
    {0x914934c0,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_OCXExtenderEvents =
    {0x914934c1,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_pptOLEControl =
    {0x91493446,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_BulletFormat =
    {0x91493497,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ParagraphFormat =
    {0x91493496,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_TextStyleLevel =
    {0x9149349b,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_TextStyleLevels =
    {0x9149349a,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptBorders =
    {0x914934ca,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Pane =
    {0x914934cc,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptPanes =
    {0x914934cb,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptDefaultWebOptions =
    {0x914934cd,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptWebOptions =
    {0x914934ce,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptPublishObject =
    {0x914934d0,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PublishObjects =
    {0x914934cf,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_MasterEvents =
    {0x914934d2,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_Master =
    {0x91493447,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptView =
    {0x91493458,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_TextRange =
    {0x9149348f,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptTextFrame =
    {0x91493484,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_TextStyle =
    {0x91493499,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_TextStyles =
    {0x91493498,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID__PowerRex =
    {0x914934d3,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_PowerRex =
    {0x91493448,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptComment =
    {0x914934d5,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptComments =
    {0x914934d4,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_EffectParameters =
    {0x914934e1,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_EffectInformation =
    {0x914934e2,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_MotionEffect =
    {0x914934e5,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ColorEffect =
    {0x914934e6,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ScaleEffect =
    {0x914934e7,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_RotationEffect =
    {0x914934e8,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_AnimationPoint =
    {0x914934eb,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_AnimationPoints =
    {0x914934ea,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_PropertyEffect =
    {0x914934e9,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptAutoCorrect =
    {0x914934ed,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptOptions =
    {0x914934ee,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_CommandEffect =
    {0x914934ef,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_FilterEffect =
    {0x914934f0,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SetEffect =
    {0x914934f1,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID__pptApplication =
    {0x91493442,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID__pptGlobal =
    {0x91493451,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptSelection =
    {0x91493454,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_DocumentWindow =
    {0x91493457,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_DocumentWindows =
    {0x91493455,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Slides =
    {0x91493469,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID__Slide =
    {0x9149346a,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_SlideRange =
    {0x9149346b,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID__Master =
    {0x9149346c,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Design =
    {0x914934d7,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Designs =
    {0x914934d6,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptShapes =
    {0x91493475,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Placeholders =
    {0x91493476,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptFreeformBuilder =
    {0x91493478,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptShape =
    {0x91493479,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptConnectorFormat =
    {0x91493481,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID__Presentation =
    {0x9149349d,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptCell =
    {0x914934c9,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_CellRange =
    {0x914934c8,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptColumn =
    {0x914934c5,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptColumns =
    {0x914934c4,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptRow =
    {0x914934c7,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptRows =
    {0x914934c6,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptTable =
    {0x914934c3,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Timing =
    {0x914934e0,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_AnimationBehavior =
    {0x914934e4,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_AnimationBehaviors =
    {0x914934e3,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Effect =
    {0x914934df,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_EApplication =
    {0x914934c2,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Sequence =
    {0x914934de,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_Sequences =
    {0x914934dd,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_TimeLine =
    {0x914934dc,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptShapeRange =
    {0x9149347a,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptGroupShapes =
    {0x9149347b,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptCanvasShapes =
    {0x914934ec,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptDiagramNode =
    {0x914934d8,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptDiagramNodeChildren =
    {0x914934d9,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptDiagramNodes =
    {0x914934da,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};
extern "C" const GUID __declspec(selectany) IID_pptDiagram =
    {0x914934db,0x5a91,0x11cf,{0x87,0x00,0x00,0xaa,0x00,0x60,0x26,0x3b}};

} // namespace PPT

#pragma pack(pop)
